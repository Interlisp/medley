(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "19-Jul-2025 16:43:34" {WMEDLEY}<internal>FONT-DEBUG.;46 19345  

      :EDIT-BY rmk

      :CHANGES-TO (FNS CSBMSIZE FONTSIZE CSSIZE EQCHARBM)
                  (VARS FONT-DEBUGCOMS)

      :PREVIOUS-DATE "19-Jul-2025 12:36:48" {WMEDLEY}<internal>FONT-DEBUG.;41)


(PRETTYCOMPRINT FONT-DEBUGCOMS)

(RPAQQ FONT-DEBUGCOMS (
                       (* ;; "Little tools to help in debugging display fonts")

                       (FNS DEBUGCHARSET IBM ICS SHOWCACHE SHOWCSBITMAP EQCSBM EQCHARBM CHARSETCHARS
                            CHARBMDIFFS SHOWCSCHAR CSCOMPARE SHOWBMS SHOWCHARBITMAPS CANDS)
                       (FNS FONTSIZE CSSIZE CSBMSIZE)))



(* ;; "Little tools to help in debugging display fonts")

(DEFINEQ

(DEBUGCHARSET
  [LAMBDA (FONTSPEC CHARSET INCLUDEMEDLEYFONT)               (* ; "Edited  9-Jul-2025 16:26 by rmk")
                                                             (* ; "Edited  6-Jul-2025 22:33 by rmk")
                                                             (* ; "Edited  2-Jul-2025 16:50 by rmk")
                                                             (* ; "Edited 30-Jun-2025 09:27 by rmk")
                                                             (* ; "Edited 25-Jun-2025 19:25 by rmk")
                                                             (* ; "Edited 20-Jun-2025 16:37 by rmk")

    (* ;; "Reads the CHARSETINFO for FONTSPEC and CHARSET, where FONTSPEC can be a (family size...) specification or the name of a fontfile (ac, strike, medleyfont format).  Avoids the MEDLEYFONT files if NOTMEDLEYFONT.")

    (if (type? CHARSETINFO FONTSPEC)
        then FONTSPEC
      elseif (type? FONTDESCRIPTOR FONTSPEC)
        then (\XGETCHARSETINFO FONTSPEC (OR CHARSET 0))
      else (RESETLST
               (CL:UNLESS INCLUDEMEDLEYFONT
                   (RESETSAVE DISPLAYFONTEXTENSIONS (REMOVE 'MEDLEYDISPLAYFONT DISPLAYFONTEXTENSIONS)
                          ))
               [if (OR (LITATOM FONTSPEC)
                       (STRINGP FONTSPEC))
                   then (CL:UNLESS CHARSET (SETQ CHARSET 0))
                        (LET (STRM)
                             [RESETSAVE (SETQ STRM (OPENSTREAM FONTSPEC 'INPUT))
                                    `(PROGN (CLOSEF? OLDVALUE]
                             (for FNS CSINFO (FI _ (\FONTINFOFROMFILENAME FONTSPEC 'DISPLAY))
                                in DISPLAYCHARSETFNS
                                do (CL:WHEN (CAR (NLSETQ (APPLY* (CADR FNS)
                                                                STRM)))
                                       (SETQ CSINFO (APPLY* (CADDR FNS)
                                                           STRM
                                                           (CAR FI)
                                                           (CADR FI)
                                                           (CADDR FI)
                                                           (CADDDR FI)
                                                           (CAR (CDDDDR FI))
                                                           CHARSET))
                                       (PUTMULTI (fetch (CHARSETINFO CSINFOPROPS) of CSINFO)
                                              'FILE
                                              (PSEUDOFILENAME FONTSPEC))
                                       (RETURN CSINFO))
                                   (CLOSEF? STRM)))
                 else (LET ((CS CHARSET))
                           (CL:MULTIPLE-VALUE-BIND (FAMILY SIZE FACE ROTATION DEVICE CHARSET)
                                  (\FONT.CHECKARGS FONTSPEC)
                                  (CL:WHEN CS (SETQ CHARSET CS))
                                  (\READCHARSET FAMILY SIZE FACE ROTATION 'DISPLAY CHARSET])])

(IBM
  [LAMBDA (FONT CHARSET)                                     (* ; "Edited 29-Jun-2025 17:05 by rmk")
                                                             (* ; "Edited 20-Jun-2025 16:35 by rmk")
                                                             (* ; "Edited 18-Jun-2025 14:09 by rmk")

    (* ;; "Inspects the character set bitmap for CHARSET in FONT, which may also be a charset info.  If necessary, builds the font (unlike ICS).")

    (SHOWCSBITMAP (if (type? CHARSETINFO FONT)
                      then FONT
                    else (\XGETCHARSETINFO (SETQ FONT (FONTCREATE FONT))
                                (OR CHARSET 0])

(ICS
  [LAMBDA (FONT CHARSET INCLUDEMEDLEYFONT)                   (* ; "Edited  7-Jul-2025 23:12 by rmk")
                                                             (* ; "Edited  6-Jul-2025 22:04 by rmk")
                                                             (* ; "Edited  2-Jul-2025 16:11 by rmk")
                                                             (* ; "Edited 29-Jun-2025 17:07 by rmk")
                                                             (* ; "Edited 21-Jun-2025 22:00 by rmk")
                                                             (* ; "Edited 20-Jun-2025 17:10 by rmk")
                                                             (* ; "Edited 18-Jun-2025 14:23 by rmk")

    (* ;; "Inspects the charset bitmap for CHARSET in FONT.  If FONT is a filename, gets the csinfo directly from the file, doesn't build the font.")

    (LET ((CSINFO (DEBUGCHARSET FONT CHARSET INCLUDEMEDLEYFONT)))
         (if CSINFO
             then (INSPECT CSINFO)
                  (SHOWCSBITMAP CSINFO)
                  (LIST (GETMULTI (fetch (CHARSETINFO CSINFOPROPS) of CSINFO)
                               'FILE)
                        CSINFO)
           else "NO CSINFO"])

(SHOWCACHE
  [LAMBDA NIL                                                (* ; "Edited 29-Jun-2025 17:19 by rmk")
                                                             (* ; "Edited 18-Jun-2025 22:50 by rmk")

    (* ;; "Keyboard shortcut to show the current caches")

    (DV \FONTSINCORE)
    (DV \FONTEXISTS?-CACHE])

(SHOWCSBITMAP
  [LAMBDA (CSINFO)                                           (* ; "Edited 29-Jun-2025 17:07 by rmk")
                                                             (* ; "Edited 20-Jun-2025 16:38 by rmk")

    (* ;; "Given a charsetinfo, shows the whole bitmap using EDITBM.  Unfortunately, that runs in a separate process, so we can't directly get the window to put something useful in the title.  If EDITBM is called directly, it doen't return until you quit...in which case it's gone.  We'd really like just the displayer.")

    (* ;; "If we call the inspector, it asks for contents vs. fields, also a pain, and we still don't get the window.")

    (LET (BM)
         (if (NOT CSINFO)
             then (PRINTOUT T "NO CSINFO" T)
           elseif (AND (IGREATERP (BITMAPWIDTH (SETQ BM (fetch CHARSETBITMAP of CSINFO)))
                              0)
                       (IGREATERP (BITMAPHEIGHT BM)
                              0))
             then (EVAL.AS.PROCESS (LIST 'EDITBM BM))
           else "EMPTY BITMAP")
         CSINFO])

(EQCSBM
  [LAMBDA (CS1 CS2 CHARSET INCLUDEMEDLEYFONT)                (* ; "Edited  6-Jul-2025 22:04 by rmk")
                                                             (* ; "Edited  2-Jul-2025 16:12 by rmk")
                                                             (* ; "Edited 29-Jun-2025 17:52 by rmk")
                                                             (* ; "Edited 21-Jun-2025 21:20 by rmk")

    (* ;; "True if the two charsetinfos are equivalent in all respects.  If either of CS1 or CS2 is a fontdescriptor (not a charsetinfo), then coerces to CHARSET in that font.")

    (SETQ CS1 (DEBUGCHARSET CS1 CHARSET INCLUDEMEDLEYFONT))
    (SETQ CS2 (DEBUGCHARSET CS2 CHARSETINCLUDEMEDLEYFONT))
    (EQUALALL (fetch (CHARSETINFO CHARSETBITMAP) of CS1)
           (fetch (CHARSETINFO CHARSETBITMAP) of CS2])

(EQCHARBM
  [LAMBDA (CHAR1 CHAR2 CS1 CS2 EXCLUDEMEDLEYFONT)            (* ; "Edited 19-Jul-2025 12:46 by rmk")

    (* ;; 
    "True if the character bitmap for CHAR1 in CS1 is equivalent to the bitmap for CHAR2 in CS2.  ")

    (CL:UNLESS (CHARCODEP CHAR1)
        (SETQ CHAR1 (CHARCODE.DECODE CHAR1)))
    (CL:UNLESS (CHARCODEP CHAR2)
        (SETQ CHAR2 (CHARCODE.DECODE CHAR2)))
    (SETQ CS1 (DEBUGCHARSET CS1 (\CHARSET CHAR1)
                     (NOT EXCLUDEMEDLEYFONT)))
    (SETQ CS2 (DEBUGCHARSET CS2 (\CHARSET CHAR2)
                     (NOT EXCLUDEMEDLEYFONT)))
    (EQUALALL (\GETCHARBITMAP.CSINFO (\CHAR8CODE CHAR1)
                     CS1)
           (\GETCHARBITMAP.CSINFO (\CHAR8CODE CHAR2)
                  CS2])

(CHARSETCHARS
  [LAMBDA (CSINFO CHARSET INCLUDEMEDLEYFONT)                 (* ; "Edited  6-Jul-2025 22:04 by rmk")
                                                             (* ; "Edited  2-Jul-2025 16:12 by rmk")
                                                             (* ; "Edited 29-Jun-2025 17:52 by rmk")

    (* ;; "Returns a list of character codes that are instantiated in CSINFO (which may be specified as a font/charset combination).")

    (SETQ CSINFO (DEBUGCHARSET CSINFO CHARSET INCLUDEMEDLEYFONT))
    (for CODE from 0 to \MAXTHINCHAR unless (SLUGCHARP.DISPLAY CODE CSINFO) collect CODE])

(CHARBMDIFFS
  [LAMBDA (CS1 CS2 CHARSET INCLUDEMEDLEYFONT)                (* ; "Edited  6-Jul-2025 22:04 by rmk")
                                                             (* ; "Edited  2-Jul-2025 16:12 by rmk")
                                                             (* ; "Edited 29-Jun-2025 17:51 by rmk")

    (* ;; 
    "Returns the codes whose bitmaps in CS1 and CS2 differ in some way.  Use EDITCHAR to view them.")

    (SETQ CS1 (DEBUGCHARSET CS1 CHARSET INCLUDEMEDLEYFONT))
    (SETQ CS2 (DEBUGCHARSET CS2 CHARSET INCLUDEMEDLEYFONT))
    (for CODE in (INTERSECTION (CHARSETCHARS CS1)
                        (CHARSETCHARS CS2)) unless (EQUALALL (\GETCHARBITMAP.CSINFO CODE CS1)
                                                          (\GETCHARBITMAP.CSINFO CODE CS2))
       collect CODE])

(SHOWCSCHAR
  [LAMBDA (CODE CSINFO CHARSET INCLUDEMEDLEYFONT)            (* ; "Edited  6-Jul-2025 22:04 by rmk")
                                                             (* ; "Edited  2-Jul-2025 16:12 by rmk")
                                                             (* ; "Edited 29-Jun-2025 18:01 by rmk")
    (EDITBM (\GETCHARBITMAP.CSINFO CODE (DEBUGCHARSET CSINFO CHARSET INCLUDEMEDLEYFONT])

(CSCOMPARE
  [LAMBDA (CS1 CS2 CHARSET INCLUDEMEDLEYFONT)                (* ; "Edited  6-Jul-2025 22:04 by rmk")
                                                             (* ; "Edited  2-Jul-2025 16:13 by rmk")
                                                             (* ; "Edited 30-Jun-2025 14:02 by rmk")
    (CL:UNLESS CS2
        (CL:WHEN (OR (LITATOM CS1)
                     (STRINGP CS1))
            (SETQ CS2 (\FONTINFOFROMFILENAME CS1 'DISPLAY))
            [if CHARSET
                then (CL:UNLESS (EQ CHARSET (CAR (LAST CS2)))
                            (ERROR "MISMATCHING CHARSETS"))
              else (SETQ CHARSET (CAR (LAST CS2]))
    (SETQ CS1 (OR (DEBUGCHARSET CS1 CHARSET INCLUDEMEDLEYFONT)
                  (ERROR CS1 "not found")))
    (SETQ CS2 (OR (DEBUGCHARSET CS2 CHARSET INCLUDEMEDLEYFONT)
                  (ERROR CS2 "not found")))
    (LET ((CS1CHARS (CHARSETCHARS CS1))
          (CS2CHARS (CHARSETCHARS CS2))
          (ASCENT1 (fetch (CHARSETINFO CHARSETASCENT) of CS1))
          (ASCENT2 (fetch (CHARSETINFO CHARSETASCENT) of CS2))
          (DESCENT1 (fetch (CHARSETINFO CHARSETDESCENT) of CS1))
          (DESCENT2 (fetch (CHARSETINFO CHARSETDESCENT) of CS2))
          DIFF)
         (if (EQ ASCENT1 ASCENT2)
             then (PRINTOUT T "Same ascent  = " .I2 ASCENT1 T)
           else (PRINTOUT T " Ascent1 = " .I2 ASCENT1 "   Ascent2 = " .I2 ASCENT2 T))
         (if (EQ DESCENT1 DESCENT2)
             then (PRINTOUT T "Same descent = " .I2 DESCENT1 T)
           else (PRINTOUT T "Descent1 = " .I2 DESCENT1 "  Descent2 = " .I2 DESCENT2 T))
         (PRINTOUT T "Common chars:" 14 .PPV (SORT (INTERSECTION CS1CHARS CS2CHARS))
                T)
         (SETQ DIFF (SORT (CHARBMDIFFS CS1 CS2)))
         (if (NULL DIFF)
             then (PRINTOUT T 5 "All common chars have the SAME bitmaps" T)
           elseif (EQUAL DIFF (SORT (INTERSECTION CS1CHARS CS2CHARS)))
             then (PRINTOUT T 5 "All common chars have DIFFERENT bitmaps" T)
           else (PRINTOUT T 5 "Common chars with different bitmaps:  " .PPV DIFF T))
         (CL:WHEN (SETQ DIFF (LDIFFERENCE CS1CHARS CS2CHARS))
             (PRINTOUT T "1 but not 2:" 14 .PPV (SORT (LDIFFERENCE CS1CHARS CS2CHARS))
                    T))
         (CL:WHEN (SETQ DIFF (LDIFFERENCE CS2CHARS CS1CHARS))
             (PRINTOUT T "2 but not 1:" 14 .PPV (SORT (LDIFFERENCE CS2CHARS CS1CHARS))
                    T))
         (LIST CS1 CS2])

(SHOWBMS
  [LAMBDA (CHARSETINFOS)                                     (* ; "Edited 30-Jun-2025 08:47 by rmk")
    (for CS in CHARSETINFOS do (ICS CS])

(SHOWCHARBITMAPS
  [LAMBDA (CODE CSINFOS CHARSET INCLUDEMEDLEYFONT CLOSEPREVIOUS)
                                                             (* ; "Edited  6-Jul-2025 22:04 by rmk")
                                                             (* ; "Edited  2-Jul-2025 11:48 by rmk")
                                                             (* ; "Edited 20-Jun-2025 16:38 by rmk")

    (* ;; "Shows the bitmap for CODE in each of the CSINFOS")

    (* ;; "If we call the inspector directly, it asks for contents vs. fields, also a pain, and we still don't get our hands on the window.")

    [SETQ CSINFOS (for CS inside CSINFOS collect (OR (DEBUGCHARSET CS CHARSET INCLUDEMEDLEYFONT)
                                                     (ERROR CS "not found"]
    (CL:WHEN CLOSEPREVIOUS
        (for W in (OPENWINDOWS) when (EQ 'EDITBMREPAINTFN (WINDOWPROP W 'REPAINTFN))
           do (CLOSEW W)))
    (if (CHARCODEP CODE)
        then (for CS BM in CSINFOS do (SETQ BM (\GETCHARBITMAP.CSINFO CODE CS))
                                      (if (AND (IGREATERP (BITMAPWIDTH BM)
                                                      0)
                                               (IGREATERP (BITMAPHEIGHT BM)
                                                      0))
                                          then (EVAL.AS.PROCESS (LIST 'EDITBM BM))
                                        else "EMPTY BITMAP"))
      else (for CS in CSINFOS do (SHOWCSBITMAP CS])

(CANDS
  [LAMBDA (CS1 CS2 CHARSET INCLUDEMEDLEYFONT)                (* ; "Edited  2-Jul-2025 11:47 by rmk")

    (* ;; "Wraps comparing and showing, closes previous bitmap windows")

    (LET ((CINFOS (CSCOMPARE CS1 CS2 CHARSET INCLUDEMEDLEYFONT)))
         (SHOWCHARBITMAPS NIL CINFOS CHARSET INCLUDEMEDLEYFONT T)
         CINFOS])
)
(DEFINEQ

(FONTSIZE
  [LAMBDA (FONT CHARSETS FILETOO NOERROR)                    (* ; "Edited 19-Jul-2025 16:42 by rmk")
    (SETQ FONT (FONTCREATE FONT NIL NIL NIL 'DISPLAY NOERROR))
    (CL:UNLESS CHARSETS
        (SETQ CHARSETS (for CS CSINFO BM from 0 to 255 when (SETQ CSINFO (\XGETCHARSETINFO FONT CS))
                          unless (fetch (CHARSETINFO CSSLUGP) of CSINFO) collect CS)))
    (PRINTOUT T "Charsets: ")
    (for CS CSINFO inside CHARSETS sum (PRINTOUT T CS " ")
                                       (CSSIZE (\XGETCHARSETINFO FONT CS)
                                              T) finally (PRINTOUT T T])

(CSSIZE
  [LAMBDA (CSINFO INCLUDEBM)                                 (* ; "Edited 19-Jul-2025 16:37 by rmk")

    (* ;; "Returns")

    (LET ((BLOCKSIZE (UNFOLD (IPLUS \MAXCHARSET 3)
                            2))
          BM)
         (IPLUS (CL:IF (fetch (CHARSETINFO OFFSETS) of CSINFO)
                    BLOCKSIZE
                    0)
                (CL:IF (fetch (CHARSETINFO WIDTHS) of CSINFO)
                    BLOCKSIZE
                    0)
                (CL:IF (AND (NEQ (fetch (CHARSETINFO WIDTHS) of CSINFO)
                                 (fetch (CHARSETINFO IMAGEWIDTHS) of CSINFO))
                            (fetch (CHARSETINFO IMAGEWIDTHS) of CSINFO))
                    BLOCKSIZE
                    0)
                (CL:IF (fetch (CHARSETINFO YWIDTHS) of CSINFO)
                    BLOCKSIZE
                    0)
                (CL:IF (ARRAYP (fetch (CHARSETINFO LEFTKERN) of CSINFO))
                    (UNFOLD (ARRAYSIZE (fetch (CHARSETINFO LEFTKERN) of CSINFO))
                           4)
                    0)
                (CL:IF (AND INCLUDEBM (SETQ BM (fetch (CHARSETINFO CHARSETBITMAP) of CSINFO)))
                    (IQUOTIENT (ITIMES (BITMAPWIDTH BM)
                                      (BITMAPHEIGHT BM))
                           8)
                    0)])

(CSBMSIZE
  [LAMBDA (FONT CHARSETS FILETOO NOERROR)                    (* ; "Edited 19-Jul-2025 16:14 by rmk")
                                                             (* ; "Edited 17-Jul-2025 13:23 by rmk")

    (* ;; "Returns the number of bytes in the CHARSET bitmap for FONT, what's in core unless FILETOO")

    (if (SETQ FONT (FONTCREATE FONT NIL NIL NIL 'DISPLAY NOERROR))
        then (CL:UNLESS CHARSETS
                 (SETQ CHARSETS (for CS CSINFO BM from 0 to 255 when (SETQ CSINFO (\XGETCHARSETINFO
                                                                                   FONT CS))
                                   unless (fetch (CHARSETINFO CSSLUGP) of CSINFO) collect CS)))
             (PRINTOUT T "Charsets: ")
             (for CS CSINFO BM inside CHARSETS sum (PRINTOUT T CS " ")
                                                   (SETQ BM (fetch (CHARSETINFO CHARSETBITMAP)
                                                               of (\XGETCHARSETINFO FONT CS)))
                                                   (IQUOTIENT (ITIMES (BITMAPWIDTH BM)
                                                                     (BITMAPHEIGHT BM))
                                                          8) finally (PRINTOUT T T))
      else 0])
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (818 15839 (DEBUGCHARSET 828 . 4007) (IBM 4009 . 4717) (ICS 4719 . 6013) (SHOWCACHE 6015
 . 6362) (SHOWCSBITMAP 6364 . 7478) (EQCSBM 7480 . 8366) (EQCHARBM 8368 . 9129) (CHARSETCHARS 9131 . 
9797) (CHARBMDIFFS 9799 . 10675) (SHOWCSCHAR 10677 . 11112) (CSCOMPARE 11114 . 13706) (SHOWBMS 13708
 . 13886) (SHOWCHARBITMAPS 13888 . 15479) (CANDS 15481 . 15837)) (15840 19322 (FONTSIZE 15850 . 16535)
 (CSSIZE 16537 . 17946) (CSBMSIZE 17948 . 19320)))))
STOP
