(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)
(FILECREATED "26-Jun-90 19:15:35" |{DSK}<usr>local>lde>lispcore>internal>library>RS232TEST.;2| 9419   

      |changes| |to:|  (VARS RS232TESTCOMS)

      |previous| |date:| "20-Feb-87 00:10:14" 
|{DSK}<usr>local>lde>lispcore>internal>library>RS232TEST.;1|)


; Copyright (c) 1987, 1990 by Venue & Xerox Corporation.  All rights reserved.

(PRETTYCOMPRINT RS232TESTCOMS)

(RPAQQ RS232TESTCOMS
       ((FNS RSTEST TESTCLEANUP XMITTEST)
        
        (* |;;| 
      "Exhaustive test for RS-232 for 5- 6- 7- and 8-bit chars, with parity NONE, EVEN, and ODD")

        (FNS RS232.TEST RS232.MICROTEST RS232.QUICKTEST RS232.MENU RS232TMENU.SELFN)
        (VARS RS232.TEST.MENU.ITEMS)
        
        (* |;;| 
   "Exhaustive test for the TTY port for 5- 6- 7- and 8-bit chars, with parity NONE, EVEN, and ODD")

        (FNS TTY.TEST TTY.MICROTEST TTY.QUICKTEST TTY.MENU TTYTMENU.SELFN)))
(DEFINEQ

(rstest
  (lambda nil                                                (* \; "Edited 14-Jan-87 16:00 by jds")
    (let (oo)
         (resetlst (resetsave (setq oo (openstream '{rs232} 'output))
                          'closef?)
                (|for| i |from| 1 |do| (printout oo "Line " i 
                                              ":  1 2 3 4 5 6 7 8 9 0 9 8 7 6 5 4 3 2 1.
\
")
                                       (printout t "Line " i t))))))

(testcleanup
  (lambda nil                                                (* \; "Edited 16-Jan-87 09:51 by jds")
          
          (* |;;| "Close the streams used by the rs232 test.")

    (and (boundp 'out)
         out
         (closef? out))
    (and (boundp in)
         in
         (closef? in))))

(XMITTEST
  (LAMBDA (BAUDRATE XONXOFF?)                                (* \; "Edited 19-Feb-87 20:59 by jds")
          
          (* |;;| "Set up the rs232 port at BAUDRATE with XOn-XOff flow control if XONXOFF? is T.  Then print forever, lines of text.  Show an indication on the screen for each line, so the user can tell if flow control has shut things off.")

    (RS232C.INIT BAUDRATE 8 'NONE 1 (COND
                                       (XONXOFF? 'XONXOFF)
                                       (T 'NONE)))
    (SETQ OUT (OPENSTREAM '{RS232} 'OUTPUT))
    (SETQ IN (OPENSTREAM '{RS232} 'INPUT))
    (ERSETQ (FOR I FROM 1 DO (PRINTOUT OUT "Line " I ":  0 1 2 3 4 5 6 7 8 9 0 9 8 7 6 5 4 3 2 1.
\
")
                             (|printout| T "Line " I T)))
    (CLOSEF? OUT)
    (CLOSEF? IN)))
)



(* |;;| "Exhaustive test for RS-232 for 5- 6- 7- and 8-bit chars, with parity NONE, EVEN, and ODD")

(DEFINEQ

(rs232.test
  (lambda nil                                                (* \; "Edited 19-Feb-87 22:43 by jds")
          
          (* |;;| "Run quickly thru all the possible combinations of RS-232 bit lengths and parities and stop bits for testing sake.")

    (printout t t t "Starting RS-232 port test." t 
           "Make sure the line monitor is attached to the RS-232 port, " 
           "and its cable goes to the DCE socket on the monitor." t)
    (mouseconfirm)
    (printout t "Set the line monitor for: " t)
    (|for| bits |in| '(5 6 7 8) |do| (|for| parity |in| '(none odd even)
                                        |do| (|for| stopbits |in| '(1 1.5 2)
                                                |do| (rs232.microtest 9600 bits parity stopbits))))))

(rs232.microtest
  (lambda (speed bits parity stopbits)                       (* \; "Edited 19-Feb-87 22:37 by jds")
          
          (* |;;| "Transmit a short test pattern to the RS232 port at SPEED baud, using BITS-bit characters, with PARITY and STOPBITS.")

    (printout t bits "bits, " (cond
                                 ((eq parity 'none)
                                  "NO")
                                 (t parity))
           " parity, " stopbits " stop bits..." t)
    (mouseconfirm)
    (rs232.quicktest speed bits parity stopbits)))

(rs232.quicktest
  (lambda (speed bits parity stopbits)                       (* \; "Edited 19-Feb-87 22:38 by jds")
          
          (* |;;| "Transmit a short test pattern to the RS232 port at SPEED baud, using BITS-bit characters, with PARITY and STOPBITS.")

    (rs232c.init speed bits parity stopbits 'none)
    (let ((out (openstream '{rs232} 'output)))
         (prin1 (concat "0123 ABC abc " (packc '(1 2 3 255)))
                out)
         (closef out))))

(rs232.menu
  (lambda nil                                                (* \; "Edited 19-Feb-87 22:45 by jds")
    (let ((ww (addmenu (|create| menu
                              menucolumns _ 4
                              items _ rs232.test.menu.items
                              whenselectedfn _ (function rs232tmenu.selfn)))))
         (windowprop ww 'title "RS-232 Tests"))))

(rs232tmenu.selfn
  (lambda (item menu key)                                    (* \; "Edited 19-Feb-87 22:57 by jds")
          
          (* |;;| "Called from the RS-232 test menu")

    (let* ((info (cadr item))
           (bits (car info))
           (parity (cadr info))
           (stopbits (caddr info)))
          (rs232.quicktest 9600 bits parity stopbits))))
)

(RPAQQ RS232.TEST.MENU.ITEMS
       ((|5/N/1| (5 NONE 1))
        (|6/N/1| (6 NONE 1))
        (|7/N/1| (7 NONE 1))
        (|8/N/1| (8 NONE 1))
        (|5/N/1.5| (5 NONE 1.5))
        (|6/N/1.5| (6 NONE 1.5))
        (|7/N/1.5| (7 NONE 1.5))
        (|8/N/1.5| (8 NONE 1.5))
        (|5/N/2| (5 NONE 2))
        (|6/N/2| (6 NONE 2))
        (|7/N/2| (7 NONE 2))
        (|8/N/2| (8 NONE 2))
        (|5/O/1| (5 ODD 1))
        (|6/O/1| (6 ODD 1))
        (|7/O/1| (7 ODD 1))
        (|8/O/1| (8 ODD 1))
        (|5/O/1.5| (5 ODD 1.5))
        (|6/O/1.5| (6 ODD 1.5))
        (|7/O/1.5| (7 ODD 1.5))
        (|8/O/1.5| (8 ODD 1.5))
        (|5/O/2| (5 ODD 2))
        (|6/O/2| (6 ODD 2))
        (|7/O/2| (7 ODD 2))
        (|8/O/2| (8 ODD 2))
        (|5/E/1| (5 EVEN 1))
        (|6/E/1| (6 EVEN 1))
        (|7/E/1| (7 EVEN 1))
        (|8/E/1| (8 EVEN 1))
        (|5/E/1.5| (5 EVEN 1.5))
        (|6/E/1.5| (6 EVEN 1.5))
        (|7/E/1.5| (7 EVEN 1.5))
        (|8/E/1.5| (8 EVEN 1.5))
        (|5/E/2| (5 EVEN 2))
        (|6/E/2| (6 EVEN 2))
        (|7/E/2| (7 EVEN 2))
        (|8/E/2| (8 EVEN 2))))



(* |;;| 
"Exhaustive test for the TTY port for 5- 6- 7- and 8-bit chars, with parity NONE, EVEN, and ODD")

(DEFINEQ

(tty.test
  (lambda nil                                                (* \; "Edited 19-Feb-87 22:42 by jds")
          
          (* |;;| "Run quickly thru all the possible combinations of RS-232 bit lengths and parities and stop bits for testing sake.")

    (printout t t t "Starting TTY port test." t 
           "Make sure the line monitor is attached to the TTY port, " 
           "and its cable goes to the DTE socket on the monitor." t)
    (mouseconfirm)
    (printout t "Set the line monitor for: " t)
    (|for| bits |in| '(5 6 7 8) |do| (|for| parity |in| '(none odd even)
                                        |do| (|for| stopbits |in| '(1 1.5 2)
                                                |do| (tty.microtest 9600 bits parity stopbits))))))

(tty.microtest
  (lambda (speed bits parity stopbits)                       (* \; "Edited 19-Feb-87 22:41 by jds")
          
          (* |;;| "Transmit a short test pattern to the RS232 port at SPEED baud, using BITS-bit characters, with PARITY and STOPBITS.")

    (printout t bits "bits, " (cond
                                 ((eq parity 'none)
                                  "NO")
                                 (t parity))
           " parity, " stopbits " stop bits..." t)
    (mouseconfirm)
    (tty.init speed bits parity stopbits)))

(tty.quicktest
  (lambda (speed bits parity stopbits)                       (* \; "Edited 19-Feb-87 22:40 by jds")
          
          (* |;;| "Transmit a short test pattern to the RS232 port at SPEED baud, using BITS-bit characters, with PARITY and STOPBITS.")

    (tty.init speed bits parity stopbits 'none)
    (let ((out (openstream '{tty} 'output)))
         (prin1 (concat "0123 ABC abc " (packc '(1 2 3 255)))
                out)
         (closef out))))

(tty.menu
  (lambda nil                                                (* \; "Edited 19-Feb-87 22:57 by jds")
    (let ((ww (addmenu (|create| menu
                              menucolumns _ 4
                              items _ rs232.test.menu.items
                              whenselectedfn _ (function ttytmenu.selfn)))))
         (windowprop ww 'title "TTY Tests"))))

(ttytmenu.selfn
  (lambda (item menu key)                                    (* \; "Edited 19-Feb-87 22:59 by jds")
          
          (* |;;| "Called from the RS-232 test menu")

    (let* ((info (cadr item))
           (bits (car info))
           (parity (cadr info))
           (stopbits (caddr info)))
          (tty.quicktest 9600 bits parity stopbits))))
)
(PUTPROPS RS232TEST COPYRIGHT ("Venue & Xerox Corporation" 1987 1990))
(DECLARE\: DONTCOPY
  (FILEMAP (NIL (979 2623 (RSTEST 989 . 1466) (TESTCLEANUP 1468 . 1789) (XMITTEST 1791 . 2621)) (2732 
5433 (RS232.TEST 2742 . 3570) (RS232.MICROTEST 3572 . 4151) (RS232.QUICKTEST 4153 . 4640) (RS232.MENU 
4642 . 5042) (RS232TMENU.SELFN 5044 . 5431)) (6665 9325 (TTY.TEST 6675 . 7493) (TTY.MICROTEST 7495 . 
8061) (TTY.QUICKTEST 8063 . 8543) (TTY.MENU 8545 . 8938) (TTYTMENU.SELFN 8940 . 9323)))))
STOP
