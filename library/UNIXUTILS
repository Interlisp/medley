(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "16-Jun-2023 13:30:18" {DSK}<home>frank>il>medley>gmedley>library>UNIXUTILS.;11 4989   

      :CHANGES-TO (FUNCTIONS ShellWhich)

      :PREVIOUS-DATE "18-Jan-2023 20:36:10" {DSK}<home>frank>il>medley>gmedley>library>UNIXUTILS.;8
)


(PRETTYCOMPRINT UNIXUTILSCOMS)

(RPAQQ UNIXUTILSCOMS ((GLOBALVARS ShellBrowser)
                      (INITVARS (ShellBrowser))
                      (FUNCTIONS ShellCommand ShellWhich)
                      (FNS ShellBrowser ShellBrowse)))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS ShellBrowser)
)

(RPAQ? ShellBrowser )

(CL:DEFUN ShellCommand (Cmd &OPTIONAL (Output T))
   (CL:WITH-OPEN-STREAM (s (CREATE-PROCESS-STREAM Cmd))
          (CL:TAGBODY [SETFILEINFO s 'ENDOFSTREAMOP #'(CL:LAMBDA (s)
                                                             (GO OUT]
                 (CL:LOOP (PRINTCCODE (READCCODE s)
                                 Output))
                 OUT))
   NIL)

(CL:DEFUN ShellWhich (Cmd)                                   (* ; "Edited 18-Jan-2023 13:19 by FGH")
   [CL:WITH-OPEN-STREAM (S (OPENSTREAM '{NODIRCORE} 'BOTH))
          (ShellCommand (CONCAT "command -v " Cmd)
                 S)
          (COND
             ((EQ (GETEOFPTR S)
                  0)
              NIL)
             (T (SETFILEPTR S 0)
                (RSTRING S])
(DEFINEQ

(ShellBrowser
  [LAMBDA NIL                                                (* ; "Edited 18-Jan-2023 20:30 by FGH")
    (OR ShellBrowser (SETQ ShellBrowser (LET (CMDPATH)
                                             (if (STRPOS "darwin" (OR (UNIX-GETENV "OSTYPE")
                                                                      (UNIX-GETENV "PATH")))
                                                 then 
                                                      (* ;; " MacOS")

                                                      "open"
                                               elseif (SETQ CMDPATH (ShellWhich "wslview"))
                                                 then 
                                                      (* ;; "windows with WSL")

                                                      CMDPATH
                                               elseif (SETQ CMDPATH (ShellWhich "xdg-open"))
                                                 then 
                                                      (* ;; "Linux systems with xdg-utils installed ")

                                                      CMDPATH
                                               elseif (SETQ CMDPATH (ShellWhich "git"))
                                                 then 
                                                      (* ;; " Systems with git installed")

                                                      (CONCAT CMDPATH " web--browse") 
                                                             (* ; "")
                                               elseif (SETQ CMDPATH (ShellWhich "lynx"))
                                                 then 
                                                      (* ;; " Systems with lynx installed")

                                                      (LET (CMDPATH2)
                                                           (if (SETQ CMDPATH2 (ShellWhich "xterm"))
                                                               then (CONCAT CMDPATH2 " -e " CMDPATH)
                                                             else (LIST CMDPATH)))
                                               else 
                                                    (* ;; 
                                                    " Out of ideas - just return a dummy function")

                                                    "true"])

(ShellBrowse
  [LAMBDA (URL)                                              (* ; "Edited 18-Jan-2023 20:32 by FGH")

    (* ;; " Open the web page specified by URL using an external browser via shell call")

    (* ;; 
  " URL must start with http:// or https:// (case ireelevant) or this function will just return NIL.")

    (* ;; " Returns T otherwise.")

    (SETQ URL (MKSTRING URL))
    (if (OR (EQ (STRPOS "http://" (L-CASE URL))
                1)
            (EQ (STRPOS "https://" (L-CASE URL))
                1))
        then (LET ((BROWSER (ShellBrowser)))
                  (if (LISTP BROWSER)
                      then (CHAT 'SHELL NIL (CONCAT (CAR BROWSER)
                                                   " '" URL "'"))
                    else (ShellCommand (CONCAT BROWSER " '" URL "'" 
                                              " >>/tmp/ShellBrowser-warnings-$$.txt")))
                  T)
      else NIL])
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (664 1037 (ShellCommand 664 . 1037)) (1039 1436 (ShellWhich 1039 . 1436)) (1437 4966 (
ShellBrowser 1447 . 3970) (ShellBrowse 3972 . 4964)))))
STOP
