(DEFINE-FILE-INFO PACKAGE "IL" READTABLE "XCL" BASE 10)
(FILECREATED "22-Dec-2018 22:58:47" 
|{DSK}<Users>kaplan>Local>medley3.5>lispcore>library>VIRTUALKEYBOARDS.;10| 141793 

      |changes| |to:|  (VARS VIRTUALKEYBOARDSCOMS VKBD.BACKGROUND-MENU-SUBITEMS 
                             VKBD.NON-CHAR-ASSIGNMENTS-LABELS VKBD.WINDOW-MENU-SUBITEMS VKBD.ICON 
                             VKBD.MASK MODEACTIONS)
                       (RECORDS KEYBOARDCONFIGURATION VIRTUALKEYBOARD)

      |previous| |date:| "22-Dec-2018 22:52:44" 
|{DSK}<Users>kaplan>Local>medley3.5>lispcore>library>VIRTUALKEYBOARDS.;9|)


; Copyright (c) 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1995, 1996, 2017, 2018 by Venue & Xerox Corporation.  All rights reserved.

(PRETTYCOMPRINT VIRTUALKEYBOARDSCOMS)

(RPAQQ VIRTUALKEYBOARDSCOMS
       ((FNS FINDVIRTUALKEYBOARD PROCESS.KEYBOARD VKBD.CREATE-KEYACTION-TABLE VKBD.WINDOWMENUFN 
             VKBD.WINDOWMENUINIT)
        (COMS (FNS LOADKEYBOARDDISPLAYFONTS)
              (INITVARS VKBD.CACHEDCHARSETS)
              (GLOBALVARS VKBD.CACHEDCHARSETS))
        (FNS DEFINEKEYBOARD)
        (FNS VKBD.ADD-ITEM-TO-BACKGROUND-MENU VKBD.INIT VKBD.CREATE-DEFAULT-KEYBOARD 
             VKBD.ADD-DEFAULT-KEYBOARD)
        (FNS VKBD.LOAD-FILE-COMMAND VKBD.LOAD-KEYBOARD-FILE VKBD.STORE-FILE-COMMAND 
             VKBD.STORE-KEYBOARD-FILE)
        (FNS SWITCHKEYBOARDS VKBD.POP-MENU-AND-SWITCH-KEYBOARDS VKBD.POP-UP-KEYBOARDS-MENU 
             VKBD.GET-CONFIGURATION VKBD.SUBCONFIGURATION)
        (FNS VKBD.BUTTONEVENTFN VKBD.CENTER-BITMAP-IN-REGION VKBD.CLEAR-KEY-DISPLAY 
             VKBD.CREATE-KEYBOARD-BITMAP VKBD.CREATE-KEYBOARD-DISPLAY VKBD.CURSORMOVEDFN 
             VKBD.DISPLAY-CHARACTER VKBD.DISPLAY-EMPTY-KEY-CAP VKBD.DISPLAY-KEY 
             VKBD.DISPLAY-KEY-CHARACTERS VKBD.DRAW-KEY-CAPS VKBD.ERASE-FRAME VKBD.EXTEND-REGION 
             VKBD.GET-KEY-AND-REGIONS-OF-CURSOR-POSITION VKBD.GET-KEY-REGIONS VKBD.INVERT-KEY 
             VKBD.INVERT-REGION VKBD.KEYBOARD-WINDOW-REPAINTFN VKBD.LOWER-HALF-REGION 
             VKBD.POSITION-IS-IN-KEY-REGION VKBD.REMOVE-KEYBOARD-COMMAND VKBD.UNION-REGIONS 
             VKBD.UPPER-HALF-REGION)
        (FNS VKBD.KEY-ASSOC VKBD.CHAR-ASSIGNMENTP VKBD.COMPLETE-KEYBOARD VKBD.CTRL-ASSIGNMENTP 
             VKBD.EVENT-ASSIGNMENTP VKBD.META-ASSIGNMENTP VKBD.FRAME-KEY 
             VKBD.GET-CURRENT-KEY-ASSIGNMENT VKBD.GET-NON-CHAR-LABEL VKBD.ICONFN 
             VKBD.INVERT-LOCK-KEYS VKBD.INVERT-SHIFT-KEYS VKBD.TRANSLATE-KEY-ID 
             VKBD.KEY-ID-TO-KEY-NAMES VKBD.KEYBOARD-IS-KEYBOARDTYPE-KEYBOARD VKBD.LOCK-ASSIGNMENTP 
             VKBD.LOCK-KEYP VKBD.LOCK/NOLOCK VKBD.LOCKDOWN-ASSIGNMENTP VKBD.LOCKUP-ASSIGNMENTP 
             VKBD.PARSE-CHAR-CODE VKBD.PARSE-KEY-ASSIGNMENT VKBD.RESET-KEYBOARD-WINDOW 
             VKBD.SEND-CHARACTER VKBD.SHIFT-ASSIGNMENTP VKBD.SHIFTED-CHAR VKBD.UNDEFINE-KEYBOARD 
             VKBD.UNSHIFTED-CHAR)
        (ALISTS (CHARACTERNAMES BREAK HOME PGUP END PGDN INS HELP SCRL NUMLK CLEAR DOIT CENTER 
                       NOTCENTER BOLD NOTBOLD ITALIC NOTITALIC UCASE LCASE STRIKEOUT NOTSTRIKEOUT 
                       UNDERLINE NOTUNDERLINE SUBSCRIPT SUPERSCRIPT SMALLER LARGER MARGINS NOTMARGINS
                       LOOKS NOTLOOKS F11 NOTF11 F12 NOTF12))
        (RECORDS KEYBOARDCONFIGURATION VIRTUALKEYBOARD)
        (INITVARS (VKBD.KNOWN-KEYBOARDS NIL))
        (FILES (SOURCE)
               KEYBOARDCONFIGS)
        (VARS VKBD.BACKGROUND-MENU-SUBITEMS VKBD.NON-CHAR-ASSIGNMENTS-LABELS 
              VKBD.WINDOW-MENU-SUBITEMS)
        (BITMAPS VKBD.ICON VKBD.MASK)
        (GLOBALVARS VKBD.BACKGROUND-MENU-SUBITEMS VKBD.DEFAULT-CONFIGURATION-NAME 
               VKBD.KNOWN-KEYBOARDS VKBD.NON-CHAR-ASSIGNMENTS-LABELS VKBD.ICON VKBD.MASK 
               CURRENTKEYBOARDCONFIG VKBD.CONFIGURATIONS VKBD.COMMONCODELABELS VKBD.COMMONKEYLABELS 
               VKBD.COMMONDEFAULTASSIGNMENT)
        (COMS (DECLARE\: FIRST (P (MOVD? '\\KEYBOARDEVENTFN '\\OLDKEYBOARDEVENTFN)))
              (INITVARS (\\ORIGINALDEFAULTKEYACTION))
              (FNS VKBD.\\KEYBOARDEVENTFN VKBD.RESETKEYACTIONTABLES)
              (P (MOVD 'VKBD.\\KEYBOARDEVENTFN '\\KEYBOARDEVENTFN)))
        (COMS (DECLARE\: FIRST (P (MOVD? 'KEYACTION 'OLDKEYACTION)))
              (FNS NEWKEYACTION)
              (P (MOVD 'NEWKEYACTION 'KEYACTION))
              (INITVARS (MODEKEYS))
              (VARS MODEACTIONS)
              (GLOBALVARS MODEKEYS MODEACTIONS))
        (ADDVARS (BREAKRESETFORMS ((LAMBDA (K)
                                          (PROCESS.KEYBOARD NIL K))
                                   'DEFAULT)))
        (FNS FIXKEYBOARD FIXKEYBOARDCONFIG FIXKEYASSIGNMENTS)
        (DECLARE\: DONTEVAL@LOAD DOCOPY (P (VKBD.INIT)))
        (COMS (FNS METASHIFT)
                                                             (* \; 
                                               "Call new definition if the old one had been called")
              (P (AND (MEMB (MACHINETYPE)
                            '(MAIKO DORADO))
                      (EQUAL (KEYACTION 'BLANK-BOTTOM)
                             '(METADOWN . METAUP))
                      (METASHIFT T))))
        (FILES ICONW)
        (DECLARE\: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA)
                                                                             (NLAML)
                                                                             (LAMA METASHIFT)))))
(DEFINEQ

(FINDVIRTUALKEYBOARD

  (LAMBDA (KEYBOARDNAME CONFIGURATIONNAME)               (* \; "Edited 27-Feb-96 10:27 by rmk")

    (LET ((KBTYPE (COND

                     (CONFIGURATIONNAME)

                     ((LISTP KEYBOARDNAME)

                      (FETCH (VIRTUALKEYBOARD KEYBOARDCONFIGURATION) OF KEYBOARDNAME))

                     ((KEYBOARDTYPE))

                     (T DEFAULTVIRTUALKEYBOARDTYPE))))

         (CL:WHEN (AND (LISTP KEYBOARDNAME)

                       (MEMB KEYBOARDNAME VKBD.KNOWN-KEYBOARDS))



             (* |;;| "Gave a keyboard, use it to indicate keyboard name for new configuration")



             (SETQ KEYBOARDNAME (FETCH (VIRTUALKEYBOARD KEYBOARDNAME) OF KEYBOARDNAME)))



         (* |;;| "Find keyboard of default type if current type doesn't exist and CONFIGURATIONNAME wasn't given--PROCESS.KEYBOARD won't switch this in.  Note that a keyboard that has a NIL configuration is declared to go with anything,but we look for an explicit match first")



         (IF (FIND KB IN VKBD.KNOWN-KEYBOARDS

                    SUCHTHAT (AND (EQ KEYBOARDNAME (FETCH (VIRTUALKEYBOARD KEYBOARDNAME)

                                                          OF KB))

                                      (EQ KBTYPE (FETCH (VIRTUALKEYBOARD KEYBOARDCONFIGURATION)

                                                    OF KB))))

           ELSEIF (FIND KB IN VKBD.KNOWN-KEYBOARDS

                         SUCHTHAT (AND (EQ KEYBOARDNAME (FETCH (VIRTUALKEYBOARD KEYBOARDNAME)

                                                               OF KB))

                                           (NULL (FETCH (VIRTUALKEYBOARD KEYBOARDCONFIGURATION)

                                                    OF KB))))

           ELSEIF (OR (NOT CONFIGURATIONNAME)

                          (EQ CONFIGURATIONNAME KBTYPE))

             THEN (OR (FOR C IN (CDR (ASSOC KBTYPE KEYBOARDCONFIGCOERCIONS))

                             WHEN (SETQ C (FINDVIRTUALKEYBOARD KEYBOARDNAME C))

                             DO (RETURN C))

                          (AND DEFAULTVIRTUALKEYBOARDTYPE (NEQ DEFAULTVIRTUALKEYBOARDTYPE KBTYPE)

                               (FOR KB IN VKBD.KNOWN-KEYBOARDS

                                  WHEN (AND (EQ KEYBOARDNAME (FETCH (VIRTUALKEYBOARD 

                                                                                   KEYBOARDNAME)

                                                                    OF KB))

                                                (EQ DEFAULTVIRTUALKEYBOARDTYPE (FETCH

                                                                                (VIRTUALKEYBOARD

                                                                                 

                                                                                KEYBOARDCONFIGURATION

                                                                                 ) OF KB)))

                                  DO (RETURN KB))))))))

(PROCESS.KEYBOARD
  (LAMBDA (PROCESS/WINDOW KEYBOARD)                      (* \; "Edited 23-May-95 17:00 by rmk:")

(* |;;;| "Get/set the keyboard just for this process/window.  Value is previous keyboard.")

    (PROG (KEYACTIONTABLE FOUND (PROCESS (COND
                                            ((NULL PROCESS/WINDOW)
                                             (TTY.PROCESS))
                                            ((PROCESSP PROCESS/WINDOW)
                                             PROCESS/WINDOW)
                                            ((AND (WINDOWP PROCESS/WINDOW)
                                                  (WINDOWPROP PROCESS/WINDOW 'PROCESS)))
                                            (T (THIS.PROCESS)))))
          (COND
             ((SETQ KEYACTIONTABLE (IF (AND KEYBOARD (SETQ FOUND (FINDVIRTUALKEYBOARD 
                                                                            KEYBOARD)))
                                       THEN 

                                            (* |;;| "We believe in whatever FINDVIRTUALKEYBOARD returns, even though it might not have the configuration we expect.")
                                                             (* \; 
                                                      "Get/create the KEYACTIONTABLE for the FOUND")
                                             (VKBD.CREATE-KEYACTION-TABLE FOUND)))
                                                             (* \; 
                                                    "Make sure to copy the current interrupt list.")
              (REPLACE (KEYACTION INTERRUPTLIST) OF KEYACTIONTABLE
                 WITH (COPY (FETCH (KEYACTION INTERRUPTLIST)
                                   OF (OR (PROCESSPROP PROCESS 'KEYACTION)
                                              \\DEFAULTKEYACTION))))
              (PROCESSPROP PROCESS 'KEYACTION KEYACTIONTABLE)
              (COND
                 ((TTY.PROCESSP PROCESS)                     (* \; "install the key action table")
                                                             (* \; 
                                                         "Hack--wait until dangerous shifts are up")
                  (|while| (OR (SHIFTDOWNP 'META)
                                   (SHIFTDOWNP 'CTRL)))
                  (SETQ \\CURRENTKEYACTION (OR KEYACTIONTABLE (KEYACTIONTABLE)))))
              (RETURN (OR (PROCESSPROP PROCESS 'KEYBOARD KEYBOARD)
                          'DEFAULT)))
             (T (RETURN (OR (PROCESSPROP PROCESS 'KEYBOARD)
                            'DEFAULT)))))))

(VKBD.CREATE-KEYACTION-TABLE

  (LAMBDA (NEW-KEYBOARD OLDTABLE)                        (* \; "Edited 29-Feb-96 12:32 by rmk")

    (PROG (KEYBOARDNAME FOUND KEYACTION-TABLE CONFIG)

          (CL:UNLESS (COND

                        ((AND (ATOM NEW-KEYBOARD)

                              (SETQ FOUND (FINDVIRTUALKEYBOARD NEW-KEYBOARD)))

                         (SETQ NEW-KEYBOARD FOUND))

                        ((MEMB NEW-KEYBOARD VKBD.KNOWN-KEYBOARDS)))



              (* |;;| "Use FOUND to preserve NEW-KEYBOARD for error")



              (ERROR "INVALID KEYBOARD" NEW-KEYBOARD))

          (SETQ KEYBOARDNAME (FETCH (VIRTUALKEYBOARD KEYBOARDNAME) OF NEW-KEYBOARD))

          (COND

             (OLDTABLE (SETQ KEYACTION-TABLE (RESETKEYACTION OLDTABLE)))

             ((SETQ KEYACTION-TABLE (GETPROP KEYBOARDNAME 'KEYACTIONTABLE))

              (RETURN KEYACTION-TABLE))

             (T (SETQ KEYACTION-TABLE (KEYACTIONTABLE))))

          (SETQ NEW-KEYBOARD (VKBD.COMPLETE-KEYBOARD NEW-KEYBOARD))

          (SETQ CONFIG (VKBD.GET-CONFIGURATION (FETCH (VIRTUALKEYBOARD KEYBOARDCONFIGURATION)

                                                      OF NEW-KEYBOARD)))

          (FOR KEY-ASSIGNMENT IN (FETCH (VIRTUALKEYBOARD COMPLETEKEYASSIGNMENTS)

                                            OF NEW-KEYBOARD) DO (OLDKEYACTION (CAR 

                                                                                       KEY-ASSIGNMENT

                                                                                           )

                                                                               (CDR KEY-ASSIGNMENT)

                                                                               KEYACTION-TABLE))

          (PUTPROP KEYBOARDNAME 'KEYACTIONTABLE KEYACTION-TABLE)

          (RETURN KEYACTION-TABLE))))

(vkbd.windowmenufn
  (lambda (w)                                            (* \; "Edited 15-Dec-87 16:27 by Snow")

    (let (keyboard)
         (setq keyboard (vkbd.pop-up-keyboards-menu))
         (and keyboard (process.keyboard w keyboard)))))

(vkbd.windowmenuinit
  (lambda nil                                            (* \; "Edited 15-Dec-87 16:28 by Snow")

    (setq |WindowMenuCommands| (remove (sassoc '|Keyboard| |WindowMenuCommands|)
                                      |WindowMenuCommands|))
    (nconc1 |WindowMenuCommands| `(|Keyboard| (function (lambda (w)
                                                          (switchkeyboards t nil w)))
                                         "Changes the keyboard associated with this window."
                                         ,vkbd.window-menu-subitems))
    (setq |WindowMenu| nil)))
)
(DEFINEQ

(LOADKEYBOARDDISPLAYFONTS
  (LAMBDA (FONT)                                         (* \; "Edited 13-Dec-96 17:40 by rmk:")
                                                             (* \; "Edited  7-Mar-96 12:30 by rmk")

    (* |;;| "Insures that all the characters  on virtual keycaps have been instantiated in FONT (or at least on the keycaps).  Saves the needed charsets in VKBD.CACHEDCHARSETS.  This means that we don't have to parse all the keyboards every time.  In order to make use of the cache, we instantiate all the charsets in all the fonts that are specified in any of the keyboards or configurations.")

    (DECLARE (GLOBALVARS VKBD.CACHEDCHARSETS))
    (CL:UNLESS VKBD.CACHEDCHARSETS
        (FOR K IN VKBD.KNOWN-KEYBOARDS
           DO 

                 (* |;;| "Ignore errorful transitions in this background function, fail when the user actually asks for the keyboard.   Accumulate 0th character in each charset (presumably very few), saving them in the cache.")

                 (FOR A TRANS CHARSETS IN (FETCH KEYASSIGNMENTS OF K)
                    WHEN (NLSETQ (SETQ A (VKBD.PARSE-KEY-ASSIGNMENT A NIL T)))
                    DO (CL:WHEN (LISTP (SETQ TRANS (CADR A)))
                               (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CAR TRANS)
                                                                       (CHARCODE 377\,0)))
                               (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CADR TRANS)
                                                                       (CHARCODE 377\,0))))
                          (CL:WHEN (LISTP (SETQ TRANS (CDDR A)))
                              (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CAR TRANS)
                                                                      (CHARCODE 377\,0)))
                              (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CADR TRANS)
                                                                      (CHARCODE 377\,0))))))
        (FOR CONFIG COMMON IN VKBD.CONFIGURATIONS
           DO 

                 (* |;;| "We aren't letting the configs assignment override the VKBD.COMMONDEFAULTASSIGNMENT on the same key.  Thus, in principle we could be instantiating a font that isn't actually needed, but this is unlikely, harmless, and not worth the bother to keep track.  VKBD.COMPLETE-KEYBOARD does it right.")

                 (FOR A TRANS IN (APPEND (FETCH DEFAULTASSIGNMENT OF CONFIG)
                                                VKBD.COMMONDEFAULTASSIGNMENT)
                    WHEN (NLSETQ (SETQ A (VKBD.PARSE-KEY-ASSIGNMENT A CONFIG)))
                    DO (CL:WHEN (LISTP (SETQ TRANS (CADR A)))
                               (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CAR TRANS)
                                                                       (CHARCODE 377\,0)))
                               (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CADR TRANS)
                                                                       (CHARCODE 377\,0))))
                          (CL:WHEN (LISTP (SETQ TRANS (CDDR A)))
                              (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CAR TRANS)
                                                                      (CHARCODE 377\,0)))
                              (PUSHNEW VKBD.CACHEDCHARSETS (LOGAND (CADR TRANS)
                                                                      (CHARCODE 377\,0))))))
        (SETQ VKBD.CACHEDCHARSETS (DREMOVE 0 VKBD.CACHEDCHARSETS)))
    (IF FONT
        THEN (SETQ FONT (FONTCREATE FONT NIL NIL NIL 'DISPLAY))
              (FOR C IN VKBD.CACHEDCHARSETS DO (CHARWIDTH C FONT))
      ELSE (LET (DONEFONTS)
                    (FOR K F IN VKBD.KNOWN-KEYBOARDS
                       UNLESS (MEMB (SETQ F (FONTCREATE (OR (FETCH (VIRTUALKEYBOARD 
                                                                                  KEYBOARDDISPLAYFONT
                                                                                  ) OF K)
                                                                DEFAULTKEYBOARDDISPLAYFONT)
                                                       NIL NIL NIL 'DISPLAY))
                                        DONEFONTS) DO (PUSH DONEFONTS F)
                                                         (FOR C IN VKBD.CACHEDCHARSETS
                                                            DO (CHARWIDTH C F)))
                    (FOR CONFIG F IN VKBD.CONFIGURATIONS
                       UNLESS (MEMB (SETQ F (FONTCREATE (OR (FETCH (KEYBOARDCONFIGURATION
                                                                            KEYBOARDDISPLAYFONT)
                                                                   OF CONFIG)
                                                                DEFAULTKEYBOARDDISPLAYFONT)
                                                       NIL NIL NIL 'DISPLAY))
                                        DONEFONTS) DO (PUSH DONEFONTS F)
                                                         (FOR C IN VKBD.CACHEDCHARSETS
                                                            DO (CHARWIDTH C F)))))))
)

(RPAQ? VKBD.CACHEDCHARSETS NIL)
(DECLARE\: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS VKBD.CACHEDCHARSETS)
)
(DEFINEQ

(DEFINEKEYBOARD

  (LAMBDA (KEYBOARD-OBJECT)                              (* \; "Edited 28-Feb-96 11:41 by rmk")

                                                             (* \; "Edited 15-Dec-87 16:29 by Snow")



    (* |;;| 

  "Checks assignments before it installs, returns a copy unless the object is already known.")



    (FOR KEY-ASSIGNMENT (CONFIGURATION _ (VKBD.GET-CONFIGURATION (FETCH (VIRTUALKEYBOARD

                                                                                     

                                                                                KEYBOARDCONFIGURATION

                                                                                     ) OF 

                                                                                      KEYBOARD-OBJECT

                                                                                )))

       IN (FETCH (VIRTUALKEYBOARD KEYASSIGNMENTS) OF KEYBOARD-OBJECT)

       DO (VKBD.PARSE-KEY-ASSIGNMENT KEY-ASSIGNMENT CONFIGURATION))

    (OR (FINDVIRTUALKEYBOARD KEYBOARD-OBJECT)

        (CAR (PUSH VKBD.KNOWN-KEYBOARDS (COPY KEYBOARD-OBJECT))))))
)
(DEFINEQ

(vkbd.add-item-to-background-menu
  (lambda (label command message subitemlist)            (* \; "Edited 15-Dec-87 16:29 by Snow")

    (setq |BackgroundMenuCommands| (remove (sassoc label |BackgroundMenuCommands|)
                                          |BackgroundMenuCommands|))
    (nconc1 |BackgroundMenuCommands| (list label command message subitemlist))
    (setq |BackgroundMenu| nil)))

(VKBD.INIT
  (LAMBDA NIL                                        (* \; "Edited 14-Jun-2017 14:22 by kaplan")
                                                           (* \; "Edited 16-Jun-92 11:14 by kaplan")

    (* |;;| "Reads virtual keyboard file for current type (or default type), if it can be found.  Keyboards that don't match current keyboard can be displayed but not installed (via PROCESS.KEYBOARD)")

    (CL:UNLESS \\ORIGINALDEFAULTKEYACTION
        (SETQ \\ORIGINALDEFAULTKEYACTION (KEYACTIONTABLE \\DEFAULTKEYACTION)))
    (SETQ VKBD.COMMONCODELABELS (FOR X IN VKBD.COMMONCHARLABELS
                                   COLLECT (IF (LISTP X)
                                                   THEN (IF (SMALLP (CAR X))
                                                                THEN X
                                                              ELSE (LIST (CHARCODE.DECODE
                                                                              (CAR X))
                                                                             (CADR X)))
                                                 ELSE (LIST (CHARCODE.DECODE X)
                                                                X))))
    (VKBD.ADD-ITEM-TO-BACKGROUND-MENU "Keyboard" ''(SWITCHKEYBOARDS T NIL)
           "Displays a menu for switching keyboards" VKBD.BACKGROUND-MENU-SUBITEMS)
    (VKBD.WINDOWMENUINIT)
    (LET (FILE (KT (KEYBOARDTYPE)))
         (SETQ CURRENTKEYBOARDCONFIG (VKBD.GET-CONFIGURATION KT))
         (COND
            ((SETQ FILE (COND
                           ((AND KT (FINDFILE (PACK* KT "KEYBOARDS")
                                           T)))
                           (T (FINDFILE (PACK* DEFAULTVIRTUALKEYBOARDTYPE "KEYBOARDS")
                                     T))))
             (VKBD.LOAD-KEYBOARD-FILE FILE)

             (* |;;| "Loading a keyboard file may change our notion of KEYBOARDTYPE, because of new coercion paths.  The default keyboard will be added for the new type")

             (VKBD.ADD-DEFAULT-KEYBOARD))
            (T 
               (* |;;| "Special printing here to avoid file-not-found error in case where user calls VKBD.LOAD-KEYBOARD-FILE directly")

               (PROMPTPRINT "Note: virtual keyboard file for type " (OR (KEYBOARDTYPE)
                                                                        DEFAULTVIRTUALKEYBOARDTYPE)
                      " keyboards not found"))))))

(VKBD.CREATE-DEFAULT-KEYBOARD

  (LAMBDA (CONFIGURATION)                                (* \; "Edited 27-Feb-96 20:51 by rmk")



    (* |;;| "Don't bother copying in the default keyassignments, since they will always be inserted by VKBD.COMPLETE-KEYBOARD")



    (CL:WHEN (SETQ CONFIGURATION (VKBD.GET-CONFIGURATION CONFIGURATION))

        (CREATE VIRTUALKEYBOARD

               KEYBOARDNAME _ 'DEFAULT

               KEYBOARDCONFIGURATION _ (FETCH (KEYBOARDCONFIGURATION CONFIGURATIONNAME)

                                          OF CONFIGURATION)))))

(VKBD.ADD-DEFAULT-KEYBOARD
  (LAMBDA (KEYBOARDTYPE)                                 (* \; "Edited 23-May-95 17:04 by rmk:")

(* |;;;| "It is useful practice to be able to switch back to the original key assignments.  Thus the program is adding one special keyboard with the name DEFAULT which is the current keyboardtype's default keyboard.")

    (SETQ KEYBOARDTYPE (OR KEYBOARDTYPE (KEYBOARDTYPE)))
    (BIND DEFAULT WHILE (SETQ DEFAULT (FINDVIRTUALKEYBOARD 'DEFAULT KEYBOARDTYPE))
       DO (SETQ VKBD.KNOWN-KEYBOARDS (REMOVE DEFAULT VKBD.KNOWN-KEYBOARDS)))
    (SETQ VKBD.KNOWN-KEYBOARDS (CONS (VKBD.CREATE-DEFAULT-KEYBOARD KEYBOARDTYPE)
                                     VKBD.KNOWN-KEYBOARDS))
    (COND
       ((EQ KEYBOARDTYPE (KEYBOARDTYPE))
        (VKBD.CREATE-KEYACTION-TABLE 'DEFAULT \\DEFAULTKEYACTION)))))
)
(DEFINEQ

(VKBD.LOAD-FILE-COMMAND

  (LAMBDA (REDEFINE? DELETE-FIRST?)                      (* \; "Edited  3-Mar-96 18:16 by rmk")

                                                             (* \; "Edited 15-Dec-87 16:30 by Snow")

    (LET (F)

         (SETQ F (MKATOM (PROMPTFORWORD "Keyboard file name: " NIL NIL PROMPTWINDOW NIL 'TTY)))

         (IF F

             THEN (VKBD.LOAD-KEYBOARD-FILE F REDEFINE? DELETE-FIRST? T)))))

(VKBD.LOAD-KEYBOARD-FILE

  (LAMBDA (FILENAME REDEFINE? DELETE-CURRENT-DEFINITIONS? PROMPTPRINT)

                                                             (* \; "Edited  4-Mar-96 10:53 by rmk")



    (* |;;| "Note:  Can't switch to READFILE, since it uses OLD-INTERLISP readtable which doesn't honor vertical bars around numeric atoms.")



    (LET ((NEWKEYBOARDS (CL:WITH-OPEN-FILE (STREAM FILENAME :DIRECTION :INPUT)

                               (BIND KB DATE (*PACKAGE* _ *INTERLISP-PACKAGE*)

                                      (RDTBL _ (FIND-READTABLE "INTERLISP"))

                                  FIRST (SETQ DATE (READ STREAM RDTBL))

                                        (CL:UNLESS (LISTP DATE)

                                            (CL:WHEN (STRINGP DATE)

                                                (SETQ DATE (CONCAT "Keyboards from " (FULLNAME STREAM

                                                                                            )

                                                                  " [" DATE "]"))

                                                (IF PROMPTPRINT

                                                    THEN (PROMPTPRINT DATE)

                                                  ELSE (PRINTOUT T DATE T)))

                                            (SETQ DATE NIL)) WHILE (SKIPSEPRCODES STREAM RDTBL)

                                  UNTIL (EQ 'STOP (SETQ KB (READ STREAM RDTBL))) COLLECT

                                                                                     KB

                                  FINALLY (CL:WHEN DATE



                                                  (* |;;| 

                                                "Was a LISTP date, must have been a keyboard")



                                                  (PUSH DATE $$VAL))))))

         (COND

            (DELETE-CURRENT-DEFINITIONS? (SETQ VKBD.KNOWN-KEYBOARDS NEWKEYBOARDS)

                   (VKBD.ADD-DEFAULT-KEYBOARD))

            (T (FOR NEWKEYBOARD KN KC IN NEWKEYBOARDS

                  DO 



                        (* |;;| 

"To make sure that COMPLETEDASSIGNMENTS cell (or any other new cells) exist--backward compatibility")



                        (SETQ NEWKEYBOARD (CREATE VIRTUALKEYBOARD USING NEWKEYBOARD))

                        (SETQ KN (FETCH KEYBOARDNAME OF NEWKEYBOARD))

                        (SETQ KC (FETCH KEYBOARDCONFIGURATION OF NEWKEYBOARD))

                        (FOR TAIL OLDKEYBOARD ON VKBD.KNOWN-KEYBOARDS

                           WHEN (AND (EQ KN (FETCH KEYBOARDNAME OF (SETQ OLDKEYBOARD

                                                                                (CAR TAIL))))

                                         (EQ KC (FETCH KEYBOARDCONFIGURATION OF OLDKEYBOARD))

                                         ) DO 



                                  (* |;;| "If REDEFINE?, then replace one with same name and configuration.  Otherwise, keep the old one instead of installing the new one.")



                                                 (COND

                                                    (REDEFINE? (RPLACA TAIL NEWKEYBOARD))

                                                    (T (RETURN))) FINALLY (SETQ 

                                                                               VKBD.KNOWN-KEYBOARDS

                                                                               (NCONC1 

                                                                                 VKBD.KNOWN-KEYBOARDS

                                                                                      NEWKEYBOARD))))

               )))))

(vkbd.store-file-command
  (lambda (f)                                            (* \; "Edited 15-Dec-87 16:31 by Snow")

    (setq f (promptforword "ENTER FILE NAME: " nil nil promptwindow nil 'tty))
    (|if| f
        |then| (vkbd.store-keyboard-file (mkatom f))
      |else| (promptprint "FILE NOT FOUND"))))

(VKBD.STORE-KEYBOARD-FILE

  (LAMBDA (FILENAME CONFIGURATIONNAME)                   (* \; "Edited  4-Mar-96 13:38 by rmk")



    (* |;;| "COMPLETEDKEYASSIGNMENTS are in a separate hasharray, don't get printed.  Can't use WRITEFILE because of vertical-bar problems")



    (CL:WITH-OPEN-FILE (STREAM FILENAME :DIRECTION :OUTPUT :IF-EXISTS :NEW-VERSION)

           (LET ((RDTBL (FIND-READTABLE "INTERLISP")))

                (PRINT (DATE)

                       STREAM RDTBL)

                (IF CONFIGURATIONNAME

                    THEN (FOR KB IN VKBD.KNOWN-KEYBOARDS

                                WHEN (EQ CONFIGURATIONNAME (FETCH (VIRTUALKEYBOARD 

                                                                                KEYBOARDCONFIGURATION

                                                                                 ) OF KB))

                                UNLESS (EQ 'DEFAULT (FETCH (VIRTUALKEYBOARD KEYBOARDNAME)

                                                           OF KB))

                                DO (PRINT KB STREAM RDTBL))

                  ELSE                                   (* \; 

                   "Don't print DEFAULT keyboards, since they are reconstructed from configuration")

                        (FOR KB IN VKBD.KNOWN-KEYBOARDS

                           UNLESS (EQ 'DEFAULT (FETCH (VIRTUALKEYBOARD KEYBOARDNAME)

                                                      OF KB)) DO (PRINT KB STREAM RDTBL))))

           (PROMPTPRINT (CONCAT "Current known keyboards are stored in " FILENAME))

           (FULLNAME STREAM))))
)
(DEFINEQ

(SWITCHKEYBOARDS

  (LAMBDA (SWITCH-FLG DISPLAY-FLG PROCESS NEW-KEYBOARD DISPLAY-POSITION)

                                                             (* \; "Edited 27-Feb-96 12:35 by rmk")

                                                             (* \; "Edited 15-Dec-87 16:32 by Snow")



(* |;;;| "This is the main function of the package.  SWITCH-FLG and DISPLAY-FLG will produce the 3 logical combinations of switching a keyboard.  The 4th comb NIl & NIL is NOOP.  Any change of the KEYACTION handeling should be reflected here.")



    (PROG (WINDOW)

          (COND

             ((NULL NEW-KEYBOARD)

              (SETQ NEW-KEYBOARD (VKBD.POP-UP-KEYBOARDS-MENU))))

          (COND

             ((LITATOM NEW-KEYBOARD)

              (SETQ NEW-KEYBOARD (FINDVIRTUALKEYBOARD NEW-KEYBOARD))))

          (COND

             ((NULL NEW-KEYBOARD)

              (RETURN NIL)))

          (COND

             (SWITCH-FLG (PROCESS.KEYBOARD PROCESS NEW-KEYBOARD)))

          (COND

             (DISPLAY-FLG (VKBD.COMPLETE-KEYBOARD NEW-KEYBOARD)



                    (* |;;| "This is necessary to enable the menu to generate the right characters for the keys that are defaulted")



                    (* |;;| "(RETURN OLD-KEYACTIONS)")



                    (SETQ WINDOW (VKBD.CREATE-KEYBOARD-DISPLAY NEW-KEYBOARD DISPLAY-POSITION

                                        (FUNCTION VKBD.SEND-CHARACTER))))))))

(vkbd.pop-menu-and-switch-keyboards
  (lambda (process switch-flg display-flg)               (* \; "Edited 15-Dec-87 16:48 by Snow")

    (prog (keyboard)
          (setq keyboard (vkbd.pop-up-keyboards-menu "Select an alternative keyboard"))
          (|if| keyboard
              |then| (switchkeyboards keyboard switch-flg display-flg)))))

(VKBD.POP-UP-KEYBOARDS-MENU

  (LAMBDA (PROMPT-STRING)                                (* \; "Edited 27-Feb-96 13:22 by rmk")

                                                           (* \; "Edited 16-Jun-92 11:35 by kaplan")

    (COND

       (PROMPT-STRING (PROMPTPRINT PROMPT-STRING)

              (FLASHWINDOW PROMPTWINDOW 1)))

    (LET ((KEYBOARDTYPES `(NIL ,(KEYBOARDTYPE)

                               ,@(CDR (ASSOC (KEYBOARDTYPE)

                                             KEYBOARDCONFIGCOERCIONS))

                               ,DEFAULTVIRTUALKEYBOARDTYPE)))

         (MENU (CREATE MENU

                      ITEMS _ (CONS '(|Quit| NIL)

                                    (SORT (FOR K IN VKBD.KNOWN-KEYBOARDS

                                             WHEN (MEMB (FETCH KEYBOARDCONFIGURATION

                                                               OF K)

                                                            KEYBOARDTYPES)

                                             UNLESS (MEMB (FETCH KEYBOARDNAME OF K)

                                                              $$VAL)

                                             COLLECT (FETCH KEYBOARDNAME OF K))

                                          (FUNCTION UALPHORDER)))

                      MENUFONT _ BIGFONT)))))

(VKBD.GET-CONFIGURATION

  (LAMBDA (CONFNAME/WINDOW)                              (* \; "Edited 27-Feb-96 11:13 by rmk")



    (* |;;| "NIL means use the CURRENTKEYBOARDCONFIG, if it exists")



    (COND

       ((WINDOWP CONFNAME/WINDOW)

        (SETQ CONFNAME/WINDOW (|fetch| (VIRTUALKEYBOARD KEYBOARDCONFIGURATION)

                                 |of| (WINDOWPROP CONFNAME/WINDOW 'VKBD.KEYBOARD)))))

    (COND

       ((AND CONFNAME/WINDOW (|type?| KEYBOARDCONFIGURATION CONFNAME/WINDOW))

        CONFNAME/WINDOW)

       ((AND (NULL CONFNAME/WINDOW)

             CURRENTKEYBOARDCONFIG))

       ((FASSOC (OR CONFNAME/WINDOW VKBD.DEFAULT-CONFIGURATION-NAME (KEYBOARDTYPE))

               VKBD.CONFIGURATIONS))

       (T (FOR C IN (CDR (ASSOC CONFNAME/WINDOW KEYBOARDCONFIGCOERCIONS))

             WHEN (SETQ C (FASSOC C VKBD.CONFIGURATIONS)) DO (RETURN C))))))

(VKBD.SUBCONFIGURATION
  (LAMBDA (FULL NEWNAME LOWERLEFTKEY UPPERRIGHTKEY SCALE MARGIN)
                                                             (* \; "Edited  8-Oct-96 12:28 by rmk:")

    (* |;;| "Returns a sub-configuration of FULL, including only keys that lie completely within the region enclosed by the bounding box of LOWERLEFTKEY and UPPERRIGHTKEY.  Translates regions so that origin is the lower-left corner of the lower-left key.")

    (SETQ FULL (VKBD.GET-CONFIGURATION FULL))
    (CL:UNLESS MARGIN (SETQ MARGIN 0))
    (LET
     (NEWREGIONS (LEFT 65535)
            (BOTTOM 65535)
            (TOP 0)
            (RIGHT 0))
     (CL:UNLESS NEWNAME
         (SETQ NEWNAME (FETCH CONFIGURATIONNAME OF FULL)))
     (FOR R IN (OR (CDR (VKBD.KEY-ASSOC LOWERLEFTKEY (FETCH KEYREGIONS OF FULL)
                                       FULL))
                           (ERROR "KEY HAS NO REGION" LOWERLEFTKEY))
        DO (CL:WHEN (ILESSP (FETCH LEFT OF R)
                               LEFT)
                   (SETQ LEFT (FETCH LEFT OF R)))
              (CL:WHEN (ILESSP (FETCH BOTTOM OF R)
                              BOTTOM)
                  (SETQ BOTTOM (FETCH BOTTOM OF R))))
     (FOR R IN (OR (CDR (VKBD.KEY-ASSOC UPPERRIGHTKEY (FETCH KEYREGIONS OF FULL)
                                       FULL))
                           (ERROR "KEY HAS NO REGION" UPPERRIGHTKEY))
        DO (CL:WHEN (IGREATERP (FETCH RIGHT OF R)
                               RIGHT)
                   (SETQ RIGHT (FETCH RIGHT OF R)))
              (CL:WHEN (IGREATERP (FETCH TOP OF R)
                              TOP)
                  (SETQ TOP (FETCH TOP OF R))))
     (SETQ NEWREGIONS
      (FOR KR IN (FETCH KEYREGIONS OF FULL)
         WHEN (FOR R IN (CDR KR) ALWAYS (AND (IGEQ (FETCH LEFT OF R)
                                                                   LEFT)
                                                             (IGEQ (FETCH BOTTOM OF R)
                                                                   BOTTOM)
                                                             (ILEQ (FETCH TOP OF R)
                                                                   TOP)
                                                             (ILEQ (FETCH RIGHT OF R)
                                                                   RIGHT)))
         COLLECT (CONS (CAR KR)
                           (FOR R IN (CDR KR)
                              COLLECT
                              (IF SCALE
                                  THEN (CREATE REGION
                                                  LEFT _
                                                  (FIXR (TIMES SCALE
                                                               (+ MARGIN (- (FETCH LEFT
                                                                               OF R)
                                                                            LEFT))))
                                                  BOTTOM _
                                                  (FIXR (TIMES SCALE
                                                               (+ MARGIN (- (FETCH BOTTOM
                                                                               OF R)
                                                                            BOTTOM))))
                                                  WIDTH _ (FIXR (TIMES SCALE (FETCH WIDTH
                                                                                OF R)))
                                                  HEIGHT _ (FIXR (TIMES SCALE (FETCH HEIGHT
                                                                                 OF R))))
                                ELSE (CREATE REGION
                                            USING R LEFT _ (+ MARGIN (- (FETCH LEFT
                                                                               OF R)
                                                                            LEFT))
                                                  BOTTOM _ (+ MARGIN (- (FETCH BOTTOM
                                                                           OF R)
                                                                        BOTTOM))))))))
     (CREATE KEYBOARDCONFIGURATION COPYING FULL CONFIGURATIONNAME _ NEWNAME KEYREGIONS _ 
                                             NEWREGIONS DEFAULTASSIGNMENT _
                                             (FOR A IN (FETCH DEFAULTASSIGNMENT
                                                                  OF FULL)
                                                WHEN (VKBD.KEY-ASSOC (CAR A)
                                                                NEWREGIONS FULL)
                                                COLLECT (COPY A))))))
)
(DEFINEQ

(vkbd.buttoneventfn
  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:32 by Snow")

(* |;;;| "This is a general 'menu' function for the keyboard when used as a menu --- it is used for all such uses: When displaying a virtual keyboard, when editing one and when editing a default assignments for a configuration.  The only difference is what will be the action taken when a KEY was selected.  This will be determined by the property VKBD.MENUFN which specify the name of the function that should be called.  This function will get 3 arguments : The KEYID, the WINDOW and the mouse key;  In the regular keyboard display this function will send a character to the system buffer.  In the Editor it will make the key the CURRENT key.  In the configuration info window it will display information about the key")

    (prog (mouse-position shaded-key last-mouse-key current-key-and-regions shift-is-down)
          (setq mouse-position (cursorposition nil window))
          (totopw window)                                    (* \; 
                               "This should be checked if changes to the keyboard handling is done")

          (setq shift-is-down (or (keydownp 'rshift)
                                  (keydownp 'lshift)))
          (setq shaded-key (windowprop window 'vkbd.shaded-key))
          (setq last-mouse-key (windowprop window 'vkbd.mouse-button))
          (setq current-key-and-regions (vkbd.get-key-and-regions-of-cursor-position 
                                               mouse-position window))
          (cond
             ((mousestate up)
              (cond
                 ((and shaded-key (eq shaded-key (car current-key-and-regions)))
                  (apply (windowprop window 'vkbd.menufn)
                         (list (windowprop window 'vkbd.shaded-key)
                               window
                               (windowprop window 'vkbd.last-mouse-state)))
                  (vkbd.reset-keyboard-window window))))
             ((or (mousestate (only left))
                  (mousestate (only middle)))
              (windowprop window 'vkbd.shaded-key (car current-key-and-regions))
              (|for| region |in| (cdr current-key-and-regions) |do| (vkbd.invert-region
                                                                                 region window))
              (windowprop window 'vkbd.last-mouse-state (cond
                                                           ((lastmousestate (only left))
                                                            'left)
                                                           (t 'middle)))
              (cond
                 ((or shift-is-down (lastmousestate (only middle)))
                  (vkbd.invert-shift-keys window)
                  (windowprop window 'vkbd.shift-down t))))))))

(vkbd.center-bitmap-in-region
  (lambda (bm region window allignment)                  (* \; "Edited 15-Dec-87 16:32 by Snow")

    (bitblt bm 0 0 window (iplus (|fetch| (region left) |of| region)
                                 (iquotient (idifference (|fetch| (region width) |of| region)
                                                   (bitmapwidth bm))
                                        2))
           (cond
              ((greaterp (bitmapheight bm)
                      (|fetch| (region height) |of| region))
               (cond
                  ((eq allignment 'top)
                   (idifference (|fetch| (region bottom) |of| region)
                          (idifference (bitmapheight bm)
                                 (|fetch| (region height) |of| region))))
                  ((eq allignment 'bottom)
                   (|fetch| (region bottom) |of| region))
                  (t (iplus (|fetch| (region bottom) |of| region)
                            (iquotient (idifference (|fetch| (region height) |of| region)
                                              (bitmapheight bm))
                                   2)))))
              (t (iplus (|fetch| (region bottom) |of| region)
                        (iquotient (idifference (|fetch| (region height) |of| region)
                                          (bitmapheight bm))
                               2))))
           nil nil 'input 'paint)))

(VKBD.CLEAR-KEY-DISPLAY

  (LAMBDA (KEY-REGIONS VKBD-WINDOW)                      (* \; "Edited 27-Feb-96 13:50 by rmk")

    (FOR REGION LEFT BOTTOM WIDTH HEIGHT IN KEY-REGIONS

       DO (SETQ LEFT (FETCH (REGION LEFT) OF REGION))

             (SETQ BOTTOM (FETCH (REGION BOTTOM) OF REGION))

             (SETQ WIDTH (FETCH (REGION WIDTH) OF REGION))

             (SETQ HEIGHT (FETCH (REGION HEIGHT) OF REGION))

             (BITBLT NIL NIL NIL VKBD-WINDOW (ADD1 LEFT)

                    (ADD1 BOTTOM)

                    (IDIFFERENCE WIDTH 2)

                    (IDIFFERENCE HEIGHT 2)

                    'TEXTURE

                    'REPLACE WHITESHADE)

             (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)

                    (ADD1 BOTTOM)

                    (ITIMES (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)

                                   BOTTOM)

                           (BITMAPBIT VKBD-WINDOW LEFT (ADD1 BOTTOM))))

             (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))

                    (ADD1 BOTTOM)

                    (ITIMES (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))

                                   BOTTOM)

                           (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (SUB1 WIDTH))

                                  (ADD1 BOTTOM))))

             (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)

                    (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2))

                    (ITIMES (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)

                                   (IPLUS BOTTOM (ADD1 HEIGHT)))

                           (BITMAPBIT VKBD-WINDOW LEFT (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2)))))

             (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))

                    (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2))

                    (ITIMES (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (SUB1 WIDTH))

                                   (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2)))

                           (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))

                                  (IPLUS BOTTOM (SUB1 HEIGHT))))))))

(VKBD.CREATE-KEYBOARD-BITMAP

  (LAMBDA (CONFIGURATION)                                (* \; "Edited 17-Jan-96 13:45 by rmk")

                                                             (* \; "Edited 15-Dec-87 16:35 by Snow")

    (LET (BM KEYS-REGION BM-WIDTH BM-HEIGHT MAX-REGION)

         (COND

            ((ATOM CONFIGURATION)

             (SETQ CONFIGURATION (VKBD.GET-CONFIGURATION CONFIGURATION))))

         (SETQ MAX-REGION (VKBD.UNION-REGIONS CONFIGURATION))

         (SETQ BM-WIDTH (IPLUS (ITIMES 2 (FETCH (REGION LEFT) OF MAX-REGION))

                               (FETCH (REGION WIDTH) OF MAX-REGION)))

         (SETQ BM-HEIGHT (IPLUS (ITIMES 2 (FETCH (REGION BOTTOM) OF MAX-REGION))

                                (FETCH (REGION HEIGHT) OF MAX-REGION)))

         (SETQ BM (BITMAPCREATE BM-WIDTH BM-HEIGHT))

         (BITBLT NIL NIL NIL BM 0 0 BM-WIDTH BM-HEIGHT 'TEXTURE 'REPLACE BLACKSHADE)

         (BITBLT NIL NIL NIL BM 1 1 (IDIFFERENCE BM-WIDTH 2)

                (IDIFFERENCE BM-HEIGHT 2)

                'TEXTURE

                'REPLACE

                (FETCH (KEYBOARDCONFIGURATION BACKGROUNDSHADE) OF CONFIGURATION))

         (FOR KEY-AND-REGIONS IN (FETCH (KEYBOARDCONFIGURATION KEYREGIONS) OF 

                                                                                        CONFIGURATION

                                                ) DO 



                                                        (* |;;| 

                         "CDR cause odd-shaped keys (like ENTER) are described by multiple regions")



                                                        (VKBD.DISPLAY-EMPTY-KEY-CAP (CDR 

                                                                                      KEY-AND-REGIONS

                                                                                             )

                                                               BM))

         BM)))

(VKBD.CREATE-KEYBOARD-DISPLAY

  (LAMBDA (KEYBOARD MENU-POSITION MENU-FUNCTION BM SHOWCONFIG)

                                                             (* \; "Edited 28-Feb-96 12:02 by rmk")

                                                             (* \; "Edited 25-May-95 11:33 by rmk:")

                                                             (* \; "Edited 20-Apr-89 13:26 by atm")

    (LET (WINDOW WINDOW-WIDTH WINDOW-HEIGHT KEYBOARD-BITMAP CONFIGURATION)

         (SETQ CONFIGURATION (VKBD.GET-CONFIGURATION (|fetch| KEYBOARDCONFIGURATION

                                                            |of| KEYBOARD)))

         (SETQ KEYBOARD-BITMAP (OR BM (VKBD.CREATE-KEYBOARD-BITMAP CONFIGURATION)))

         (SETQ WINDOW-WIDTH (IPLUS 8 (BITMAPWIDTH KEYBOARD-BITMAP)))

         (SETQ WINDOW-HEIGHT (IPLUS 18 (BITMAPHEIGHT KEYBOARD-BITMAP)))

         (CL:UNLESS MENU-POSITION

             (SETQ MENU-POSITION (GETBOXPOSITION WINDOW-WIDTH WINDOW-HEIGHT)))

         (SETQ WINDOW (CREATEW (CREATEREGION (|fetch| (POSITION XCOORD) |of| MENU-POSITION)

                                      (|fetch| (POSITION YCOORD) |of| MENU-POSITION)

                                      WINDOW-WIDTH WINDOW-HEIGHT)

                             (CONCAT "Virtual Keyboard : " (|fetch| (VIRTUALKEYBOARD KEYBOARDNAME

                                                                               ) |of| KEYBOARD)

                                    (CL:IF SHOWCONFIG

                                        (CONCAT " for " (|fetch| (VIRTUALKEYBOARD 

                                                                            KEYBOARDCONFIGURATION)

                                                           |of| KEYBOARD))

                                        ""))))

         (WINDOWPROP WINDOW 'VKBD.KEYBOARD KEYBOARD)

         (WINDOWPROP WINDOW 'BUTTONEVENTFN (FUNCTION VKBD.BUTTONEVENTFN))

         (WINDOWPROP WINDOW 'CURSORMOVEDFN (FUNCTION VKBD.CURSORMOVEDFN))

         (WINDOWPROP WINDOW 'CURSOROUTFN (FUNCTION VKBD.RESET-KEYBOARD-WINDOW))

         (WINDOWPROP WINDOW 'CURSORINFN (FUNCTION VKBD.RESET-KEYBOARD-WINDOW))

         (WINDOWPROP WINDOW 'VKBD.MENUFN MENU-FUNCTION)

         (WINDOWPROP WINDOW 'REPAINTFN (FUNCTION VKBD.KEYBOARD-WINDOW-REPAINTFN))

         (WINDOWPROP WINDOW 'RESHAPEFN (FUNCTION RESHAPEBYREPAINTFN))

         (WINDOWPROP WINDOW 'SCROLLFN (FUNCTION SCROLLBYREPAINTFN))

         (WINDOWPROP WINDOW 'EXTENT (CREATEREGION 0 0 (BITMAPWIDTH KEYBOARD-BITMAP)

                                           (BITMAPHEIGHT KEYBOARD-BITMAP)))

         (WINDOWPROP WINDOW 'ICONFN (FUNCTION VKBD.ICONFN))

         (WINDOWPROP WINDOW 'VKBD.KEYBOARDDISPLAYFONT (OR (|fetch| (VIRTUALKEYBOARD 

                                                                              KEYBOARDDISPLAYFONT)

                                                             |of| KEYBOARD)

                                                          DEFAULTKEYBOARDDISPLAYFONT))

         (REDISPLAYW WINDOW)

         WINDOW)))

(vkbd.cursormovedfn
  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:41 by Snow")

    (prog (mouse-position shaded-key current-key-and-regions shift-is-down)
          (setq mouse-position (cursorposition nil window))
          (setq shaded-key (windowprop window 'vkbd.shaded-key))
          (setq shift-is-down (or (keydownp 'lshift)
                                  (keydownp 'rshift)))
          (cond
             (shaded-key (cond
                            ((not (vkbd.position-is-in-key-region shaded-key mouse-position 
                                         window))
                             (vkbd.reset-keyboard-window window))
                            (t (return t)))))
          (cond
             ((mousestate (or (only left)
                              (only middle)))
              (setq current-key-and-regions (vkbd.get-key-and-regions-of-cursor-position 
                                                   mouse-position window))
              (cond
                 (current-key-and-regions (|for| region |in| (cdr current-key-and-regions)
                                             |do| (vkbd.invert-region region window))
                        (cond
                           ((or shift-is-down (lastmousestate (only middle)))
                            (vkbd.invert-shift-keys window)
                            (windowprop window 'vkbd.shift-down t)))
                        (windowprop window 'vkbd.shaded-key (car current-key-and-regions))
                        (windowprop window 'vkbd.last-mouse-state (cond
                                                                     ((lastmousestate (only left))
                                                                      'left)
                                                                     (t 'middle))))))))))

(VKBD.DISPLAY-CHARACTER

  (LAMBDA (CHAR REGION CHARLABELS WINDOW CONF ALLIGNMENT)(* \; "Edited  7-Mar-96 02:14 by rmk")

                                                             (* \; "Edited 17-Feb-95 12:58 by rmk:")

    (LET (CHARLABEL)

         (SETQ REGION (VKBD.EXTEND-REGION REGION -1))

         (COND

            ((SETQ CHARLABEL (CADR (OR (FASSOC CHAR CHARLABELS)

                                       (FASSOC CHAR VKBD.COMMONCODELABELS))))

             (DSPFONT (OR (|fetch| (KEYBOARDCONFIGURATION KEYLABELSFONT) |of| CONF)

                          DEFAULTKEYBOARDLABELSFONT)

                    WINDOW)

             (CENTERPRINTINREGION CHARLABEL REGION WINDOW))

            (T (VKBD.CENTER-BITMAP-IN-REGION (GETCHARBITMAP CHAR

                                                        (FONTCREATE (OR (WINDOWPROP WINDOW

                                                                               

                                                                               '

                                                                             VKBD.KEYBOARDDISPLAYFONT

                                                                               )

                                                                        (|fetch| (

                                                                                KEYBOARDCONFIGURATION

                                                                                      

                                                                                  KEYBOARDDISPLAYFONT

                                                                                      ) |of|

                                                                                        CONF)

                                                                        DEFAULTKEYBOARDDISPLAYFONT)))

                      REGION WINDOW ALLIGNMENT))))))

(VKBD.DISPLAY-EMPTY-KEY-CAP

  (LAMBDA (KEY-REGIONS BM)                               (* \; "Edited 27-Feb-96 13:32 by rmk")

    (LET (LEFT BOTTOM WIDTH HEIGHT)

         (FOR REGION IN KEY-REGIONS

            DO (SETQ LEFT (FETCH (REGION LEFT) OF REGION))

                  (SETQ BOTTOM (FETCH (REGION BOTTOM) OF REGION))

                  (SETQ WIDTH (FETCH (REGION WIDTH) OF REGION))

                  (SETQ HEIGHT (FETCH (REGION HEIGHT) OF REGION))

                  (BITBLT NIL NIL NIL BM LEFT BOTTOM WIDTH HEIGHT 'TEXTURE 'REPLACE BLACKSHADE)

                  (BITBLT NIL NIL NIL BM (ADD1 LEFT)

                         (ADD1 BOTTOM)

                         (IDIFFERENCE WIDTH 2)

                         (IDIFFERENCE HEIGHT 2)

                         'TEXTURE

                         'REPLACE WHITESHADE)

                  (BITMAPBIT BM LEFT BOTTOM 0)

                  (BITMAPBIT BM (IPLUS LEFT (SUB1 WIDTH))

                         BOTTOM 0)

                  (BITMAPBIT BM LEFT (IPLUS BOTTOM (SUB1 HEIGHT))

                         0)

                  (BITMAPBIT BM (IPLUS LEFT (SUB1 WIDTH))

                         (IPLUS BOTTOM (SUB1 HEIGHT))

                         0))

         (COND

            ((CDR KEY-REGIONS)

             (FOR REGION1 IN KEY-REGIONS

                DO (FOR REGION2 IN KEY-REGIONS BIND INTERSECT

                          DO (COND

                                    ((NOT (EQUAL REGION1 REGION2))

                                     (SETQ INTERSECT (INTERSECTREGIONS

                                                      (CREATEREGION (SUB1 (FETCH (REGION LEFT)

                                                                             OF REGION1))

                                                             (SUB1 (FETCH (REGION BOTTOM)

                                                                      OF REGION1))

                                                             (IPLUS (FETCH (REGION WIDTH)

                                                                       OF REGION1)

                                                                    2)

                                                             (IPLUS (FETCH (REGION HEIGHT)

                                                                       OF REGION1)

                                                                    2))

                                                      (CREATEREGION (SUB1 (FETCH (REGION LEFT)

                                                                             OF REGION2))

                                                             (SUB1 (FETCH (REGION BOTTOM)

                                                                      OF REGION2))

                                                             (IPLUS (FETCH (REGION WIDTH)

                                                                       OF REGION2)

                                                                    2)

                                                             (IPLUS (FETCH (REGION HEIGHT)

                                                                       OF REGION2)

                                                                    2))))

                                     (COND

                                        (INTERSECT (COND

                                                      ((GREATERP (FETCH (REGION HEIGHT)

                                                                    OF INTERSECT)

                                                              (FETCH (REGION WIDTH) OF 

                                                                                            INTERSECT

                                                                     ))

                                                       (SETQ INTERSECT

                                                        (CREATEREGION (FETCH (REGION LEFT)

                                                                         OF INTERSECT)

                                                               (ADD1 (FETCH (REGION BOTTOM)

                                                                        OF INTERSECT))

                                                               (FETCH (REGION WIDTH) OF

                                                                                         INTERSECT)

                                                               (IDIFFERENCE (FETCH (REGION HEIGHT

                                                                                              )

                                                                               OF INTERSECT)

                                                                      2)))

                                                       (BITBLT NIL NIL NIL BM (FETCH (REGION

                                                                                          LEFT)

                                                                                 OF INTERSECT)

                                                              (FETCH (REGION BOTTOM) OF

                                                                                         INTERSECT)

                                                              (FETCH (REGION WIDTH) OF 

                                                                                            INTERSECT

                                                                     )

                                                              (FETCH (REGION HEIGHT) OF

                                                                                         INTERSECT)

                                                              'TEXTURE

                                                              'REPLACE BLACKSHADE)

                                                       (BITBLT NIL NIL NIL BM (FETCH (REGION

                                                                                          LEFT)

                                                                                 OF INTERSECT)

                                                              (ADD1 (FETCH (REGION BOTTOM)

                                                                       OF INTERSECT))

                                                              (FETCH (REGION WIDTH) OF 

                                                                                            INTERSECT

                                                                     )

                                                              (IDIFFERENCE (FETCH (REGION HEIGHT)

                                                                              OF INTERSECT)

                                                                     2)

                                                              'TEXTURE

                                                              'REPLACE WHITESHADE))

                                                      (T (SETQ INTERSECT

                                                          (CREATEREGION (ADD1 (FETCH (REGION

                                                                                          LEFT)

                                                                                 OF INTERSECT))

                                                                 (FETCH (REGION BOTTOM)

                                                                    OF INTERSECT)

                                                                 (IDIFFERENCE (FETCH (REGION

                                                                                          WIDTH)

                                                                                 OF INTERSECT)

                                                                        2)

                                                                 (FETCH (REGION HEIGHT)

                                                                    OF INTERSECT)))

                                                         (BITBLT NIL NIL NIL BM (FETCH

                                                                                 (REGION LEFT)

                                                                                   OF INTERSECT)

                                                                (FETCH (REGION BOTTOM)

                                                                   OF INTERSECT)

                                                                (FETCH (REGION WIDTH)

                                                                   OF INTERSECT)

                                                                (FETCH (REGION HEIGHT)

                                                                   OF INTERSECT)

                                                                'TEXTURE

                                                                'REPLACE BLACKSHADE)

                                                         (BITBLT NIL NIL NIL BM

                                                                (ADD1 (FETCH (REGION LEFT)

                                                                         OF INTERSECT))

                                                                (FETCH (REGION BOTTOM)

                                                                   OF INTERSECT)

                                                                (IDIFFERENCE (FETCH (REGION

                                                                                         WIDTH)

                                                                                OF INTERSECT)

                                                                       2)

                                                                (FETCH (REGION HEIGHT)

                                                                   OF INTERSECT)

                                                                'TEXTURE

                                                                'REPLACE WHITESHADE))))))))))))))

(VKBD.DISPLAY-KEY

  (LAMBDA (KEYID WINDOW CONFIG KEYLABELS CHARLABELS KEYREGIONS)

                                                             (* \; "Edited  7-Mar-96 01:53 by rmk")

                                                             (* \; "Edited 15-Dec-87 17:40 by Snow")

    (SETQ KEYID (VKBD.TRANSLATE-KEY-ID KEYID CONFIG))

    (LET (KEY-ASSIGNMENT LABEL-STRING KEYREGIONS)

         (CL:WHEN (OR KEYREGIONS (SETQ KEYREGIONS (CDR (VKBD.KEY-ASSOC KEYID (FETCH

                                                                                  (

                                                                                KEYBOARDCONFIGURATION

                                                                                   KEYREGIONS)

                                                                                    OF CONFIG)

                                                              CONFIG))))



             (* |;;| "If the REGION doesn't exist, we can't display it.  E.g., our picture doesn't include the F1 keys.  CAR because some keys (e.g. for ENTER) are defined by two rectangles")



             (VKBD.CLEAR-KEY-DISPLAY KEYREGIONS WINDOW)

             (SETQ KEYLABELS (OR KEYLABELS (FETCH (KEYBOARDCONFIGURATION KEYLABELS) OF CONFIG

                                                  )))

             (COND

                ((SETQ LABEL-STRING (CADR (VKBD.KEY-ASSOC KEYID KEYLABELS CONFIG))))

                (T (SETQ KEY-ASSIGNMENT (VKBD.KEY-ASSOC KEYID (FETCH (VIRTUALKEYBOARD 

                                                                               COMPLETEKEYASSIGNMENTS

                                                                                    )

                                                                     OF (WINDOWPROP WINDOW

                                                                                   'VKBD.KEYBOARD))

                                               CONFIG))

                   (SETQ LABEL-STRING (VKBD.GET-NON-CHAR-LABEL KEY-ASSIGNMENT))))

             (COND

                (LABEL-STRING (DSPFONT (OR (FETCH (KEYBOARDCONFIGURATION KEYLABELSFONT)

                                              OF CONFIG)

                                           DEFAULTKEYBOARDLABELSFONT)

                                     WINDOW)

                       (COND

                          ((AND (LISTP LABEL-STRING)

                                (CDR LABEL-STRING))

                           (CENTERPRINTINREGION (CAR LABEL-STRING)

                                  (VKBD.UPPER-HALF-REGION (CAR KEYREGIONS))

                                  WINDOW)

                           (CENTERPRINTINREGION (CADR LABEL-STRING)

                                  (VKBD.LOWER-HALF-REGION (CAR KEYREGIONS))

                                  WINDOW))

                          (T (CENTERPRINTINREGION LABEL-STRING (CAR KEYREGIONS)

                                    WINDOW))))

                (T (VKBD.DISPLAY-KEY-CHARACTERS KEY-ASSIGNMENT (CAR KEYREGIONS)

                          WINDOW CONFIG CHARLABELS)))))))

(VKBD.DISPLAY-KEY-CHARACTERS

  (LAMBDA (KEY-ASSIGNMENT KEY-REGION WINDOW CONFIG CHARLABELS)

                                                             (* \; "Edited  7-Mar-96 01:15 by rmk")

    (LET (SHIFTED-CHAR UNSHIFTED-CHAR)

         (COND

            ((AND KEY-ASSIGNMENT (LISTP (CADR KEY-ASSIGNMENT)))

             (CL:WHEN KEY-REGION

                 (SETQ SHIFTED-CHAR (VKBD.SHIFTED-CHAR KEY-ASSIGNMENT))

                 (SETQ UNSHIFTED-CHAR (VKBD.UNSHIFTED-CHAR KEY-ASSIGNMENT))

                 (COND

                    ((EQ SHIFTED-CHAR UNSHIFTED-CHAR)

                     (VKBD.DISPLAY-CHARACTER SHIFTED-CHAR KEY-REGION CHARLABELS WINDOW CONFIG))

                    (T (VKBD.DISPLAY-CHARACTER UNSHIFTED-CHAR (VKBD.LOWER-HALF-REGION 

                                                                         KEY-REGION)

                              CHARLABELS WINDOW CONFIG 'BOTTOM)

                       (VKBD.DISPLAY-CHARACTER SHIFTED-CHAR (VKBD.UPPER-HALF-REGION 

                                                                       KEY-REGION)

                              CHARLABELS WINDOW CONFIG 'TOP)))))))))

(VKBD.DRAW-KEY-CAPS
  (LAMBDA (LIST-OF-REGIONS BITMAP)                     (* \; "Edited 13-Jun-90 01:10 by mitani")
    (|for| REGION |in| LIST-OF-REGIONS |do| (BITBLT NIL NIL NIL BITMAP
                                                               (|fetch| (REGION LEFT)
                                                                  |of| REGION)
                                                               (|fetch| (REGION BOTTOM)
                                                                  |of| REGION)
                                                               (|fetch| (REGION WIDTH)
                                                                  |of| REGION)
                                                               (|fetch| (REGION HEIGHT)
                                                                  |of| REGION)
                                                               'TEXTURE
                                                               'REPLACE BLACKSHADE)
                                                     (BITBLT NIL NIL NIL BITMAP
                                                            (ADD1 (|fetch| (REGION LEFT)
                                                                     |of| REGION))
                                                            (ADD1 (|fetch| (REGION BOTTOM)
                                                                     |of| REGION))
                                                            (IDIFFERENCE (|fetch| (REGION WIDTH)
                                                                            |of| REGION)
                                                                   2)
                                                            (IDIFFERENCE (|fetch| (REGION HEIGHT)
                                                                            |of| REGION)
                                                                   2)
                                                            'TEXTURE
                                                            'REPLACE WHITESHADE))))

(vkbd.erase-frame
  (lambda (key window framesize)                         (* \; "Edited 15-Dec-87 16:42 by Snow")

    (vkbd.frame-key key window (|fetch| (keyboardconfiguration backgroundshade)
                                      |of| (vkbd.get-configuration window))
           framesize)))

(vkbd.extend-region
  (lambda (region nbits)                                 (* \; "Edited 15-Dec-87 16:42 by Snow")

    (cond
       ((null nbits)
        (setq nbits 1)))
    (createregion (idifference (|fetch| (region left) |of| region)
                         nbits)
           (idifference (|fetch| (region bottom) |of| region)
                  nbits)
           (iplus (|fetch| (region width) |of| region)
                  (itimes nbits 2))
           (iplus (|fetch| (region height) |of| region)
                  (itimes nbits 2)))))

(vkbd.get-key-and-regions-of-cursor-position
  (lambda (cursor-position window)                       (* \; "Edited 15-Dec-87 16:43 by Snow")

    (|for| key-regions |in| (|fetch| (keyboardconfiguration keyregions)
                                       |of| (vkbd.get-configuration window))
       |thereis| (|for| region |in| (cdr key-regions) |thereis| (insidep region 
                                                                                      cursor-position
                                                                                       )))))

(VKBD.GET-KEY-REGIONS

  (LAMBDA (KEY-ID CONFIG)                                (* \; "Edited 27-Feb-96 21:18 by rmk")

    (CDR (VKBD.KEY-ASSOC KEY-ID (FETCH (KEYBOARDCONFIGURATION KEYREGIONS) OF CONFIG)

                CONFIG))))

(VKBD.INVERT-KEY

  (LAMBDA (KEY-ID VKBD-WINDOW)                           (* \; "Edited 27-Feb-96 21:14 by rmk")

    (FOR REGION IN (VKBD.GET-KEY-REGIONS KEY-ID (VKBD.GET-CONFIGURATION VKBD-WINDOW))

       DO (VKBD.INVERT-REGION REGION VKBD-WINDOW))))

(vkbd.invert-region
  (lambda (region window)                                (* \; "Edited 15-Dec-87 16:46 by Snow")

    (|if| region
        |then| (bitblt window (|fetch| (region left) |of| region)
                          (|fetch| (region bottom) |of| region)
                          window
                          (|fetch| (region left) |of| region)
                          (|fetch| (region bottom) |of| region)
                          (|fetch| (region width) |of| region)
                          (|fetch| (region height) |of| region)
                          'invert
                          'replace))))

(VKBD.KEYBOARD-WINDOW-REPAINTFN

  (LAMBDA (WINDOW)                                       (* \; "Edited  7-Mar-96 13:38 by rmk")

    (LET (BM KEYLABELS CHARLABELS (CONFIG (VKBD.GET-CONFIGURATION WINDOW))

             (KEYBOARD (WINDOWPROP WINDOW 'VKBD.KEYBOARD)))

         (SETQ KEYLABELS (FOR K IN (FETCH (KEYBOARDCONFIGURATION KEYLABELS) OF CONFIG

                                                  ) COLLECT (LIST (VKBD.TRANSLATE-KEY-ID

                                                                       (CAR K)

                                                                       CONFIG)

                                                                      (CADR K))))



         (* |;;| "Build this up each time, so that the keyids are specialized to this keyboard.  But the internal search will be much faster. ")



         (FOR K TR IN VKBD.COMMONKEYLABELS WHEN (SETQ TR (VKBD.TRANSLATE-KEY-ID

                                                                      (CAR K)

                                                                      CONFIG))

            UNLESS (ASSOC TR KEYLABELS) DO (PUSH KEYLABELS (LIST TR (CADR K))))

         (SETQ CHARLABELS (FETCH (KEYBOARDCONFIGURATION CHARLABELS) OF CONFIG))

         (SETQ BM (VKBD.CREATE-KEYBOARD-BITMAP CONFIG))

         (BITBLT BM 0 0 WINDOW)



         (* |;;| "Display all the keys")



         (FOR R IN (FETCH KEYREGIONS OF CONFIG)

            DO (VKBD.DISPLAY-KEY (VKBD.TRANSLATE-KEY-ID (CAR R)

                                                CONFIG)

                          WINDOW CONFIG KEYLABELS CHARLABELS (CDR R)))

         (COND

            ((WINDOWPROP WINDOW 'VKBD.LOCKED)

             (VKBD.INVERT-LOCK-KEYS WINDOW)))

         (WINDOWPROP WINDOW 'VKBD.SHADED-KEY NIL)

         (WINDOWPROP WINDOW 'VKBD.LAST-MOUSE-STATE NIL))))

(vkbd.lower-half-region
  (lambda (region)                                       (* \; "Edited 15-Dec-87 16:48 by Snow")

    (createregion (|fetch| (region left) |of| region)
           (|fetch| (region bottom) |of| region)
           (|fetch| (region width) |of| region)
           (iquotient (|fetch| (region height) |of| region)
                  2))))

(VKBD.POSITION-IS-IN-KEY-REGION

  (LAMBDA (KEY POSITION WINDOW)                          (* \; "Edited 27-Feb-96 21:21 by rmk")

    (FOR REGION IN (VKBD.GET-KEY-REGIONS KEY (VKBD.GET-CONFIGURATION WINDOW))

       THEREIS (INSIDEP REGION POSITION))))

(vkbd.remove-keyboard-command
  (lambda nil                                            (* \; "Edited 15-Dec-87 16:49 by Snow")

    (prog (k)
          (setq k (vkbd.pop-up-keyboards-menu "Select keyboard to be removed ."))
          (|if| k
              |then| (vkbd.undefine-keyboard k)
                    (printout promptwindow "Keyboard " k 
                           " was removed from the list of known keyboards. ")))))

(VKBD.UNION-REGIONS

  (LAMBDA (CONFIGURATION)                                (* \; "Edited 17-Jan-96 13:47 by rmk")



    (* |;;| "Don't let too many arguments pile up on the stack.")



    (LET ((KEYREGS (FETCH KEYREGIONS OF CONFIGURATION)))

         (APPLY 'UNIONREGIONS (WHILE KEYREGS

                                 COLLECT (APPLY 'UNIONREGIONS

                                                    (WHILE KEYREGS FOR I VAL FROM 1

                                                       TO 50

                                                       DO 



                                                             (* |;;| 

                                   "CDR because odd-shaped keys (e.g. ENTER) have multiple regions")



                                                             (FOR R

                                                                IN (CDR (POP KEYREGS))

                                                                DO (PUSH VAL R))

                                                       FINALLY (RETURN VAL))))))))

(vkbd.upper-half-region
  (lambda (region)                                       (* |sm| "13-Aug-85 10:38")
    (createregion (|fetch| (region left) |of| region)
           (iplus 1 (|fetch| (region bottom) |of| region)
                  (iquotient (|fetch| (region height) |of| region)
                         2))
           (|fetch| (region width) |of| region)
           (iquotient (|fetch| (region height) |of| region)
                  2))))
)
(DEFINEQ

(VKBD.KEY-ASSOC
  (LAMBDA (KEY ALIST CONFIG)                             (* \; "Edited  5-Oct-96 16:59 by rmk:")
                                                             (* \; "Edited 27-Feb-96 21:07 by rmk")
    (CL:WHEN (SETQ KEY (VKBD.TRANSLATE-KEY-ID KEY CONFIG))
        (FIND C IN ALIST SUCHTHAT (EQ (VKBD.TRANSLATE-KEY-ID (CAR C)
                                                         CONFIG)
                                                  KEY)))))

(VKBD.CHAR-ASSIGNMENTP

  (LAMBDA (ASSIGNMENT)                                   (* \; "Edited 26-Feb-96 16:49 by rmk")

    (LISTP (CADR ASSIGNMENT))))

(VKBD.COMPLETE-KEYBOARD

  (LAMBDA (KEYBOARD)                                     (* \; "Edited  7-Mar-96 13:25 by rmk")



    (* |;;| "Fill in keys that aren't mentioned in the new keyboard, using the configuration's default.  Put the parsed results in the COMPLETEKEYASSIGNMENTS field, for future use.  This field is not written out by the STORE-KEYBOARD function.")



    (CL:UNLESS (FETCH COMPLETEKEYASSIGNMENTS OF KEYBOARD)

        (LET (COMPLETE-ASSIGNMENTS (CONFIG (VKBD.GET-CONFIGURATION (FETCH (VIRTUALKEYBOARD

                                                                                   

                                                                                KEYBOARDCONFIGURATION

                                                                                   ) OF KEYBOARD)

                                                  )))



             (* |;;| "The assignment comes from the keyboard (PARTIAL), the configuration default,  or the common default assignments.")



             (FOR K A CA IN (FETCH (VIRTUALKEYBOARD KEYASSIGNMENTS) OF KEYBOARD)

                DO (SETQ A (VKBD.PARSE-KEY-ASSIGNMENT K CONFIG))

                      (IF (NULL (SETQ CA (ASSOC (CAR A)

                                                    COMPLETE-ASSIGNMENTS)))

                          THEN (PUSH COMPLETE-ASSIGNMENTS A)

                        ELSEIF (EQUAL A CA)

                        ELSE (ERROR "INCOMPATIBLE ASSIGNMENTS OF KEY NUMBER"

                                        (LIST K A CA))))

             (FOR K A IN (FETCH (KEYBOARDCONFIGURATION DEFAULTASSIGNMENT) OF CONFIG)

                DO (SETQ A (VKBD.PARSE-KEY-ASSIGNMENT K CONFIG))

                      (CL:UNLESS (ASSOC (CAR A)

                                        COMPLETE-ASSIGNMENTS)

                             (PUSH COMPLETE-ASSIGNMENTS A)))



             (* |;;| "The configs defaultassignment can override the VKBD.COMMONDEFAULTASSIGNMENT")



             (FOR K A IN VKBD.COMMONDEFAULTASSIGNMENT WHEN (SETQ A (

                                                                          VKBD.PARSE-KEY-ASSIGNMENT

                                                                                K CONFIG T))

                DO (CL:UNLESS (ASSOC (CAR A)

                                         COMPLETE-ASSIGNMENTS)

                              (PUSH COMPLETE-ASSIGNMENTS A)))

             (REPLACE COMPLETEKEYASSIGNMENTS OF KEYBOARD WITH COMPLETE-ASSIGNMENTS)))

    KEYBOARD))

(vkbd.ctrl-assignmentp
  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:33 by Snow")

    (and (eq (cadr assignment)
             'ctrldown)
         (eq (cddr assignment)
             'ctrlup))))

(vkbd.event-assignmentp
  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:34 by Snow")

    (and (eq (cadr assignment)
             'event)
         (eq (cddr assignment)
             'event))))

(vkbd.meta-assignmentp
  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:34 by Snow")

    (and (eq (cadr assignment)
             'metadown)
         (eq (cddr assignment)
             'metaup))))

(VKBD.FRAME-KEY

  (LAMBDA (KEY WINDOW SHADE BITS)                        (* \; "Edited 29-Feb-96 11:06 by rmk")

    (LET ((CONFIG (VKBD.GET-CONFIGURATION WINDOW))

          KEY-REGIONS)

         (SETQ KEY-REGIONS (VKBD.GET-KEY-REGIONS KEY CONFIG))

         (FOR REGION EXTENDED-REGION IN KEY-REGIONS DO (SETQ EXTENDED-REGION

                                                                    (VKBD.EXTEND-REGION REGION 

                                                                           BITS))

                                                                  (BITBLT NIL NIL NIL WINDOW

                                                                         (FETCH (REGION LEFT)

                                                                            OF EXTENDED-REGION)

                                                                         (FETCH (REGION BOTTOM)

                                                                            OF EXTENDED-REGION)

                                                                         (FETCH (REGION WIDTH)

                                                                            OF EXTENDED-REGION)

                                                                         (FETCH (REGION HEIGHT)

                                                                            OF EXTENDED-REGION)

                                                                         'TEXTURE

                                                                         'REPLACE SHADE))

         (VKBD.DISPLAY-EMPTY-KEY-CAP KEY-REGIONS WINDOW)

         (VKBD.DISPLAY-KEY KEY WINDOW CONFIG)

         (IF (EQ (WINDOWPROP WINDOW 'VKBD.SHADED-KEY)

                     KEY)

             THEN (VKBD.INVERT-KEY KEY WINDOW)))))

(VKBD.GET-CURRENT-KEY-ASSIGNMENT

  (LAMBDA (KEY WINDOW/CONFIGURATION)                     (* \; "Edited  7-Mar-96 12:33 by rmk")

                                                             (* \; "Edited 15-Dec-87 16:43 by Snow")

    (CONS KEY (KEYACTION (OR (VKBD.TRANSLATE-KEY-ID KEY WINDOW/CONFIGURATION)

                             KEY)))))

(vkbd.get-non-char-label
  (lambda (key-assignment)                               (* \; "Edited 15-Dec-87 16:44 by Snow")

    (cond
       ((vkbd.shift-assignmentp key-assignment)
        "SHIFT")
       ((vkbd.lock-assignmentp key-assignment)
        "LOCK")
       ((vkbd.ctrl-assignmentp key-assignment)
        "CTRL")
       ((vkbd.lockup-assignmentp key-assignment)
        '("LOCK" "UP"))
       ((vkbd.lockdown-assignmentp key-assignment)
        '("LOCK" "DOWN"))
       ((vkbd.meta-assignmentp key-assignment)
        "META")
       ((vkbd.event-assignmentp key-assignment)
        " ")
       (t nil))))

(vkbd.iconfn
  (lambda (window icon)                                  (* \; "Edited 15-Dec-87 16:44 by Snow")

    (cond
       ((null icon)
        (setq icon (titlediconw (|create| titledicon
                                       icon _ vkbd.icon
                                       mask _ vkbd.mask
                                       titlereg _ (createregion 5 15 80 50))
                          (|fetch| (virtualkeyboard keyboardname) |of| (windowprop
                                                                                window
                                                                                'vkbd.keyboard))
                          (fontcreate 'gacha 8)))))
    icon))

(VKBD.INVERT-LOCK-KEYS

  (LAMBDA (WINDOW)                                       (* \; "Edited 26-Feb-96 17:04 by rmk")

    (FOR KEY-ASSIGNMENT IN (FETCH (VIRTUALKEYBOARD COMPLETEKEYASSIGNMENTS)

                                      OF (WINDOWPROP WINDOW 'VKBD.KEYBOARD))

       WHEN (VKBD.LOCK-ASSIGNMENTP KEY-ASSIGNMENT) DO (VKBD.INVERT-KEY (CAR 

                                                                                       KEY-ASSIGNMENT

                                                                                            )

                                                                         WINDOW))))

(VKBD.INVERT-SHIFT-KEYS

  (LAMBDA (WINDOW)                                       (* \; "Edited 27-Feb-96 21:13 by rmk")

    (FOR KEY-ASSIGNMENT IN (FETCH (VIRTUALKEYBOARD COMPLETEKEYASSIGNMENTS)

                                      OF (WINDOWPROP WINDOW 'VKBD.KEYBOARD))

       WHEN (VKBD.SHIFT-ASSIGNMENTP KEY-ASSIGNMENT) DO (VKBD.INVERT-KEY (CAR 

                                                                                       KEY-ASSIGNMENT

                                                                                             )

                                                                          WINDOW))))

(VKBD.TRANSLATE-KEY-ID

  (LAMBDA (KEY-ID CONFIG)                                (* \; "Edited  7-Mar-96 12:28 by rmk")



    (* |;;| "Assumes that KEY-ID's that look like key numbers ARE key numbers.  Thus, integers in the range [0,\\NKEYS) can't be used as ID's.  Returns NIL if the KEY-ID doesn't exist")



    (OR (KEYNUMBERP KEY-ID)

        (LET ((NUM (CADR (ASSOC KEY-ID (FETCH KEYNAMESMAPPING OF CONFIG)))))



             (* |;;| 

           "If result is not a keynumber, then try recursing.  Introduces a synonym facility")



             (OR (KEYNUMBERP NUM)

                 (AND NUM (VKBD.TRANSLATE-KEY-ID NUM CONFIG)))))))

(vkbd.key-id-to-key-names
  (lambda (key-id window/configuration)                  (* \; "Edited 15-Dec-87 16:46 by Snow")

    (setq window/configuration (vkbd.get-configuration window/configuration))
    (|for| name-id-pair |in| (|fetch| (keyboardconfiguration keynamesmapping)
                                        |of| window/configuration)
       |when| (eq (cadr name-id-pair)
                      key-id) |collect| (car name-id-pair))))

(VKBD.KEYBOARD-IS-KEYBOARDTYPE-KEYBOARD
  (LAMBDA (KEYBOARD)                                     (* \; "Edited 24-May-95 15:25 by rmk:")

    (* |;;| "T if this keyboard is configured for the current physical keyboardtype.")

    (MEMB (FETCH (KEYBOARDCONFIGURATION KEYBOARDTYPE) OF (VKBD.GET-CONFIGURATION
                                                                  (FETCH KEYBOARDCONFIGURATION
                                                                     OF KEYBOARD)))
          (ASSOC (KEYBOARDTYPE)
                 KEYBOARDCONFIGCOERCIONS))))

(VKBD.LOCK-ASSIGNMENTP

  (LAMBDA (ASSIGNMENT)                                   (* \; "Edited 28-Feb-96 14:33 by rmk")

                                                             (* \; "Edited 15-Dec-87 16:47 by Snow")

    (SELECTQ (CADR ASSIGNMENT)

        (LOCKDOWN (EQ (CDDR ASSIGNMENT)

                      'LOCKUP))

        (LOCKTOGGLE (MEMB (CDDR ASSIGNMENT)

                          '(NIL IGNORE)))

        NIL)))

(VKBD.LOCK-KEYP

  (LAMBDA (KEY WINDOW)                                   (* \; "Edited 26-Feb-96 17:05 by rmk")

    (VKBD.LOCK-ASSIGNMENTP (FASSOC KEY (|fetch| (VIRTUALKEYBOARD COMPLETEKEYASSIGNMENTS)

                                              |of| (WINDOWPROP WINDOW 'VKBD.KEYBOARD))))))

(vkbd.lock/nolock
  (lambda (key-action)                                   (* \; "Edited 15-Dec-87 16:47 by Snow")

    (caddr (cadr key-action))))

(vkbd.lockdown-assignmentp
  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:47 by Snow")

    (and (eq (cadr assignment)
             'lockdown)
         (or (null (cddr assignment))
             (eq (cddr assignment)
                 'ignore)))))

(vkbd.lockup-assignmentp
  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:48 by Snow")

    (and (eq (cadr assignment)
             'lockup)
         (or (null (cddr assignment))
             (eq (cddr assignment)
                 'ignore)))))

(VKBD.PARSE-CHAR-CODE

  (LAMBDA (CHARSPEC)                                     (* \; "Edited 29-Feb-96 10:29 by rmk")



    (* |;;| 

  "Does the coercion to a character code, causing error if not possible.  NIL is passed through.")



    (COND

       ((AND (SMALLP CHARSPEC)

             (IGEQ CHARSPEC 0)

             (ILEQ CHARSPEC 65535))

        CHARSPEC)

       ((CHARCODE.DECODE CHARSPEC T))

       (CHARSPEC (ERROR "ILLEGAL CHARACTER SPECIFICATION" CHARSPEC)))))

(VKBD.PARSE-KEY-ASSIGNMENT
  (LAMBDA (KEY-ASSIGNMENT CONFIG UNKNOWNOK)            (* \; "Edited 27-Apr-2018 22:38 by rmk:")
                                                           (* \; "Edited 27-Mar-2018 12:02 by rmk:")
                                                           (* \; "Edited 27-Mar-2018 12:00 by rmk:")
                                                             (* \; "Edited 13-Dec-96 17:26 by rmk:")
                                                             (* \; "Edited  7-Mar-96 12:29 by rmk")

    (* |;;| "Parses a key assignment using information in CONFIG.  Value returned is an image of the key assignment with the key coerced to a keynumber and also the character specifications coerced to codes.  This is what goes into the COMPLETEKEYASSIGNMENTS field.  If UNKNOWNOK, returns NIL as the keyid if it isn't found in the CONFIG (or if the CONFIG isn't given (on calls from LOADKEYBOARDDISPLAYFONTS).")

    (PROG (KEY TRKEY UNSHIFTED-CHAR SHIFTED-CHAR LOCK/NOLOCK DOWN UP)
          (CL:UNLESS (CDR (LISTP KEY-ASSIGNMENT))
                 (ERROR "ILLEGAL KEY ASSIGNMENT" KEY-ASSIGNMENT))
          (SETQ KEY (CAR KEY-ASSIGNMENT))
          (CL:UNLESS (SETQ TRKEY (VKBD.TRANSLATE-KEY-ID KEY CONFIG))
              (CL:UNLESS UNKNOWNOK
                  (ERROR (CONCAT "KEY NOT KNOWN IN CONFIGURATION " (FETCH CONFIGURATIONNAME
                                                                      OF CONFIG))
                         KEY-ASSIGNMENT)))
          (OR T (CL:UNLESS (VKBD.CHAR-ASSIGNMENTP KEY-ASSIGNMENT)

                    (* |;;| "Not sure what else it should be.  Perhaps cause an error?")

                    (RETURN NIL)))
          (CL:WHEN (LISTP (SETQ DOWN (CADR KEY-ASSIGNMENT)))
              (SETQ UNSHIFTED-CHAR (VKBD.PARSE-CHAR-CODE (CAR DOWN)))
                                                             (* \; 
                                                           "RMK: LOCKSHIFT is in CADDDR not CADDR")
              (SETQ DOWN (LIST (VKBD.PARSE-CHAR-CODE (CAR DOWN))
                               (IF (CADR DOWN)
                                   THEN (VKBD.PARSE-CHAR-CODE (CADR DOWN))
                                 ELSE UNSHIFTED-CHAR)
                               (SELECTQ (CADDR DOWN)
                                   ((NIL LOCKSHIFT LS) 
                                        'LOCKSHIFT)
                                   ((NLS NOLOCKSHIFT) 
                                        'NOLOCKSHIFT)
                                   (ERROR "INVALID LOCKSHIFT SPECIFICATION" KEY-ASSIGNMENT)))))
          (CL:WHEN (LISTP (SETQ UP (CDDR KEY-ASSIGNMENT)))
              (SETQ UNSHIFTED-CHAR (VKBD.PARSE-CHAR-CODE (CAR UP)))
              (SETQ UP (LIST (VKBD.PARSE-CHAR-CODE (CAR UP))
                             (IF (CADR UP)
                                 THEN (VKBD.PARSE-CHAR-CODE (CADR UP))
                               ELSE UNSHIFTED-CHAR)
                             (SELECTQ (CADDR UP)
                                 ((NIL LOCKSHIFT LS) 
                                      'LOCKSHIFT)
                                 ((NLS NOLOCKSHIFT) 
                                      'NOLOCKSHIFT)
                                 (ERROR "INVALID LOCKSHIFT SPECIFICATION" KEY-ASSIGNMENT)))))
          (RETURN `(,TRKEY ,DOWN ,@UP)))))

(VKBD.RESET-KEYBOARD-WINDOW

  (LAMBDA (WINDOW)                                       (* \; "Edited 27-Feb-96 21:22 by rmk")

    (LET (SHADED-KEY)

         (IF (SETQ SHADED-KEY (WINDOWPROP WINDOW 'VKBD.SHADED-KEY))

             THEN (VKBD.INVERT-KEY SHADED-KEY WINDOW)

                   (WINDOWPROP WINDOW 'VKBD.SHADED-KEY NIL))

         (IF (WINDOWPROP WINDOW 'VKBD.SHIFT-DOWN)

             THEN (VKBD.INVERT-SHIFT-KEYS WINDOW)

                   (WINDOWPROP WINDOW 'VKBD.SHIFT-DOWN NIL))

         (WINDOWPROP WINDOW 'VKBD.LAST-MOUSE-STATE NIL))))

(VKBD.SEND-CHARACTER

  (LAMBDA (KEY WINDOW)                                   (* \; "Edited 28-Feb-96 14:35 by rmk")

    (LET (KEY-ASSIGNMENT CHAR-CODE (CONFIG (VKBD.GET-CONFIGURATION WINDOW)))

         (SETQ KEY (VKBD.TRANSLATE-KEY-ID KEY CONFIG))

         (COND

            ((VKBD.LOCK-KEYP KEY WINDOW)

             (WINDOWPROP WINDOW 'VKBD.LOCKED (NOT (WINDOWPROP WINDOW 'VKBD.LOCKED)))

             (VKBD.INVERT-LOCK-KEYS WINDOW))

            (T (SETQ KEY-ASSIGNMENT (FASSOC KEY (FETCH (VIRTUALKEYBOARD COMPLETEKEYASSIGNMENTS)

                                                   OF (WINDOWPROP WINDOW 'VKBD.KEYBOARD))))

               (COND

                  ((VKBD.CHAR-ASSIGNMENTP KEY-ASSIGNMENT)

                   (SETQ CHAR-CODE (COND

                                      ((OR (KEYDOWNP 'RSHIFT)

                                           (KEYDOWNP 'LSHIFT)

                                           (WINDOWPROP WINDOW 'VKBD.SHIFT-DOWN)

                                           (AND (EQ (VKBD.LOCK/NOLOCK KEY-ASSIGNMENT)

                                                    'LOCKSHIFT)

                                                (WINDOWPROP WINDOW 'VKBD.LOCKED)))

                                       (VKBD.SHIFTED-CHAR KEY-ASSIGNMENT))

                                      (T (VKBD.UNSHIFTED-CHAR KEY-ASSIGNMENT))))

                   (COND

                      (CHAR-CODE (BKSYSBUF (CHARACTER CHAR-CODE)))))))))))

(vkbd.shift-assignmentp
  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:50 by Snow")

    (or (and (eq (cadr assignment)
                 '1shiftdown)
             (eq (cddr assignment)
                 '1shiftup))
        (and (eq (cadr assignment)
                 '2shiftdown)
             (eq (cddr assignment)
                 '2shiftup)))))

(vkbd.shifted-char
  (lambda (key-assignment)                               (* \; "Edited 15-Dec-87 16:50 by Snow")

    (cadadr key-assignment)))

(VKBD.UNDEFINE-KEYBOARD
  (LAMBDA (KEYBOARD-NAME)                                (* \; "Edited 25-May-95 11:45 by rmk:")
    (IF (EQ KEYBOARD-NAME 'DEFAULT)
        THEN (PROMPTPRINT "Cannot delete the default keyboard. ")
      ELSE (SETQ VKBD.KNOWN-KEYBOARDS (REMOVE (FINDVIRTUALKEYBOARD KEYBOARD-NAME)
                                                 VKBD.KNOWN-KEYBOARDS)))))

(vkbd.unshifted-char
  (lambda (key-assignment)                               (* \; "Edited 15-Dec-87 16:50 by Snow")

    (caadr key-assignment)))
)

(ADDTOVAR CHARACTERNAMES
          (BREAK 2)
          (HOME 524)
          (PGUP 525)
          (END 527)
          (PGDN 528)
          (INS 529)
          (HELP 517)
          (SCRL 521)
          (NUMLK 522)
          (CLEAR 523)
          (DOIT 555)
          (CENTER 577)
          (NOTCENTER 609)
          (BOLD 578)
          (NOTBOLD 610)
          (ITALIC 579)
          (NOTITALIC 611)
          (UCASE 580)
          (LCASE 612)
          (STRIKEOUT 581)
          (NOTSTRIKEOUT 613)
          (UNDERLINE 582)
          (NOTUNDERLINE 614)
          (SUBSCRIPT 583)
          (SUPERSCRIPT 615)
          (SMALLER 584)
          (LARGER 616)
          (MARGINS 585)
          (NOTMARGINS 617)
          (LOOKS 587)
          (NOTLOOKS 619)
          (F11 588)
          (NOTF11 620)
          (F12 589)
          (NOTF12 621))
(DECLARE\: EVAL@COMPILE

(RECORD KEYBOARDCONFIGURATION (CONFIGURATIONNAME KBCDUMMY1 KEYREGIONS KBCDUMMY2 DEFAULTASSIGNMENT
                                         KEYNAMESMAPPING KEYBOARDTYPE KEYLABELS KEYLABELSFONT 
                                         BACKGROUNDSHADE KEYBOARDDISPLAYFONT CHARLABELS)

                                  (* |;;| "Dummy fields so length test still works")

                                  (TYPE? (EQLENGTH DATUM (CONSTANT (LENGTH (RECORDFIELDNAMES
                                                                                
                                                                                '
                                                                                KEYBOARDCONFIGURATION
                                                                                )))))
                                  KEYBOARDTYPE _ (KEYBOARDTYPE)
                                  KEYLABELSFONT _ DEFAULTKEYBOARDLABELSFONT BACKGROUNDSHADE _ 23130 
                                  KEYBOARDDISPLAYFONT _ DEFAULTKEYBOARDDISPLAYFONT)

(RECORD VIRTUALKEYBOARD (KEYBOARDNAME KEYASSIGNMENTS KEYBOARDCONFIGURATION KEYBOARDDISPLAYFONT)
                            (HASHLINK VIRTUALKEYBOARD (COMPLETEKEYASSIGNMENTS VKBDHASHARRAY 20)))
)

(DECLARE\: EVAL@COMPILE (GLOBALVARS VKBDHASHARRAY))

(SETUPHASHARRAY 'VKBDHASHARRAY 20)

(RPAQ? VKBD.KNOWN-KEYBOARDS NIL)

(FILESLOAD (SOURCE)
       KEYBOARDCONFIGS)

(RPAQQ VKBD.BACKGROUND-MENU-SUBITEMS
       (SUBITEMS ("Switch keyboard" '(ADD.PROCESS '(SWITCHKEYBOARDS T))
                        "Switches the key actions of the keyborad.")
              ("Switch and display" '(ADD.PROCESS '(SWITCHKEYBOARDS T T))
                     "Switches the key actions of the keyboards and displays the new keyboard. the displayed keyboard can be used as a menu."
                     )
              ("Display only" '(ADD.PROCESS '(SWITCHKEYBOARDS NIL T))
                     "Displays the new keyboard. The displayed keyboard can be used as a menu.")
              ("Store keyboards" '(ADD.PROCESS '(VKBD.STORE-FILE-COMMAND)
                                         'WINDOW PROMPTWINDOW)
                     "Stores the current known keyboards")
              ("Load keyboards file" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND)
                                             'WINDOW PROMPTWINDOW)
                     "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "
                     (SUBITEMS ("Replace" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND NIL T)
                                                  'WINDOW PROMPTWINDOW)
                                      
                             "Removes the current known definitions and loads predefined keyboards ."
                                      )
                            ("Add, don't redefine" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND NIL NIL)
                                                           'WINDOW PROMPTWINDOW)
                                   "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "
                                   )
                            ("Add, redefine" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND T NIL)
                                                     'WINDOW PROMPTWINDOW)
                                   "Adds definitions of keyboards found on file. If a keyboard with the same name is already known to the system, REDEFINE ir"
                                   )))
              ("Remove keyboard" '(ADD.PROCESS '(VKBD.REMOVE-KEYBOARD-COMMAND))
                     "Removes a keyboard from the list of known keyboards")
              ("Edit" (ADD.PROCESS '(VKBD.EDIT-KEYBOARD-COMMAND T))
                     "Calls the keyboard editor. Will prompt for name for the new keyboard, and will use the default keyboard as the initial keyboard"
                     (SUBITEMS ("New Keyboard, default initial" '(ADD.PROCESS '(
                                                                           VKBD.EDIT-KEYBOARD-COMMAND
                                                                                T))
                                      "Calls the keyboard editor. Will prompt for name for the new keyboard, and will use the default keyboard as the initial keyboard"
                                      )
                            ("New keyboard, other initial" '(ADD.PROCESS '(VKBD.EDIT-KEYBOARD-COMMAND
                                                                           T T))
                                   "Calls the keyboard editor. Will prompt for name for the new keyboard, and will pop up a menu of the current known keyboards. The selected one will be used as the initial keyboard"
                                   )
                            ("Existing keyboard" '(ADD.PROCESS '(VKBD.EDIT-KEYBOARD-COMMAND))
                                   "Will let you select a keyboard from list of the known keyboards, and will calls the keyboard editor on the selected keyboard."
                                   )))))

(RPAQQ VKBD.NON-CHAR-ASSIGNMENTS-LABELS ((SHIFT SHIFT)
                                             (CTRL CTRL)
                                             (META META)
                                             (LOCK LOCK)
                                             (LOCKUP LOCKUP)
                                             (LOCKDOWN LOCKDOWN)))

(RPAQQ VKBD.WINDOW-MENU-SUBITEMS
       (SUBITEMS ("Switch keyboard" (FUNCTION (LAMBDA (W)
                                                     (SWITCHKEYBOARDS T NIL W)))
                        "Switches the key actions of the keyborad.")
              ("Switch and display" (FUNCTION (LAMBDA (W)
                                                     (SWITCHKEYBOARDS T T W)))
                     "Switches the key actions of the keyboards and displays the new keyboard. the displayed keyboard can be used as a menu."
                     )
              ("Display only" (FUNCTION (LAMBDA (W)
                                               (SWITCHKEYBOARDS NIL T W)))
                     "Displays the new keyboard. The displayed keyboard can be used as a menu.")
              ("Store keyboards" (FUNCTION (LAMBDA (W)
                                                  (ADD.PROCESS (FUNCTION (VKBD.STORE-FILE-COMMAND))
                                                         'WINDOW PROMPTWINDOW)))
                     "Stores the current known keyboards")
              ("Load keyboards file" (FUNCTION (LAMBDA (W)
                                                      (ADD.PROCESS (FUNCTION (VKBD.LOAD-FILE-COMMAND)
                                                                          )
                                                             'WINDOW PROMPTWINDOW)))
                     "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "
                     (SUBITEMS ("Replace" (FUNCTION (LAMBDA (W)
                                                           (ADD.PROCESS (FUNCTION (
                                                                               VKBD.LOAD-FILE-COMMAND
                                                                                   NIL T))
                                                                  'WINDOW PROMPTWINDOW)))
                                      
                             "Removes the current known definitions and loads predefined keyboards ."
                                      )
                            ("Add, don't redefine" (FUNCTION (LAMBDA (W)
                                                                    (ADD.PROCESS
                                                                     (FUNCTION (
                                                                               VKBD.LOAD-FILE-COMMAND
                                                                                ))
                                                                     'WINDOW PROMPTWINDOW)))
                                   "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "
                                   )
                            ("Add, redefine" (FUNCTION (LAMBDA (W)
                                                              (ADD.PROCESS (FUNCTION (
                                                                               VKBD.LOAD-FILE-COMMAND
                                                                                      T NIL))
                                                                     'WINDOW PROMPTWINDOW)))
                                   "Adds definitions of keyboards found on file. If a keyboard with the same name is already known to the system, REDEFINE ir"
                                   )))
              ("Remove keyboard" (FUNCTION (LAMBDA (W)
                                                  (ADD.PROCESS '(VKBD.REMOVE-KEYBOARD-COMMAND))))
                     "Removes a keyboard from the list of known keyboards")))

(RPAQQ VKBD.ICON
)

(RPAQQ VKBD.MASK
)
(DECLARE\: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS VKBD.BACKGROUND-MENU-SUBITEMS VKBD.DEFAULT-CONFIGURATION-NAME VKBD.KNOWN-KEYBOARDS 
       VKBD.NON-CHAR-ASSIGNMENTS-LABELS VKBD.ICON VKBD.MASK CURRENTKEYBOARDCONFIG VKBD.CONFIGURATIONS
       VKBD.COMMONCODELABELS VKBD.COMMONKEYLABELS VKBD.COMMONDEFAULTASSIGNMENT)
)
(DECLARE\: FIRST 

(MOVD? '\\KEYBOARDEVENTFN '\\OLDKEYBOARDEVENTFN)
)

(RPAQ? \\ORIGINALDEFAULTKEYACTION )
(DEFINEQ

(VKBD.\\KEYBOARDEVENTFN

  (LAMBDA (FDEV EVENT EXTRA)                             (* \; "Edited  1-Mar-96 23:27 by rmk")



    (* |;;| "call the old keyboard event function, then make sure to reset the Virtual keyboard keyaction tables.  ")



    (\\OLDKEYBOARDEVENTFN FDEV EVENT EXTRA)

    (SELECTQ EVENT

        ((BEFORELOGOUT BEFOREMAKESYS BEFORESYSOUT BEFORESAVEVM) 

             (SETQ \\VKBD.KEYBOARD.BEFORETYPE (KEYBOARDTYPE)))

        ((AFTERLOGOUT AFTERMAKESYS AFTERSYSOUT AFTERSAVEVM) 

             (CL:UNLESS (EQ (KEYBOARDTYPE)

                            \\VKBD.KEYBOARD.BEFORETYPE)

                 (SETQ VKBD.DEFAULT-CONFIGURATION-NAME (KEYBOARDTYPE))

                 (SETQ CURRENTKEYBOARDCONFIG (VKBD.GET-CONFIGURATION (KEYBOARDTYPE)))



                 (* |;;| "If keyboardtype has changed, we start by setting default keyaction table to the settings it had at the time that virtualkeyboards was originally loaded.")



                 (RESETKEYACTION \\DEFAULTKEYACTION \\ORIGINALDEFAULTKEYACTION T)

                 (VKBD.ADD-DEFAULT-KEYBOARD VKBD.DEFAULT-CONFIGURATION-NAME)

                 (VKBD.RESETKEYACTIONTABLES)))

        NIL)))

(VKBD.RESETKEYACTIONTABLES

  (LAMBDA NIL                                            (* \; "Edited  4-Mar-96 13:49 by rmk")

                                                             (* \; "Edited 16-Feb-95 18:23 by rmk:")



    (* |;;| "Reinstantiate/recomplete all keyboards that were previously operational, and insure that there is a DEFAULT for the new type.  Probably should also redraw any open keyboard windows...later.")



    (CL:UNLESS (FINDVIRTUALKEYBOARD 'DEFAULT)



        (* |;;| "This will look for new keyboard files whenever real keyboard changes.")



        (VKBD.INIT))

    (CLRHASH VKBDHASHARRAY)



    (* |;;| "Throw away any cached information, including COMPLETEKEYASSIGNMENTS")



    (FOR KEYBOARD TABLE IN VKBD.KNOWN-KEYBOARDS

       DO (CL:WHEN (SETQ TABLE (GETPROP (FETCH (VIRTUALKEYBOARD KEYBOARDNAME) OF KEYBOARD

                                                   )

                                          'KEYACTIONTABLE))

                  (VKBD.CREATE-KEYACTION-TABLE (FETCH (VIRTUALKEYBOARD KEYBOARDNAME)

                                                      OF KEYBOARD)

                         TABLE)))))
)

(MOVD 'VKBD.\\KEYBOARDEVENTFN '\\KEYBOARDEVENTFN)
(DECLARE\: FIRST 

(MOVD? 'KEYACTION 'OLDKEYACTION)
)
(DEFINEQ

(NEWKEYACTION

  (LAMBDA (KEYNAME ACTIONS TABLE)                        (* \; "Edited  7-Mar-96 11:10 by rmk")



    (* |;;| "\\NKEYS is a constant from LLKEY.")



    (PROG (KEYBOARD (KEYNUM (OR (VKBD.TRANSLATE-KEY-ID KEYNAME CURRENTKEYBOARDCONFIG)

                                (\\KEYNAMETONUMBER KEYNAME))))



     (* |;;| "Handle the NIL-TABLE cases.")



          (COND

             ((AND (NULL TABLE)

                   (LISTP ACTIONS)

                   (OR (FMEMB (CAR ACTIONS)

                              MODEACTIONS)

                       (FMEMB (CDR ACTIONS)

                              MODEACTIONS)))



              (* |;;| "If we are setting a mode (as opposed to a character) key, assume that it is intended to be set in all keyboards where that key is still an appropriate mode")



              (FOR KEYBOARD KEYACTION (ORIGKEYACTION _ (CDR (FASSOC KEYNUM \\ORIGKEYACTIONS)))

                     (MODEACTION _ (CDR (FASSOC KEYNUM MODEKEYS))) IN VKBD.KNOWN-KEYBOARDS

                 DO (SETQ KEYACTION (CDR (FASSOC KEYNUM (FETCH COMPLETEKEYASSIGNMENTS

                                                               OF KEYBOARD))))

                       (COND

                          ((EQUAL KEYACTION ACTIONS))

                          ((OR (NULL KEYACTION)

                               (EQUAL KEYACTION ORIGKEYACTION)

                               (EQUAL KEYACTION MODEACTION))

                           (NEWKEYACTION KEYNAME ACTIONS KEYBOARD)))

                 FINALLY (RPLACD (OR (FASSOC KEYNUM MODEKEYS)

                                         (CAR (PUSH MODEKEYS (CONS KEYNUM))))

                                    ACTIONS))

              (RETURN T)                                     (* \; 

                     "This will cause an error if we try to pass it back in.  What else can we do?")

              ))



(* |;;;| "get the keyboard or key action table.")



          (COND

             ((NULL TABLE)

              (SETQ TABLE \\CURRENTKEYACTION))

             ((LITATOM TABLE)

              (COND

                 ((SETQ KEYBOARD (FASSOC TABLE VKBD.KNOWN-KEYBOARDS))

                  (SETQ TABLE (GETPROP TABLE 'KEYACTIONTABLE)))

                 (T (ERROR TABLE "is not a defined keyboard."))))

             ((LISTP TABLE)

              (COND

                 ((FMEMB TABLE VKBD.KNOWN-KEYBOARDS)

                  (SETQ KEYBOARD TABLE)

                  (SETQ TABLE (GETPROP (FETCH KEYBOARDNAME OF TABLE)

                                     'KEYACTIONTABLE)))

                 (T (ERROR TABLE "is not a defined keyboard."))))

             (T (FOR VKBD IN VKBD.KNOWN-KEYBOARDS

                   WHEN (EQ TABLE (GETPROP (FETCH KEYBOARDNAME OF VKBD)

                                             'KEYACTIONTABLE)) DO (SETQ KEYBOARD VKBD))))



     (* |;;| "If TABLE is NIL, means that we are setting a virtual keyboard for which a keyaction table hasn't yet been created.")



          (RETURN

           (PROG1 

               (COND

                  (TABLE (OLDKEYACTION KEYNUM ACTIONS TABLE))

                  (KEYBOARD                                  (* \; 

        "virtual keyboard package allows incomplete keyboards with defaults from \\ORIGKEYACTIONS.")

                         (CDR (IF (FETCH COMPLETEKEYASSIGNMENTS OF KEYBOARD)

                                  THEN (FASSOC KEYNUM (FETCH COMPLETEKEYASSIGNMENTS

                                                             OF KEYBOARD))

                                ELSE (LET (A)

                                              (IF (SETQ A (OR (VKBD.KEY-ASSOC KEYNAME

                                                                         (FETCH KEYASSIGNMENTS

                                                                            OF KEYBOARD)

                                                                         CURRENTKEYBOARDCONFIG)

                                                                  (VKBD.KEY-ASSOC KEYNAME

                                                                         (FETCH DEFAULTASSIGNMENT

                                                                            OF 

                                                                                CURRENTKEYBOARDCONFIG

                                                                                )

                                                                         CURRENTKEYBOARDCONFIG)

                                                                  (VKBD.KEY-ASSOC KEYNAME 

                                                                         VKBD.COMMONDEFAULTASSIGNMENT

                                                                         CURRENTKEYBOARDCONFIG)))

                                                  THEN (VKBD.PARSE-KEY-ASSIGNMENT A 

                                                                  CURRENTKEYBOARDCONFIG)

                                                ELSE (FASSOC KEYNUM \\ORIGKEYACTIONS))))))

                  (T (SHOULDNT)))

               (COND

                  ((AND KEYBOARD ACTIONS)



                   (* |;;| 

"Set the keyaction in the virtual keyboard, which keeps it consistent with the corresponding table.")



                   (CL:WHEN (FETCH COMPLETEKEYASSIGNMENTS OF KEYBOARD)

                       (PUTASSOC KEYNUM (CDR (VKBD.PARSE-KEY-ASSIGNMENT (CONS KEYNUM ACTIONS)

                                                    CURRENTKEYBOARDCONFIG))

                              (FETCH COMPLETEKEYASSIGNMENTS OF KEYBOARD)))

                   (IF (FETCH KEYASSIGNMENTS OF KEYBOARD)

                       THEN (PUTASSOC KEYNAME ACTIONS (FETCH KEYASSIGNMENTS OF KEYBOARD))

                     ELSE (PUSH (FETCH KEYASSIGNMENTS OF KEYBOARD)

                                     (CONS KEYNAME ACTIONS))))))))))
)

(MOVD 'NEWKEYACTION 'KEYACTION)

(RPAQ? MODEKEYS )

(RPAQQ MODEACTIONS (EVENT CTRLUP CTRLDOWN 1SHIFTUP 1SHIFTDOWN 2SHIFTUP 2SHIFTDOWN LOCKUP LOCKDOWN
                              LOCKTOGGLE METAUP METADOWN FONTUP FONTDOWN FONTTOGGLE USERMODE1UP 
                              USERMODE1DOWN USERMODE1TOGGLE USERMODE2UP USERMODE2DOWN USERMODE2TOGGLE
                              USERMODE3UP USERMODE3DOWN USERMODE3TOGGLE))
(DECLARE\: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS MODEKEYS MODEACTIONS)
)

(ADDTOVAR BREAKRESETFORMS ((LAMBDA (K)
                                      (PROCESS.KEYBOARD NIL K))
                               'DEFAULT))
(DEFINEQ

(FIXKEYBOARD

  (LAMBDA (KBD)                                          (* \; "Edited 28-Feb-96 13:36 by rmk")



    (* |;;| "This is a function use to coerce existing keyboards into a more reasonable format.  It makes the keynames be names from the KEYNAMES mapping instead of key numbers, makes the characters  be readable characters instead of codes, and eliminates actions that duplicate the keyboards defaultassignment actions.   Only reasonable codes are mapped to characters--8-bit non-control range plus the Latin rendering (charset 241)")



    (LET ((KC (VKBD.GET-CONFIGURATION (FETCH KEYBOARDCONFIGURATION OF KBD))))



         (* |;;| "Fix keyassignments and then remove duplicates of default keyassignments")



         (REPLACE KEYASSIGNMENTS OF KBD

            WITH (SORT (FOR KA (DEF _ (FETCH DEFAULTASSIGNMENT OF KC))

                              IN (FIXKEYASSIGNMENTS (FETCH KEYASSIGNMENTS OF KBD)

                                            KC) UNLESS (MEMBER KA DEF) COLLECT KA)

                           T)))))

(FIXKEYBOARDCONFIG

  (LAMBDA (CONFIG)                                       (* \; "Edited 29-Feb-96 13:27 by rmk")



    (* |;;| "Makes sure that CONFIG obeys keynaming conventions that force all reference to be by name and insure that names are not digits.")



    (LET (KEYNUMBERTONAME)

         (FOR KN NAME FNAME FOUND IN (FETCH KEYNAMESMAPPING OF CONFIG)

            DO (SETQ NAME (IF (AND (SMALLP (CAR KN))

                                           (IGEQ (CAR KN)

                                                 0)

                                           (ILEQ (CAR KN)

                                                 9))

                                  THEN (CL:INTERN (CONCAT (CAR KN))

                                                  'INTERLISP)

                                ELSE (CAR KN)))

                  (IF (NULL (SETQ FOUND (ASSOC (CADR KN)

                                                   KEYNUMBERTONAME)))

                      THEN (PUSH KEYNUMBERTONAME (LIST (CADR KN)

                                                               NAME))

                    ELSEIF (OR (EQ NAME (SETQ FNAME (CADR FOUND)))

                                   (AND (EQ 1 (NCHARS FNAME))

                                        (OR (AND (IGEQ (CHCON1 FNAME)

                                                       (CHARCODE 0))

                                                 (ILEQ (CHCON1 FNAME)

                                                       (CHARCODE 9)))

                                            (EQ FNAME (U-CASE NAME)))))

                    ELSE 



                          (* |;;| 

                    "This is the preferred name.  We prefer digit-names and upper-case equivalents")



                          (RPLACA (CDR FOUND)

                                 NAME)))



         (* |;;| "Coerce digit keynames to atoms")



         (FOR K IN (FETCH KEYNAMESMAPPING OF CONFIG)

            WHEN (AND (SMALLP (CAR K))

                          (IGEQ (CAR K)

                                0)

                          (ILEQ (CAR K)

                                9)) DO (RPLACA K (CL:INTERN (CONCAT (CAR K))

                                                            'INTERLISP)))



         (* |;;| "Introduce ZERO, ONE... synonyms for digit keys")



         (NCONC (FETCH KEYNAMESMAPPING OF CONFIG)

                (FOR I FROM 0 AS N

                   IN '(ZERO ONE TWO THREE FOUR FIVE SIX SEVEN EIGHT NINE)

                   UNLESS (ASSOC N (FETCH KEYNAMESMAPPING OF CONFIG))

                   COLLECT (LIST N (CL:INTERN (CONCAT I)

                                              'INTERLISP))))

         (REPLACE KEYREGIONS OF CONFIG

            WITH (IF (FOR K IN (FETCH KEYREGIONS OF CONFIG)

                                ALWAYS (KEYNUMBERP (CAR K)))

                         THEN (FOR K IN (FETCH KEYREGIONS OF CONFIG)

                                     COLLECT (CONS (OR (CADR (ASSOC (CAR K)

                                                                        KEYNUMBERTONAME))

                                                           (HELP "UNNAMED KEYREGION KEY" K))

                                                       (CDR K)))

                       ELSE (FOR K KN IN (FETCH KEYREGIONS OF CONFIG)

                                   COLLECT (SETQ KN (CAR K))

                                         (CONS (IF (AND (SMALLP KN)

                                                            (IGEQ KN 0)

                                                            (ILEQ KN 9))

                                                   THEN (CL:INTERN (CONCAT KN)

                                                                   'INTERLISP)

                                                 ELSE KN)

                                               (CDR K)))))

         (REPLACE DEFAULTASSIGNMENT OF CONFIG

            WITH (SORT (IF (FOR K IN (FETCH DEFAULTASSIGNMENT OF CONFIG)

                                      ALWAYS (KEYNUMBERP (CAR K)))

                               THEN (FOR K IN (FETCH DEFAULTASSIGNMENT OF CONFIG)

                                           COLLECT (CONS (OR (CADR (ASSOC (CAR K)

                                                                              KEYNUMBERTONAME))

                                                                 (HELP "UNNAMED KEYREGION KEY" K))

                                                             (CDR K)))

                             ELSE (FOR K KN IN (FETCH DEFAULTASSIGNMENT OF CONFIG

                                                                  )

                                         COLLECT (SETQ KN (CAR K))

                                               (CONS (IF (AND (SMALLP KN)

                                                                  (IGEQ KN 0)

                                                                  (ILEQ KN 9))

                                                         THEN (CL:INTERN (CONCAT KN)

                                                                         'INTERLISP)

                                                       ELSE KN)

                                                     (CDR K))))

                           T))



         (* |;;| "Convert char-codes to characters, more or less.")



         (FIXKEYASSIGNMENTS (FETCH DEFAULTASSIGNMENT OF CONFIG)

                CONFIG)

         (REPLACE KEYLABELS OF CONFIG

            WITH (SORT (IF (FOR K IN (FETCH KEYLABELS OF CONFIG)

                                      ALWAYS (KEYNUMBERP (CAR K)))

                               THEN (FOR K IN (FETCH KEYLABELS OF CONFIG)

                                           COLLECT (CONS (OR (CADR (ASSOC (CAR K)

                                                                              KEYNUMBERTONAME))

                                                                 (HELP "UNNAMED KEYREGION KEY" K))

                                                             (CDR K)))

                             ELSE (FOR K KN IN (FETCH KEYLABELS OF CONFIG)

                                         COLLECT (SETQ KN (CAR K))

                                               (CONS (IF (AND (SMALLP KN)

                                                                  (IGEQ KN 0)

                                                                  (ILEQ KN 9))

                                                         THEN (CL:INTERN (CONCAT KN)

                                                                         'INTERLISP)

                                                       ELSE KN)

                                                     (CDR K))))

                           T)))

    CONFIG))

(FIXKEYASSIGNMENTS

  (LAMBDA (KALIST CONFIG)                                (* \; "Edited  7-Mar-96 11:20 by rmk")



    (* |;;| "Fix keynames and convert char-codes to characters, more or less.  It makes the keynames be names from the KEYNAMES mapping instead of key numbers, makes the characters  be readable characters instead of codes, and eliminates actions that duplicate the keyboards defaultassignment actions.   Only reasonable codes are mapped to characters--8-bit non-control range plus the Latin rendering (charset 241)")



    (* |;;| "NOTE:  This uses names and character labels from CONFIG, so it should only be run with key assignments that are already CONFIG compatible.")



    (FOR KA CODE LAB (CHARLABELS _ (APPEND (FETCH CHARLABELS OF CONFIG)

                                              VKBD.COMMONCHARLABELS))

           (KNM _ (FETCH KEYNAMESMAPPING OF CONFIG)) IN KALIST

       DO 



             (* |;;| "First make keynames be the ones that are used in he keymapping")



             (RPLACA KA (FOR KN FOUND IN KNM

                           DO 



                                 (* |;;| "Give preference to digit-labels")



                                 (IF (NEQ (CAR KA)

                                              (CADR KN))

                                   ELSEIF (AND (SMALLP (CAR KN))

                                                   (IGEQ (CAR KN)

                                                         0)

                                                   (ILEQ (CAR KN)

                                                         9))

                                     THEN (RETURN (CL:INTERN (CONCAT (CAR KN)

                                                                        'INTERLISP)))

                                   ELSEIF (AND (EQ 1 (NCHARS (CAR KN)))

                                                   (SMALLP (NTHCHAR (CAR KN)

                                                                  1)))

                                     THEN (RETURN (CAR KN))

                                   ELSEIF (NOT FOUND)

                                     THEN (SETQ FOUND (CAR KN)))

                           FINALLY (RETURN (OR FOUND (CAR KA))))) 



             (* |;;| "Shift to actions")



             (SETQ KA (CDR KA)) 



             (* |;;| "Get rid of gratuitous uptransition ignores")



             (CL:WHEN (EQ 'IGNORE (CDR KA))

                    (RPLACD KA)) 



             (* |;;| "Shift to down transition")



             (SETQ KA (CAR KA)) 



             (* |;;| 

      "Make keyactions use characters in the ascii range instead of codes.  241 is Latin rendering")



             (CL:WHEN (LISTP KA)



                 (* |;;| "Eliminate unnecessary NOLOCKSHIFT when lower and upper are the same")



                 (IF (AND (EQ (CAR KA)

                                  (CADR KA))

                              (MEMB (CADDR KA)

                                    '(NOLOCKSHIFT NLS)))

                     THEN (RPLACD (CDR KA))

                   ELSE 



                         (* |;;| "Introduce a shorter abbreviation")



                         (SELECTQ (CADDR KA)

                             (LOCKSHIFT (RPLACD (CDR KA)

                                               'LS))

                             (NOLOCKSHIFT (RPLACD (CDR KA)

                                                 'NLS))

                             NIL))

                 (SETQ CODE (CAR KA))

                 (IF (SMALLP CODE)

                     THEN (RPLACA KA (IF (SMALLP CODE)

                                             THEN (IF (SETQ LAB (CADR (ASSOC CODE CHARLABELS)

                                                                              ))

                                                        ELSEIF (OR (AND (IGREATERP CODE 32)

                                                                            (ILESSP CODE 255))

                                                                       (EQ (LRSH CODE 8)

                                                                           241))

                                                          THEN (SETQ LAB (CHARACTER CODE))

                                                                (CL:IF (SMALLP LAB)

                                                                    (CL:INTERN (CONCAT LAB)

                                                                           'INTERLISP)

                                                                    LAB)

                                                        ELSE (MKATOM (CHARCODESTRING CODE)))

                                           ELSEIF (STRINGP CODE)

                                             THEN (SETQ LAB (MKATOM CODE))

                                                   (CL:IF (SMALLP LAB)

                                                       (CL:INTERN (CONCAT LAB)

                                                              'INTERLISP)

                                                       LAB)

                                           ELSE CODE)))



                 (* |;;| "Shift to shift code")



                 (SETQ KA (CDR KA))

                 (SETQ CODE (CAR KA))

                 (IF (SMALLP CODE)

                     THEN (RPLACA KA (IF (SMALLP CODE)

                                             THEN (IF (SETQ LAB (CADR (ASSOC CODE CHARLABELS)

                                                                              ))

                                                        ELSEIF (OR (AND (IGREATERP CODE 32)

                                                                            (ILESSP CODE 255))

                                                                       (EQ (LRSH CODE 8)

                                                                           241))

                                                          THEN (SETQ LAB (CHARACTER CODE))

                                                                (CL:IF (SMALLP LAB)

                                                                    (CL:INTERN (CONCAT LAB)

                                                                           'INTERLISP)

                                                                    LAB)

                                                        ELSE 



                                                              (* |;;| 

                                                            "Coerce to octal cset,ccode format")



                                                              (MKATOM (CHARCODESTRING CODE)))

                                           ELSEIF (STRINGP CODE)

                                             THEN (SETQ LAB (MKATOM CODE))

                                                   (CL:IF (SMALLP LAB)

                                                       (CL:INTERN (CONCAT LAB)

                                                              'INTERLISP)

                                                       LAB)

                                           ELSE CODE)))))



    (* |;;| "Remove duplicates, leaving the head of the list unchanged, and keeping first occurrences of duplicates")



    (RPLACD KALIST (FOR XTAIL X ON (CDR KALIST) EACHTIME (SETQ X (CAR XTAIL))

                      UNLESS (THEREIS YTAIL ON KALIST UNTIL (EQ YTAIL XTAIL)

                                    SUCHTHAT (EQUAL X (CAR YTAIL))) COLLECT (CAR XTAIL)))

    KALIST))
)
(DECLARE\: DONTEVAL@LOAD DOCOPY 

(VKBD.INIT)
)
(DEFINEQ

(METASHIFT
  (LAMBDA FLG                                            (* \; "Edited 16-Jun-92 08:44 by rmk:")

    (* |;;| "Sets interpretation of swat key to first arg, where T means meta-shift, NIL means original setting.  Returns previous setting.  This differs from LLKEY version in that it changes the \\DORADOKEYACTIONS and \\DEFAULTKEYACTION table to insure that the metashift remains in effect across keyboard switches.")

    (PROG* ((METASTATUS '(METADOWN . METAUP))
            (ARGUMENT (AND (IGREATERP FLG 0)
                           (COND
                              ((EQ (ARG FLG 1)
                                   T)
                               METASTATUS)
                              (T (OR (ARG FLG 1)
                                     (CDR (ASSOC 'BLANK-BOTTOM \\ORIGKEYACTIONS)))))))
            OLDSETTING)
           (SETQ OLDSETTING (KEYACTION 'BLANK-BOTTOM ARGUMENT))

     (* |;;| 
 "Update \\doradokeyactions table so we don't lose the change when we repalce the keyaction table.")

           (AND (EQ (MACHINETYPE)
                    'DORADO)
                (COND
                   (ARGUMENT (PUTASSOC 'BLANK-BOTTOM ARGUMENT \\DORADOKEYACTIONS)
                          (KEYACTION 'BLANK-BOTTOM ARGUMENT \\DEFAULTKEYACTION))
                   (T (SETQ \\DORADOKEYACTIONS (|for| X |in| \\DORADOKEYACTIONS
                                                  |join| (AND (NEQ (CAR X)
                                                                       'BLANK-BOTTOM)
                                                                  (LIST X))))
                      (KEYACTION 'BLANK-BOTTOM NIL \\DEFAULTKEYACTION))))
           (RETURN (COND
                      ((EQUAL OLDSETTING METASTATUS)
                       T)
                      (T OLDSETTING))))))
)



(* \; "Call new definition if the old one had been called")


(AND (MEMB (MACHINETYPE)
           '(MAIKO DORADO))
     (EQUAL (KEYACTION 'BLANK-BOTTOM)
            '(METADOWN . METAUP))
     (METASHIFT T))

(FILESLOAD ICONW)
(DECLARE\: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 

(ADDTOVAR NLAMA )

(ADDTOVAR NLAML )

(ADDTOVAR LAMA METASHIFT)
)
(PUTPROPS VIRTUALKEYBOARDS COPYRIGHT ("Venue & Xerox Corporation" 1985 1986 1987 1988 1990 1992 1993 
1995 1996 2017 2018))
(DECLARE\: DONTCOPY
  (FILEMAP (NIL (5486 14142 (FINDVIRTUALKEYBOARD 5496 . 8650) (PROCESS.KEYBOARD 8652 . 11328) (
VKBD.CREATE-KEYACTION-TABLE 11330 . 13246) (VKBD.WINDOWMENUFN 13248 . 13515) (VKBD.WINDOWMENUINIT 
13517 . 14140)) (14143 19504 (LOADKEYBOARDDISPLAYFONTS 14153 . 19502)) (19613 20837 (DEFINEKEYBOARD 
19623 . 20835)) (20838 25256 (VKBD.ADD-ITEM-TO-BACKGROUND-MENU 20848 . 21256) (VKBD.INIT 21258 . 23796
) (VKBD.CREATE-DEFAULT-KEYBOARD 23798 . 24390) (VKBD.ADD-DEFAULT-KEYBOARD 24392 . 25254)) (25257 31597
 (VKBD.LOAD-FILE-COMMAND 25267 . 25721) (VKBD.LOAD-KEYBOARD-FILE 25723 . 29558) (
VKBD.STORE-FILE-COMMAND 29560 . 29901) (VKBD.STORE-KEYBOARD-FILE 29903 . 31595)) (31598 40899 (
SWITCHKEYBOARDS 31608 . 33086) (VKBD.POP-MENU-AND-SWITCH-KEYBOARDS 33088 . 33458) (
VKBD.POP-UP-KEYBOARDS-MENU 33460 . 34842) (VKBD.GET-CONFIGURATION 34844 . 35762) (
VKBD.SUBCONFIGURATION 35764 . 40897)) (40900 81185 (VKBD.BUTTONEVENTFN 40910 . 43817) (
VKBD.CENTER-BITMAP-IN-REGION 43819 . 45343) (VKBD.CLEAR-KEY-DISPLAY 45345 . 47476) (
VKBD.CREATE-KEYBOARD-BITMAP 47478 . 49522) (VKBD.CREATE-KEYBOARD-DISPLAY 49524 . 52653) (
VKBD.CURSORMOVEDFN 52655 . 54559) (VKBD.DISPLAY-CHARACTER 54561 . 56519) (VKBD.DISPLAY-EMPTY-KEY-CAP 
56521 . 67059) (VKBD.DISPLAY-KEY 67061 . 70268) (VKBD.DISPLAY-KEY-CHARACTERS 70270 . 71463) (
VKBD.DRAW-KEY-CAPS 71465 . 73653) (VKBD.ERASE-FRAME 73655 . 73978) (VKBD.EXTEND-REGION 73980 . 74569) 
(VKBD.GET-KEY-AND-REGIONS-OF-CURSOR-POSITION 74571 . 75186) (VKBD.GET-KEY-REGIONS 75188 . 75444) (
VKBD.INVERT-KEY 75446 . 75736) (VKBD.INVERT-REGION 75738 . 76429) (VKBD.KEYBOARD-WINDOW-REPAINTFN 
76431 . 78388) (VKBD.LOWER-HALF-REGION 78390 . 78790) (VKBD.POSITION-IS-IN-KEY-REGION 78792 . 79076) (
VKBD.REMOVE-KEYBOARD-COMMAND 79078 . 79535) (VKBD.UNION-REGIONS 79537 . 80682) (VKBD.UPPER-HALF-REGION
 80684 . 81183)) (81186 100744 (VKBD.KEY-ASSOC 81196 . 81696) (VKBD.CHAR-ASSIGNMENTP 81698 . 81862) (
VKBD.COMPLETE-KEYBOARD 81864 . 84523) (VKBD.CTRL-ASSIGNMENTP 84525 . 84768) (VKBD.EVENT-ASSIGNMENTP 
84770 . 85010) (VKBD.META-ASSIGNMENTP 85012 . 85255) (VKBD.FRAME-KEY 85257 . 87134) (
VKBD.GET-CURRENT-KEY-ASSIGNMENT 87136 . 87505) (VKBD.GET-NON-CHAR-LABEL 87507 . 88162) (VKBD.ICONFN 
88164 . 88900) (VKBD.INVERT-LOCK-KEYS 88902 . 89580) (VKBD.INVERT-SHIFT-KEYS 89582 . 90264) (
VKBD.TRANSLATE-KEY-ID 90266 . 90945) (VKBD.KEY-ID-TO-KEY-NAMES 90947 . 91433) (
VKBD.KEYBOARD-IS-KEYBOARDTYPE-KEYBOARD 91435 . 92033) (VKBD.LOCK-ASSIGNMENTP 92035 . 92482) (
VKBD.LOCK-KEYP 92484 . 92802) (VKBD.LOCK/NOLOCK 92804 . 92963) (VKBD.LOCKDOWN-ASSIGNMENTP 92965 . 
93259) (VKBD.LOCKUP-ASSIGNMENTP 93261 . 93551) (VKBD.PARSE-CHAR-CODE 93553 . 94052) (
VKBD.PARSE-KEY-ASSIGNMENT 94054 . 97510) (VKBD.RESET-KEYBOARD-WINDOW 97512 . 98105) (
VKBD.SEND-CHARACTER 98107 . 99616) (VKBD.SHIFT-ASSIGNMENTP 99618 . 100012) (VKBD.SHIFTED-CHAR 100014
 . 100172) (VKBD.UNDEFINE-KEYBOARD 100174 . 100581) (VKBD.UNSHIFTED-CHAR 100583 . 100742)) (113812 
116258 (VKBD.\\KEYBOARDEVENTFN 113822 . 115025) (VKBD.RESETKEYACTIONTABLES 115027 . 116256)) (116364 
122515 (NEWKEYACTION 116374 . 122513)) (123170 139358 (FIXKEYBOARD 123180 . 124300) (FIXKEYBOARDCONFIG
 124302 . 131526) (FIXKEYASSIGNMENTS 131528 . 139356)) (139411 141267 (METASHIFT 139421 . 141265)))))
STOP
