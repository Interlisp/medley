(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)
(FILECREATED "24-Jun-2021 19:17:01" 
{DSK}<Users>kaplan>Local>medley3.5>git-medley>library>lafite>LAFITE.;4 71992  

      changes to%:  (FNS \LAFITE.EOF)
                    (FILES LAFITEDECLS)

      previous date%: "22-Aug-94 13:00:22" 
{DSK}<Users>kaplan>Local>medley3.5>git-medley>library>lafite>LAFITE.;2)


(* ; "
Copyright (c) 1982-1989, 1993-1994, 2021 by Xerox Corporation and Bolt Beranek and Newman Inc..
")

(PRETTYCOMPRINT LAFITECOMS)

(RPAQQ LAFITECOMS
       [(COMS (E (SETQ LAFITESYSTEMDATE (DATE)))
              (VARS LAFITEVERSION# LAFITESYSTEMDATE))
        (COMS (FNS LAFITE LAFITE.ON.FROM.BACKGROUND \LAFITE.OFF \LAFITE.START.PROC 
                   LAFITE.COMPUTE.CACHED.VARS \LAFITE.PROCESS \LAFITE.START.ABORT \LAFITE.QUIT 
                   \LAFITE.RESTART \LAFITE.SUBQUIT \LAFITE.QUIT.PROC \LAFITEDEFAULTHOST&DIR 
                   LAFITEDEFAULTHOST&DIR MAKELAFITECOMMANDWINDOW EXTRACTMENUCOMMAND 
                   DOMAINLAFITECOMMAND LAFITE.TOGGLE.SERVER.TRACE)
              (PROP ARGNAMES LAFITE)
              (FNS LAFITEMODE \LAFITE.INFER.MODE \LAFITE.SHOW.MODE \LAFITE.MODE.TITLE 
                   LAFITE.SHOW.MODE.P LAFITE.ALL.MODES.P SET.LAFITE.MODE.INTERACTIVELY 
                   \LAFITE.COMPUTE.MODE.COMMANDS)
              (PROP VARTYPE LAFITEMODELST)
              (ADDVARS (LAFITEMODELST))
              [INITVARS (\LAFITEMODE)
                     (\LAFITE.AUTHENTICATION.FAILURE)
                     (LAFITE.BACKGROUND.ITEM '("Mail" '(\LAFITE.MESSAGEFORM NIL NIL 'LEFT)
                                                     
                                   "Send an ordinary message.  See subcommands for other operations."
                                                     (SUBITEMS ("Turn Lafite on" '(
                                                                            LAFITE.ON.FROM.BACKGROUND
                                                                                   )
                                                                      
                             "Turn on Lafite, bringing up status window and browsing default folder."
                                                                      )
                                                            ("Send Mail" '(\LAFITE.MESSAGEFORM)
                                                                   
                                                      "Send a message.  Prompts for type of message."
                                                                   )
                                                            ("Set Lafite Mode" '(
                                                                        SET.LAFITE.MODE.INTERACTIVELY
                                                                                 )
                                                                   
                                                         "Set or change Lafite's mail protocol mode."
                                                                   ]
              (FNS \LAFITE.LOGIN \LAFITE.LOGIN.NORESTART LAFITE.PROMPT.FOR.LOGIN 
                   \LAFITE.REAUTHENTICATE))
        (INITVARS * LAFITEPROFILEVARS)
        (INITVARS * LAFITERANDOMGLOBALS)
        (VARS * LAFITEMARKS)
        (VARS LAFITECOMMANDMENUITEMS LAFITEUPDATEMENUITEMS LAFITESUBQUITMENUITEMS 
              ANOTHERFOLDERMENUITEM)
        (INITVARS (LAFITESTATUSWINDOW)
               (\ACTIVELAFITEFOLDERS)
               (\LAFITE.TEMPFILES)
               (\LAFITE.MODE.CHOICES)
               (LAFITESUBQUITMENU))
        (ADDVARS (LAFITEMENUVARS LAFITESUBQUITMENU))
        (COMS (INITVARS (\LAFITE.ACTIVE)
                     (\LAFITE.READY)
                     (\LAFITEDEFAULTHOST&DIR)
                     (\LAFITE.ACTIVE.MODES)
                     (\LAFITE.CURRENT.USER)
                     (LAFITE.USER.INFO)
                     (*LAFITE-WELL-KNOWN-MODES*)
                     (*LAFITE-LOGGING-IN*))
              (ADDVARS (\SYSTEMCACHEVARS \LAFITE.READY \LAFITE.ACTIVE.MODES)
                     (LAFITE.PERSONAL.VARS LAFITEDEFAULTHOST&DIR LAFITE.SIGNATURE))
              (FNS LAFITE.AROUNDEXIT \LAFITE.MARK.FOLDERS.OBSOLETE \LAFITE.CHECK.FOLDERS 
                   \LAFITE.ASSURE.FOLDER.READY \LAFITE.AFTERLOGIN))
        (COMS                                                (* ; "misc utilities")
              (FNS LA.RESETSHADE LA.MENU.ITEM NTHMESSAGE \LAFITE.MAKE.MSGARRAY 
                   \LAFITE.ADDMESSAGES.TO.ARRAY \MAILFOLDER.DEFPRINT \LAFITEMSG.DEFPRINT 
                   LA.POSITION.FROM.REGION MAILFOLDERBUSY)
              (CURSORS LA.CROSSCURSOR)
                                                             (* ; "Low level file functions")
              (FNS TOCFILENAME DELETEMAILFOLDER \LAFITE.OPEN.FOLDER \LAFITE.REPORT.FILE.WONT.OPEN 
                   \LAFITE.FOLDER.CHANGED \LAFITE.REBROWSE.FOLDER \LAFITE.FOLDER.CHANGED.MENU 
                   \LAFITE.SET.FOLDER.STREAM \LAFITE.OPENSTREAM \LAFITE.CREATE.MENU \LAFITE.EOF 
                   \LAFITE.CLOSE.FOLDER)
              (FNS \LAFITE.DESCRIBE.FOLDER))
        (COMS                                                (* ; 
                                                      "Make is easy to load new versions of Lafite")
              (FNS LOAD-LAFITE)
              (VARS LAFITEFILES))
        [DECLARE%: DOEVAL@COMPILE DONTCOPY (FILES (SOURCE)
                                                  LAFITEDECLS)
               (LOCALVARS . T)
               (GLOBALVARS TEDIT.DEFAULT.MENU LAFITEFILES *COMPILED-EXTENSIONS*)
               (P (CL:PROCLAIM '(CL:SPECIAL *LAFITE-LOGGING-IN*]
        (INITRECORDS MAILFOLDER LAFITEMSG)
        (SYSRECORDS MAILFOLDER LAFITEMSG)
        [COMS (FNS \LAFITE.GLOBAL.INIT)
              (DECLARE%: DONTEVAL@LOAD DOCOPY
                     (FILES LAFITEBROWSE LAFITECOMMANDS LAFITEFOLDERS LAFITESEND LAFITEMAIL 
                            LAFITESORT TEDIT LAFITETEDIT LAFITEFIND ATTACHEDWINDOW MAILSCAVENGE)
                     (P * (PROGN LAFITE.PROCLAMATIONS))
                                                             (* ; 
                                      "Proclaim user interface variables.  Value is on LAFITEDECLS")
                     (P (\LAFITE.GLOBAL.INIT)
                        (COND ((EQ MAKESYSNAME :LYRIC)
                               (FILESLOAD (SYSLOAD)
                                      NSCHARPATCH)
                                                             (* ; 
                                                           "Patch to horrid Lyric NS chars bug")
                               (MOVD? 'PROMPTFORWORD 'TTYINPROMPTFORWORD NIL T]
        (DECLARE%: DOEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA)
                                                                           (NLAML)
                                                                           (LAMA LAFITE])

(RPAQQ LAFITEVERSION# 10)

(RPAQQ LAFITESYSTEMDATE "24-Jun-2021 19:17:01")
(DEFINEQ

(LAFITE
(LAMBDA X (* ; "Edited 13-Jun-88 10:47 by bvm") (* ;;; "The first argument should be :ON or :OFF.  The second argument, if supplied, is the name of the mailfile Lafite should browse unless the second argument is NIL in which case no mailfile will be browsed.  If there is no second argument then default to DEFAULTMAILFOLDERNAME mailfile -- currently ACTIVE") (PROG ((CMD (COND ((< X 1) (* ; "Lafite called with no args") :ON) (T (ARG X 1)))) OPTIONS) RETRY (RETURN (CASE CMD ((:ON ON) (COND (\LAFITE.ACTIVE (* ; "Already on!") (TOTOPW LAFITESTATUSWINDOW) :ON) (T (\LAFITE.PROCESS (BQUOTE ((\, (FUNCTION \LAFITE.START.PROC)) (QUOTE (\, (COND ((OR (<= X 1) (EQ (ARG X 2) T)) DEFAULTMAILFOLDERNAME) (T (ARG X 2))))) (QUOTE (\, (for I from 3 to X collect (LET ((OP (ARG X I))) (if (CL:KEYWORDP OP) then OP elseif (CL:SYMBOLP OP) then (* ; "Old interface wasn't with keywords, so help out") (CL:INTERN (CL:SYMBOL-NAME OP) *KEYWORD-PACKAGE*) else (\ILLEGAL.ARG OP)))))))) (QUOTE LAFITE)) (QUOTE :ON)))) ((:OFF OFF RESTART) (if (\LAFITE.OFF) then (* ; "Successfully turned Lafite off") (COND ((EQ CMD (QUOTE RESTART)) (APPLY (FUNCTION LAFITE) (CONS :ON (for I from 2 to X collect (ARG X I))))) (T :OFF)))) (T (if (NEQ CMD (SETQ CMD (U-CASE CMD))) then (GO RETRY) else (LISPERROR "ILLEGAL ARG" CMD)))))))
)

(LAFITE.ON.FROM.BACKGROUND
(LAMBDA NIL (* ; "Edited 13-Jun-88 11:18 by bvm") (* ;; "Called from background menu to turn lafite on.") (COND (\LAFITE.ACTIVE (* ; "Already on!") (TOTOPW LAFITESTATUSWINDOW) (PROMPTPRINT "Lafite is already on.")) (T (\LAFITE.PROCESS (BQUOTE ((\, (FUNCTION \LAFITE.START.PROC)) (QUOTE (\, DEFAULTMAILFOLDERNAME)) NIL)) (QUOTE LAFITE)))))
)

(\LAFITE.OFF
(LAMBDA NIL (* ; "Edited  6-Jun-88 19:53 by bvm") (* ;; "If Lafite is on, turn it off.  Returns T if successfully off") (OR (NULL \LAFITE.ACTIVE) (PROGN (* ; "Lafite was on") (COND ((EQ \LAFITE.ACTIVE (QUOTE INIT)) (* ; "Zap the initializer") (DEL.PROCESS (QUOTE LAFITE)))) (\LAFITE.QUIT.PROC (LA.MENU.ITEM (FUNCTION \LAFITE.QUIT) LAFITEMAINMENU) LAFITEMAINMENU))))
)

(\LAFITE.START.PROC
(LAMBDA (MAILFILE OPTIONS) (* ; "Edited 10-Aug-89 17:21 by bvm") (RESETSAVE NIL (LIST (FUNCTION \LAFITE.START.ABORT))) (SETQ \LAFITE.ACTIVE (QUOTE INIT)) (COND ((NOT (WINDOWP LAFITESTATUSWINDOW)) (MAKELAFITECOMMANDWINDOW))) (\LAFITE.REINITIALIZING T) (\LAFITEDEFAULTHOST&DIR (OR LAFITEDEFAULTHOST&DIR LOGINHOST/DIR)) (SETQ \LAFITE.BROWSELOCK (CREATE.MONITORLOCK "Lafite Browser Control")) (* ; "Used by anyone creating browsers or otherwise concerned with changes to \ACTIVELAFITEFOLDERS") (SETQ \LAFITE.MAINLOCK (CREATE.MONITORLOCK "Lafite Main")) (* ; "Used by \LAFITE.CLOSE.OTHER.FOLDERS or anyone who needs access to multiple arbitrary folders") (SETQ \LAFITE.PROFILELOCK (CREATE.MONITORLOCK "Lafite Profile")) (SETQ \LAFITE.HARDCOPYLOCK (CREATE.MONITORLOCK "Lafite hardcopy")) (* ; "Used by anyone reading or writing the Lafite profile") (SETQ LAFITE.FOLDER.STRUCTURE (SETQ LAFITEMAILFOLDERS (SETQ LAFITEFORMFILES NIL))) (SETQ LAFITE.UPDATE.MENU.HASH (HASHARRAY 5)) (\LAFITE.READ.PROFILE) (LAFITE.COMPUTE.CACHED.VARS) (SETQ \LAFITE.READY T) (pushnew \AFTERLOGINFNS (FUNCTION \LAFITE.AFTERLOGIN)) (pushnew AROUNDEXITFNS (FUNCTION LAFITE.AROUNDEXIT)) (SETQ \LAFITE.ACTIVE T) (ADD.PROCESS (CONSTANT (LIST (FUNCTION LAFITEMAILWATCH))) (QUOTE RESTARTABLE) (QUOTE HARDRESET) (QUOTE AFTEREXIT) (QUOTE SUSPEND)) (* ; "Finally, enable menu") (replace (MENU WHENSELECTEDFN) of LAFITEMAINMENU with (FUNCTION DOMAINLAFITECOMMAND)) (COND ((OR MAILFILE (AND (MEMB :SHRINK OPTIONS) (SETQ MAILFILE DEFAULTMAILFOLDERNAME))) (\LAFITE.BROWSE.PROC (LA.MENU.ITEM (FUNCTION \LAFITE.BROWSE) LAFITEMAINMENU) LAFITEMAINMENU MAILFILE (if (AND MAILFILE (NLISTP MAILFILE)) then (* ; "Make it the %"active%" folder as well") (CONS :ACTIVE (MKLIST OPTIONS)) else OPTIONS)))))
)

(LAFITE.COMPUTE.CACHED.VARS
(LAMBDA NIL (* ; "Edited  3-Jun-92 17:46 by bvm") (* ;; "Clears or recomputes all cached information that is based on some possibly user-settable variable.") (SETQ \LAFITE.DISPLAY.COMMANDS (APPEND (for CMD in (fetch (MENU ITEMS) of TEDIT.DEFAULT.MENU) when (CL:MEMBER (if (LISTP CMD) then (CAR CMD) else CMD) (QUOTE ("put" "find" "Expanded Menu")) :TEST (QUOTE STRING-EQUAL)) collect CMD) (for CMD in LAFITE.EXTRA.DISPLAY.COMMANDS collect (if (STRING-EQUAL (CAR CMD) "looks") then (* ; "Add subcommands, so user can easily add more functions to do Looks.") (LIST (CAR CMD) (CADR CMD) (CADDR CMD) (CONS (QUOTE SUBITEMS) (APPEND (CDR (CADDDR CMD)) LAFITE.LOOKS.SUBCOMMANDS))) else CMD)))) (for USERVAR in (QUOTE (LAFITE.DONT.DISPLAY.HEADERS LAFITE.DONT.FORWARD.HEADERS LAFITE.DONT.HARDCOPY.HEADERS)) as IVAR in (QUOTE (\LAPARSE.DONT.DISPLAY.HEADERS \LAPARSE.DONT.FORWARD.HEADERS \LAPARSE.DONT.HARDCOPY.HEADERS)) do (* ; "Make parse tables out of user vars that list fields to omit from headers") (SET IVAR (AND (EVALV USERVAR) (for FIELD in (EVALV USERVAR) collect (if (STRING-EQUAL FIELD "GV") then (* ; "Kludge!  Designed to eat GVGV nonsense that comes AFTER the header") (LIST (QUOTE %
) (FUNCTION LAFITE.EAT.GVGV)) elseif (EQ FIELD :ORIGINAL) then (LIST "Original-" (FUNCTION LAFITE.HANDLE.ORIGINAL.FIELD)) else (LIST FIELD (FUNCTION LAFITE.EAT.UNDESIRABLE.FIELD))))))) (for VAR in LAFITEMENUVARS do (* ; "Clear cached menus") (SET VAR NIL)) (for FOLDER in \ACTIVELAFITEFOLDERS do (for W in (fetch (MAILFOLDER FOLDERDISPLAYWINDOWS) of FOLDER) when (WINDOWP W) do (WINDOWPROP W (QUOTE TEDIT.MENU.COMMANDS) \LAFITE.DISPLAY.COMMANDS) (WINDOWPROP W (QUOTE TEDIT.MENU) NIL))) (LET ((OLDABBREVS \LAFITE.PSEUDO.DEVICES) (NEWABBREVS (DREMOVE NIL (for PAIR in LAFITE.HOST.ABBREVS bind FIELDS NAMES collect (if (AND (for STR in (SETQ NAMES (if (LISTP (SETQ NAMES (CAR PAIR))) then (APPEND NAMES) else (LIST NAMES))) always (AND (STRINGP STR) (EQ (NTHCHARCODE STR -1) (CHARCODE ":")))) (for TAIL on (SETQ FIELDS (UNPACKFILENAME.STRING (CADR PAIR))) by (CDDR TAIL) always (FMEMB (CAR TAIL) (QUOTE (HOST DIRECTORY DEVICE))))) then (* ; "CAR is list of pseudo-devices (must be strings ending in colon), CDR is unpacked fields") (CONS NAMES FIELDS) else (PRINTOUT PROMPTWINDOW T "Bad host abbreviation: " PAIR) NIL))))) (if (NOT (PROG1 (EQUAL (CDR \LAFITE.PSEUDO.DEVICES) NEWABBREVS) (SETQ \LAFITE.PSEUDO.DEVICES (AND NEWABBREVS (CONS (CONS NIL (fetch UNPACKEDHOST&DIR of \LAFITEDEFAULTHOST&DIR)) NEWABBREVS))))) then (\LAFITE.RECOMPUTE.FOLDER.NAMES OLDABBREVS))) (* ;; "Finally, reauthenticate user, in case there is any mode-specific caching we care about.") (LAFITECLEARCACHE))
)

(\LAFITE.PROCESS
(LAMBDA (FORM NAME ALLOWLOGOUT RESTARTABLE) (* bvm%: "25-Mar-84 17:16") (* ;;; "Creates a process running FORM which by default is not restartable and will not permit LOGOUT while it is running") (ADD.PROCESS FORM (QUOTE NAME) NAME (QUOTE RESTARTABLE) (OR RESTARTABLE (QUOTE NO)) (QUOTE BEFOREEXIT) (COND (ALLOWLOGOUT NIL) (T (QUOTE DON'T)))))
)

(\LAFITE.START.ABORT
(LAMBDA NIL (* bvm%: "25-Mar-84 16:44") (COND ((AND RESETSTATE (NEQ \LAFITE.ACTIVE T)) (CLOSEW LAFITESTATUSWINDOW) (SETQ LAFITESTATUSWINDOW (SETQ \LAFITE.ACTIVE)))))
)

(\LAFITE.QUIT
(LAMBDA (ITEM MENU BUTTON) (* bvm%: " 7-Nov-84 11:48") (COND ((EQ BUTTON (QUOTE MIDDLE)) (\LAFITE.SUBQUIT ITEM MENU)) (T (\LAFITE.PROCESS (LIST (FUNCTION \LAFITE.QUIT.PROC) (KWOTE ITEM) (KWOTE MENU)) (QUOTE LAFITEQUIT)))))
)

(\LAFITE.RESTART
(LAMBDA (ITEM MENU) (* ; "Edited  8-Jun-88 12:08 by bvm") (COND ((\LAFITE.QUIT.PROC ITEM MENU) (LAFITE :ON))))
)

(\LAFITE.SUBQUIT
(LAMBDA (ITEM MENU) (* ; "Edited 13-Jun-88 10:49 by bvm") (PROG ((MODES (\LAFITE.COMPUTE.MODE.COMMANDS)) (ITEMS LAFITESUBQUITMENUITEMS) COMMAND LOGINS LOGINITEM) (COND ((OR (NOT (EQUAL \LAFITE.MODE.CHOICES (SETQ \LAFITE.MODE.CHOICES MODES))) (NULL LAFITESUBQUITMENU)) (* ; "Recompute menu") (if (CDR MODES) then (* ; "Only include modes if there's more than one--boring otherwise") (SETQ ITEMS (APPEND ITEMS MODES))) (if (AND (SETQ LOGINITEM (LA.MENU.ITEM (FUNCTION \LAFITE.LOGIN) ITEMS)) (SETQ LOGINS (for MODE in LAFITEMODELST bind FN when (AND (LISTP (CDR MODE)) (SETQ FN (fetch (LAFITEOPS LOGIN) of MODE))) collect (BQUOTE ((\, (CONCAT (CAR MODE) " Login")) (QUOTE (\, FN)) (\, (CONCAT "Change the name and/or password for " (CAR MODE) " operation."))))))) then (* ; "Add subitems for logging in for specific modes.") (SETQ ITEMS (DSUBST (LIST (CAR LOGINITEM) (CADR LOGINITEM) (CADDR LOGINITEM) (APPEND (CADDDR LOGINITEM) LOGINS)) LOGINITEM ITEMS))) (SETQ LAFITESUBQUITMENU (\LAFITE.CREATE.MENU ITEMS "Mode Change")))) (COND ((LISTP (SETQ COMMAND (MENU LAFITESUBQUITMENU))) (* ; "Change mode command") (LAFITEMODE (CAR COMMAND))) (COMMAND (* ; "Arbitrary other command") (\LAFITE.PROCESS (BQUOTE ((\, COMMAND) (QUOTE (\, ITEM)) (QUOTE (\, MENU)))) (QUOTE LAFITEQUIT))))))
)

(\LAFITE.QUIT.PROC
(LAMBDA (ITEM MENU) (* ; "Edited  3-May-89 19:19 by bvm") (RESETLST (LA.RESETSHADE ITEM MENU) (OBTAIN.MONITORLOCK \LAFITE.BROWSELOCK NIL T) (OBTAIN.MONITORLOCK \LAFITE.MAINLOCK NIL T) (PROG ((HOW? 0) MENUREG) (OR \LAFITE.ACTIVE (RETURN T)) (COND ((for WINDOW in LAFITECURRENTEDITORWINDOWS do (COND ((OPENWP WINDOW) (SETQ $$VAL (TOTOPW WINDOW))) ((WINDOWP (SETQ WINDOW (WINDOWPROP WINDOW (QUOTE ICONWINDOW)))) (SETQ $$VAL (EXPANDW WINDOW))))) (printout PROMPTWINDOW T "There are open/undelivered message composition windows -- can't quit") (RETURN))) (for FOLDER in \ACTIVELAFITEFOLDERS when (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER) do (SETQ HOW? (LOGOR HOW? (LAB.UPDATE.NEEDED? FOLDER)))) (COND ((EQ HOW? 0) (* ; "Nothing to do but close them") (SETQ HOW? (FUNCTION \LAFITE.FINISH.UPDATE))) (T (* ;; "Determine what to do with open browsers.  Essentially same as the CLOSEFN for a browser, but we offer a single menu that offers all the choices that the most particular window might need") (SETQ HOW? (\LAFITE.CREATE.MENU (APPEND (fetch (MENU ITEMS) of (LAB.CHOOSE.UPDATE.MENU HOW? :CLOSE)) (QUOTE (("Don't Quit" NIL "Abort the Quit command")))) "How should browsers be closed?" T)) (SETQ MENUREG (WINDOWPROP (WFROMMENU MENU) (QUOTE REGION))) (SETQ HOW? (OR (MENU HOW? (create POSITION XCOORD _ (- (fetch (REGION RIGHT) of MENUREG) (fetch (MENU IMAGEWIDTH) of HOW?)) YCOORD _ (- (fetch (REGION BOTTOM) of MENUREG) (fetch (MENU IMAGEHEIGHT) of HOW?))) T) (RETURN NIL))))) (for FOLDER in (APPEND \ACTIVELAFITEFOLDERS) bind BROWSERWINDOW do (COND ((NOT (SETQ BROWSERWINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))) (\LAFITE.CLOSE.FOLDER FOLDER T)) (T (CL:FUNCALL HOW? BROWSERWINDOW FOLDER :EXIT)))) (SETQ \ACTIVELAFITEFOLDERS) (AND \LAFITE.OUTBOX (CLOSEW (fetch OBWINDOW of \LAFITE.OUTBOX))) (COND (\LAFITEPROFILECHANGED (\LAFITE.WRITE.PROFILE))) (SETQ AROUNDEXITFNS (REMOVE (FUNCTION LAFITE.AROUNDEXIT) AROUNDEXITFNS)) (if NIL then (* ; "Currently these are all on {SCRATCH}, so gc gets them") (for FILE in \LAFITE.TEMPFILES do (* ; "delete any temp files laying around") (CLOSEF? FILE) (DELFILE FILE)) (SETQ \LAFITE.TEMPFILES)) (SETQ \LAFITE.ACTIVE NIL) (DEL.PROCESS (FUNCTION LAFITEMAILWATCH)) (* (* ; "Don't remove this, since it continues to look at login changes") (SETQ \AFTERLOGINFNS (REMOVE (QUOTE \LAFITE.AFTERLOGIN) \AFTERLOGINFNS)) (LAFITECLEARCACHE)) (COND ((OPENWP LAFITESTATUSWINDOW) (CLOSEW LAFITESTATUSWINDOW))) (SETQ \LAFITE.MODE.CHOICES (SETQ LAFITEFORMFILES (SETQ \LAFITE.LAST.STATUS (SETQ \LAFITEDEFAULTHOST&DIR (SETQ LAFITE.UPDATE.MENU.HASH (SETQ LAFITEMAINMENU (SETQ LAFITESTATUSWINDOW NIL))))))) (for VAR in LAFITEMENUVARS do (* ; "Clear cached menus") (SET VAR NIL)) (RETURN T))))
)

(\LAFITEDEFAULTHOST&DIR
(LAMBDA (HOST&DIR) (* ; "Edited 10-Feb-89 12:53 by bvm") (PROG ((*UPPER-CASE-FILE-NAMES* NIL) (OLDHOST&DIR (fetch PACKEDHOST&DIR of \LAFITEDEFAULTHOST&DIR)) UNPACKED CANONICAL) (COND ((OR (NULL HOST&DIR) (STRING-EQUAL OLDHOST&DIR HOST&DIR)) (* ; "User wants the value, or there is no change") (RETURN HOST&DIR))) (* ; "now make sure its a legitimate HOST&DIR") (COND ((NULL (SETQ CANONICAL (DIRECTORYNAME HOST&DIR))) (printout PROMPTWINDOW T "Warning: " HOST&DIR " not a recognized directory")) (T (SETQ HOST&DIR CANONICAL))) (* ; "set both the visible and invisble variables") (SETQ UNPACKED (UNPACKFILENAME.STRING HOST&DIR)) (SETQ \LAFITEDEFAULTHOST&DIR (create DEFAULTHOST&DIR PACKEDHOST&DIR _ (PACKFILENAME.STRING UNPACKED) UNPACKEDHOST&DIR _ UNPACKED)) (RETURN OLDHOST&DIR)))
)

(LAFITEDEFAULTHOST&DIR
(LAMBDA (HOST&DIR) (* bvm%: "22-Feb-84 16:27") (* ;;; "Temporary definition until we can do it right") (SETQ LAFITEDEFAULTHOST&DIR HOST&DIR))
)

(MAKELAFITECOMMANDWINDOW
(LAMBDA NIL (* bvm%: " 5-May-86 16:23") (PROG ((FONTHEIGHT (FONTPROP LAFITEMENUFONT (QUOTE HEIGHT))) MENUW MENUWREGION POSITION HEIGHT WIDTH STATUSWINDOW) (SETQ MENUW (MENUWINDOW (SETQ LAFITEMAINMENU (create MENU ITEMS _ LAFITECOMMANDMENUITEMS WHENSELECTEDFN _ (FUNCTION NILL) CENTERFLG _ T TITLE _ (OR (\LAFITE.MODE.TITLE) "L a f i t e") MENUFONT _ LAFITEMENUFONT MENUTITLEFONT _ LAFITETITLEFONT)))) (SETQ WIDTH (IMAX (fetch (REGION WIDTH) of (SETQ MENUWREGION (WINDOWPROP MENUW (QUOTE REGION)))) LAFITESTATUSWINDOWMINWIDTH)) (SETQ HEIGHT (HEIGHTIFWINDOW (FIX (FTIMES FONTHEIGHT 1.5)))) (SETQ POSITION (OR LAFITESTATUSWINDOWPOSITION (GETBOXPOSITION WIDTH (IPLUS HEIGHT (fetch (REGION HEIGHT) of MENUWREGION)) NIL NIL NIL "Specify position of the Lafite Command Menu."))) (SETQ STATUSWINDOW (CREATEW (MAKEWITHINREGION (create REGION LEFT _ (fetch (POSITION XCOORD) of POSITION) BOTTOM _ (IPLUS (fetch (POSITION YCOORD) of POSITION) (fetch (REGION HEIGHT) of MENUWREGION)) WIDTH _ WIDTH HEIGHT _ HEIGHT)))) (DSPFONT LAFITEMENUFONT STATUSWINDOW) (ATTACHWINDOW MENUW STATUSWINDOW (QUOTE BOTTOM)) (WINDOWPROP STATUSWINDOW (QUOTE BUTTONEVENTFN) (FUNCTION (LAMBDA (WINDOW) (COND ((LASTMOUSESTATE (NOT UP)) (SETQ \LAFITE.LAST.STATUS) (\LAFITE.WAKE.WATCHER)))))) (WINDOWPROP STATUSWINDOW (QUOTE MAINWINDOWMINSIZE) (CONS 0 HEIGHT)) (WINDOWPROP STATUSWINDOW (QUOTE MAINWINDOWMAXSIZE) (CONS MAX.SMALLP HEIGHT)) (OPENW STATUSWINDOW) (CLEARW STATUSWINDOW) (WINDOWPROP STATUSWINDOW (QUOTE YPOS) (IDIFFERENCE (DSPYPOSITION NIL STATUSWINDOW) (FIXR (FTIMES FONTHEIGHT 0.2)))) (RETURN (SETQ LAFITESTATUSWINDOW STATUSWINDOW))))
)

(EXTRACTMENUCOMMAND
(LAMBDA (ITEM) (* ; "Edited  3-Sep-87 15:28 by bvm:") (* ;; "Extract the %"command%" from a menu item.  ITEM is in form (label form helpstring)") (COND ((NLISTP ITEM) ITEM) ((CADR ITEM) (EVAL (CADR ITEM))) (T (CAR ITEM))))
)

(DOMAINLAFITECOMMAND
(LAMBDA (ITEM MENU BUTTON) (* ; "Edited  3-Sep-87 18:00 by bvm:") (CL:FUNCALL (EXTRACTMENUCOMMAND ITEM) ITEM MENU BUTTON))
)

(LAFITE.TOGGLE.SERVER.TRACE
(LAMBDA NIL (* ; "Edited 24-Jul-92 15:14 by bvm") (LET ((CHOICE (MENU (create MENU ITEMS _ (QUOTE (("Quiet" 0 "Don't report server") ("Report" T "Just report server in prompt window") ("Require Confirmation" :ASK "Require approval for posting server choice"))) CENTERFLG _ T TITLE _ "Trace Posting Server?")))) (if CHOICE then (PRINTOUT PROMPTWINDOW T "*NSMAIL-TRACE-SERVERS* = " (SETQ *NSMAIL-TRACE-SERVERS* (AND (NEQ CHOICE 0) CHOICE))))))
)
)

(PUTPROPS LAFITE ARGNAMES (NIL (ON/OFF MAILFILE . OPTIONS) . U))
(DEFINEQ

(LAFITEMODE
(LAMBDA (MODE) (* ; "Edited  9-May-88 15:53 by bvm") (PROG1 (fetch LAFITEMODE of \LAFITEMODE) (COND (MODE (while (LITATOM (CDR (SETQ MODE (OR (ASSOC MODE LAFITEMODELST) (\ILLEGAL.ARG MODE))))) do (SETQ MODE (CDR MODE))) (COND ((NEQ (fetch LAFITEMODE of \LAFITEMODE) (fetch LAFITEMODE of (SETQ \LAFITEMODE MODE))) (* ; "Mode changed, kick mailwatcher") (COND (\LAFITE.ACTIVE (\LAFITE.SHOW.MODE) (WITH.MONITOR \LAFITE.MAILSERVERLOCK (\LAFITE.WAKE.WATCHER))))))))))
)

(\LAFITE.INFER.MODE
(LAMBDA NIL (* bvm%: "21-Dec-84 22:43") (COND ((SETQ \LAFITEMODE (OR (AND LAFITEMODEDEFAULT (ASSOC LAFITEMODEDEFAULT LAFITEMODELST)) (PROG ((CHOICES (for X in LAFITEMODELST collect X when (LISTP (CDR X))))) (RETURN (AND CHOICES (NULL (CDR CHOICES)) (CAR CHOICES)))))) (AND LAFITESTATUSWINDOW (\LAFITE.SHOW.MODE)) \LAFITEMODE)))
)

(\LAFITE.SHOW.MODE
(LAMBDA NIL (* bvm%: "30-Oct-84 16:53") (PROG ((TITLE (\LAFITE.MODE.TITLE)) (MENU LAFITEMAINMENU)) (COND (TITLE (replace (MENU TITLE) of MENU with TITLE) (UPDATE/MENU/IMAGE MENU) (REDISPLAYW (WFROMMENU MENU))))))
)

(\LAFITE.MODE.TITLE
(LAMBDA NIL (* ; "Edited  5-May-88 12:24 by bvm") (* ;;; "If user wants mode shown in Lafite status window, this returns a suitable title for that window") (AND \LAFITEMODE (LAFITE.SHOW.MODE.P) (CONCAT "L a f i t e  (" (fetch LAFITEMODE of \LAFITEMODE) ")")))
)

(LAFITE.SHOW.MODE.P
(LAMBDA NIL (* ; "Edited  5-May-88 12:02 by bvm") (* ;; "True if the current mode should be displayed.") (SELECTQ LAFITESHOWMODEFLG (ALWAYS T) (NIL NIL) (> (for X in LAFITEMODELST count (LISTP (CDR (LISTP X)))) 1)))
)

(LAFITE.ALL.MODES.P
(LAMBDA (OP) (* ; "Edited  9-May-88 17:15 by bvm") (* ;; "True if we should use all modes for the operation designated by OP.  Currently known ops are :POLL, :GETMAIL, :ANSWER.") (if (LISTP LAFITE.USE.ALL.MODES) then (FMEMB OP LAFITE.USE.ALL.MODES) else (OR (EQ LAFITE.USE.ALL.MODES T) (EQ LAFITE.USE.ALL.MODES OP))))
)

(SET.LAFITE.MODE.INTERACTIVELY
(LAMBDA NIL (* ; "Edited 13-Jun-88 10:36 by bvm") (* ;; "Called from background menu to set Lafite's mode.") (LET ((*PRINT-CASE* :UPCASE) CHOICE) (CL:FORMAT PROMPTWINDOW "~2%%Lafite's current mode is ~A.
Use menu to specify the new mode.~@[
Mode affects SendMail only; mail is still retrieved in all modes.~]" (if \LAFITEMODE then (fetch (LAFITEOPS LAFITEMODE) of \LAFITEMODE) else "not set") (EQ LAFITE.USE.ALL.MODES T)) (AND (SETQ CHOICE (MENU (\LAFITE.CREATE.MENU (\LAFITE.COMPUTE.MODE.COMMANDS) "Mode choices"))) (LAFITEMODE (CAR CHOICE)))))
)

(\LAFITE.COMPUTE.MODE.COMMANDS
(LAMBDA NIL (* ; "Edited 13-Jun-88 10:27 by bvm") (* ;; "Returns a list of menu items %"xx Mode%" for changing Lafite's mode.  The result of calling MENU on this is a list whose car is the desired mode.") (for MODE in LAFITEMODELST when (LISTP (CDR MODE)) collect (BQUOTE ((\, (CONCAT (CAR MODE) " Mode")) (QUOTE ((\, (CAR MODE)))) "Change to this mode of mail sending/retrieving"))))
)
)

(PUTPROPS LAFITEMODELST VARTYPE ALIST)

(ADDTOVAR LAFITEMODELST )

(RPAQ? \LAFITEMODE )

(RPAQ? \LAFITE.AUTHENTICATION.FAILURE )

(RPAQ? LAFITE.BACKGROUND.ITEM
       '("Mail" '(\LAFITE.MESSAGEFORM NIL NIL 'LEFT)
               "Send an ordinary message.  See subcommands for other operations."
               (SUBITEMS ("Turn Lafite on" '(LAFITE.ON.FROM.BACKGROUND)
                                
                             "Turn on Lafite, bringing up status window and browsing default folder."
                                )
                      ("Send Mail" '(\LAFITE.MESSAGEFORM)
                             "Send a message.  Prompts for type of message.")
                      ("Set Lafite Mode" '(SET.LAFITE.MODE.INTERACTIVELY)
                             "Set or change Lafite's mail protocol mode."))))
(DEFINEQ

(\LAFITE.LOGIN
(LAMBDA NIL (* ; "Edited  8-Jun-88 12:50 by bvm") (if (AND (\LAFITE.OFF) (LAFITE.PROMPT.FOR.LOGIN NIL (FUNCTION (LAMBDA NIL (SETQ LAFITEDEFAULTHOST&DIR (TTYINPROMPTFORWORD "Host&dir for mail files: " (OR LAFITEDEFAULTHOST&DIR LOGINHOST/DIR) "Specify, in form {host}<dir> the location of the mail files for the user you just logged in.")))))) then (LAFITE :ON)))
)

(\LAFITE.LOGIN.NORESTART
(LAMBDA NIL (* ; "Edited  7-Jun-88 19:33 by bvm") (LAFITE.PROMPT.FOR.LOGIN)))

(LAFITE.PROMPT.FOR.LOGIN
(LAMBDA (HOST AFTERLOGINFN) (* ; "Edited  8-Jun-88 12:42 by bvm") (* ;; "Prompt for login to HOST in a little window near the status window.  If login is successful, then apply AFTERLOGINFN to HOST while the ttydisplaystream is still in the interaction window.") (RESETLST (LET* ((TOPLEFT (OR LAFITESTATUSWINDOWPOSITION (CURSORPOSITION))) (HEIGHT (HEIGHTIFWINDOW (TIMES 5 (FONTPROP DEFAULTFONT (QUOTE HEIGHT))) NIL 8)) (W (CREATEW (MAKEWITHINREGION (create REGION LEFT _ (fetch XCOORD of TOPLEFT) BOTTOM _ (- (fetch YCOORD of TOPLEFT) HEIGHT) WIDTH _ 400 HEIGHT _ HEIGHT)) NIL 8))) (RESETSAVE NIL (LIST (QUOTE CLOSEW) W)) (RESETSAVE (TTYDISPLAYSTREAM W)) (WINDOWADDPROP W (QUOTE CLOSEFN) (FUNCTION (LAMBDA (WINDOW) (\CARET.DOWN) (LET ((P (WINDOWPROP WINDOW (QUOTE PROCESS)))) (if (AND P (NEQ P (THIS.PROCESS))) then (* ; "user explicit close--kill the process") (DEL.PROCESS P))))))) (RESETSAVE (TTY.PROCESS T)) (AND (LOGIN HOST) (OR (NULL AFTERLOGINFN) (CL:FUNCALL AFTERLOGINFN HOST)))))
)

(\LAFITE.REAUTHENTICATE
(LAMBDA (ITEM MENU) (DECLARE (IGNORE ITEM MENU)) (* ; "Edited 18-Jul-88 12:25 by bvm") (* ;; "Reauthenticate using the current login, rather than prompting for anything new.") (\LAFITE.AFTERLOGIN NIL))
)
)

(RPAQQ LAFITEPROFILEVARS
       ((LAFITEDEFAULTHOST&DIR NIL)
        (LAFITE.SIGNATURE NIL)
        (LAFITEBUFFERSIZE 20)
        (LAFITEIFFROMMETHENSEENFLG T)
        [LAFITEMENUFONT (FONTCREATE '(HELVETICA 10 BOLD]
        [LAFITETITLEFONT (FONTCREATE '(HELVETICA 12 BOLD]
        [LAFITEDISPLAYFONT (FONTCREATE '(TIMESROMAN 10]
        [LAFITEFIXEDWIDTHFONT (COND ((EQ (CHARWIDTH (CHARCODE "i")
                                                DEFAULTFONT)
                                         (CHARWIDTH (CHARCODE "W")
                                                DEFAULTFONT))
                                                             (* ; 
                                       "Yes, user has not changed default to a variable width font")
                                     DEFAULTFONT)
                                    (T (FONTCREATE '(GACHA 10]
        (LAFITEHARDCOPYFONT LAFITEDISPLAYFONT)
        [LAFITEBROWSERFONT (FONTCREATE '(GACHA 10]
        [LAFITEMSGICONFONT (FONTCREATE '(HELVETICA 8]
        (LAFITE.FOLDER.MENU.FONT NIL)
        (LAFITEINFO.NAME "Lafite.info")
        (DEFAULTMAILFOLDERNAME "Active.mail")
        (LAFITEMAIL.EXT "mail")
        (LAFITESTATUSWINDOWMINWIDTH 200)
        (LAFITESTATUSWINDOWPOSITION '(735 . 650))
        (LAFITE.DONT.DISPLAY.HEADERS NIL)
        (LAFITE.DONT.FORWARD.HEADERS NIL)
        (LAFITE.DONT.HARDCOPY.HEADERS NIL)
        (LAFITEDEBUGFLG NIL)
        (LAFITEMODEDEFAULT NIL)
        (LAFITESHOWMODEFLG T)
        (LAFITE.USE.ALL.MODES T)))

(RPAQ? LAFITEDEFAULTHOST&DIR NIL)

(RPAQ? LAFITE.SIGNATURE NIL)

(RPAQ? LAFITEBUFFERSIZE 20)

(RPAQ? LAFITEIFFROMMETHENSEENFLG T)

(RPAQ? LAFITEMENUFONT (FONTCREATE '(HELVETICA 10 BOLD)))

(RPAQ? LAFITETITLEFONT (FONTCREATE '(HELVETICA 12 BOLD)))

(RPAQ? LAFITEDISPLAYFONT (FONTCREATE '(TIMESROMAN 10)))

(RPAQ? LAFITEFIXEDWIDTHFONT
       [COND ((EQ (CHARWIDTH (CHARCODE "i")
                         DEFAULTFONT)
                  (CHARWIDTH (CHARCODE "W")
                         DEFAULTFONT))
                                                             (* ; 
                                       "Yes, user has not changed default to a variable width font")
              DEFAULTFONT)
             (T (FONTCREATE '(GACHA 10])

(RPAQ? LAFITEHARDCOPYFONT LAFITEDISPLAYFONT)

(RPAQ? LAFITEBROWSERFONT (FONTCREATE '(GACHA 10)))

(RPAQ? LAFITEMSGICONFONT (FONTCREATE '(HELVETICA 8)))

(RPAQ? LAFITE.FOLDER.MENU.FONT NIL)

(RPAQ? LAFITEINFO.NAME "Lafite.info")

(RPAQ? DEFAULTMAILFOLDERNAME "Active.mail")

(RPAQ? LAFITEMAIL.EXT "mail")

(RPAQ? LAFITESTATUSWINDOWMINWIDTH 200)

(RPAQ? LAFITESTATUSWINDOWPOSITION '(735 . 650))

(RPAQ? LAFITE.DONT.DISPLAY.HEADERS NIL)

(RPAQ? LAFITE.DONT.FORWARD.HEADERS NIL)

(RPAQ? LAFITE.DONT.HARDCOPY.HEADERS NIL)

(RPAQ? LAFITEDEBUGFLG NIL)

(RPAQ? LAFITEMODEDEFAULT NIL)

(RPAQ? LAFITESHOWMODEFLG T)

(RPAQ? LAFITE.USE.ALL.MODES T)

(RPAQQ LAFITERANDOMGLOBALS ((UNSUPPLIEDFIELDSTR "---")
                                (LAFITEBUSYWAITTIME 1000)
                                (LAFITEITEMBUSYSHADE 43605)
                                (LAFITEEOL "
")))

(RPAQ? UNSUPPLIEDFIELDSTR "---")

(RPAQ? LAFITEBUSYWAITTIME 1000)

(RPAQ? LAFITEITEMBUSYSHADE 43605)

(RPAQ? LAFITEEOL "
")

(RPAQQ LAFITEMARKS
       ((SEENMARK (CHARCODE SP))
        (UNSEENMARK (CHARCODE ?))
        (MOVETOMARK (CHARCODE m))
        (FORWARDMARK (CHARCODE f))
        (ANSWERMARK (CHARCODE a))
        (HARDCOPYBATCHMARK (CHARCODE H))
        (HARDCOPYMARK (CHARCODE h))
        (HEARDMARK (CHARCODE @))))

(RPAQ SEENMARK (CHARCODE SP))

(RPAQ UNSEENMARK (CHARCODE ?))

(RPAQ MOVETOMARK (CHARCODE m))

(RPAQ FORWARDMARK (CHARCODE f))

(RPAQ ANSWERMARK (CHARCODE a))

(RPAQ HARDCOPYBATCHMARK (CHARCODE H))

(RPAQ HARDCOPYMARK (CHARCODE h))

(RPAQ HEARDMARK (CHARCODE @))

(RPAQQ LAFITECOMMANDMENUITEMS (("Browse" '\LAFITE.BROWSE 
                                          "Browse a mail file; MIDDLE for subcommands")
                                   ("Send Mail" '\LAFITE.MESSAGEFORM 
                                      "Open a message composition window; MIDDLE for choice of forms"
                                          )
                                   ("Quit" '\LAFITE.QUIT 
                                          "Update and close all mail files and stop Lafite")))

(RPAQQ LAFITEUPDATEMENUITEMS
       (("Do Hardcopy Only" '\LAFITE.HARDCOPYONLY.PROC 
               "Will print batched hardcopy but not update file")
        ("Write out changes only" '\LAFITE.UPDATE.PROC 
               "Will update physical file to reflect new marks and deletions")
        ("Update table of contents only" (FUNCTION \LAFITE.UPDATE.PROC)
               "Write table of contents file to speed next browse of this folder")
        ("Expunge deleted messages" '\LAFITE.EXPUNGE.PROC 
               "Will rewrite mail file, expunging all deleted messages")
        ("Write changes in sorted order" '\LAFITE.EXPUNGE.PROC "Will rewrite mail file so that the messages are permanently stored in the order in which they now appear in the browser."
               )
        ("Expunge & Write out changes (sorted)" '\LAFITE.EXPUNGE.PROC "Will rewrite mail file, expunging deleted messages and writing writing the rest in the order in which they now appear in the browser."
               )
        ("Just close" '\LAFITE.FINISH.UPDATE "Just close the window - don't touch the mail file.")
        ("Just shrink" '\LAFITE.FINISH.UPDATE "Just shrink the window - don't touch the mail file.")))

(RPAQQ LAFITESUBQUITMENUITEMS
       (("Quit" '\LAFITE.QUIT "Turn Lafite off")
        ("Restart" '\LAFITE.RESTART "Turn Lafite off then back on")
        ("Login" '\LAFITE.LOGIN 
               "Change the global username/password and restart Lafite with the new user."
               (SUBITEMS ("Just re-authenticate" '\LAFITE.REAUTHENTICATE 
                                "Re-authenticate currently logged-in user.")
                      ("Login without restarting" '\LAFITE.LOGIN.NORESTART 
                 "Change the global login but don't restart Lafite (keep the same folders open, etc)"
                             )
                      ("NS Login" '\NSMAIL.LOGIN "Change the name and/or password for NS operation.")
                      ))
        ("Recache" 'LAFITE.COMPUTE.CACHED.VARS 
               "Make Lafite recompute cached information based on current variable settings")
        ("Server trace" 'LAFITE.TOGGLE.SERVER.TRACE "Change setting of *NSMAIL-TRACE-SERVERS*")))

(RPAQQ ANOTHERFOLDERMENUITEM ("** Other Folder **" '%##ANOTHERFILE## 
                                        "You will be asked to specify another mail filename"))

(RPAQ? LAFITESTATUSWINDOW )

(RPAQ? \ACTIVELAFITEFOLDERS )

(RPAQ? \LAFITE.TEMPFILES )

(RPAQ? \LAFITE.MODE.CHOICES )

(RPAQ? LAFITESUBQUITMENU )

(ADDTOVAR LAFITEMENUVARS LAFITESUBQUITMENU)

(RPAQ? \LAFITE.ACTIVE )

(RPAQ? \LAFITE.READY )

(RPAQ? \LAFITEDEFAULTHOST&DIR )

(RPAQ? \LAFITE.ACTIVE.MODES )

(RPAQ? \LAFITE.CURRENT.USER )

(RPAQ? LAFITE.USER.INFO )

(RPAQ? *LAFITE-WELL-KNOWN-MODES* )

(RPAQ? *LAFITE-LOGGING-IN* )

(ADDTOVAR \SYSTEMCACHEVARS \LAFITE.READY \LAFITE.ACTIVE.MODES)

(ADDTOVAR LAFITE.PERSONAL.VARS LAFITEDEFAULTHOST&DIR LAFITE.SIGNATURE)
(DEFINEQ

(LAFITE.AROUNDEXIT
(LAMBDA (EVENT) (* ; "Edited  9-May-88 15:57 by bvm") (SELECTQ EVENT ((BEFORELOGOUT) (RESETLST (for FOLDER in \ACTIVELAFITEFOLDERS when (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of FOLDER) T T) do (\LAFITE.CLOSE.FOLDER FOLDER T))) (SETQ \LAFITE.ACTIVE.MODES NIL)) ((AFTERLOGOUT AFTERSAVEVM AFTERSYSOUT AFTERMAKESYS) (COND ((EQ \LAFITE.ACTIVE T) (\LAFITE.REINITIALIZING) (\LAFITE.AFTERLOGIN) (* ; "Check for changed user") (RESTART.PROCESS (QUOTE LAFITEMAILWATCH)) (\LAFITE.MARK.FOLDERS.OBSOLETE)))) NIL))
)

(\LAFITE.MARK.FOLDERS.OBSOLETE
(LAMBDA NIL (* ; "Edited  7-Jun-88 16:14 by bvm") (* ;;; "On returning from LOGOUT check to see that all the mailfiles are in a consistence state -- the user might have run Laurel and screwed up Lafite's data, or run Lafite from another machine") (COND ((AND \ACTIVELAFITEFOLDERS (NOT \LAFITE.READY)) (WITH.MONITOR \LAFITE.BROWSELOCK (COND ((NOT \LAFITE.READY) (SETQ \ACTIVELAFITEFOLDERS (for FOLDER in \ACTIVELAFITEFOLDERS when (COND ((NULL (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER)) (\LAFITE.CLOSE.FOLDER FOLDER T) (* ; "Not really active, forget it") NIL) (T (* ; "Mark all folders as needing checking") (if (EQ (fetch (MAILFOLDER BROWSERSTATUS) of FOLDER) LAS.READY) then (replace (MAILFOLDER BROWSERSTATUS) of FOLDER with LAS.LOGGED.OUT)) T)) collect FOLDER)) (\LAFITE.PROCESS (LIST (FUNCTION \LAFITE.CHECK.FOLDERS)) (QUOTE LAFITE.CHECK) T T)))) (SETQ \LAFITE.READY T))))
)

(\LAFITE.CHECK.FOLDERS
(LAMBDA NIL (* ; "Edited 15-Dec-87 17:48 by bvm:") (* ;; "Background task that goes around checking that everyone's ok.") (\LAFITE.READ.PROFILE T) (* ; "Get any changes to profile that happened while logged out.") (for FOLDER in \ACTIVELAFITEFOLDERS when (EQ (fetch (MAILFOLDER BROWSERSTATUS) of FOLDER) LAS.LOGGED.OUT) do (ERSETQ (\LAFITE.ASSURE.FOLDER.READY FOLDER))))
)

(\LAFITE.ASSURE.FOLDER.READY
(LAMBDA (FOLDER) (* ; "Edited 15-Oct-87 14:57 by bvm:") (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of FOLDER) (if (EQ (fetch (MAILFOLDER BROWSERSTATUS) of FOLDER) LAS.LOGGED.OUT) then (* ; "Open and close the file.  The opening code will take care of interesting conditions.") (PROG1 (\LAFITE.OPEN.FOLDER FOLDER (QUOTE INPUT) NIL) (\LAFITE.CLOSE.FOLDER FOLDER T)) else T)))
)

(\LAFITE.AFTERLOGIN
(LAMBDA (HOST USER) (* ; "Edited 22-Aug-88 16:38 by bvm") (* ;; "Called when LOGIN gets new info.  If HOST = NIL, this is the global login, which means we should get new data") (COND ((AND (NULL HOST) (NOT *LAFITE-LOGGING-IN*)) (LAFITECLEARCACHE) (LET ((*LAFITE-LOGGING-IN* T) (OLDUSER (CAR \LAFITE.CURRENT.USER)) NEWUSER OLDDATA NEWDATA) (* ; "Compute new current user") (if (NOT (STRING-EQUAL OLDUSER (SETQ NEWUSER (LAFITE.USER.NAME.FROM.LOGIN NIL T)))) then (* ; "Logged in user changed.  Clear all those %"personal%" variables that would be affected") (SETQ OLDDATA (CDR (CL:ASSOC OLDUSER LAFITE.USER.INFO :TEST (QUOTE STRING-EQUAL)))) (for VAR in LAFITE.PERSONAL.VARS bind VALUE when (SETQ VALUE (EVALV VAR)) do (if OLDDATA then (LISTPUT OLDDATA VAR VALUE) else (push NEWDATA VAR VALUE)) (SET VAR NIL)) (if NEWDATA then (push LAFITE.USER.INFO (CONS OLDUSER NEWDATA))) (* ;; "Now restore any saved data for new user") (if (SETQ NEWDATA (CL:ASSOC NEWUSER LAFITE.USER.INFO :TEST (QUOTE STRING-EQUAL))) then (for TAIL on (CDR NEWDATA) by (CDDR TAIL) do (SET (CAR TAIL) (CADR TAIL)))))) (AND \LAFITE.ACTIVE (\LAFITE.WAKE.WATCHER)))))
)
)



(* ; "misc utilities")

(DEFINEQ

(LA.RESETSHADE
(LAMBDA (ITEM MENU OLDSHADE) (* ; "Edited 23-Aug-88 12:40 by bvm") (* ;;; "Shades ITEM in MENU to indicate Lafite is busy, leaves something on resetlst to unshade it") (if ITEM then (* ; "Don't do when some program calls without an item") (RESETSAVE (SHADEITEM ITEM MENU LAFITEITEMBUSYSHADE) (LIST (FUNCTION SHADEITEM) ITEM MENU (OR OLDSHADE WHITESHADE)))))
)

(LA.MENU.ITEM
(LAMBDA (FN MENU) (* ; "Edited  7-Jun-88 19:15 by bvm") (* ;; "Returns the menu item executed by FN in MENU.  This beats searching by the label because someone might want to change the label.  Menu items are assumed to be of the form (label 'fn --).  MENU can also be just a list of items.") (find ITEM in (OR (LISTP MENU) (fetch (MENU ITEMS) of MENU)) suchthat (EQ FN (CADR (LISTP (CADR ITEM))))))
)

(NTHMESSAGE
(LAMBDA (MESSAGES N) (* bvm%: " 3-Jan-84 12:11") (ELT MESSAGES N)))

(\LAFITE.MAKE.MSGARRAY
(LAMBDA (SIZE OLDARRAY OLDSIZE) (* bvm%: " 3-Jan-84 11:07") (* ;;; "Creates an array at least large enough to hold SIZE message descriptors.  If OLDARRAY is given, its elements up to OLDSIZE are copied into the new array") (PROG ((NEWARRAY (ARRAY (IMAX (+ SIZE 32) (CEIL SIZE 64)) (QUOTE POINTER)))) (COND (OLDARRAY (for I from 1 to OLDSIZE do (SETA NEWARRAY I (ELT OLDARRAY I))))) (RETURN NEWARRAY)))
)

(\LAFITE.ADDMESSAGES.TO.ARRAY
(LAMBDA (MSGARRAY MESSAGELIST FIRSTMSG# LASTMSG#) (* bvm%: " 3-Jan-84 11:26") (* ;;; "Adds to MSGARRAY the messages from MESSAGELIST, which should be numbered FIRSTMSG# thru LASTMSG# --- returns a new array if MSGARRAY wasn't large enough") (COND ((OR (NULL MSGARRAY) (> LASTMSG# (ARRAYSIZE MSGARRAY))) (SETQ MSGARRAY (\LAFITE.MAKE.MSGARRAY LASTMSG# MSGARRAY (SUB1 FIRSTMSG#))))) (COND ((NEQ (fetch (LAFITEMSG %#) of (CAR MESSAGELIST)) FIRSTMSG#) (SHOULDNT))) (for MSG in MESSAGELIST as MSG# from FIRSTMSG# do (SETA MSGARRAY MSG# MSG)) MSGARRAY)
)

(\MAILFOLDER.DEFPRINT
(LAMBDA (FOLDER STREAM) (* ; "Edited 11-Dec-87 17:22 by bvm:") (\DEFPRINT.BY.NAME FOLDER STREAM (OR (fetch (MAILFOLDER SHORTFOLDERNAME) of FOLDER) (fetch (MAILFOLDER VERSIONLESSFOLDERNAME) of FOLDER)) "Mail Folder on"))
)

(\LAFITEMSG.DEFPRINT
(LAMBDA (MSG STREAM) (* ; "Edited 21-Apr-89 16:07 by bvm") (\DEFPRINT.BY.NAME MSG STREAM (fetch (LAFITEMSG %#) of MSG) "Lafite msg #"))
)

(LA.POSITION.FROM.REGION
(LAMBDA (REG XOFFSET YOFFSET) (* ; "Edited 18-Apr-89 14:43 by bvm") (* ;; "Returns a POSITION at the lower left corner of REG, optionally offset by XOFFSET and YOFFSET (T means entire window dimension).") (create POSITION XCOORD _ (+ (fetch (REGION LEFT) of REG) (SELECTQ XOFFSET (NIL 0) (T (fetch (REGION WIDTH) of REG)) XOFFSET)) YCOORD _ (+ (fetch (REGION BOTTOM) of REG) (SELECTQ YOFFSET (NIL 0) (T (fetch (REGION HEIGHT) of REG)) YOFFSET))))
)

(MAILFOLDERBUSY
(LAMBDA (MAILFOLDER) (* bvm%: "29-Dec-83 18:11") (RESETFORM (CURSOR LA.CROSSCURSOR) (BLOCK LAFITEBUSYWAITTIME)))
)
)
(RPAQ LA.CROSSCURSOR (CURSORCREATE (QUOTE #*(16 16)L@@CN@@GG@@NCHALALCH@NG@@GN@@CL@@CL@@GN@@NG@ALCHCHALG@@NN@@GL@@C
) (QUOTE NIL) 8 8))



(* ; "Low level file functions")

(DEFINEQ

(TOCFILENAME
(LAMBDA (FOLDER) (* ; "Edited  1-May-89 12:58 by bvm") (* ;; "Return the name of the toc file corresponding to mail file FOLDER (a folder object or full file name).") (if FOLDER then (if (type? MAILFOLDER FOLDER) then (SETQ FOLDER (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER))) (PACKFILENAME.STRING (QUOTE EXTENSION) (CONCAT (UNPACKFILENAME.STRING FOLDER (QUOTE EXTENSION)) LAFITETOC.EXT) (QUOTE BODY) FOLDER)))
)

(DELETEMAILFOLDER
(LAMBDA (FOLDER) (* ; "Edited 30-Sep-87 15:48 by bvm:") (* ;;; "deletes the associated files and tells Lafite to forget about that mail file") (PROG ((FULL (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER)) STREAM) (if FULL then (if (AND (SETQ STREAM (fetch (MAILFOLDER FOLDERSTREAM) of FOLDER)) (OPENP STREAM)) then (SETQ FULL (CLOSEF STREAM))) (DELFILE FULL) (DELFILE (TOCFILENAME FULL)) (FORGETMAILFILE (OR (fetch (MAILFOLDER SHORTFOLDERNAME) of FOLDER) (LA.SHORTFILENAME FULL LAFITEMAIL.EXT))))))
)

(\LAFITE.OPEN.FOLDER
(LAMBDA (FOLDER ACCESS IFCHANGED PROMPTFOLDER) (* ; "Edited  5-Aug-93 19:48 by bvm") (* ;;; "For Interlisp-D it's too inefficient to keep opening and closing the mail file so we will keep it open --- If the file wants to be open for INPUT do just that -- it may want to be a read-only mail file -- otherwise open it for BOTH --- FILE is always a fully qualified file name") (* ;;; "IFCHANGED controls what to do if the stream has changed since we last used it.  :IGNORE means don't bother checking, since I don't care.  :OK means rebrowse as necessary, but return the stream.  NIL means return NIL if there was a change, after rebrowsing.") (* ;;; "If PROMPTFOLDER is given, will prompt to confirm creating file if it doesn't exist") (PROG ((*UPPER-CASE-FILE-NAMES* NIL) (STREAM (fetch (MAILFOLDER FOLDERSTREAM) of FOLDER)) (DESIREDACCESS (COND ((EQ ACCESS (QUOTE INPUT)) ACCESS) (T (QUOTE BOTH)))) (RECOG (AND PROMPTFOLDER (QUOTE OLD))) NEWLENGTH NEWDATE NEWESTDATE CHANGED WASOPEN CONDITION) RETRY (COND ((OR (NOT STREAM) (NOT (OPENP STREAM DESIREDACCESS))) (if STREAM then (* ;; "Have to close file to reopen for BOTH.  We do this before date fussing in the hopes that this will force the device to really talk to the server.  It might not help, though--the device's GETFILEINFO might still choose to give us an old cached date.") (COND ((OPENP STREAM) (CLOSEF STREAM))) (replace (MAILFOLDER FOLDERSTREAM) of FOLDER with (SETQ STREAM NIL))) (if (EQ (fetch (MAILFOLDER BROWSERSTATUS) of FOLDER) LAS.OUT.OF.DATE) then (* ; "Shouldn't happen--leftover from rebrowse folder.  Get out of here") (ERROR!)) (CL:MULTIPLE-VALUE-SETQ (STREAM CONDITION) (IGNORE-ERRORS (if (AND (EQ DESIREDACCESS (QUOTE BOTH)) (fetch (MAILFOLDER FOLDEREOFPTR) of FOLDER) (NEQ IFCHANGED :IGNORE)) then (* ;; "Opening for output in general changes the creationdate, so we won't be able to check from the new stream whether the creationdate matches.  So we have to obtain the current creation date without opening for write--hope GETFILEINFO works well enough.  We further assume that nobody changed the file in the brief interval between getting this info and opening for write.  This can be a faulty assumption for devices that are willing to keep a file open even though the server connection went away, but it seems the best we can do.") (SETQ NEWDATE (GETFILEINFO (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER) (QUOTE ICREATIONDATE)))) (* ;; "Finally open it. Ask for big buffers if there's a browser for it.") (\LAFITE.OPENSTREAM (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER) DESIREDACCESS NIL (FUNCTION \LAFITE.EOF) (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER) (QUOTE LAFITE)))) (if CONDITION then (* ; "Failed to open") (if (AND (EQ RECOG (QUOTE OLD)) (TYPEP CONDITION (QUOTE XCL:FILE-NOT-FOUND))) then (* ; "Just couldn't find it, so maybe create it.  If RECOG was NEW, we normally shouldn't be getting this error") (if (LAB.MOUSECONFIRM PROMPTFOLDER "Click LEFT to confirm creating ~A" (fetch (MAILFOLDER SHORTFOLDERNAME) of FOLDER)) then (SETQ RECOG (QUOTE NEW)) (SETQ ACCESS (QUOTE BOTH)) (GO RETRY) else (* ; "Disconfirmed the create request."))) (* ; "Some problem opening file.  Avoid break window--just abort.") (\LAFITE.REPORT.FILE.WONT.OPEN FOLDER CONDITION) (ERROR!)) (if (EQ DESIREDACCESS (QUOTE BOTH)) then (* ;; "So that LA.PRINTCOUNT won't introduce CR's.  Would be nice if PRINTNUM could be given a PRIN3 mode") (LINELENGTH MAX.SMALLP STREAM)) (SETQ NEWLENGTH (GETEOFPTR STREAM)) (SETQ NEWESTDATE (GETFILEINFO STREAM (QUOTE ICREATIONDATE))) (if (OR (EQ IFCHANGED :IGNORE) (NULL (fetch (MAILFOLDER FOLDEREOFPTR) of FOLDER)) (NULL (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER))) then (* ; "first time opened, just store the info") (replace (MAILFOLDER FOLDEREOFPTR) of FOLDER with NEWLENGTH) elseif (OR (NOT (EQL NEWLENGTH (fetch (MAILFOLDER FOLDEREOFPTR) of FOLDER))) (AND (OR NEWDATE (SETQ NEWDATE NEWESTDATE)) (NOT (EQL NEWDATE (fetch (MAILFOLDER FOLDERCREATIONDATE) of FOLDER))))) then (* ; "Folder has changed since we last touched it.  (Use eql instead of = to work around as yet unknown problem where the folder's field is NIL).") (RETURN (\LAFITE.FOLDER.CHANGED FOLDER STREAM DESIREDACCESS IFCHANGED))) (replace (MAILFOLDER FOLDERCREATIONDATE) of FOLDER with (OR NEWESTDATE 0)) (if (EQ (fetch (MAILFOLDER BROWSERSTATUS) of FOLDER) LAS.LOGGED.OUT) then (* ; "We hadn't gotten around to verifying this one after logout yet--well, it's ok now.") (replace (MAILFOLDER BROWSERSTATUS) of FOLDER with LAS.READY)) (replace (MAILFOLDER FOLDERSTREAM) of FOLDER with STREAM))) (RETURN STREAM)))
)

(\LAFITE.REPORT.FILE.WONT.OPEN
(LAMBDA (FOLDER C FILENAME) (* ; "Edited 22-Aug-88 19:25 by bvm") (* ;; "Called to report an error involved in trying to open FILENAME belonging to FOLDER.  C is the condition.  FOLDER can be NIL.") (LAB.FORMAT FOLDER T "Failed~@[ to open ~A because~]: ~A" (if (OR (TYPEP C (QUOTE XCL:FILE-WONT-OPEN)) (TYPEP C (QUOTE XCL:PATHNAME-ERROR)) (TYPEP C (QUOTE XCL:FILE-NOT-FOUND))) then (* ;; "Report handler includes the name already  (In Lyric, file-not-found is a subtype of pathname-error, but not in Medley, where we might instead want to replace both file-wont-open and file-not-found with parent file-error)") NIL elseif FILENAME else (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER)) C))
)

(\LAFITE.FOLDER.CHANGED
(LAMBDA (FOLDER STREAM DESIREDACCESS IFCHANGED) (* ; "Edited  7-Jun-88 17:17 by bvm") (* ;; "Called by LAFITE.OPEN.FOLDER when changed detected.") (if (AND LAFITEDEBUGFLG (EQ (fetch (MAILFOLDER BROWSERSTATUS) of FOLDER) LAS.READY)) then (* ; "This is only funny if it didn't happen after logout.") (HELP "Folder has changed--RETURN to proceed.")) (LET* ((BROWSERWINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER)) (WASOPEN (OPENWP BROWSERWINDOW)) (OLDEOF (fetch (MAILFOLDER FOLDEREOFPTR) of FOLDER)) (NEWEOF (GETEOFPTR STREAM)) MSG LEN ASKFLG HOW) (ALLOW.BUTTON.EVENTS) (* ; "Don't hoard mouse if we got called directly from mouse proc.") (replace (MAILFOLDER BROWSERSTATUS) of FOLDER with LAS.OUT.OF.DATE) (replace (MAILFOLDER FOLDERCREATIONDATE) of FOLDER with (GETFILEINFO STREAM (QUOTE ICREATIONDATE))) (replace (MAILFOLDER FOLDEREOFPTR) of FOLDER with NEWEOF) (replace (MAILFOLDER FOLDERSTREAM) of FOLDER with STREAM) (if (fetch (MAILFOLDER FOLDERNEEDSUPDATE) of FOLDER) then (* ;; "Want to do something more careful here if folder has changes.") (SETQ HOW (if (AND (>= (GETEOFPTR STREAM) (fetch (MAILFOLDER FOLDEREOFPTR) of FOLDER)) (PROGN (* ; "Stream is not shorter than we remember.  See if our current last message is still at the start of a message.") (SETFILEPTR STREAM (fetch (LAFITEMSG BEGIN) of (SETQ MSG (NTHMESSAGE (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER) (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER))))) (LA.READSTAMP STREAM)) (SETQ LEN (LA.READCOUNT STREAM)) (= LEN (fetch (LAFITEMSG MESSAGELENGTH) of MSG))) then (* ;; "Folder contains changes, and folder has apparently only been appended to, or had changes written but not expunge.  Offer to write out current changes before proceeding.") (SETQ ASKFLG T) "but apparently not expunged.  However, you have unsaved changes." else (* ;; "There are unsaved changes, but folder looks expunged--too bad.") "apparently by one or more Expunges, so you can't save your changes."))) (COND ((NOT WASOPEN) (* ; "Want the messages we print to be noticed.") (if (NOT ASKFLG) then (* ; "If we were shrunk, don't bother redisplaying when we expand.") (replace (MAILFOLDER BROWSERUPDATEFROMHERE) of FOLDER with NIL)) (OPENW BROWSERWINDOW))) (LAB.FORMAT FOLDER "~&Folder has changed since you last accessed it...~@[~A~]" HOW) (\LAFITE.REBROWSE.FOLDER FOLDER STREAM ASKFLG (NOT WASOPEN) DESIREDACCESS IFCHANGED)))
)

(\LAFITE.REBROWSE.FOLDER
(LAMBDA (FOLDER STREAM ASK CLOSEFLG DESIREDACCESS IFCHANGED DELETE-TOC) (* ; "Edited 13-Sep-88 18:41 by bvm") (* ;; "Rebrowses FOLDER because something changed.  STREAM is current stream open on folder.  If ASK is true, then we put up a menu asking whether to save current changes (caller verifies that this is interesting to do).  If CLOSEFLG, then folder is shrunk at end.  If DELETE-TOC is true, the TOC is deleted before rebrowsing.  DESIREDACCESS and IFCHANGED are per the change action desired of \LAFITE.OPEN.FOLDER.") (LET ((BROWSERWINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER)) TOCFILE) (if ASK then (* ; "Offer to write out current changes before proceeding.") (PROG NIL RETRY (LAB.FORMAT FOLDER "~%%Do you want to save the changes before fetching the new contents?  ") (CASE (\LAFITE.FOLDER.CHANGED.MENU FOLDER) (:CLOSE (\LAFITE.FINISH.UPDATE BROWSERWINDOW FOLDER :EXIT) (ERROR!)) ((NIL) (* ; "Don't try to save anything")) (T (* ; "Try doing an Update changes only") (if (NOT (OPENP STREAM (QUOTE OUTPUT))) then (CLOSEF STREAM) (CL:MULTIPLE-VALUE-BIND (NEWSTREAM CONDITION) (IGNORE-ERRORS (\LAFITE.OPENSTREAM (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER) (QUOTE BOTH) NIL (FUNCTION \LAFITE.EOF) T (QUOTE LAFITE))) (if CONDITION then (* ; "Failed to open for output") (\LAFITE.REPORT.FILE.WONT.OPEN FOLDER CONDITION) (GO RETRY)) (replace (MAILFOLDER FOLDERSTREAM) of FOLDER with (SETQ STREAM NEWSTREAM)) (replace (MAILFOLDER FOLDERCREATIONDATE) of FOLDER with (GETFILEINFO STREAM (QUOTE ICREATIONDATE))) (replace (MAILFOLDER FOLDEREOFPTR) of FOLDER with (GETEOFPTR STREAM)))) (LAB.FORMAT FOLDER "~%%") (RESETLST (LET ((*UPPER-CASE-FILE-NAMES* NIL) (LAFITEVERIFYFLG T) (*LAFITE-VERIFY-ACTION* (FUNCTION (LAMBDA (MSG FOLDER STREAM) (* ; "This message not where we expected, so punt it") (LAB.FORMAT FOLDER " (Failed on #~D)" (fetch (LAFITEMSG %#) of MSG)) (RETFROM (FUNCTION WRITEFOLDERMARKBYTES))))) (MENU (fetch (MAILFOLDER BROWSERMENU) of FOLDER))) (LA.RESETSHADE (LA.MENU.ITEM (FUNCTION \LAFITE.UPDATE) MENU) MENU) (\LAFITE.UPDATE.FOLDER FOLDER))) (* ; "Take the conservative approach--flush the toc and reparse.") (SETQ DELETE-TOC T))))) (if (AND DELETE-TOC (SETQ TOCFILE (INFILEP (TOCFILENAME (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER))))) then (DELFILE TOCFILE)) (LAB.PROMPTPRINT FOLDER " Rebrowsing...") (CLEARW BROWSERWINDOW) (* ;; "It might be nice to restore the old selection if possible...(save current selection, then call LOADMAILFOLDER, select the same numbered messages, then call LAB.DISPLAYFOLDER)") (if (LAB.LOADFOLDER FOLDER) then (* ; "Succeeded") (COND (CLOSEFLG (\LAFITE.FINISH.UPDATE BROWSERWINDOW FOLDER :SHRINK))) (CASE IFCHANGED (:OK (* ; "Return (possibly new) stream after rebrowse") (\LAFITE.OPEN.FOLDER FOLDER DESIREDACCESS)) ((NIL) (* ; "Return NIL to indicate change") NIL) (T (* ; "Abort operation.") (ERROR!))) else (* ; "Failed.  Don't let anything more happen here") (ERROR!))))
)

(\LAFITE.FOLDER.CHANGED.MENU
(LAMBDA (FOLDER) (* ; "Edited 20-Apr-89 19:35 by bvm") (* ;; "Put up a menu asking whether to save changes before rebrowsing folder.  Returns one of T (save), NIL (don't), or :CLOSE (forget it altogether).") (LET ((REG (WINDOWPROP (fetch (MAILFOLDER BROWSERMENUWINDOW) of FOLDER) (QUOTE REGION))) (ITEMS (QUOTE (("Save current changes first" T "Attempt to write out the unsaved new marks and deletions before rebrowsing the folder.") ("Just rebrowse" NIL "Forget any changes I have made to the browser--just get the new contents.") ("Close Browser" :CLOSE "Close the browser now, forgetting any changes."))))) (MENU (create MENU ITEMS _ ITEMS MENUFONT _ LAFITEMENUFONT CENTERFLG _ T MENUROWS _ 1 ITEMWIDTH _ (MAX (QUOTIENT (fetch (REGION WIDTH) of REG) 3) (STRINGWIDTH (CAAR ITEMS) LAFITEMENUFONT))) (PROGN (* ; "Position menu over the browser's menu") (LA.POSITION.FROM.REGION REG)) T)))
)

(\LAFITE.SET.FOLDER.STREAM
(LAMBDA (FOLDER STREAM) (* ; "Edited 30-Sep-87 16:45 by bvm:") (* ;; "Called from the few places that open/create a stream without going thru lafite.open.folder--stores in FOLDER all the info you like to cache about STREAM.  Returns STREAM") (LET ((FULL (FULLNAME STREAM))) (replace (MAILFOLDER FULLFOLDERNAME) of FOLDER with FULL) (replace (MAILFOLDER SHORTFOLDERNAME) of FOLDER with (LA.SHORTFILENAME FULL LAFITEMAIL.EXT)) (replace (MAILFOLDER FOLDEREOFPTR) of FOLDER with (GETEOFPTR STREAM)) (replace (MAILFOLDER FOLDERCREATIONDATE) of FOLDER with (GETFILEINFO STREAM (QUOTE ICREATIONDATE))) (replace (MAILFOLDER FOLDERSTREAM) of FOLDER with STREAM) STREAM))
)

(\LAFITE.OPENSTREAM
(LAMBDA (FILE ACCESS RECOG EOFFN BIGBUFS TYPE) (* ; "Edited  8-Sep-88 14:27 by bvm") (LET* ((*UPPER-CASE-FILE-NAMES* NIL) (S (OPENSTREAM FILE ACCESS RECOG (BQUOTE ((\,@ (AND EOFFN (BQUOTE ((ENDOFSTREAMOP (\, EOFFN)))))) (\,@ (AND BIGBUFS (BQUOTE ((BUFFERS (\, LAFITEBUFFERSIZE)))))) (\,@ (AND TYPE (BQUOTE ((TYPE (\, TYPE))))))))))) (if (AND TYPE (NEQ TYPE (QUOTE TEXT))) then (* ; "Force the stupid device to have eol CR, no matter what it thought (take that, Maiko)") (SETFILEINFO S (QUOTE EOL) (QUOTE CR))) S))
)

(\LAFITE.CREATE.MENU
(LAMBDA (ITEMS TITLE DONTCHANGEOFFSET) (* ; "Edited 23-Aug-88 18:30 by bvm") (* ;; "Create a Lafite menu using its font.  Optional title.  DONTCHANGEOFFSET inhibits setting the CHANGEOFFSETFLG field. ") (create MENU ITEMS _ ITEMS MENUFONT _ LAFITEMENUFONT TITLE _ TITLE CENTERFLG _ T CHANGEOFFSETFLG _ (NOT DONTCHANGEOFFSET)))
)

(\LAFITE.EOF
  [LAMBDA (STREAM)                                      (* ; "Edited 24-Jun-2021 19:16 by rmk:")

    (* ;; "End of stream op for Lafite mail folders.  Return endless EOLS's so that parses eventually stop.  This is now done in a format independent way. We create a byte stream for the current external format of stream, print an EOL on to it, and then keep returning the bytes that ecode the EOL.  If there is a need for an XCCS charset shift or any other magic, that will show up in the byte stream")

    (LET (BYTESTREAM)
         (IF [NULL (SETQ BYTESTREAM (STREAMPROP STREAM 'BYTESTREAM]
             THEN (SETQ BYTESTREAM (\FORMATBYTESTREAM STREAM NIL)) 
                                                             (* ; "First time, set it up")
                   (STREAMPROP STREAM 'BYTESTREAM BYTESTREAM)
                   (TERPRI BYTESTREAM)
                   (SETFILEPTR BYTESTREAM 0)
                   (BIN BYTESTREAM)
           ELSEIF (BIN BYTESTREAM)
           ELSE 

                 (* ;; "Ran off the end, Reset to make sure it remains consistent with STREAM after it has been reading our bytes")

                 (\FORMATBYTESTREAM STREAM BYTESTREAM)
                 (TERPRI BYTESTREAM)
                 (SETFILEPTR BYTESTREAM 0)
                 (BIN BYTESTREAM])

(\LAFITE.CLOSE.FOLDER
(LAMBDA (MAILFOLDER REALLYP) (* ; "Edited 14-Oct-87 20:18 by bvm:") (* ;;; "If MAILFOLDER is open for output, make sure it is completely written out.  If REALLYP then actually close the file") (LET ((STREAM (fetch (MAILFOLDER FOLDERSTREAM) of MAILFOLDER))) (COND ((AND STREAM (COND ((OPENP STREAM (QUOTE OUTPUT)) (FORCEOUTPUT STREAM T) (* ; "Due to Leaf bug, best to do the FORCEOUTPUT first even if we're really closing it") (replace (MAILFOLDER FOLDERCREATIONDATE) of MAILFOLDER with (GETFILEINFO STREAM (QUOTE ICREATIONDATE))) (* ; "Update creation date in case it's a device where writing to it affects it (always true over savevm for some devices)") REALLYP) (T (AND REALLYP (OPENP STREAM))))) (* ; "Yes, close it for real") (PROG1 (CLOSEF STREAM) (replace (MAILFOLDER FOLDERSTREAM) of MAILFOLDER with NIL))))))
)
)
(DEFINEQ

(\LAFITE.DESCRIBE.FOLDER
(LAMBDA (FOLDER) (* ; "Edited  7-Sep-88 18:55 by bvm") (LAB.FORMAT FOLDER "File ~A contains ~D messages ~@[(~D deleted) ~]in ~D pages." (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER) (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER) (AND (fetch (MAILFOLDER FOLDERNEEDSEXPUNGE) of FOLDER) (for I from 1 to (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER) bind (MESSAGES _ (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER)) count (fetch (LAFITEMSG DELETED?) of (NTHMESSAGE MESSAGES I)))) (FOLDHI (fetch (MAILFOLDER FOLDEREOFPTR) of FOLDER) BYTESPERPAGE)))
)
)



(* ; "Make is easy to load new versions of Lafite")

(DEFINEQ

(LOAD-LAFITE
(LAMBDA (DIR SOURCEP) (* ; "Edited  3-May-89 18:39 by bvm") (* ;; "Load Lafite from a specified directory (or the dir where we find the first file).  If SOURCEP true we load the sources PROP, else the compiled files SYSLOAD.  When loading compiled, we only load files that are noted as already loaded, since those are the only ones that won't be automatically loaded by the FILES command in file LAFITE (which must have been loaded if this function is defined).") (SETQ DIR (MKLIST DIR)) (for FILE in (if SOURCEP then LAFITEFILES else (REMOVE (QUOTE LAFITEDECLS) LAFITEFILES)) bind F when (OR SOURCEP (GET FILE (QUOTE FILEDATES))) collect (if (SETQ F (if SOURCEP then (FINDFILE FILE T DIR) else (FINDFILE-WITH-EXTENSIONS FILE DIR *COMPILED-EXTENSIONS*))) then (SETQ F (LOAD F (COND ((NOT SOURCEP) (QUOTE SYSLOAD)) ((EQ F (QUOTE LAFITEDECLS)) T) (T (QUOTE PROP))))) (if (NULL DIR) then (* ; "Fix dir for subsequent loading") (SETQ DIR (LIST (PACKFILENAME.STRING (QUOTE NAME) NIL (QUOTE EXTENSION) NIL (QUOTE VERSION) NIL (QUOTE BODY) F)))) F else (CONCAT FILE " not found"))))
)
)

(RPAQQ LAFITEFILES (LAFITEDECLS LAFITEBROWSE LAFITECOMMANDS LAFITEFOLDERS LAFITEMAIL LAFITESEND 
                              LAFITESORT LAFITETEDIT NSMAIL OLDNSMAIL NEWNSMAIL LAFITEFIND 
                              MAILSCAVENGE LAFITE))
(DECLARE%: DOEVAL@COMPILE DONTCOPY 

(FILESLOAD (SOURCE)
       LAFITEDECLS)

(DECLARE%: DOEVAL@COMPILE DONTCOPY

(LOCALVARS . T)
)

(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.DEFAULT.MENU LAFITEFILES *COMPILED-EXTENSIONS*)
)


(CL:PROCLAIM '(CL:SPECIAL *LAFITE-LOGGING-IN*))
)

(/DECLAREDATATYPE 'MAILFOLDER
       '(FLAG FLAG FLAG FLAG FLAG (BITS 3)
              POINTER FLAG FLAG FLAG FLAG FLAG FLAG FLAG FLAG POINTER POINTER POINTER POINTER POINTER
              WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD POINTER
              POINTER POINTER POINTER POINTER POINTER POINTER POINTER POINTER POINTER POINTER POINTER
              POINTER POINTER POINTER POINTER POINTER POINTER)
       '((MAILFOLDER 0 (FLAGBITS . 0))
         (MAILFOLDER 0 (FLAGBITS . 16))
         (MAILFOLDER 0 (FLAGBITS . 32))
         (MAILFOLDER 0 (FLAGBITS . 48))
         (MAILFOLDER 0 (FLAGBITS . 64))
         (MAILFOLDER 0 (BITS . 82))
         (MAILFOLDER 2 POINTER)
         (MAILFOLDER 2 (FLAGBITS . 0))
         (MAILFOLDER 2 (FLAGBITS . 16))
         (MAILFOLDER 2 (FLAGBITS . 32))
         (MAILFOLDER 2 (FLAGBITS . 48))
         (MAILFOLDER 1 (FLAGBITS . 0))
         (MAILFOLDER 1 (FLAGBITS . 16))
         (MAILFOLDER 1 (FLAGBITS . 32))
         (MAILFOLDER 1 (FLAGBITS . 48))
         (MAILFOLDER 4 POINTER)
         (MAILFOLDER 6 POINTER)
         (MAILFOLDER 8 POINTER)
         (MAILFOLDER 10 POINTER)
         (MAILFOLDER 12 POINTER)
         (MAILFOLDER 14 (BITS . 15))
         (MAILFOLDER 15 (BITS . 15))
         (MAILFOLDER 16 (BITS . 15))
         (MAILFOLDER 17 (BITS . 15))
         (MAILFOLDER 18 (BITS . 15))
         (MAILFOLDER 19 (BITS . 15))
         (MAILFOLDER 20 (BITS . 15))
         (MAILFOLDER 21 (BITS . 15))
         (MAILFOLDER 22 (BITS . 15))
         (MAILFOLDER 23 (BITS . 15))
         (MAILFOLDER 24 (BITS . 15))
         (MAILFOLDER 25 (BITS . 15))
         (MAILFOLDER 26 (BITS . 15))
         (MAILFOLDER 27 (BITS . 15))
         (MAILFOLDER 28 (BITS . 15))
         (MAILFOLDER 29 (BITS . 15))
         (MAILFOLDER 30 POINTER)
         (MAILFOLDER 32 POINTER)
         (MAILFOLDER 34 POINTER)
         (MAILFOLDER 36 POINTER)
         (MAILFOLDER 38 POINTER)
         (MAILFOLDER 40 POINTER)
         (MAILFOLDER 42 POINTER)
         (MAILFOLDER 44 POINTER)
         (MAILFOLDER 46 POINTER)
         (MAILFOLDER 48 POINTER)
         (MAILFOLDER 50 POINTER)
         (MAILFOLDER 52 POINTER)
         (MAILFOLDER 54 POINTER)
         (MAILFOLDER 56 POINTER)
         (MAILFOLDER 58 POINTER)
         (MAILFOLDER 60 POINTER)
         (MAILFOLDER 62 POINTER)
         (MAILFOLDER 64 POINTER))
       '66)

(/DECLAREDATATYPE 'LAFITEMSG
       '(FLAG FLAG FLAG FLAG FLAG (BITS 3)
              BYTE WORD POINTER POINTER WORD WORD FLAG FLAG FLAG FLAG POINTER FLAG FLAG FLAG FLAG 
              POINTER POINTER POINTER FIXP)
       '((LAFITEMSG 0 (FLAGBITS . 0))
         (LAFITEMSG 0 (FLAGBITS . 16))
         (LAFITEMSG 0 (FLAGBITS . 32))
         (LAFITEMSG 0 (FLAGBITS . 48))
         (LAFITEMSG 0 (FLAGBITS . 64))
         (LAFITEMSG 0 (BITS . 82))
         (LAFITEMSG 0 (BITS . 135))
         (LAFITEMSG 1 (BITS . 15))
         (LAFITEMSG 2 POINTER)
         (LAFITEMSG 4 POINTER)
         (LAFITEMSG 6 (BITS . 15))
         (LAFITEMSG 7 (BITS . 15))
         (LAFITEMSG 4 (FLAGBITS . 0))
         (LAFITEMSG 4 (FLAGBITS . 16))
         (LAFITEMSG 4 (FLAGBITS . 32))
         (LAFITEMSG 4 (FLAGBITS . 48))
         (LAFITEMSG 8 POINTER)
         (LAFITEMSG 8 (FLAGBITS . 0))
         (LAFITEMSG 8 (FLAGBITS . 16))
         (LAFITEMSG 8 (FLAGBITS . 32))
         (LAFITEMSG 8 (FLAGBITS . 48))
         (LAFITEMSG 10 POINTER)
         (LAFITEMSG 12 POINTER)
         (LAFITEMSG 14 POINTER)
         (LAFITEMSG 16 FIXP))
       '18)
(ADDTOVAR SYSTEMRECLST

(DATATYPE MAILFOLDER ((BROWSERPROMPTDIRTY FLAG)
                          (BROWSERPROMPTGREW FLAG)
                          (FOLDERNEEDSUPDATE FLAG)
                          (FOLDERNEEDSEXPUNGE FLAG)
                          (FOLDERBEINGUPDATED FLAG)
                          (BROWSERSTATUS BITS 3)
                          (FULLFOLDERNAME POINTER)
                          (FOLDEROKTOSHRINK FLAG)
                          (FOLDERGETSMAIL FLAG)
                          (FOLDEROUTOFORDER FLAG)
                          (NIL 5 FLAG)
                          (VERSIONLESSFOLDERNAME POINTER)
                          (SHORTFOLDERNAME POINTER)
                          (FOLDERSTREAM POINTER)
                          (MESSAGEDESCRIPTORS POINTER)
                          (FOLDERLOCK POINTER)
                          (%#OFMESSAGES WORD)
                          (TOCLASTMESSAGE# WORD)
                          (BROWSERFONTHEIGHT WORD)
                          (BROWSERFONTASCENT WORD)
                          (BROWSERFONTDESCENT WORD)
                          (BROWSERMAXXPOS WORD)
                          (ORDINALXPOS WORD)
                          (DATEXPOS WORD)
                          (FROMXPOS WORD)
                          (FROMMAXXPOS WORD)
                          (SUBJECTXPOS WORD)
                          (BROWSERDIGITWIDTH WORD)
                          (FIRSTSELECTEDMESSAGE WORD)
                          (LASTSELECTEDMESSAGE WORD)
                          (FIRSTCHANGEDMESSAGE WORD)
                          (CURRENTPROMPTLINE WORD)
                          (CURRENTDISPLAYEDSTREAM POINTER)
                          (BROWSEREXTENT POINTER)
                          (BROWSERORIGIN POINTER)
                          (FOLDERDISPLAYREGION POINTER)
                          (BROWSERWINDOW POINTER)
                          (BROWSERMENU POINTER)
                          (BROWSERMENUWINDOW POINTER)
                          (BROWSERPROMPTWINDOW POINTER)
                          (ORIGINALBROWSERTITLE POINTER)
                          (FOLDERDISPLAYWINDOWS POINTER)
                          (FOLDEREOFPTR POINTER)
                          (DEFAULTMOVETOFILE POINTER)
                          (CURRENTDISPLAYEDMESSAGE POINTER)
                          (BROWSERUPDATEFROMHERE POINTER)
                          (BROWSERLAYOUT POINTER)
                          (FOLDERCREATIONDATE POINTER)
                          (HARDCOPYMESSAGES POINTER)
                          (HARDCOPYSTREAM POINTER)))

(DATATYPE LAFITEMSG ((PARSED? FLAG)
                         (DELETED? FLAG)
                         (SEEN? FLAG)
                         (DATEKNOWN? FLAG)
                         (DATEFETCHED? FLAG)
                         (MODEBITS BITS 3)
                         (MARKCHAR BYTE)
                         (%# WORD)
                         (BEGIN POINTER)
                         (MESSAGELENGTH POINTER)
                         (STAMPLENGTH WORD)
                         (TOCLENGTH WORD)
                         (MESSAGELENGTHCHANGED? FLAG)
                         (SELECTED? FLAG)
                         (MSGFROMMECHECKED? FLAG)
                         (MSGFROMMETRUTH FLAG)
                         (DATE POINTER)
                         (NIL FLAG)
                         (MARKSCHANGEDINFILE? FLAG)
                         (MARKSCHANGEDINTOC? FLAG)
                         (NIL FLAG)
                         (FROM POINTER)
                         (SUBJECT POINTER)
                         (TO POINTER)
                         (IDATE FIXP)))
)
(DEFINEQ

(\LAFITE.GLOBAL.INIT
(LAMBDA NIL (* ; "Edited 21-Apr-89 16:10 by bvm") (* ; "need to do this so you can send a message without 'starting' lafite") (DECLARE (GLOBALVARS BackgroundMenu BackgroundMenuCommands)) (LET ((OLDITEM (OR (CL:ASSOC "SendMail" BackgroundMenuCommands :TEST (QUOTE STRING-EQUAL)) (CL:ASSOC "Mail" BackgroundMenuCommands :TEST (QUOTE STRING-EQUAL)))) (NEWITEM LAFITE.BACKGROUND.ITEM)) (SETQ BackgroundMenuCommands (if OLDITEM then (SUBST NEWITEM OLDITEM BackgroundMenuCommands) else (APPEND BackgroundMenuCommands (LIST NEWITEM)))) (SETQ BackgroundMenu NIL)) (LAFITE.INIT.PARSETABLES) (SETQ \LAFITE.MAILSERVERLOCK (CREATE.MONITORLOCK "Lafite Mail Servers")) (* ; "Used by anyone who calls \LAFITE.GET.USER.DATA or otherwise tries to muck with \LAFITEUSERDATA") (SETQ LAFITEPROFILERDTBL (COPYREADTABLE (QUOTE ORIG))) (* ; "For reading and writing the profile") (DEFPRINT (QUOTE MAILFOLDER) (FUNCTION \MAILFOLDER.DEFPRINT)) (DEFPRINT (QUOTE LAFITEMSG) (FUNCTION \LAFITEMSG.DEFPRINT)) (if \LAFITEMODE then (* ; "There was a mode enabled on entry.  Reset it in case of incompatible mode records") (SETQ \LAFITEMODE (ASSOC (CAR \LAFITEMODE) LAFITEMODELST))) (for MODE in LAFITEMODELST when (LISTP (CDR MODE)) do (\LAFITE.REGISTER.MODE MODE)) NIL)
)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(FILESLOAD LAFITEBROWSE LAFITECOMMANDS LAFITEFOLDERS LAFITESEND LAFITEMAIL LAFITESORT TEDIT 
       LAFITETEDIT LAFITEFIND ATTACHEDWINDOW MAILSCAVENGE)


(CL:PROCLAIM '(GLOBAL ANSWERMARK BROWSERMARKXPOSITION DEFAULTMAILFOLDERNAME 
                     LAFITE.2COLUMN.MENU.MIN.ITEMS LAFITE.AUTO.MOVE.MENU LAFITE.BACKGROUND.ITEM 
                     LAFITE.BROWSER.ICON.PREFERENCE LAFITE.BROWSER.LAYOUTS LAFITE.DISPLAY.SIZE 
                     LAFITE.DONT.DISPLAY.HEADERS LAFITE.DONT.FORWARD.HEADERS 
                     LAFITE.DONT.HARDCOPY.HEADERS LAFITE.DUMMY.HALF.SHADE LAFITE.DUMMY.SHADE 
                     LAFITE.EDITOR.LAYOUTS LAFITE.EDITOR.SIZE LAFITE.EXTRA.DISPLAY.COMMANDS 
                     LAFITE.EXTRA.MOVE.ITEMS LAFITE.FOLDER.ICON LAFITE.FOLDER.MENU.FONT 
                     LAFITE.HOST.ABBREVS LAFITE.LOOKS.SUBCOMMANDS LAFITE.MIDDLE.UPDATE 
                     LAFITE.PROFILE.VARS LAFITE.SIGNATURE LAFITE.USE.ALL.MODES LAFITEBROWSERFONT 
                     LAFITEBROWSERICONMENU LAFITEBROWSERICONMENUITEMS LAFITEBROWSERMENUITEMS 
                     LAFITEBROWSERREGION LAFITEBUFFERSIZE LAFITEBUSYWAITTIME LAFITECLOSEITEM 
                     LAFITECOMMANDMENUITEMS LAFITEDEFAULTHOST&DIR LAFITEDELETEDLINEHEIGHT 
                     LAFITEDISPLAYAFTERDELETEFLG LAFITEDISPLAYFONT LAFITEDISPLAYREGION LAFITEDL.EXT 
                     LAFITEDLDIRECTORIES LAFITEENDOFMESSAGEFONT LAFITEENDOFMESSAGESTR 
                     LAFITEEXTRAMENUFLG LAFITEEXTRAMENUITEMS LAFITEFIXEDWIDTHFONT LAFITEFORM.EXT 
                     LAFITEFORMFILES LAFITEFROMFRACTION LAFITEHARDCOPY.MIN.TOC LAFITEHARDCOPYBATCHFLG
                     LAFITEHARDCOPYBATCHSHADE LAFITEHARDCOPYFONT LAFITEHARDCOPYSEPARATOR 
                     LAFITEIFFROMMETHENSEENFLG LAFITEINFO.NAME LAFITEMAIL.EXT LAFITEMENUFONT 
                     LAFITEMENUVARS LAFITEMINFROMCHARS LAFITEMODEDEFAULT LAFITEMODELST 
                     LAFITEMOVETOCONFIRMFLG LAFITEMSGICONFONT LAFITENEWPAGEFLG LAFITESHOWMODEFLG 
                     LAFITESTATUSWINDOWMINWIDTH LAFITESTATUSWINDOWPOSITION LAFITESUBBROWSEMENUITEMS 
                     LAFITESUBQUITMENUITEMS LAFITETITLEFONT LAFITETOC.EXT LAFITEUPDATEMENUITEMS 
                     MOVETOMARK))

(CL:PROCLAIM '(CL:SPECIAL LAFITEVERIFYFLG))


(\LAFITE.GLOBAL.INIT)

(COND
   ((EQ MAKESYSNAME :LYRIC)
    (FILESLOAD (SYSLOAD)
           NSCHARPATCH)                                      (* ; 
                                                           "Patch to horrid Lyric NS chars bug")
    (MOVD? 'PROMPTFORWORD 'TTYINPROMPTFORWORD NIL T)))
)
(DECLARE%: DOEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 

(ADDTOVAR NLAMA )

(ADDTOVAR NLAML )

(ADDTOVAR LAMA LAFITE)
)
(PUTPROPS LAFITE COPYRIGHT ("Xerox Corporation and Bolt Beranek and Newman Inc." 1982 1983 1984 1985 
1986 1987 1988 1989 1993 1994 2021))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (7140 22186 (LAFITE 7150 . 8461) (LAFITE.ON.FROM.BACKGROUND 8463 . 8834) (\LAFITE.OFF 
8836 . 9220) (\LAFITE.START.PROC 9222 . 10998) (LAFITE.COMPUTE.CACHED.VARS 11000 . 13702) (
\LAFITE.PROCESS 13704 . 14070) (\LAFITE.START.ABORT 14072 . 14264) (\LAFITE.QUIT 14266 . 14508) (
\LAFITE.RESTART 14510 . 14643) (\LAFITE.SUBQUIT 14645 . 15943) (\LAFITE.QUIT.PROC 15945 . 18681) (
\LAFITEDEFAULTHOST&DIR 18683 . 19493) (LAFITEDEFAULTHOST&DIR 19495 . 19665) (MAKELAFITECOMMANDWINDOW 
19667 . 21306) (EXTRACTMENUCOMMAND 21308 . 21556) (DOMAINLAFITECOMMAND 21558 . 21707) (
LAFITE.TOGGLE.SERVER.TRACE 21709 . 22184)) (22261 25229 (LAFITEMODE 22271 . 22751) (\LAFITE.INFER.MODE
 22753 . 23106) (\LAFITE.SHOW.MODE 23108 . 23345) (\LAFITE.MODE.TITLE 23347 . 23632) (
LAFITE.SHOW.MODE.P 23634 . 23875) (LAFITE.ALL.MODES.P 23877 . 24220) (SET.LAFITE.MODE.INTERACTIVELY 
24222 . 24804) (\LAFITE.COMPUTE.MODE.COMMANDS 24806 . 25227)) (26079 27835 (\LAFITE.LOGIN 26089 . 
26471) (\LAFITE.LOGIN.NORESTART 26473 . 26579) (LAFITE.PROMPT.FOR.LOGIN 26581 . 27600) (
\LAFITE.REAUTHENTICATE 27602 . 27833)) (35346 38788 (LAFITE.AROUNDEXIT 35356 . 35894) (
\LAFITE.MARK.FOLDERS.OBSOLETE 35896 . 36812) (\LAFITE.CHECK.FOLDERS 36814 . 37213) (
\LAFITE.ASSURE.FOLDER.READY 37215 . 37625) (\LAFITE.AFTERLOGIN 37627 . 38786)) (38820 41758 (
LA.RESETSHADE 38830 . 39208) (LA.MENU.ITEM 39210 . 39628) (NTHMESSAGE 39630 . 39713) (
\LAFITE.MAKE.MSGARRAY 39715 . 40145) (\LAFITE.ADDMESSAGES.TO.ARRAY 40147 . 40728) (
\MAILFOLDER.DEFPRINT 40730 . 40977) (\LAFITEMSG.DEFPRINT 40979 . 41141) (LA.POSITION.FROM.REGION 41143
 . 41620) (MAILFOLDERBUSY 41622 . 41756)) (41936 58324 (TOCFILENAME 41946 . 42377) (DELETEMAILFOLDER 
42379 . 42899) (\LAFITE.OPEN.FOLDER 42901 . 47516) (\LAFITE.REPORT.FILE.WONT.OPEN 47518 . 48242) (
\LAFITE.FOLDER.CHANGED 48244 . 50648) (\LAFITE.REBROWSE.FOLDER 50650 . 53615) (
\LAFITE.FOLDER.CHANGED.MENU 53617 . 54540) (\LAFITE.SET.FOLDER.STREAM 54542 . 55236) (
\LAFITE.OPENSTREAM 55238 . 55777) (\LAFITE.CREATE.MENU 55779 . 56132) (\LAFITE.EOF 56134 . 57476) (
\LAFITE.CLOSE.FOLDER 57478 . 58322)) (58325 58909 (\LAFITE.DESCRIBE.FOLDER 58335 . 58907)) (58970 
60076 (LOAD-LAFITE 58980 . 60074)) (67787 69064 (\LAFITE.GLOBAL.INIT 67797 . 69062)))))
STOP
