(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)
(FILECREATED "30-Sep-2021 22:58:57" 
{DSK}<USERS>KAPLAN>LOCAL>MEDLEY3.5>GIT-MEDLEY>LIBRARY>LAFITE>LAFITEBROWSE.;1 141883 

      previous date%: "19-Feb-2001 09:26:50" 
{DSK}<USERS>KAPLAN>LOCAL>MEDLEY3.5>GIT-MEDLEY>LIBRARY>LAFITE>LAFITEBROWSE.;1)


(* ; "
Copyright (c) 1984-1989, 1999, 2001, 2021 by Xerox Corporation.
")

(PRETTYCOMPRINT LAFITEBROWSECOMS)

(RPAQQ LAFITEBROWSECOMS
       [(COMS                                                (* ; "BROWSE")
              (FNS \LAFITE.BROWSE \LAFITE.SUBBROWSE \LAFITE.BROWSE.PROC \LAFITE.BROWSE.FORGET 
                   LAFITE.BROWSE.FOLDER \LAFITE.PREPARE.BROWSER \LAFITE.MAYBE.OPEN.FOLDER 
                   LAB.LOADFOLDER LAB.DISPLAYFOLDER LAB.MAKE.INITIAL.SELECTION LAB.CREATEWINDOW 
                   LAB.TITLE.STRING LAB.COMMANDFN LAB.DO.COMMAND LAB.ASSURE.SELECTIONS)
              (FNS BUILD.LAFITE.LAYOUTS \LAFITE.LAYOUT.FROM.WINDOW \LAFITE.MAKE.DUMMY.WINDOWS)
              (VARS LAFITE.DUMMY.SHADE LAFITE.DUMMY.HALF.SHADE)
              (INITVARS (\LAFITE.LAST.FOLDER.NAME))
              (GLOBALVARS \LAFITE.LAST.FOLDER.NAME))
        (COMS                                                (* ; "Browser operations")
              (FNS LAB.SETUP LAB.BUTTONEVENTFN LAB.DO.UNLESS.BUSY LOADMAILFOLDER LAFITE.OBTAIN.FOLDER
                   \LAFITE.FIND.EXISTING.FOLDER \LAFITE.CONFLICTING.OLD.FOLDER LAB.REPAINTFN 
                   LAB.SCROLLFN LAB.RESHAPEFN LAB.CLOSEFN LAB.SHRINKFN LAB.CLOSE/SHRINK LAB.EXPANDFN
                   LAFITEEXTRABROWSERCOMMANDFN))
        [COMS                                                (* ; "Browser selection")
              (FNS LAB.SELECTMESSAGE LAB.CHANGEMARK LA.READ.NEW.MARK YPOS.TO.MESSAGE# 
                   MESSAGE#.TO.YPOS)
              (FNS LA.CONSIDERRANGE LA.DECONSIDERRANGE LA.RECONSIDERRANGE LA.SELECTRANGE 
                   LA.DESELECTRANGE LAB.FIND.SELECTED.MSG LAB.REV.FIND.SELECTED.MSG LA.UNDOSELECTION
                   LA.VERIFY.SELECTION)
              (FNS LAB.COPYBUTTONEVENTFN LAB.SHOW.COPY.SELECTION)
              (DECLARE%: EVAL@COMPILE DONTCOPY (P (CL:PROCLAIM '(CL:SPECIAL *MAILFOLDER* *MESSAGES* 
                                                                       *FIRST-VISIBLE* *LAST-VISIBLE*
                                                                       *TOC-STATE*))
                                                  (CL:PROCLAIM '(GLOBAL LASTMOUSEBUTTONS]
        [COMS                                                (* ; "Browser display")
              (FNS LAB.PROMPTPRINT LAB.FORMAT LAB.MOUSECONFIRM LAB.PRINT.TO.PROMPTWINDOW 
                   LAB.PAGEFULLFN \LAFITE.MAYBE.CLEAR.PROMPT)
              (PROP ARGNAMES LAB.PROMPTPRINT LAB.FORMAT LAB.MOUSECONFIRM)
              (FNS PRINTMESSAGESUMMARY FIRSTVISIBLEMESSAGE LASTVISIBLEMESSAGE LAB.DISPLAYLINES 
                   LAB.EXPOSEMESSAGE LAB.SELECTED.MESSAGES UNSELECTALLMESSAGES SELECTMESSAGE 
                   LAB.GO.TO.MESSAGE MARKMESSAGE LAB.MARKS.CHANGED LA.SHOW.MARK LA.INVERT.MARK.BOX 
                   LA.BLT.MARK.BOX LA.SHOW.DELETION LA.SHOW.SELECTION SEENMESSAGE DELETEMESSAGE 
                   UNDELETEMESSAGE LAB.SET.EXPUNGEABILITY)
              
              (* ;; "PRINTMESSAGESUMMARY.STRING prints From and Subject.  Redefined when MIME is loaded to deal with different character encodings.")

              (P (MOVD? 'PRIN3 'PRINTMESSAGESUMMARY.STRING]
        (COMS                                                (* ; "ICON stuff")
              (FILES ICONW)
              (FNS LAB.ICONFN LAB.ICON.BUTTONEVENTFN)
              (VARS LAFITE.FOLDER.ICON))
        (COMS (INITVARS (LAFITEFROMFRACTION 0.3)
                     (LAFITEMINFROMCHARS 15)
                     (LAFITEVERIFYFLG T)
                     (LAFITEDELETEDLINEHEIGHT 1)
                     (LAFITE.BROWSER.ICON.PREFERENCE))
              (VARS LAFITEBROWSERMENUITEMS LAFITESUBBROWSEMENUITEMS LAFITEBROWSERICONMENUITEMS)
              (INITVARS (LAFITESUBBROWSEMENU)
                     (LAFITEBROWSERICONMENU)
                     (LAFITEEXTRAMENU))
              (GLOBALVARS LAFITESUBBROWSEMENU LAFITEBROWSERICONMENU LAFITEEXTRAMENU)
              [ADDVARS (LAFITEMENUVARS LAFITESUBBROWSEMENU LAFITEBROWSERICONMENU LAFITEEXTRAMENU)
                     (LAFITEEXTRAMENUITEMS ("Describe Folder" '\LAFITE.DESCRIBE.FOLDER 
                                                  "Display some relevant info about this folder"
                                                  (SUBITEMS ("Inspect Folder" 'INSPECT 
                                 "Inspect the MAILFOLDER data structure associated with this browser"
                                                                   ]
              (VARS (BROWSERMARKXPOSITION 8))
              (BITMAPS LA.SELECTION.BITMAP))
        [COMS                                                (* ; "Obsolete")
              (INITVARS (LAFITEBROWSERREGION (CREATEREGION 30 30 575 210]
        (DECLARE%: DOEVAL@COMPILE DONTCOPY (CONSTANTS * TOCSTATES)
               [P (CL:PROCLAIM '(CL:SPECIAL \CURRENTDISPLAYLINE]
               (FILES (SOURCE)
                      LAFITEDECLS)
               (LOCALVARS . T))
        (DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA)
                                                                             (NLAML)
                                                                             (LAMA LAB.MOUSECONFIRM 
                                                                                   LAB.FORMAT 
                                                                                   LAB.PROMPTPRINT])



(* ; "BROWSE")

(DEFINEQ

(\LAFITE.BROWSE
  [LAMBDA (ITEM MENU BUTTON)                             (* ; "Edited 17-Sep-87 19:13 by bvm:")

(* ;;; "Function called by the Browse button on main Lafite window.")

    (LET [(SUBP (EQ BUTTON 'MIDDLE]                          (* ; 
     "Pass the :confirm option to LAFITE.BROWSE.FOLDER to require confirmation on folder creation.")
         (\LAFITE.PROCESS `[,(COND
                                (SUBP (FUNCTION \LAFITE.SUBBROWSE))
                                (T (FUNCTION \LAFITE.BROWSE.PROC)))
                            ',ITEM
                            ',MENU
                            ,@(AND (NOT SUBP)
                                   '(NIL '(:CONFIRM]
                'LAFITEBROWSE])

(\LAFITE.SUBBROWSE
  [LAMBDA (ITEM MENU)                                    (* ; "Edited  3-Sep-87 18:00 by bvm:")
    (PROG [(COMMAND (MENU (.LAFITEMENU. LAFITESUBBROWSEMENU LAFITESUBBROWSEMENUITEMS 
                                 "Browse subcommands"]
          (COND
             (COMMAND (CL:FUNCALL COMMAND ITEM MENU])

(\LAFITE.BROWSE.PROC
  [LAMBDA (ITEM MENU FOLDERNAME OPTIONS)                 (* ; "Edited 10-Sep-87 15:19 by bvm:")
    (LET (MAILFOLDER)
         (COND
            ([NULL (OR FOLDERNAME (SETQ FOLDERNAME (\LAFITE.PROMPTFORFOLDER]
                                                             (* ; 
                                      "From BROWSE command, user aborted by not giving a file name")
             NIL)
            ((LISTP FOLDERNAME)                              (* ; 
    "From LAFITE.  Each element is (foldername browserregion displayregion iconposition . options)")
             (for ITEM in FOLDERNAME do (LAFITE.BROWSE.FOLDER (CAR FOLDERNAME)
                                                           (CDR FOLDERNAME)
                                                           (APPEND (CDDDDR FOLDERNAME)
                                                                  OPTIONS)
                                                           ITEM MENU)))
            (T (LAFITE.BROWSE.FOLDER FOLDERNAME NIL OPTIONS ITEM MENU])

(\LAFITE.BROWSE.FORGET
  [LAMBDA (ITEM MENU)                                    (* ; "Edited 18-Jul-88 11:41 by bvm")
    (LET ((FOLDERNAME (PROMPTFORFILENAME NIL \LAFITE.LAST.FOLDER.NAME)))
         (COND
            (FOLDERNAME (SETQ \LAFITE.LAST.FOLDER.NAME FOLDERNAME)
                                                             (* ; "Save name as typed now in case it fails.  Guy who gets the actual folder will set canonical name here.")
                   (\LAFITE.BROWSE.PROC ITEM MENU FOLDERNAME '(:FORGET :CONFIRM])

(LAFITE.BROWSE.FOLDER
  [LAMBDA (FOLDERNAME LAYOUT OPTIONS ITEM MENU)          (* ; "Edited  3-May-89 19:04 by bvm")

    (* ;; "Browse folder named FOLDERNAME.  LAYOUT is a triple (browserregion iconposition displayregion).  OPTIONS may include :SHRINK, meaning to shrink folder when finished, and :CONFIRM, meaning require confirmation before creating an empty folder.  ITEM, if specified, is a menu item in MENU to shade while the browser is being prepared.")

    (LET [(FOLDER (RESETLST
                      (AND ITEM (LA.RESETSHADE ITEM MENU))
                      (\LAFITE.PREPARE.BROWSER (LA.LONGFILENAME FOLDERNAME LAFITEMAIL.EXT)
                             OPTIONS LAYOUT))]
         (COND
            (FOLDER (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of FOLDER)
                        [if (NULL (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER))
                            then                         (* ; 
                                           "Got a browser, but haven't loaded anything into it yet")
                                  (COND
                                     ((EQMEMB :ACTIVE OPTIONS)
                                      (replace (MAILFOLDER FOLDERGETSMAIL) of FOLDER
                                         with T)))
                                  (LAB.LOADFOLDER FOLDER)
                                  (COND
                                     ((EQMEMB :GETMAIL OPTIONS)
                                      (LAB.DO.COMMAND (fetch (MAILFOLDER BROWSERWINDOW)
                                                             of FOLDER)
                                             (FUNCTION \LAFITE.GETMAIL)))
                                     ((EQMEMB :SHRINK OPTIONS)
                                      (SHRINKW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER])
                   FOLDER])

(\LAFITE.PREPARE.BROWSER
  [LAMBDA (FOLDERNAME OPTIONS LAYOUT)                    (* ; "Edited  7-Sep-88 12:18 by bvm")

    (* ;; "Get a browser on FOLDERNAME.  If there already is one, we just top it, otherwise we create a new one.  Returns the folder object or NIL on failure.  OPTIONS are the options to browse.  LAYOUT is where to put the browser if we have to create it.")

    (SETQ OPTIONS (CONS :BROWSE (MKLIST OPTIONS)))
    (WITH.MONITOR \LAFITE.BROWSELOCK
        (LET ((MAILFOLDER (LAFITE.OBTAIN.FOLDER FOLDERNAME 'INPUT NIL OPTIONS))
              BROWSERWINDOW STREAM)
             (AND MAILFOLDER (COND
                                ((SETQ BROWSERWINDOW (fetch (MAILFOLDER BROWSERWINDOW)
                                                        of MAILFOLDER))
                                                             (* ; "Already have browser")
                                 (COND
                                    ((OPENWP BROWSERWINDOW)
                                     (TOTOPW BROWSERWINDOW))
                                    ((NOT (FMEMB :SHRINK OPTIONS))
                                                             (* ; "Make sure the EXPANDFN runs")
                                     (EXPANDW BROWSERWINDOW)))
                                 T)
                                ((COND
                                    ((SETQ STREAM (fetch (MAILFOLDER FOLDERSTREAM) of 
                                                                                           MAILFOLDER
                                                         ))  (* ; 
                                  "Already have folder open, e.g., from MOVETO, but no browser yet")
                                     (SETFILEINFO STREAM 'BUFFERS LAFITEBUFFERSIZE)
                                     T)
                                    (T (\LAFITE.MAYBE.OPEN.FOLDER MAILFOLDER 'INPUT NIL OPTIONS))
                                    )                        (* ; "Success in opening")
                                 (LAB.CREATEWINDOW MAILFOLDER LAYOUT)))
                  MAILFOLDER)))])

(\LAFITE.MAYBE.OPEN.FOLDER
  [LAMBDA (FOLDER ACCESS PROMPTFOLDER OPTIONS RETURNERRORS)
                                                             (* ; "Edited  8-Sep-88 17:41 by bvm")

    (* ;; "Open FOLDER for indicated access, with the possibility that the file does not yet exist.  If it doesn't, then create it, asking for confirmation if PROMPTFOLDER is supplied (a folder in whose browser to prompt for confirmation, or T for global prompt).  Returns the stream on success.  On failure, returns the condition if RETURNERRORS true, else NIL.")

    (PROG* ((FOLDERNAME (OR (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER)
                            (fetch (MAILFOLDER VERSIONLESSFOLDERNAME) of FOLDER)))
            (OLDP (EQMEMB :OLD OPTIONS))
            (RECOG (AND (OR OLDP PROMPTFOLDER)
                        'OLD))
            STREAM CONDITION)
       RETRY
           

     (* ;; "Just try opening.  If confirmation desired, open only OLD file on first try.")

           [CL:MULTIPLE-VALUE-SETQ (STREAM CONDITION)
                  (IGNORE-ERRORS (\LAFITE.OPENSTREAM FOLDERNAME ACCESS RECOG (FUNCTION \LAFITE.EOF)
                                        (EQMEMB :BROWSE OPTIONS)
                                        'LAFITE]
           (RETURN (if CONDITION
                       then                              (* ; "Failed to open")
                             (if (AND (NEQ RECOG 'NEW)
                                          (NOT OLDP)
                                          (TYPEP CONDITION 'XCL:FILE-NOT-FOUND))
                                 then                    (* ; "Just couldn't find it, so maybe create it.  If RECOG was NEW, we normally shouldn't be getting this error")
                                       (if (OR (NOT (EQMEMB :CONFIRM OPTIONS))
                                                   (LAB.MOUSECONFIRM PROMPTFOLDER 
                                                          "Click LEFT to confirm creating ~A" 
                                                          FOLDERNAME))
                                           then (SETQ RECOG 'NEW)
                                                 (SETQ ACCESS 'BOTH)
                                                 (GO RETRY)
                                         else            (* ; 
                                                           "Disconfirmed the create request.")
                                               NIL)
                               elseif RETURNERRORS
                                 then                    (* ; "Caller wants to know why")
                                       CONDITION
                               else                      (* ; "File wouldn't open for some other reason than just not existing, so report it.  Should probably be a little more discriminating here.")
                                     (\LAFITE.REPORT.FILE.WONT.OPEN (AND (NEQ PROMPTFOLDER T)
                                                                         PROMPTFOLDER)
                                            CONDITION FOLDERNAME)
                                     NIL)
                     else (\LAFITE.SET.FOLDER.STREAM FOLDER STREAM) 
                                                             (* ; "Notice name fields and such")
                           STREAM])

(LAB.LOADFOLDER
  [LAMBDA (MAILFOLDER)                                   (* ; "Edited 13-Sep-88 17:42 by bvm")
    (COND
       ((LOADMAILFOLDER MAILFOLDER)
        (replace (MAILFOLDER FIRSTSELECTEDMESSAGE) of MAILFOLDER with 1)
                                                             (* ; "Nothing selected")
        (replace (MAILFOLDER LASTSELECTEDMESSAGE) of MAILFOLDER with 0)
        (LAB.DISPLAYFOLDER MAILFOLDER)
        MAILFOLDER])

(LAB.DISPLAYFOLDER
  [LAMBDA (FOLDER)                                       (* ; "Edited 28-Apr-89 15:50 by bvm")
    (LET* ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
           (CLIPREGION (DSPCLIPPINGREGION NIL WINDOW))
           MSG)
          (CLEARW WINDOW)
          (LAB.SETUP FOLDER)
          (replace (MAILFOLDER CURRENTDISPLAYEDMESSAGE) of FOLDER with NIL)
          (replace (MAILFOLDER CURRENTDISPLAYEDSTREAM) of FOLDER with NIL)
          (COND
             ((AND (SETQ MSG (LAB.MAKE.INITIAL.SELECTION FOLDER))
                   (< (MESSAGE#.TO.YPOS MSG FOLDER)
                      (fetch (REGION BOTTOM) of CLIPREGION)))
                                                             (* ; 
                                             "Quietly scroll so that selected message is in window")
              (WYOFFSET (TIMES [- (fetch (LAFITEMSG %#) of MSG)
                                  (QUOTIENT (fetch (REGION HEIGHT) of CLIPREGION)
                                         (TIMES 2 (fetch (MAILFOLDER BROWSERFONTHEIGHT)
                                                     of FOLDER]
                               (fetch (MAILFOLDER BROWSERFONTHEIGHT) of FOLDER))
                     WINDOW)))
          (COND
             ((EQ (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER)
                  0)
              (LAB.PROMPTPRINT FOLDER T "Folder is empty."))
             (T (LAB.DISPLAYLINES FOLDER NIL NIL CLIPREGION])

(LAB.MAKE.INITIAL.SELECTION
  [LAMBDA (MAILFOLDER)                                   (* bvm%: "24-Feb-86 16:31")
    (LET ((LASTMSG# (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER))
          (MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of MAILFOLDER))
          MSGDESCRIPTOR I)
         (COND
            ((EQ LASTMSG# 0)
             NIL)
            ((SETQ I (LAB.FIND.SELECTED.MSG MAILFOLDER 1 LASTMSG#))
                                                             (* ; 
                                                           "There are already selected messages")
             (NTHMESSAGE MESSAGES I))
            (T [find old I from 1 to LASTMSG#
                  suchthat (AND [NOT (fetch (LAFITEMSG SEEN?) of (SETQ MSGDESCRIPTOR
                                                                              (NTHMESSAGE MESSAGES I]
                                    (NOT (fetch (LAFITEMSG DELETED?) of MSGDESCRIPTOR]

               (* ;; "Found an unseen, undeleted message.  If we don't find one, the last MSGDESCRIPTOR is the one to select")

               (SELECTMESSAGE MSGDESCRIPTOR MAILFOLDER)
               MSGDESCRIPTOR])

(LAB.CREATEWINDOW
  [LAMBDA (FOLDER LAYOUT TITLE)                          (* ; "Edited 20-Apr-89 16:05 by bvm")

(* ;;; "Build a browser window, which consists of three attached windows: the main BROWSERWINDOW, the BROWSERMENUWINDOW containing the menu, and a BROWSERPROMPTWINDOW for displaying random info")

    (if (NULL TITLE)
        then (SETQ TITLE (if FOLDER
                                 then (LAB.TITLE.STRING FOLDER)
                               else "Dummy Browser")))
    (PROG (BROWSERPROMPTWINDOW BROWSERMENUWINDOW BROWSERMENU BROWSERWINDOW WIDTH HEIGHT MENUREGION 
                 WHOLEREGION)
          (SETQ BROWSERMENU (create MENU
                                   ITEMS _ LAFITEBROWSERMENUITEMS
                                   CENTERFLG _ T
                                   WHENSELECTEDFN _ (if FOLDER
                                                        then (FUNCTION LAB.COMMANDFN)
                                                      else (FUNCTION NILL))
                                   MENUFONT _ LAFITEMENUFONT))
          (SETQ MENUREGION (WINDOWPROP (SETQ BROWSERMENUWINDOW (MENUWINDOW BROWSERMENU))
                                  'REGION))
          (SETQ WIDTH (fetch (REGION WIDTH) of MENUREGION))
          [SETQ HEIGHT (HEIGHTIFWINDOW (FONTPROP LAFITEBROWSERFONT 'HEIGHT]

     (* ;; "Now figure out where to put it all")

          (if LAYOUT
              then                                       (* ; "user tells us all.  If this happens to match one of the default regions, make sure to use it instead (future test is with EQ).")
                    [if (EQ LAYOUT T)
                        then                             (* ; "Requires prompting")
                              (SETQ LAYOUT NIL)
                      else (for SPEC in LAFITE.BROWSER.LAYOUTS
                                  when (EQUAL SPEC LAYOUT) do (RETURN (SETQ LAYOUT SPEC]
            elseif LAFITE.BROWSER.LAYOUTS
              then                                       (* ; 
                                                       "Take the first layout not currently in use")
                    (for SPEC in LAFITE.BROWSER.LAYOUTS
                       unless (for OPEN in \ACTIVELAFITEFOLDERS
                                     thereis (EQ (fetch (MAILFOLDER BROWSERLAYOUT)
                                                        of OPEN)
                                                     SPEC)) do (RETURN (SETQ LAYOUT SPEC)))
            elseif (AND LAFITEBROWSERREGION (for OPEN in \ACTIVELAFITEFOLDERS
                                                   never (fetch (MAILFOLDER BROWSERWINDOW)
                                                                of OPEN)))
              then                                       (* ; 
               "For backward compatibility: if there are no open browsers, use LAFITEBROWSERREGION")
                    (SETQ LAYOUT (LIST LAFITEBROWSERREGION NIL LAFITEDISPLAYREGION)))
          [COND
             ((SETQ WHOLEREGION (LISTP (CAR LAYOUT)))
              [COND
                 ((> (fetch (REGION WIDTH) of WHOLEREGION)
                     WIDTH)                                  (* ; 
                                             "Only use specified region width if it is wide enough")
                  (SETQ WIDTH (fetch (REGION WIDTH) of WHOLEREGION]
              (SETQ WHOLEREGION (create REGION using WHOLEREGION WIDTH _ WIDTH))
                                                             (* ; 
                                                  "Copy the region so we don't smash user variable")
              )
             (T                                              (* ; "Prompt for region")
                (SETQ WHOLEREGION (GETBOXREGION WIDTH (TIMES HEIGHT 9)
                                         NIL NIL NIL (CONCAT "Specify region for " TITLE]
          [replace (REGION HEIGHT) of WHOLEREGION with (- (fetch (REGION HEIGHT)
                                                                         of WHOLEREGION)
                                                                      (+ HEIGHT (fetch
                                                                                 (REGION HEIGHT)
                                                                                   of MENUREGION]
                                                             (* ; 
                "Shrink user-supplied region by the combined heights of the menu and prompt window")
          (SETQ BROWSERWINDOW (CREATEW WHOLEREGION TITLE))
          (ATTACHWINDOW BROWSERMENUWINDOW BROWSERWINDOW 'TOP 'JUSTIFY)
          (DSPFONT LAFITEBROWSERFONT BROWSERWINDOW)
          (SETQ BROWSERPROMPTWINDOW (GETPROMPTWINDOW BROWSERWINDOW 1 LAFITEBROWSERFONT))
          (CLEARW BROWSERPROMPTWINDOW)                       (* ; 
                                          "Get the xy set correctly for the actual font being used")
          (LINELENGTH MAX.SMALLP BROWSERPROMPTWINDOW)        (* ; "Make LINELENGTH ignored -- we try not to overflow window anyway, and the LINELENGTH is no good for variable width font")
          (if FOLDER
              then                                       (* ; 
                                      "MAILFOLDER = NIL is used by dummy routine to set up regions")
                    [WINDOWADDPROP BROWSERPROMPTWINDOW 'RESHAPEFN (FUNCTION (LAMBDA (W)
                                                                              (LINELENGTH MAX.SMALLP
                                                                                     W]
                    (WINDOWADDPROP BROWSERPROMPTWINDOW 'RESHAPEFN (FUNCTION RESHAPEBYREPAINTFN)) 
                                                             (* ; 
                       "Adding our own reshapefn overrode the default, so add the default back in.")
                    (WINDOWPROP BROWSERPROMPTWINDOW 'PAGEFULLFN (FUNCTION LAB.PAGEFULLFN))
                    (replace (MAILFOLDER ORIGINALBROWSERTITLE) of FOLDER with TITLE)
                    (WINDOWPROP BROWSERWINDOW 'MAILFOLDER FOLDER)
                    (WINDOWPROP BROWSERWINDOW 'SCROLLFN (FUNCTION LAB.SCROLLFN))
                    (replace (MAILFOLDER BROWSERWINDOW) of FOLDER with BROWSERWINDOW)
                    (replace (MAILFOLDER BROWSERMENUWINDOW) of FOLDER with 
                                                                                    BROWSERMENUWINDOW
                           )
                    (replace (MAILFOLDER BROWSERMENU) of FOLDER with BROWSERMENU)
                    (replace (MAILFOLDER BROWSERPROMPTWINDOW) of FOLDER with 
                                                                                  BROWSERPROMPTWINDOW
                           )
                    (replace (MAILFOLDER FOLDERDISPLAYREGION) of FOLDER with (CADDR
                                                                                          LAYOUT))
                    (replace (MAILFOLDER BROWSERLAYOUT) of FOLDER with LAYOUT)
                    (WINDOWPROP BROWSERWINDOW 'REPAINTFN (FUNCTION LAB.REPAINTFN))
                    (WINDOWPROP BROWSERWINDOW 'ICONFN (FUNCTION LAB.ICONFN))
                    (WINDOWPROP BROWSERWINDOW 'ICONPOSITION (CADR LAYOUT))
                    (WINDOWPROP BROWSERWINDOW 'BUTTONEVENTFN (FUNCTION LAB.BUTTONEVENTFN))
                    (WINDOWPROP BROWSERWINDOW 'RIGHTBUTTONFN (FUNCTION LAB.BUTTONEVENTFN))
                    (WINDOWPROP BROWSERWINDOW 'COPYBUTTONEVENTFN (FUNCTION LAB.COPYBUTTONEVENTFN)) 
                                                             (* ; 
                                              "make sure Lafite has the first CLOSEFN and SHRINKFN")
                    (WINDOWADDPROP BROWSERWINDOW 'CLOSEFN (FUNCTION LAB.CLOSEFN)
                           T)
                    (WINDOWADDPROP BROWSERWINDOW 'SHRINKFN (FUNCTION LAB.SHRINKFN)
                           T)
                    (WINDOWADDPROP BROWSERWINDOW 'RESHAPEFN (FUNCTION LAB.RESHAPEFN)))
          (RETURN BROWSERWINDOW])

(LAB.TITLE.STRING
  [LAMBDA (FOLDER)                                       (* ; "Edited 24-Oct-88 18:07 by bvm")

    (* ;; "Returns string to be used for FOLDER's browser's title.  It is arranged to convey as much info as possible before it falls off the right edge of the window.")

    (LET* ((DEST (fetch (MAILFOLDER DEFAULTMOVETOFILE) of FOLDER))
           (FIELDS (UNPACKFILENAME.STRING (fetch (MAILFOLDER FULLFOLDERNAME) of FOLDER)))
           (BODY (FMEMB 'NAME FIELDS)))
          (RPLACD (NLEFT FIELDS 1 BODY))                     (* ; 
                                                      "detach name.ext;version from host/directory")
          (CONCAT "Browsing " (if (STRING-EQUAL (LISTGET BODY 'EXTENSION)
                                             LAFITEMAIL.EXT)
                                  then                   (* ; "Just the name field will do")
                                        (LISTGET BODY 'NAME)
                                else (CL:APPLY (FUNCTION PACKFILENAME.STRING)
                                                BODY))
                 (if DEST
                     then (CONCAT " (Move To: " (fetch (MAILFOLDER SHORTFOLDERNAME)
                                                       of DEST)
                                     ")")
                   else "")
                 " on "
                 (if (U-CASEP (SETQ FIELDS (CL:APPLY (FUNCTION PACKFILENAME.STRING)
                                                      FIELDS)))
                     then (CL:STRING-CAPITALIZE FIELDS)
                   else                                  (* ; "Leave the capitalization alone")
                         FIELDS])

(LAB.COMMANDFN
  [LAMBDA (ITEM MENU KEY)                                (* ; "Edited 18-Jul-88 11:41 by bvm")
    (OR \LAFITE.READY (\LAFITE.MARK.FOLDERS.OBSOLETE))
    (LET ((MENUW (WFROMMENU MENU))
          WINDOW FOLDER)
         (AND MENUW (SETQ WINDOW (WINDOWPROP MENUW 'MAINWINDOW))
              (SETQ FOLDER (WINDOWPROP WINDOW 'MAILFOLDER))
              (fetch (MAILFOLDER BROWSERREADY) of FOLDER)
              (CL:FUNCALL (EXTRACTMENUCOMMAND ITEM)
                     WINDOW FOLDER ITEM MENU KEY])

(LAB.DO.COMMAND
  [LAMBDA (WINDOW ITEM/FN MENU KEY)                      (* ; "Edited 18-Jul-88 11:41 by bvm")

    (* ;; "Runs some browser command--variant on LAB.COMMANDFN to be called programmatically.  If ITEM/FN is a function name, we get the real item and MENU from the window.")

    (OR \LAFITE.READY (\LAFITE.MARK.FOLDERS.OBSOLETE))
    (LET [(FOLDER (WINDOWPROP WINDOW 'MAILFOLDER]
         (AND FOLDER (fetch (MAILFOLDER BROWSERREADY) of FOLDER)
              (CL:FUNCALL (if (LITATOM ITEM/FN)
                              then (PROG1 ITEM/FN
                                           (OR MENU (SETQ MENU (fetch (MAILFOLDER BROWSERMENU)
                                                                  of FOLDER)))
                                           (SETQ ITEM/FN (LA.MENU.ITEM ITEM/FN MENU)))
                            else (EXTRACTMENUCOMMAND ITEM/FN))
                     WINDOW FOLDER ITEM/FN MENU KEY])

(LAB.ASSURE.SELECTIONS
  [LAMBDA (MAILFOLDER)                                   (* bvm%: " 3-Feb-86 14:44")
    (COND
       ((IGREATERP (fetch (MAILFOLDER FIRSTSELECTEDMESSAGE) of MAILFOLDER)
               (fetch (MAILFOLDER LASTSELECTEDMESSAGE) of MAILFOLDER))
        (LAB.PROMPTPRINT MAILFOLDER T "No messages selected.")
        T])
)
(DEFINEQ

(BUILD.LAFITE.LAYOUTS
  [LAMBDA NIL                                            (* ; "Edited 23-Nov-87 16:48 by bvm:")
    (LET (DUMMYWINDOWS)
         (CL:UNWIND-PROTECT
             (PROG ((ICONBM (fetch (TITLEDICON ICON) of LAFITE.FOLDER.ICON))
                    (N 0)
                    W MAILFOLDER LAYOUTS LAYOUT CURRENT OLDLAYOUTS POS)
                   (if (AND (LISTP LAFITE.BROWSER.LAYOUTS)
                                (CL:Y-OR-N-P 
                             "Do you wish to retain the ~D browser specifications you already have? "
                                       (LENGTH LAFITE.BROWSER.LAYOUTS)))
                       then (SETQ OLDLAYOUTS LAFITE.BROWSER.LAYOUTS)
                             [for LAYOUT in OLDLAYOUTS
                                do (for FOLDER in \ACTIVELAFITEFOLDERS
                                          when (EQ (fetch (MAILFOLDER BROWSERLAYOUT)
                                                          of FOLDER)
                                                       LAYOUT)
                                          do (add N 1)
                                                (RETURN (CL:FORMAT T 
                                                               "Retaining layout in use by ~A.~%%"
                                                               (fetch (MAILFOLDER SHORTFOLDERNAME
                                                                                 ) of FOLDER)))
                                          finally        (* ; 
                                            "Display dummy browser and icon to aid in positioning.")
                                                [SETQ W (LAB.CREATEWINDOW NIL LAYOUT
                                                               (CONCAT "Sample Browser "
                                                                      (add N 1]
                                                (push DUMMYWINDOWS (\LAFITE.MAKE.DUMMY.WINDOWS
                                                                        W LAYOUT N]
                             (SETQ LAYOUTS (REVERSE OLDLAYOUTS)))
                   (CL:FORMAT T "Click in preference order in each browser or browser icon whose current layout you wish to include; click in background to finish~%%"
                          )
                   (while (SETQ W (WHICHW (GETPOSITION)))
                      do (if [AND [NOT (SETQ MAILFOLDER (WINDOWPROP W 'MAILFOLDER]
                                          (OR [NOT (SETQ W (WINDOWPROP W 'ICONFOR]
                                              (NOT (SETQ MAILFOLDER (WINDOWPROP W 'MAILFOLDER]
                                 then (CL:FORMAT T 
                                             "That's not a Lafite browser window/icon; try again.~%%"
                                                 )
                               elseif (OR (MEMB (fetch (MAILFOLDER BROWSERLAYOUT)
                                                       of MAILFOLDER)
                                                    OLDLAYOUTS)
                                              (MEMBER (SETQ LAYOUT (\LAFITE.LAYOUT.FROM.WINDOW
                                                                    W MAILFOLDER ICONBM))
                                                     LAYOUTS))
                                 then (CL:FORMAT T 
                                         "You have already included that browser's specification.~%%"
                                                 )
                               else                      (* ; 
                                                           "It's a Lafite browser window or icon.")
                                     (push LAYOUTS LAYOUT)
                                     (CL:FORMAT T "Browser for ~A noted.~%%" (fetch (MAILFOLDER
                                                                                         
                                                                                      SHORTFOLDERNAME
                                                                                         )
                                                                                of MAILFOLDER))
                                     (add N 1)))
                   (while (OR (NULL LAYOUTS)
                                  (MENU (create MENU
                                               ITEMS _ '(("Specify another browser" T)
                                                         ("Finish" 'NIL))
                                               MENUFONT _ LAFITEMENUFONT
                                               CENTERFLG _ T)))
                      do [SETQ W (LAB.CREATEWINDOW NIL T (CONCAT "Sample Browser "
                                                                        (add N 1]
                            (push DUMMYWINDOWS (\LAFITE.MAKE.DUMMY.WINDOWS W
                                                          (SETQ LAYOUT (\LAFITE.LAYOUT.FROM.WINDOW
                                                                        W NIL ICONBM))
                                                          N))
                            (push LAYOUTS LAYOUT))
                   (RETURN (if (AND LAYOUTS (MOUSECONFIRM 
                                 "Click LEFT to confirm setting LAFITEBROWSERLAYOUTS to these values"
                                                       T T T))
                               then (/SETTOPVAL 'LAFITE.BROWSER.LAYOUTS (REVERSE LAYOUTS))
                                     (MARKASCHANGED 'LAFITE.BROWSER.LAYOUTS 'VARS)
                                     LAFITE.BROWSER.LAYOUTS)))

             (* ;; "Cleanup dummy windows put up earlier")

             (for X in DUMMYWINDOWS bind TMP
                do (CLOSEW X)
                      (if (SETQ TMP (WINDOWPROP X 'DUMMY.ICON))
                          then (CLOSEW TMP))
                      (if (SETQ TMP (WINDOWPROP X 'DUMMY.DISPLAY))
                          then (CLOSEW TMP))))])

(\LAFITE.LAYOUT.FROM.WINDOW
  [LAMBDA (W FOLDER ICONBM)                              (* ; "Edited 10-Dec-87 17:15 by bvm:")

    (* ;; "Return a browser layout spec corresponding to window W optionally containing FOLDER.")

    (LET ((PW (if (OPENWP W)
                  then (GETPROMPTWINDOW W 1 LAFITEBROWSERFONT)
                else PROMPTWINDOW)))
         (LIST (WINDOWREGION W)
               (if (WINDOWPROP W 'ICONPOSITION)
                 else (CLEARW PW)
                       (CL:FORMAT PW "Specify position for icon.")
                       (PROG1 (GETBOXPOSITION (BITMAPWIDTH ICONBM)
                                     (BITMAPHEIGHT ICONBM))
                              (CLEARW PW)))
               (PROG (CURRENT)
                     [if FOLDER
                         then                            (* ; "Use current values, if known")
                               (RETURN (OR (if (CAR (SETQ CURRENT (fetch (MAILFOLDER 
                                                                                 FOLDERDISPLAYWINDOWS
                                                                                        )
                                                                         of FOLDER)))
                                               then      (* ; 
                                                           "take current primary window region")
                                                     (COPY (WINDOWPROP (CAR CURRENT)
                                                                  'REGION))
                                             elseif (COPY (fetch (MAILFOLDER 
                                                                                FOLDERDISPLAYREGION)
                                                                 of FOLDER)))
                                           (GO PROMPT]
                 PROMPT
                     (CLEARW PW)
                     (CL:FORMAT PW "Specify region for display window")
                     (RETURN (PROG1 (if LAFITE.DISPLAY.SIZE
                                        then (GETBOXREGION (CAR LAFITE.DISPLAY.SIZE)
                                                        (CDR LAFITE.DISPLAY.SIZE)
                                                        NIL NIL)
                                      else (GETREGION))
                                    (CLEARW PW])

(\LAFITE.MAKE.DUMMY.WINDOWS
  [LAMBDA (MAINW LAYOUT N)                               (* ; "Edited 23-Nov-87 16:44 by bvm:")
    (LET (TMP SUBW)
         (DSPFILL NIL LAFITE.DUMMY.SHADE 'REPLACE MAINW)
         (WINDOWPROP MAINW 'SHRINKFN 'DON'T)
         (if (SETQ TMP (CADR LAYOUT))
             then                                        (* ; "An icon position is given")
                   (SETQ SUBW (TITLEDICONW LAFITE.FOLDER.ICON (CONCAT "Icon " N)
                                     LAFITETITLEFONT TMP))
                   (ICONW.SHADE SUBW LAFITE.DUMMY.HALF.SHADE)
                   (WINDOWPROP SUBW 'BUTTONEVENTFN (FUNCTION ICONBUTTONEVENTFN))
                   (WINDOWPROP MAINW 'DUMMY.ICON SUBW))
         (if (SETQ TMP (CADDR LAYOUT))
             then                                        (* ; "A display region is given")
                   (SETQ SUBW (CREATEW TMP (CONCAT "Lafite Display window " N)
                                     LAFITETITLEFONT TMP))
                   (DSPFILL NIL LAFITE.DUMMY.SHADE 'REPLACE SUBW)
                   (WINDOWPROP MAINW 'DUMMY.DISPLAY SUBW))
         MAINW])
)

(RPAQQ LAFITE.DUMMY.SHADE 
                            #*(16 16)@L@HA@@FALD@@DJ@AHF@@@JDH@NFD@@EDD@EDJ@EDJD@@LD@@HD@@HDD@@DJ@@DL)

(RPAQQ LAFITE.DUMMY.HALF.SHADE 
                            #*(16 16)@H@@A@@D@@D@@DB@A@D@@@HDH@DB@@@DDD@A@B@DDHD@@D@@@@D@@H@D@@DJ@@@@)

(RPAQ? \LAFITE.LAST.FOLDER.NAME )
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS \LAFITE.LAST.FOLDER.NAME)
)



(* ; "Browser operations")

(DEFINEQ

(LAB.SETUP
  [LAMBDA (MAILFOLDER)                                   (* bvm%: "31-Jul-84 14:39")
    (PROG ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of MAILFOLDER))
           WIDTH HEIGHT TOTALHEIGHT ASCENT DIGITWIDTH SPACEWIDTH XPOS)
          (CLEARW WINDOW)
          (SETQ LAFITEBROWSERFONT (FONTCREATE LAFITEBROWSERFONT))
          (DSPFONT LAFITEBROWSERFONT WINDOW)
          (DSPRIGHTMARGIN MAX.SMALLP WINDOW)
          (LINELENGTH 10000 WINDOW)
          [replace (MAILFOLDER BROWSERFONTHEIGHT) of MAILFOLDER with
                                                                        (SETQ HEIGHT
                                                                         (FONTPROP LAFITEBROWSERFONT
                                                                                'HEIGHT]
          [replace (MAILFOLDER BROWSERFONTASCENT) of MAILFOLDER with
                                                                        (SETQ ASCENT
                                                                         (FONTPROP LAFITEBROWSERFONT
                                                                                'ASCENT]
          (replace (MAILFOLDER BROWSERFONTDESCENT) of MAILFOLDER with (FONTPROP
                                                                                   LAFITEBROWSERFONT
                                                                                   'DESCENT))
          (replace (MAILFOLDER BROWSERORIGIN) of MAILFOLDER with (+ (DSPYPOSITION NIL 
                                                                                       WINDOW)
                                                                                ASCENT))
          [replace (MAILFOLDER BROWSERMAXXPOS) of MAILFOLDER with (SETQ WIDTH
                                                                               (WINDOWPROP
                                                                                WINDOW
                                                                                'WIDTH]
          (SETQ TOTALHEIGHT (TIMES (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER)
                                   HEIGHT))
          (WINDOWPROP WINDOW 'EXTENT (replace (MAILFOLDER BROWSEREXTENT) of MAILFOLDER
                                        with (create REGION
                                                        LEFT _ 0
                                                        BOTTOM _ (- (fetch (MAILFOLDER 
                                                                                      BROWSERORIGIN)
                                                                       of MAILFOLDER)
                                                                    TOTALHEIGHT)
                                                        WIDTH _ WIDTH
                                                        HEIGHT _ TOTALHEIGHT)))

     (* ;; "Now figure out columns for printing toc entries")

          (SETQ DIGITWIDTH (CHARWIDTH (CHARCODE 9)
                                  LAFITEBROWSERFONT))
          (SETQ SPACEWIDTH (CHARWIDTH (CHARCODE r)
                                  LAFITEBROWSERFONT))
          [replace (MAILFOLDER ORDINALXPOS) of MAILFOLDER with
                                                                  (SETQ XPOS
                                                                   (+ BROWSERMARKXPOSITION
                                                                      (CHARWIDTH (CHARCODE m)
                                                                             LAFITEBROWSERFONT)
                                                                      (LRSH DIGITWIDTH 1]
                                                             (* ; "Message # starts here")
          [replace (MAILFOLDER DATEXPOS) of MAILFOLDER with (add XPOS
                                                                               (+ (TIMES 2 SPACEWIDTH
                                                                                         )
                                                                                  (TIMES 4 DIGITWIDTH
                                                                                         ]
                                                             (* ; 
                                     "Date starts here.  Allow 4 columns of digits plus some space")
          [replace (MAILFOLDER FROMXPOS) of MAILFOLDER
             with (add XPOS (+ (TIMES 2 DIGITWIDTH)
                                       (TIMES 2 SPACEWIDTH)
                                       (CHARWIDTH (CHARCODE -)
                                              LAFITEBROWSERFONT)
                                       (STRINGWIDTH 'MAY LAFITEBROWSERFONT]
                                                             (* ; 
                      "From field starts here.  Allow 3 columns of digits, a month, and some space")
          [replace (MAILFOLDER SUBJECTXPOS) of MAILFOLDER
             with (add XPOS (IMAX (TIMES LAFITEMINFROMCHARS (CHARWIDTH (CHARCODE A)
                                                                           LAFITEBROWSERFONT))
                                          (FIXR (FTIMES LAFITEFROMFRACTION (- WIDTH XPOS]

     (* ;; "Subject field starts here.  Space is divided up between From and Subject so that From field gets LAFITEFROMFRACTION of the available space, but at least LAFITEMINFROMCHARS wide")

          (replace (MAILFOLDER FROMMAXXPOS) of MAILFOLDER with (- XPOS (TIMES 2 
                                                                                          SPACEWIDTH)
                                                                              ))
                                                             (* ; 
                                                   "From field gets truncated beyond this position")
          (replace (MAILFOLDER BROWSERDIGITWIDTH) of MAILFOLDER with DIGITWIDTH])

(LAB.BUTTONEVENTFN
  [LAMBDA (WINDOW)                                       (* ; "Edited 28-Jul-88 17:37 by bvm")
    (TOTOPW WINDOW)
    (COND
       ((INSIDEP (DSPCLIPPINGREGION NIL WINDOW)
               (LASTMOUSEX WINDOW)
               (LASTMOUSEY WINDOW))
        (LAB.DO.UNLESS.BUSY WINDOW (FUNCTION LAB.SELECTMESSAGE)))
       ((LASTMOUSESTATE (ONLY RIGHT))
        (DOWINDOWCOM WINDOW))
       ((LASTMOUSESTATE (ONLY MIDDLE))
        (LAB.DO.UNLESS.BUSY WINDOW (FUNCTION LAFITEEXTRABROWSERCOMMANDFN])

(LAB.DO.UNLESS.BUSY
  [LAMBDA (WINDOW FN ARGUMENT)                           (* ; "Edited  3-Sep-87 18:01 by bvm:")
    (RESETLST
        [PROG [(MAILFOLDER (WINDOWPROP WINDOW 'MAILFOLDER]
              (COND
                 ((AND (fetch (MAILFOLDER BROWSERREADY) of MAILFOLDER)
                       (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
                              T T))
                  (CL:FUNCALL FN WINDOW MAILFOLDER ARGUMENT])])

(LOADMAILFOLDER
  [LAMBDA (FOLDER)                                       (* ; "Edited 10-May-89 12:42 by bvm")

    (* ;; "LAFITEVERSION# is used to keep track of changed in internal datastructures that get written out to Lafite TOC files.  If the datastructures change, then just change the version number to LAFITEVERSION#+1 and the rest of Lafite should adjust appropriately.")

    (replace (MAILFOLDER FOLDEROUTOFORDER) of FOLDER with NIL)
    (replace (MAILFOLDER FOLDERNEEDSUPDATE) of FOLDER with NIL)
                                                             (* ; 
                                                           "Assume ok until we hear otherwise")
    (COND
       ((OR (\LAFITE.READ.TOC.FILE FOLDER)
            (\LAFITE.PARSE.FOLDER FOLDER))
        (LAB.PROMPTPRINT FOLDER " done.")
        [replace (MAILFOLDER FIRSTCHANGEDMESSAGE) of FOLDER
           with (OR (LAB.SET.EXPUNGEABILITY FOLDER)
                        (MAX 1 (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER]
                                                             (* ; "Only %"changed%" messages are deleted ones now, except for possibly the last message in the case where it was truncated.")
        FOLDER])

(LAFITE.OBTAIN.FOLDER
  [LAMBDA (FOLDERNAME ACCESS PROMPTFOLDER OPTIONS)       (* ; "Edited 12-Sep-88 17:42 by bvm")

(* ;;; "Locates a MAILFOLDER on FOLDERNAME, or creates one if there is none.  If the folder is not already on the active list, we will try to open it for ACCESS, or just return NIL if ACCESS is NIL.  If PROMPTFOLDER is supplied, it is a folder (or T for PROMPTWINDOW) indicating focus of attention for prompting for confirmation to create new folder.  OPTIONS may include :FORGET, in which case we don't add this folder name to the set of known folders, or :BROWSE, meaning we plan to browse the folder.")

    (WITH.MONITOR \LAFITE.BROWSELOCK
        [OR
         (for FOLDER in \ACTIVELAFITEFOLDERS when (OR (STRING-EQUAL (fetch
                                                                                 (MAILFOLDER 
                                                                                VERSIONLESSFOLDERNAME
                                                                                        )
                                                                                   of FOLDER)
                                                                         FOLDERNAME)
                                                                  (STRING-EQUAL (fetch
                                                                                 (MAILFOLDER 
                                                                                       FULLFOLDERNAME
                                                                                        )
                                                                                   of FOLDER)
                                                                         FOLDERNAME))
            do                                           (* ; 
                                                  "Found existing folder without sweating too hard")
                  (RETURN FOLDER))
         (AND ACCESS
              (LET* ((UNPACKEDNAME (UNPACKFILENAME.STRING FOLDERNAME))
                     (OLDVERSION (LISTGET UNPACKEDNAME 'VERSION))
                     (VERSIONLESSNAME (PROGN (LISTPUT UNPACKEDNAME 'VERSION NIL)
                                             (PACKFILENAME.STRING UNPACKEDNAME)))
                     SHORTNAME NEWNAME NEWFOLDER OLDFOLDER STREAM)
                    (COND
                       ((AND (NOT (STRING-EQUAL VERSIONLESSNAME FOLDERNAME))
                             (SETQ NEWFOLDER (\LAFITE.FIND.EXISTING.FOLDER VERSIONLESSNAME))
                             (\LAFITE.CONFLICTING.OLD.FOLDER NEWFOLDER FOLDERNAME OLDVERSION))
                                                             (* ; 
       "Found a folder describing a different version--can't have more than one version up at once")
                        NIL)
                       ((NULL (SETQ STREAM
                               (\LAFITE.MAYBE.OPEN.FOLDER (SETQ NEWFOLDER
                                                               (create MAILFOLDER
                                                                      FULLFOLDERNAME _ FOLDERNAME
                                                                      VERSIONLESSFOLDERNAME _ 
                                                                      VERSIONLESSNAME
                                                                      FOLDERLOCK _ (
                                                                                   CREATE.MONITORLOCK
                                                                                    VERSIONLESSNAME))
                                                               )
                                      ACCESS PROMPTFOLDER OPTIONS T)))
                                                             (* ; 
                                               "File not found and user didn't confirm creating it")
                        NIL)
                       ((type? STREAM STREAM)            (* ; 
                                                           "succeeded in opening the new folder.")
                        (PROG ((VERSIONLESSNEW (PACKFILENAME.STRING 'VERSION NIL 'BODY
                                                      (fetch (MAILFOLDER FULLFOLDERNAME)
                                                         of NEWFOLDER)))
                               (SHORTNAME (fetch SHORTFOLDERNAME of NEWFOLDER)))
                              (if (NOT (STRING-EQUAL VERSIONLESSNEW VERSIONLESSNAME))
                                  then                   (* ; "We guessed wrong about the versionless name--having actually opened the file, here's the canonical name")
                                        (if (SETQ OLDFOLDER (\LAFITE.FIND.EXISTING.FOLDER
                                                                 VERSIONLESSNEW))
                                            then         (* ; "it turns out we already had this file open under a different full name.  Close the new one and return the old")
                                                  (\LAFITE.CLOSE.FOLDER NEWFOLDER T)
                                                  (RETURN (AND (NOT (\LAFITE.CONFLICTING.OLD.FOLDER
                                                                     OLDFOLDER FOLDERNAME OLDVERSION)
                                                                    )
                                                               OLDFOLDER))
                                          else (replace (MAILFOLDER VERSIONLESSFOLDERNAME)
                                                      of NEWFOLDER with VERSIONLESSNEW)))
                              (push \ACTIVELAFITEFOLDERS NEWFOLDER)
                              [if (NOT (CL:MEMBER SHORTNAME (CDR LAFITEMAILFOLDERS)
                                                  :TEST
                                                  'STRING-EQUAL))
                                  then                   (* ; "This is a new folder")
                                        (COND
                                           ((EQMEMB :FORGET OPTIONS)
                                                             (* ; 
                                     "Don't remember it, but do set default for next Browse&Forget")
                                            (SETQ \LAFITE.LAST.FOLDER.NAME SHORTNAME))
                                           (T                (* ; "Add to list for menu")
                                              (\LAFITE.NOTICE.FILE SHORTNAME]
                              (RETURN NEWFOLDER)))
                       (T                                    (* ; 
                                   "STREAM is a condition signaled by the attempt to open the file")
                          (if (AND (TYPEP STREAM 'XCL:FILE-WONT-OPEN)
                                       [SETQ OLDFOLDER
                                        (OR (AND (SETQ NEWNAME (XCL:FILE-WONT-OPEN-PATHNAME STREAM))
                                                 [NOT (STRING-EQUAL VERSIONLESSNAME
                                                             (SETQ VERSIONLESSNAME
                                                              (PACKFILENAME.STRING 'VERSION NIL
                                                                     'BODY NEWNAME]
                                                 (\LAFITE.FIND.EXISTING.FOLDER VERSIONLESSNAME))
                                            (AND (SETQ NEWNAME (INFILEP VERSIONLESSNAME))
                                                 [NOT (STRING-EQUAL VERSIONLESSNAME
                                                             (SETQ VERSIONLESSNAME
                                                              (PACKFILENAME.STRING 'VERSION NIL
                                                                     'BODY NEWNAME]
                                                 (\LAFITE.FIND.EXISTING.FOLDER VERSIONLESSNAME]
                                       (NOT (\LAFITE.CONFLICTING.OLD.FOLDER NEWFOLDER FOLDERNAME
                                                   OLDVERSION)))
                              then                       (* ; "Looks like file wouldn't open because we already have it open by a different name.  Return that folder")
                                    OLDFOLDER
                            else                         (* ; "Report the problem")
                                  (\LAFITE.REPORT.FILE.WONT.OPEN PROMPTFOLDER STREAM (OR NEWNAME 
                                                                                         FOLDERNAME))
                                  NIL])])

(\LAFITE.FIND.EXISTING.FOLDER
  [LAMBDA (VERSIONLESSNAME)                              (* ; "Edited 22-Aug-88 17:32 by bvm")

    (* ;; "Returns an existing mail folder object whose versionless name is (case-insensitively) equal to VERSIONLESSNAME, or NIL on failure.")

    (find FOLDER in \ACTIVELAFITEFOLDERS suchthat (STRING-EQUAL (fetch (MAILFOLDER
                                                                                        
                                                                                VERSIONLESSFOLDERNAME
                                                                                        )
                                                                               of FOLDER)
                                                                     VERSIONLESSNAME])

(\LAFITE.CONFLICTING.OLD.FOLDER
  [LAMBDA (NEWFOLDER FOLDERNAME OLDVERSION)              (* ; "Edited 22-Aug-88 18:30 by bvm")

    (* ;; "NEWFOLDER is a folder we found somewhere during the search for FOLDERNAME.  Check that it works, i.e., that it doesn't have a version number that differs from that of FOLDERNAME")

    (COND
       ((NULL OLDVERSION)                                    (* ; 
                                   "User didn't ask for a specific version, so this folder is fine")
        NIL)
       ((OR (fetch (MAILFOLDER BROWSERWINDOW) of NEWFOLDER)
            (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of NEWFOLDER))
        (printout PROMPTWINDOW T "A different version of " FOLDERNAME " is already being browsed." 
               "Multiple versions may not be manipulated at once.")
        T)
       (T                                                    (* ; 
                                       "Not being browsed, so kill it and pretend it never existed")
          (\LAFITE.CLOSE.FOLDER NEWFOLDER T)
          (SETQ \ACTIVELAFITEFOLDERS (DREMOVE NEWFOLDER \ACTIVELAFITEFOLDERS))
          NIL])

(LAB.REPAINTFN
  [LAMBDA (WINDOW REGION)                                (* ; "Edited 28-Apr-89 16:00 by bvm")
    (LET [(FOLDER (WINDOWPROP WINDOW 'MAILFOLDER]
         (AND (NEQ (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER)
                   0)
              (fetch (MAILFOLDER BROWSERREADY) of FOLDER)
              (RESETLST
                  (COND
                     ((OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of FOLDER)
                             T T)
                      (LAB.DISPLAYLINES FOLDER NIL NIL REGION))
                     (T (MAILFOLDERBUSY FOLDER))))])

(LAB.SCROLLFN
  [LAMBDA (WINDOW DX DY CONTINUOUSFLG)                   (* bvm%: " 3-Jan-84 14:53")

(* ;;; "only scroll if can get the monitor lock")

    (RESETLST
        [PROG [(MAILFOLDER (WINDOWPROP WINDOW 'MAILFOLDER]
              (COND
                 ((AND (fetch (MAILFOLDER BROWSERREADY) of MAILFOLDER)
                       (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
                              T T))
                  (SCROLLBYREPAINTFN WINDOW DX DY CONTINUOUSFLG))
                 (T (MAILFOLDERBUSY MAILFOLDER])])

(LAB.RESHAPEFN
  [LAMBDA (WINDOW OLDIMAGEBM OLDREGION)                  (* ; "Edited 28-Apr-89 15:57 by bvm")
    (RESETLST
        (PROG ((FOLDER (WINDOWPROP WINDOW 'MAILFOLDER))
               (REGION (DSPCLIPPINGREGION NIL WINDOW))
               MSG#)
              [COND
                 ((NOT (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of FOLDER)
                              T T))                          (* ; 
                         "Folder is busy, have to wait until it is ready.  But don't tie up mouse!")
                  (ALLOW.BUTTON.EVENTS)
                  (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of FOLDER)
                         NIL T))
                 ((NOT (fetch (MAILFOLDER BROWSERREADY) of FOLDER))
                                                             (* ; "Browser not functional")
                  (RETURN (RESHAPEBYREPAINTFN WINDOW OLDIMAGEBM OLDREGION]
              (SETQ MSG# (FIRSTVISIBLEMESSAGE FOLDER REGION))
              (LAB.SETUP FOLDER)
              (WYOFFSET (ITIMES (SUB1 MSG#)
                               (fetch (MAILFOLDER BROWSERFONTHEIGHT) of FOLDER))
                     WINDOW)
              (LAB.DISPLAYLINES FOLDER MSG# NIL REGION)))])

(LAB.CLOSEFN
  [LAMBDA (BROWSERWINDOW)                                (* ; "Edited 15-Sep-87 17:56 by bvm:")
    (LAB.CLOSE/SHRINK BROWSERWINDOW :CLOSE])

(LAB.SHRINKFN
  [LAMBDA (WINDOW)                                       (* ; "Edited 15-Sep-87 17:56 by bvm:")
    (LAB.CLOSE/SHRINK WINDOW :SHRINK])

(LAB.CLOSE/SHRINK
  [LAMBDA (BROWSERWINDOW FLG)                            (* ; "Edited  7-Jun-88 14:42 by bvm")

    (* ;; "Called from CLOSEFN or SHRINKFN of BROWSERWINDOW with FLG = :CLOSE or :SHRINK.  Before doing anything, let user update file.")

    (RESETLST
        [LET ((MAILFOLDER (WINDOWPROP BROWSERWINDOW 'MAILFOLDER))
              HOW?)
             (COND
                [(OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
                        T T)
                 (AND (OPENWP BROWSERWINDOW)
                      (CLEARW (fetch (MAILFOLDER BROWSERPROMPTWINDOW) of MAILFOLDER)))
                 (SELECTQ [SETQ HOW? (COND
                                        ((AND (fetch (MAILFOLDER BROWSERREADY) of MAILFOLDER)
                                              (SETQ HOW? (LAB.CHOOSE.UPDATE.MENU MAILFOLDER FLG)))
                                         (MENU HOW?))
                                        (T (FUNCTION \LAFITE.FINISH.UPDATE]
                     (NIL 'DON'T)
                     (PROGN (\LAFITE.PROCESS (LIST HOW? (KWOTE BROWSERWINDOW)
                                                   (KWOTE MAILFOLDER)
                                                   (KWOTE FLG))
                                   'LAFITEUPDATE)            (* ; 
                                               "Return DON'T now, for UPDATE.PROC will do it later")
                            'DON'T]
                (T (printout PROMPTWINDOW T "Browser is busy, can't close")
                   'DON'T])])

(LAB.EXPANDFN
  [LAMBDA (BROWSERWINDOW)                                (* ; "Edited 28-Apr-89 18:50 by bvm")
    (LET [(FOLDER (WINDOWPROP BROWSERWINDOW 'MAILFOLDER]
         (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of FOLDER)
             [LET ((FIRSTCHANGEDMSG# (fetch (MAILFOLDER BROWSERUPDATEFROMHERE) of FOLDER)))
                                                             (* ; 
                                                           "Restore SHRINKFN prop if necessary")
                  (WINDOWADDPROP BROWSERWINDOW 'SHRINKFN (FUNCTION LAB.SHRINKFN)
                         T)
                  (COND
                     (FIRSTCHANGEDMSG#                       (* ; 
                                                           "Browser has changed since shrinking")
                            (COND
                               ((EQ FIRSTCHANGEDMSG# 0)      (* ; "After expunge")
                                (LAB.DISPLAYFOLDER FOLDER))
                               (T (LAB.DISPLAYLINES FOLDER FIRSTCHANGEDMSG# NIL NIL T)))
                            (replace (MAILFOLDER BROWSERUPDATEFROMHERE) of FOLDER
                               with NIL])])

(LAFITEEXTRABROWSERCOMMANDFN
  [LAMBDA (WINDOW MAILFOLDER)                            (* ; "Edited 28-Jul-88 17:37 by bvm")
    (PROG [(FN (MENU (.LAFITEMENU. LAFITEEXTRAMENU LAFITEEXTRAMENUITEMS]
          (COND
             (FN (\LAFITE.MAYBE.CLEAR.PROMPT MAILFOLDER)
                 (CL:FUNCALL FN MAILFOLDER])
)



(* ; "Browser selection")

(DEFINEQ

(LAB.SELECTMESSAGE
  [LAMBDA (WINDOW)                                       (* ; "Edited  7-Jun-88 17:37 by bvm")
    (PROG ((*MAILFOLDER* (WINDOWPROP WINDOW 'MAILFOLDER))
           *MESSAGES* *FIRST-VISIBLE* *LAST-VISIBLE* *TOC-STATE* SELECTIONREGION FIRST# LAST# SEL# 
           OLDSEL# CTRLDOWN OLDLASTMOUSEBUTTONS MSG LASTX LASTY MARKRIGHT)
          (COND
             ((EQ (fetch (MAILFOLDER %#OFMESSAGES) of *MAILFOLDER*)
                  0)                                         (* ; "Nothing to select")
              (RETURN)))
          (SETQ SELECTIONREGION (DSPCLIPPINGREGION NIL WINDOW))
          (SETQ LAST# (fetch (MAILFOLDER LASTSELECTEDMESSAGE) of *MAILFOLDER*))
          (SETQ FIRST# (fetch (MAILFOLDER FIRSTSELECTEDMESSAGE) of *MAILFOLDER*))
          (SETQ *FIRST-VISIBLE* (FIRSTVISIBLEMESSAGE *MAILFOLDER* SELECTIONREGION))
          (SETQ *LAST-VISIBLE* (LASTVISIBLEMESSAGE *MAILFOLDER* SELECTIONREGION))
          (SETQ *MESSAGES* (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of *MAILFOLDER*))
          (SETQ MARKRIGHT (fetch (MAILFOLDER ORDINALXPOS) of *MAILFOLDER*))

     (* ;; "keep looping until all mouse buttons are up")

          [do (GETMOUSESTATE)
                 (COND
                    [[NOT (INSIDEP SELECTIONREGION (SETQ LASTX (LASTMOUSEX WINDOW))
                                 (SETQ LASTY (LASTMOUSEY WINDOW]

                     (* ;; "I would like to just return here and let the next window take over, but current mouse arrangement means I'll never get control back unless user lets up on mouse")

                     (COND
                        ((NEQ *TOC-STATE* TS.IDLE)
                         (LA.UNDOSELECTION)
                         (SETQ OLDSEL#)))
                     (COND
                        ((LASTMOUSESTATE UP)
                         (RETURN))
                        (T (BLOCK]
                    ((LASTMOUSESTATE UP)                     (* ; "Make selection permanent")
                     (SELECTC *TOC-STATE*
                         (TS.REPLACING (for MSG selectedin *MAILFOLDER*
                                          do (replace SELECTED? of MSG with NIL))
                                       (replace SELECTED? of (NTHMESSAGE *MESSAGES* OLDSEL#)
                                          with T)
                                       (replace FIRSTSELECTEDMESSAGE of *MAILFOLDER*
                                          with (replace LASTSELECTEDMESSAGE of 
                                                                                         *MAILFOLDER*
                                                      with OLDSEL#)))
                         (TS.ADDING (LA.SELECTRANGE *MAILFOLDER* OLDSEL# OLDSEL# T))
                         (TS.REMOVING (LA.DESELECTRANGE *MAILFOLDER* OLDSEL# OLDSEL#))
                         (TS.EXTENDING.HI 
                              (LA.SELECTRANGE *MAILFOLDER* (ADD1 LAST#)
                                     OLDSEL# CTRLDOWN))
                         (TS.EXTENDING.LO 
                              (LA.SELECTRANGE *MAILFOLDER* OLDSEL# (SUB1 FIRST#)
                                     CTRLDOWN))
                         (TS.SHRINKING.HI 
                              (LA.DESELECTRANGE *MAILFOLDER* (ADD1 OLDSEL#)
                                     LAST#))
                         (TS.SHRINKING.LO 
                              (LA.DESELECTRANGE *MAILFOLDER* FIRST# (SUB1 OLDSEL#)))
                         NIL)
                     (RETURN))
                    ((AND (>= LASTX BROWSERMARKXPOSITION)
                          (< LASTX MARKRIGHT))               (* ; "Inside mark region")
                     (COND
                        ((NEQ *TOC-STATE* TS.IDLE)
                         (LA.UNDOSELECTION)
                         (SETQ OLDSEL#)))
                     (LAB.CHANGEMARK *MAILFOLDER*))
                    ((OR (NEQ (SETQ SEL# (YPOS.TO.MESSAGE# (LASTMOUSEY WINDOW)
                                                *MAILFOLDER*))
                              OLDSEL#)
                         (NEQ LASTMOUSEBUTTONS OLDLASTMOUSEBUTTONS))
                     [COND
                        [(AND (SHIFTDOWNP 'CTRL)
                              (NOT (LASTMOUSESTATE RIGHT)))  (* ; "Deselect this message")
                         (SELECTC *TOC-STATE*
                             (TS.REMOVING (LA.SHOW.SELECTION *MAILFOLDER* (NTHMESSAGE *MESSAGES*
                                                                                     OLDSEL#)
                                                 'REPLACE))
                             (TS.IDLE)
                             (LA.UNDOSELECTION))
                         (SETQ *TOC-STATE* (COND
                                              ((fetch SELECTED? of (SETQ MSG (NTHMESSAGE
                                                                                      *MESSAGES* SEL#
                                                                                      )))
                                               (LA.SHOW.SELECTION *MAILFOLDER* MSG 'ERASE)
                                               TS.REMOVING)
                                              (T TS.IDLE]
                        ((LASTMOUSESTATE LEFT)               (* ; 
                                                "Set (change) the selection to this single message")
                         (COND
                            ((EQ *TOC-STATE* TS.REPLACING)
                             (LA.SHOW.SELECTION *MAILFOLDER* (NTHMESSAGE *MESSAGES* OLDSEL#)
                                    'ERASE))
                            (T (LA.DECONSIDERRANGE *FIRST-VISIBLE* *LAST-VISIBLE*)
                               (SETQ *TOC-STATE* TS.REPLACING)))
                         (LA.SHOW.SELECTION *MAILFOLDER* (NTHMESSAGE *MESSAGES* SEL#)
                                'REPLACE))
                        [(LASTMOUSESTATE MIDDLE)             (* ; 
                                                           "Add this message to the selection")
                         (SELECTC *TOC-STATE*
                             (TS.ADDING (LA.SHOW.SELECTION *MAILFOLDER* (NTHMESSAGE *MESSAGES* 
                                                                                   OLDSEL#)
                                               'ERASE))
                             (TS.IDLE)
                             (LA.UNDOSELECTION))
                         (SETQ *TOC-STATE* (COND
                                              ([NOT (fetch SELECTED? of (SETQ MSG
                                                                                 (NTHMESSAGE 
                                                                                        *MESSAGES* 
                                                                                        SEL#]
                                               (LA.SHOW.SELECTION *MAILFOLDER* MSG 'REPLACE)
                                               TS.ADDING)
                                              (T TS.IDLE]
                        ((LASTMOUSESTATE RIGHT)              (* ; 
                                 "Extend: either up or down, or shrink a selection.  This is messy")
                         (SELECTC *TOC-STATE*
                             (TS.EXTENDING.HI 
                                  (COND
                                     ((> SEL# OLDSEL#)       (* ; "Extend further")
                                      (LA.CONSIDERRANGE (ADD1 OLDSEL#)
                                             SEL# CTRLDOWN))
                                     (T                      (* ; "Shrinking back")
                                        (LA.RECONSIDERRANGE (ADD1 (COND
                                                                         ((> SEL# LAST#)
                                                                          SEL#)
                                                                         (T (SETQ *TOC-STATE* TS.IDLE
                                                                             )
                                                                            LAST#)))
                                               OLDSEL#))))
                             (TS.EXTENDING.LO 
                                  [COND
                                     ((< SEL# OLDSEL#)       (* ; "Extend further")
                                      (LA.CONSIDERRANGE SEL# (SUB1 OLDSEL#)
                                             CTRLDOWN))
                                     (T                      (* ; "Shrinking back")
                                        (LA.RECONSIDERRANGE OLDSEL# (SUB1 (COND
                                                                                 ((< SEL# FIRST#)
                                                                                  SEL#)
                                                                                 (T (SETQ *TOC-STATE*
                                                                                     TS.IDLE)
                                                                                    FIRST#])
                             (TS.SHRINKING.HI 
                                  (COND
                                     [(>= SEL# OLDSEL#)      (* ; "Shrinking less")
                                      (LA.RECONSIDERRANGE (ADD1 OLDSEL#)
                                             (COND
                                                ((< SEL# LAST#)
                                                 SEL#)
                                                (T (SETQ *TOC-STATE* TS.IDLE)
                                                   LAST#]
                                     ((>= SEL# FIRST#)       (* ; "Shrinking further")
                                      (LA.DECONSIDERRANGE (ADD1 SEL#)
                                             OLDSEL#))
                                     (T                      (* ; "Too far to shrink")
                                        (LA.RECONSIDERRANGE FIRST# LAST#)
                                        (SETQ *TOC-STATE* TS.IDLE))))
                             (TS.SHRINKING.LO 
                                  (COND
                                     ((<= SEL# OLDSEL#)      (* ; "Shrinking less")
                                      (LA.RECONSIDERRANGE (COND
                                                                 ((> SEL# FIRST#)
                                                                  SEL#)
                                                                 (T (SETQ *TOC-STATE* TS.IDLE)
                                                                    FIRST#))
                                             (SUB1 OLDSEL#)))
                                     ((<= SEL# LAST#)        (* ; "Shrinking further")
                                      (LA.DECONSIDERRANGE OLDSEL# (SUB1 SEL#)))
                                     (T                      (* ; "Too far to shrink")
                                        (LA.RECONSIDERRANGE FIRST# LAST#)
                                        (SETQ *TOC-STATE* TS.IDLE))))
                             (COND
                                ((NOT (> FIRST# LAST#))
                                 (COND
                                    ((NEQ *TOC-STATE* TS.IDLE)
                                     (LA.UNDOSELECTION)))
                                 (SETQ CTRLDOWN (SHIFTDOWNP 'CTRL))
                                 (SETQ *TOC-STATE* (COND
                                                      ((> SEL# LAST#)
                                                       (LA.CONSIDERRANGE (ADD1 LAST#)
                                                              SEL# CTRLDOWN)
                                                       TS.EXTENDING.HI)
                                                      ((< SEL# FIRST#)
                                                       (LA.CONSIDERRANGE SEL# (SUB1 FIRST#)
                                                              CTRLDOWN)
                                                       TS.EXTENDING.LO)
                                                      ((> SEL# (LRSH (+ LAST# FIRST#)
                                                                     1))
                                                       (LA.DECONSIDERRANGE (ADD1 SEL#)
                                                              LAST#)
                                                       TS.SHRINKING.HI)
                                                      (T (LA.DECONSIDERRANGE FIRST# (SUB1 SEL#))
                                                         TS.SHRINKING.LO]
                     (SETQ OLDLASTMOUSEBUTTONS LASTMOUSEBUTTONS)
                     (SETQ OLDSEL# (AND (NEQ *TOC-STATE* TS.IDLE)
                                        SEL#]
          (COND
             ((EQ LAFITEVERIFYFLG 'TOC)
              (LA.VERIFY.SELECTION *MAILFOLDER*])

(LAB.CHANGEMARK
  [LAMBDA (MAILFOLDER)                                   (* bvm%: "17-Feb-84 15:46")

    (* ;; "Called when mouse is inside the 'mark' region of a browser.  Tracks mouse while in that region and does whatever is appropriate")

    (PROG ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of MAILFOLDER))
           (RIGHT (fetch (MAILFOLDER ORDINALXPOS) of MAILFOLDER))
           SEL# OLDSEL# COCKED REGION X Y TOP BOTTOM)
          [SETQ BOTTOM (fetch (REGION BOTTOM) of (SETQ REGION (DSPCLIPPINGREGION NIL WINDOW]
          (SETQ TOP (fetch (REGION TOP) of REGION))
          (do (GETMOUSESTATE)
                 (COND
                    ((OR (< (SETQ X (LASTMOUSEX WINDOW))
                            BROWSERMARKXPOSITION)
                         (> X RIGHT)
                         (< (SETQ Y (LASTMOUSEY WINDOW))
                            BOTTOM)
                         (> Y TOP))
                     (COND
                        (COCKED (LA.INVERT.MARK.BOX MAILFOLDER OLDSEL#)))
                     (RETURN))
                    ((LASTMOUSESTATE UP)
                     (COND
                        (COCKED (LA.READ.NEW.MARK MAILFOLDER OLDSEL#)))
                     (RETURN))
                    ((NEQ (SETQ SEL# (YPOS.TO.MESSAGE# Y MAILFOLDER))
                          OLDSEL#)
                     (COND
                        (COCKED (LA.INVERT.MARK.BOX MAILFOLDER OLDSEL#))
                        (T (SETQ COCKED T)))
                     (LA.INVERT.MARK.BOX MAILFOLDER (SETQ OLDSEL# SEL#])

(LA.READ.NEW.MARK
  [LAMBDA (FOLDER MSG#)                                  (* ; "Edited 25-Apr-89 17:55 by bvm")
    (PROG ((MSG (NTHMESSAGE (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER)
                       MSG#))
           (WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
           YPOS MARK)
          (RESETSAVE NIL (LIST (FUNCTION CLEARW)
                               (fetch (MAILFOLDER BROWSERPROMPTWINDOW) of FOLDER)))
          (RESETSAVE NIL (LIST (FUNCTION LA.SHOW.MARK)
                               MSG FOLDER))                  (* ; 
                                              "Display correct mark on exit no matter what happens")
          (RESETSAVE (TTYDISPLAYSTREAM WINDOW))              (* ; 
                                                           "So caret flashes in the right place")
          (RESETSAVE NIL (LIST 'WINDOWPROP WINDOW 'PROCESS NIL))

     (* ;; "PROCESS prop put there by TTYDISPLAYSTREAM -- don't want it to linger, else MOUSE proc will get tty in future when we bug browser")

          (LA.BLT.MARK.BOX FOLDER WINDOW (SETQ YPOS (MESSAGE#.TO.YPOS MSG FOLDER))
                 'REPLACE WHITESHADE)                        (* ; "Erase whatever's there")
          (LAB.PROMPTPRINT FOLDER T "Type single character mark, or ESC to abort")
          (MOVETO BROWSERMARKXPOSITION YPOS WINDOW)
          (COND
             ((AND (>= (SETQ MARK (\GETKEY))
                       (CHARCODE SPACE))
                   (<= MARK (CHARCODE DEL)))
              (LAB.MARKS.CHANGED MSG FOLDER)
              (replace (LAFITEMSG SEEN?) of MSG with (NOT (UNSEENMARKP MARK)))
              (replace (LAFITEMSG MARKCHAR) of MSG with MARK])

(YPOS.TO.MESSAGE#
  [LAMBDA (YPOS MAILFOLDER)                              (* bvm%: "24-Dec-83 17:45")
    (PROG [(N (IQUOTIENT (IPLUS (IDIFFERENCE (fetch (MAILFOLDER BROWSERORIGIN) of MAILFOLDER)
                                       YPOS)
                                (fetch (MAILFOLDER BROWSERFONTASCENT) of MAILFOLDER))
                     (fetch (MAILFOLDER BROWSERFONTHEIGHT) of MAILFOLDER]
          (RETURN (COND
                     ((ILEQ N 0)
                      1)
                     (T (IMIN N (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER])

(MESSAGE#.TO.YPOS
  [LAMBDA (MSGDESCRIPTOR MAILFOLDER)                     (* bvm%: "24-Dec-83 16:37")
    (IDIFFERENCE (fetch (MAILFOLDER BROWSERORIGIN) of MAILFOLDER)
           (ITIMES (fetch (MAILFOLDER BROWSERFONTHEIGHT) of MAILFOLDER)
                  (fetch (LAFITEMSG %#) of MSGDESCRIPTOR])
)
(DEFINEQ

(LA.CONSIDERRANGE
  [LAMBDA (FIRST# LAST# EVENIFDELETED)                   (* ; "Edited  7-Jun-88 17:34 by bvm")

(* ;;; "Change display so that messages from FIRST# to LAST# are marked as selected.  Deleted messages are not selected unless EVENIFDELETED is true")

    (for I from (IMAX FIRST# *FIRST-VISIBLE*) to (IMIN LAST# *LAST-VISIBLE*) bind
                                                                                         MSG
       do (SETQ MSG (NTHMESSAGE *MESSAGES* I))
             (COND
                ((OR EVENIFDELETED (NOT (fetch DELETED? of MSG)))
                 (LA.SHOW.SELECTION *MAILFOLDER* MSG 'REPLACE])

(LA.DECONSIDERRANGE
  [LAMBDA (FIRST# LAST#)                                 (* ; "Edited  7-Jun-88 17:35 by bvm")

(* ;;; "Change display so that messages from FIRST# to LAST# are marked as unselected.")

    (for I from (IMAX FIRST# *FIRST-VISIBLE*) to (IMIN LAST# *LAST-VISIBLE*)
       do (LA.SHOW.SELECTION *MAILFOLDER* (NTHMESSAGE *MESSAGES* I)
                     'ERASE])

(LA.RECONSIDERRANGE
  [LAMBDA (FIRST# LAST#)                                 (* ; "Edited  7-Jun-88 17:35 by bvm")

(* ;;; "Change display so that messages from FIRST# to LAST# are marked as selected or unselected according to the truth of the matter.")

    (for I from (IMAX FIRST# *FIRST-VISIBLE*) to (IMIN LAST# *LAST-VISIBLE*) bind
                                                                                         MSG
       do (LA.SHOW.SELECTION *MAILFOLDER* (SETQ MSG (NTHMESSAGE *MESSAGES* I))
                     (COND
                        ((fetch SELECTED? of MSG)
                         'REPLACE)
                        (T 'ERASE])

(LA.SELECTRANGE
  [LAMBDA (MAILFOLDER FIRST# LAST# EVENIFDELETED)        (* bvm%: "15-Feb-84 15:39")

(* ;;; "Mark internally messages FIRST# thru LAST# as selected.  Do not select deleted messages unless EVENIFDELETED is true.  Keeps MAILFOLDER:LASTSELECTEDMESSAGE and MAILFOLDER:FIRSTSELECTEDMESSAGE up to date.  Assumes display has already been appropriately modified")

    (PROG ((MESSAGES (fetch MESSAGEDESCRIPTORS of MAILFOLDER))
           (FIRSTSEL (fetch FIRSTSELECTEDMESSAGE of MAILFOLDER))
           (LASTSEL (fetch LASTSELECTEDMESSAGE of MAILFOLDER))
           MSG)
          [for I from FIRST# to LAST#
             do (SETQ MSG (NTHMESSAGE MESSAGES I))
                   (COND
                      ((OR EVENIFDELETED (NOT (fetch DELETED? of MSG)))
                       (replace SELECTED? of MSG with T]
          (COND
             ((OR (> FIRSTSEL LASTSEL)
                  (< FIRST# (fetch FIRSTSELECTEDMESSAGE of MAILFOLDER)))
              (replace FIRSTSELECTEDMESSAGE of MAILFOLDER with FIRST#)))
          (COND
             ((OR (> FIRSTSEL LASTSEL)
                  (> LAST# (fetch LASTSELECTEDMESSAGE of MAILFOLDER)))
              (replace LASTSELECTEDMESSAGE of MAILFOLDER with LAST#])

(LA.DESELECTRANGE
  [LAMBDA (MAILFOLDER FIRST# LAST#)                      (* bvm%: "28-Mar-84 14:52")

(* ;;; "Mark internally messages FIRST# thru LAST# as unselected.  Keeps MAILFOLDER:LASTSELECTEDMESSAGE and MAILFOLDER:FIRSTSELECTEDMESSAGE up to date.  Assumes display has already been appropriately modified")

    (COND
       ((ILEQ FIRST# LAST#)
        (PROG ((MESSAGES (fetch MESSAGEDESCRIPTORS of MAILFOLDER)))
              (for I from FIRST# to LAST# do (replace SELECTED?
                                                                of (NTHMESSAGE MESSAGES I)
                                                                with NIL))
              (COND
                 [(EQ FIRST# (fetch FIRSTSELECTEDMESSAGE of MAILFOLDER))
                  (replace FIRSTSELECTEDMESSAGE of MAILFOLDER
                     with (COND
                                 ((LAB.FIND.SELECTED.MSG MAILFOLDER (ADD1 LAST#)
                                         (fetch LASTSELECTEDMESSAGE of MAILFOLDER)))
                                 (T (replace LASTSELECTEDMESSAGE of MAILFOLDER with
                                                                                       0)
                                                             (* ; 
                                                       "Null selection indicated by first GT last.")
                                    (ADD1 (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER]
                 ((EQ LAST# (fetch LASTSELECTEDMESSAGE of MAILFOLDER))
                  (replace LASTSELECTEDMESSAGE of MAILFOLDER
                     with (OR (LAB.REV.FIND.SELECTED.MSG MAILFOLDER (fetch 
                                                                                 FIRSTSELECTEDMESSAGE
                                                                               of MAILFOLDER)
                                         (SUB1 FIRST#))
                                  1])

(LAB.FIND.SELECTED.MSG
  [LAMBDA (MAILFOLDER FIRST# LAST#)                      (* bvm%: "15-Feb-84 12:22")
    (find I from FIRST# to LAST# bind (MESSAGES _ (fetch MESSAGEDESCRIPTORS
                                                                     of MAILFOLDER))
       suchthat (fetch SELECTED? of (NTHMESSAGE MESSAGES I])

(LAB.REV.FIND.SELECTED.MSG
  [LAMBDA (MAILFOLDER FIRST# LAST#)                      (* bvm%: " 2-Mar-84 18:02")
    (find I from LAST# to FIRST# by -1 bind (MESSAGES _ (fetch 
                                                                                   MESSAGEDESCRIPTORS
                                                                               of MAILFOLDER))
       suchthat (fetch SELECTED? of (NTHMESSAGE MESSAGES I])

(LA.UNDOSELECTION
  [LAMBDA NIL                                            (* ; "Edited  7-Jun-88 17:37 by bvm")

(* ;;; "Restore browser to state before any selections were attempted")

    (LA.RECONSIDERRANGE *FIRST-VISIBLE* *LAST-VISIBLE*)
    (SETQ *TOC-STATE* TS.IDLE])

(LA.VERIFY.SELECTION
  [LAMBDA (MAILFOLDER)                                   (* bvm%: "15-Feb-84 11:53")
    (PROG ((FIRST# (fetch FIRSTSELECTEDMESSAGE of MAILFOLDER))
           (LAST# (fetch LASTSELECTEDMESSAGE of MAILFOLDER))
           (MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of MAILFOLDER))
           (%#OFMESSAGES (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER))
           SEL)
          (COND
             [(IGREATERP FIRST# LAST#)
              (COND
                 ([SETQ SEL (for I from 1 to %#OFMESSAGES collect I
                               when (fetch SELECTED? of (NTHMESSAGE MESSAGES I]
                  (HELP "First > Last, but these msgs selected" SEL]
             (T [for I from 1 to %#OFMESSAGES do (COND
                                                                    ((fetch SELECTED?
                                                                        of (NTHMESSAGE MESSAGES I
                                                                                      ))
                                                                     (COND
                                                                        ((< I FIRST#)
                                                                         (HELP "First is too high" 
                                                                               FIRST#))
                                                                        ((> I LAST#)
                                                                         (HELP "Last is too low" 
                                                                               LAST#]
                (COND
                   ((AND (EQ FIRST# 1)
                         (EQ LAST# 1))                       (* ; 
                                             "The only time it is okay for them not to be selected")
                    )
                   ((NOT (fetch SELECTED? of (NTHMESSAGE MESSAGES FIRST#)))
                    (HELP "First not selected" FIRST#))
                   ((NOT (fetch SELECTED? of (NTHMESSAGE MESSAGES LAST#)))
                    (HELP "Last not selected" LAST#])
)
(DEFINEQ

(LAB.COPYBUTTONEVENTFN
  [LAMBDA (WINDOW)                                       (* ; "Edited 11-Dec-87 17:17 by bvm:")

(* ;;; "copy select an item from the window.")

    (PROG ((FOLDER (WINDOWPROP WINDOW 'MAILFOLDER))
           SELECTIONREGION CURRENTITEM CURRENTMSG CURRENTFIELD NEWITEM NEWFIELD LASTX LASTY DATEX 
           FROMX SUBJECTX MSGS)
          [COND
             ((EQ (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER)
                  0)                                         (* ; "Nothing to select")
              (RETURN (TOTOPW WINDOW]
          (SETQ SELECTIONREGION (DSPCLIPPINGREGION NIL WINDOW))
          (SETQ DATEX (fetch (MAILFOLDER DATEXPOS) of FOLDER))
          (SETQ FROMX (fetch (MAILFOLDER FROMXPOS) of FOLDER))
          (SETQ SUBJECTX (fetch (MAILFOLDER SUBJECTXPOS) of FOLDER))
          (SETQ MSGS (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER))
      LP  (TOTOPW WINDOW)
          (SETQ NEWITEM (AND (INSIDEP SELECTIONREGION (SETQ LASTX (LASTMOUSEX WINDOW))
                                    (SETQ LASTY (LASTMOUSEY WINDOW)))
                             (YPOS.TO.MESSAGE# LASTY FOLDER)))
          (SETQ NEWFIELD (if (< LASTX DATEX)
                             then T
                           elseif (< LASTX FROMX)
                             then 'DATE
                           elseif (< LASTX SUBJECTX)
                             then 'FROM
                           else 'SUBJECT))               (* ; 
                           "Figure out which field of the message is being pointed at by the xpos.")
          [COND
             ((OR (NEQ CURRENTITEM NEWITEM)
                  (NEQ CURRENTFIELD NEWFIELD))               (* ; "Something changed")
              (COND
                 (CURRENTITEM                                (* ; "turn off old selection.")
                        (LAB.SHOW.COPY.SELECTION WINDOW FOLDER CURRENTMSG CURRENTFIELD)))
              (COND
                 ((SETQ CURRENTITEM NEWITEM)                 (* ; "turn on new selection")
                  (LAB.SHOW.COPY.SELECTION WINDOW FOLDER (SETQ CURRENTMSG (NTHMESSAGE MSGS 
                                                                                     CURRENTITEM))
                         (SETQ CURRENTFIELD NEWFIELD]
      LP2 

     (* ;; "wait for a button up or move out of region")

          (BLOCK)
          (COND
             ((NOT (.COPYKEYDOWNP.))                         (* ; "Finished, copy selected item")
              [COND
                 (CURRENTITEM                                (* ; 
                                            "If something is selected, bksysbuf the selected field")
                  (LAB.SHOW.COPY.SELECTION WINDOW FOLDER CURRENTMSG CURRENTFIELD)
                  (BKSYSBUF (OR (SELECTQ CURRENTFIELD
                                    (T                       (* ; "Do whole line")
                                       (CONCAT "#" (fetch (LAFITEMSG %#) of CURRENTMSG)
                                              " "
                                              (fetch (LAFITEMSG DATE) of CURRENTMSG)
                                              " "
                                              [COND
                                                 ((fetch (LAFITEMSG MSGFROMMEP) of CURRENTMSG
                                                         )
                                                  (CONCAT "To: " (fetch (LAFITEMSG TO)
                                                                    of CURRENTMSG)))
                                                 (T (CONCAT "From: " (OR (fetch (LAFITEMSG FROM)
                                                                            of CURRENTMSG)
                                                                         UNSUPPLIEDFIELDSTR]
                                              " -- "
                                              (OR (fetch (LAFITEMSG SUBJECT) of CURRENTMSG)
                                                  UNSUPPLIEDFIELDSTR)))
                                    (DATE (fetch (LAFITEMSG DATE) of CURRENTMSG))
                                    (FROM (COND
                                             ((fetch (LAFITEMSG MSGFROMMEP) of CURRENTMSG)
                                              (CONCAT "To: " (fetch (LAFITEMSG TO) of 
                                                                                           CURRENTMSG
                                                                    )))
                                             (T (fetch (LAFITEMSG FROM) of CURRENTMSG))))
                                    (fetch (LAFITEMSG SUBJECT) of CURRENTMSG))
                                UNSUPPLIEDFIELDSTR]
              (RETURN))
             ((MOUSESTATE UP)                                (* ; 
                                                       "button up, but shift still down, no action")
              (GO LP2))
             (T (GO LP])

(LAB.SHOW.COPY.SELECTION
  [LAMBDA (WINDOW FOLDER MSG FIELD)                      (* ; "Edited 11-Dec-87 17:16 by bvm:")

(* ;;; "underline FIELD of MSG in FOLDER's window")

    (LET ((BOTTOM (- (MESSAGE#.TO.YPOS MSG FOLDER)
                     (fetch (MAILFOLDER BROWSERFONTDESCENT) of FOLDER)))
          LEFT STR)
         [SELECTQ FIELD
             (T                                              (* ; "Whole line"))
             (DATE (SETQ LEFT (fetch (MAILFOLDER DATEXPOS) of FOLDER))
                   (SETQ STR (fetch (LAFITEMSG DATE) of MSG)))
             (FROM (SETQ LEFT (fetch (MAILFOLDER FROMXPOS) of FOLDER))
                   [SETQ STR (COND
                                ((fetch (LAFITEMSG MSGFROMMEP) of MSG)
                                 (CONCAT "To: " (fetch (LAFITEMSG TO) of MSG)))
                                (T (fetch (LAFITEMSG FROM) of MSG])
             (PROGN (SETQ LEFT (fetch (MAILFOLDER SUBJECTXPOS) of FOLDER))
                    (SETQ STR (fetch (LAFITEMSG SUBJECT) of MSG]
         (BLTSHADE GRAYSHADE WINDOW LEFT BOTTOM (if (EQ FIELD T)
                                                    then (* ; "whole line")
                                                          NIL
                                                  else   (* ; "width of just this field")
                                                        (STRINGWIDTH (OR STR UNSUPPLIEDFIELDSTR)
                                                               WINDOW))
                2
                'INVERT])
)
(DECLARE%: EVAL@COMPILE DONTCOPY 

(CL:PROCLAIM '(CL:SPECIAL *MAILFOLDER* *MESSAGES* *FIRST-VISIBLE* *LAST-VISIBLE* *TOC-STATE*))

(CL:PROCLAIM '(GLOBAL LASTMOUSEBUTTONS))
)



(* ; "Browser display")

(DEFINEQ

(LAB.PROMPTPRINT
  (CL:LAMBDA (FOLDER &REST ARGS)                         (* ; "Edited 14-Oct-87 15:36 by bvm:")
         (LAB.PRINT.TO.PROMPTWINDOW FOLDER ARGS)))

(LAB.FORMAT
  (CL:LAMBDA (FOLDER &REST ARGS)                         (* ; "Edited 14-Oct-87 15:53 by bvm:")

         (* ;; "Outputs to FOLDER's prompt window using FORMAT.  If first format arg is T, then we clear the window first, and consider then next format arg to be the format string.  All this is done in a way that lets the window expand if it needs to.")

         (LAB.PRINT.TO.PROMPTWINDOW FOLDER ARGS T)))

(LAB.MOUSECONFIRM
  [CL:LAMBDA (FOLDER &REST ARGS)                         (* ; "Edited 11-Dec-87 17:33 by bvm:")

         (* ;; "Version of MOUSECONFIRM using FOLDER's prompt window.  ARGS are args to FORMAT.")

         (LAB.PRINT.TO.PROMPTWINDOW FOLDER ARGS T)
         (PROG1 (MOUSECONFIRM T T)
             (if FOLDER
                 then (\LAFITE.MAYBE.CLEAR.PROMPT FOLDER)
               else (CLEARW PROMPTWINDOW)))])

(LAB.PRINT.TO.PROMPTWINDOW
  [LAMBDA (FOLDER ARGS FORMAT-P)                         (* ; "Edited 14-Oct-87 19:01 by bvm:")

    (* ;; "Outputs to FOLDER's prompt window the text in ARGS.  If FORMAT-P is NIL, ARGS is a list of items to print, with T meaning clear the window.  If FORMAT-P is true, ARGS is considered a format string and format args, except that ARGS may be prefixed with T to indicate clearing the window.  All this is done in a way that lets the window expand if it needs to.  If FOLDER is NIL, or its browser is not open, prints to global PROMPTWINDOW.  Returns NIL.")

    (LET ((*PRINT-CASE* :UPCASE)
          (*PRINT-BASE* 10)
          [WINDOW (AND FOLDER (OPENWP (ffetch (MAILFOLDER BROWSERPROMPTWINDOW)
                                         of (\DTEST FOLDER 'MAILFOLDER]
          \CURRENTDISPLAYLINE OLDTTY)

         (* ;; "*PRINT-CASE* is bound so symbols get printed in %"expected%" case.  *PRINT-BASE* is 10 for benefit of printing numbers in the non-format case.  \currentdisplayline changes with TTYDISPLAYSTREAM")

         (CL:UNWIND-PROTECT
             [LET ((ACTUALWINDOW (OR WINDOW PROMPTWINDOW)))
                  (if WINDOW
                      then (SETQ OLDTTY (TTYDISPLAYSTREAM WINDOW))
                            (SETQ \CURRENTDISPLAYLINE (fetch (MAILFOLDER CURRENTPROMPTLINE)
                                                         of FOLDER)) 
                                                             (* ; 
                                              "Do this second because TTYDISPLAYSTREAM smashes it.")
                         )
                  (if FORMAT-P
                      then (if (EQ (CAR ARGS)
                                           T)
                                   then                  (* ; 
                                                         "First arg of T means clear window first.")
                                         (CLEARW ACTUALWINDOW)
                                         (SETQ ARGS (CDR ARGS)))
                            (CL:APPLY (FUNCTION CL:FORMAT)
                                   ACTUALWINDOW ARGS)
                    else (for ARG in ARGS do (COND
                                                                ((EQ ARG T)
                                                                 (CLEARW ACTUALWINDOW))
                                                                (T (PRIN3 ARG ACTUALWINDOW]
             (if WINDOW
                 then 

                       (* ;; "Now clean up the mess.  Note position for next time.")

                       (replace (MAILFOLDER CURRENTPROMPTLINE) of FOLDER with 
                                                                                  \CURRENTDISPLAYLINE
                              )
                       (TTYDISPLAYSTREAM OLDTTY)
                       (WINDOWPROP WINDOW 'PROCESS NIL)      (* ; "Get rid of process handle")
                       (replace (MAILFOLDER BROWSERPROMPTDIRTY) of FOLDER with T)))
         NIL])

(LAB.PAGEFULLFN
  [LAMBDA (PW)                                           (* ; "Edited 14-Oct-87 16:54 by bvm:")

    (* ;; 
  "PAGEFULLFN for prompt window--makes the window a line bigger and allows output to proceed")

    (SETQ \CURRENTDISPLAYLINE (PROG1 \#DISPLAYLINES          (* ; 
                          "\Currentdisplayline is the line we're on when window fills, origin zero")
                                  (LET ((MAIN (MAINWINDOW PW))
                                        FOLDER)
                                       (GETPROMPTWINDOW MAIN (+ 1 \#DISPLAYLINES))
                                       (if (SETQ FOLDER (WINDOWPROP MAIN 'MAILFOLDER))
                                           then          (* ; 
                                 "Note that we expanded window so that we can shrink it back later")
                                                 (replace (MAILFOLDER BROWSERPROMPTGREW)
                                                    of FOLDER with T))))])

(\LAFITE.MAYBE.CLEAR.PROMPT
  [LAMBDA (FOLDER)                                       (* ; "Edited 14-Oct-87 15:35 by bvm:")

    (* ;; "Clear's FOLDER's prompt window, and shrinks it back to a single line if it has grown")

    (LET (PW)
         (COND
            ([AND (fetch (MAILFOLDER BROWSERPROMPTDIRTY) of FOLDER)
                  (OPENWP (SETQ PW (fetch (MAILFOLDER BROWSERPROMPTWINDOW) of FOLDER]
             (CLEARW PW)
             (if (fetch (MAILFOLDER BROWSERPROMPTGREW) of FOLDER)
                 then                                    (* ; "Window grew")
                       (LET (PROP HEIGHT)
                            [SETQ HEIGHT (HEIGHTIFWINDOW (FONTPROP LAFITEBROWSERFONT 'HEIGHT]
                            (WINDOWPROP PW 'MINSIZE (CONS 0 HEIGHT))
                                                             (* ; 
      "have to adjust the fixed size of the window before shaping, since SHAPEW obeys the minimum.")
                            (WINDOWPROP PW 'MAXSIZE (CONS 64000 HEIGHT))
                            (SHAPEW PW (create REGION using (WINDOWPROP PW 'REGION)
                                                                HEIGHT _ HEIGHT))
                            (CLEARW PW)                      (* ; 
                                                         "Clear it again to get coordinates right.")
                            (if (SETQ PROP (WINDOWPROP (fetch (MAILFOLDER BROWSERWINDOW)
                                                              of FOLDER)
                                                      'PROMPTWINDOW))
                                then                     (* ; 
                                       "Main window thinks it knows how tall the prompt window is.")
                                      (RPLACD PROP 1))
                            (replace (MAILFOLDER BROWSERPROMPTGREW) of FOLDER with NIL)
                            (replace (MAILFOLDER CURRENTPROMPTLINE) of FOLDER with 0)))
             (replace (MAILFOLDER BROWSERPROMPTDIRTY) of FOLDER with NIL])
)

(PUTPROPS LAB.PROMPTPRINT ARGNAMES (NIL (FOLDER &REST ARGS)))

(PUTPROPS LAB.FORMAT ARGNAMES (NIL (FOLDER &REST ARGS)))

(PUTPROPS LAB.MOUSECONFIRM ARGNAMES (NIL (FOLDER FORMAT-STRING &REST ARGS)))
(DEFINEQ

(PRINTMESSAGESUMMARY
  [LAMBDA (MSG FOLDER WINDOW)                            (* ; "Edited  5-May-89 12:15 by bvm")
    (PROG ((*PRINT-BASE* 10)
           (DIGITWIDTH (fetch (MAILFOLDER BROWSERDIGITWIDTH) of FOLDER))
           FROMSTR HERE THERE EXTENT MSG#)
          (OR (fetch (LAFITEMSG PARSED?) of MSG)
              (LAFITE.PARSE.MSG.FOR.TOC MSG FOLDER))
          (MOVETO 0 (MESSAGE#.TO.YPOS MSG FOLDER)
                 WINDOW)
          (POSITION WINDOW 0)
          (LA.SHOW.MARK MSG FOLDER)
          (DSPXPOSITION [+ (fetch (MAILFOLDER ORDINALXPOS) of FOLDER)
                           (TIMES DIGITWIDTH (COND
                                                ((< (SETQ MSG# (fetch (LAFITEMSG %#) of
                                                                                         MSG))
                                                    10)
                                                 3)
                                                ((< MSG# 100)
                                                 2)
                                                ((< MSG# 1000)
                                                 1)
                                                (T 0]
                 WINDOW)                                     (* ; 
                     "Ugh.  Manually right-justify message # given that font may be variable width")
          (PRIN3 MSG# WINDOW)
          (LET ((DATE (OR (fetch (LAFITEMSG DATE) of MSG)
                          [if (fetch (LAFITEMSG DATEKNOWN?) of MSG)
                              then                       (* ; "Convert idate to date")
                                    (replace (LAFITEMSG DATE) of MSG
                                       with (GDATE1-6 (fetch (LAFITEMSG IDATE) of MSG]
                          UNSUPPLIEDFIELDSTR)))
               (DSPXPOSITION (+ (fetch (MAILFOLDER DATEXPOS) of FOLDER)
                                (if (DIGITCHARP (NTHCHARCODE DATE 2))
                                    then 0
                                  else                   (* ; 
                                                "for 1-digit day, try to get the digits to line up")
                                        DIGITWIDTH))
                      WINDOW)
               (PRIN3 DATE WINDOW))
          (DSPXPOSITION (fetch (MAILFOLDER FROMXPOS) of FOLDER)
                 WINDOW)
          [COND
             [(fetch (LAFITEMSG MSGFROMMEP) of MSG)
              (PRIN3 "To: " WINDOW)
              (SETQ FROMSTR (OR (fetch (LAFITEMSG TO) of MSG)
                                (LAFITE.FETCH.TO.FIELD MSG FOLDER]
             (T (SETQ FROMSTR (OR (fetch (LAFITEMSG FROM) of MSG)
                                  UNSUPPLIEDFIELDSTR]

     (* ;; "PRINTMESSAGESUMMARY.STRING defaults to PRIN3, redefined to deal with multiple character sets if MIME is loaded.")

          (PRINTMESSAGESUMMARY.STRING FROMSTR WINDOW)
          (COND
             ((> (SETQ HERE (DSPXPOSITION NIL WINDOW))
                 (SETQ THERE (fetch (MAILFOLDER FROMMAXXPOS) of FOLDER)))
                                                             (* ; "Erase the overflow")
              (DSPBACKUP (- HERE THERE)
                     WINDOW)))
          (DSPXPOSITION (fetch (MAILFOLDER SUBJECTXPOS) of FOLDER)
                 WINDOW)
          (PRINTMESSAGESUMMARY.STRING (OR (fetch (LAFITEMSG SUBJECT) of MSG)
                                          UNSUPPLIEDFIELDSTR)
                 WINDOW)
          (PRIN3 " [" WINDOW)
          (PRIN3 (fetch (LAFITEMSG MESSAGELENGTH) of MSG)
                 WINDOW)
          (PRIN3 " chars]" WINDOW)

     (* ;; "keep track of maximum width printed to.  If header is allowed to print on two lines, $$MAXWIDTH$$ was set to right margin by BUILDBROWSERMAP so this should not reset it.")

          (COND
             ((< (fetch (MAILFOLDER BROWSERMAXXPOS) of FOLDER)
                 (SETQ HERE (DSPXPOSITION NIL WINDOW)))
              (replace (MAILFOLDER BROWSERMAXXPOS) of FOLDER with HERE)
              (replace (REGION WIDTH) of (SETQ EXTENT (fetch (MAILFOLDER BROWSEREXTENT)
                                                                 of FOLDER)) with HERE)
              (WINDOWPROP WINDOW 'EXTENT EXTENT)))
          [COND
             ((fetch (LAFITEMSG SELECTED?) of MSG)
              (LA.SHOW.SELECTION FOLDER MSG 'REPLACE]
          (COND
             ((fetch (LAFITEMSG DELETED?) of MSG)
              (LA.SHOW.DELETION FOLDER MSG WINDOW 'REPLACE])

(FIRSTVISIBLEMESSAGE
  [LAMBDA (MAILFOLDER REGION)                            (* bvm%: "25-Feb-86 12:22")

    (* ;; "Computes number of the first message in MAILFOLDER that is visible in REGION")

    (IMAX 1 (IQUOTIENT (- (fetch (MAILFOLDER BROWSERORIGIN) of MAILFOLDER)
                          (+ [fetch (REGION TOP) of (OR REGION (DSPCLIPPINGREGION
                                                                        NIL
                                                                        (fetch (MAILFOLDER 
                                                                                        BROWSERWINDOW
                                                                                          )
                                                                           of MAILFOLDER]
                             (fetch (MAILFOLDER BROWSERFONTDESCENT) of MAILFOLDER)))
                   (fetch (MAILFOLDER BROWSERFONTHEIGHT) of MAILFOLDER])

(LASTVISIBLEMESSAGE
  [LAMBDA (MAILFOLDER REGION)                            (* bvm%: "25-Feb-86 11:33")

    (* ;; "Computes number of the last message in MAILFOLDER that is visible in REGION")

    (IMIN (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER)
          (IQUOTIENT (+ (- (fetch (MAILFOLDER BROWSERORIGIN) of MAILFOLDER)
                           (- [fetch (REGION BOTTOM) of (OR REGION (DSPCLIPPINGREGION
                                                                            NIL
                                                                            (fetch (MAILFOLDER
                                                                                        BROWSERWINDOW
                                                                                        )
                                                                               of MAILFOLDER]
                              (fetch (MAILFOLDER BROWSERFONTASCENT) of MAILFOLDER)))
                        (SUB1 (fetch (MAILFOLDER BROWSERFONTHEIGHT) of MAILFOLDER)))
                 (fetch (MAILFOLDER BROWSERFONTHEIGHT) of MAILFOLDER])

(LAB.DISPLAYLINES
  [LAMBDA (FOLDER FIRST# LAST# REGION CLEAR)             (* ; "Edited 28-Apr-89 18:48 by bvm")

    (* ;; "Display toc line for messages FIRST# thru LAST# (default to extreme).  If REGION is given, only display messages visible in the region (default is the browser window's clipping region).  If CLEAR is true, clear the region first (otherwise, caller has cleared it).")

    (LET* ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
           (REG (OR REGION (DSPCLIPPINGREGION NIL WINDOW)))
           (MIN# (FIRSTVISIBLEMESSAGE FOLDER REGION))
           (MAX# (LASTVISIBLEMESSAGE FOLDER REGION))
           (MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER)))
          (if (AND FIRST# (> FIRST# MIN#))
              then (SETQ MIN# FIRST#))
          (if (AND LAST# (< LAST# MAX#))
              then (SETQ MAX# LAST#))
          (if CLEAR
              then (DSPFILL [LET ((LINEHEIGHT (fetch (MAILFOLDER BROWSERFONTHEIGHT)
                                                     of FOLDER)))
                                     (create REGION
                                            LEFT _ 0
                                            BOTTOM _ (- (fetch (MAILFOLDER BROWSERORIGIN)
                                                           of FOLDER)
                                                        (fetch (MAILFOLDER BROWSERFONTDESCENT)
                                                           of FOLDER)
                                                        (TIMES LINEHEIGHT MAX#))
                                            WIDTH _ MAX.SMALLP
                                            HEIGHT _ (TIMES LINEHEIGHT (ADD1 (- MAX# MIN#]
                              WHITESHADE
                              'REPLACE WINDOW))
          (for MSG# from MIN# to MAX# do (PRINTMESSAGESUMMARY (NTHMESSAGE 
                                                                                         MESSAGES 
                                                                                         MSG#)
                                                                FOLDER WINDOW])

(LAB.EXPOSEMESSAGE
  [LAMBDA (MAILFOLDER MSGDESCRIPTOR)                     (* bvm%: "24-Dec-83 19:00")
    (PROG ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of MAILFOLDER))
           (YPOS (MESSAGE#.TO.YPOS MSGDESCRIPTOR MAILFOLDER))
           CLIPREGION)
          (COND
             ((OR (IGREATERP (fetch (REGION BOTTOM) of (SETQ CLIPREGION (DSPCLIPPINGREGION
                                                                                 NIL WINDOW)))
                         YPOS)
                  (ILESSP (fetch (REGION TOP) of CLIPREGION)
                         YPOS))
              (SCROLLBYREPAINTFN WINDOW 0 (IPLUS (fetch (REGION BOTTOM) of CLIPREGION)
                                                 (IQUOTIENT (fetch (REGION HEIGHT) of 
                                                                                           CLIPREGION
                                                                   )
                                                        2)
                                                 (IMINUS YPOS])

(LAB.SELECTED.MESSAGES
  [LAMBDA (FOLDER)                                       (* ; "Edited 14-Oct-87 16:15 by bvm:")

    (* ;; "Return a list of message descriptors currently selected")

    (for MSG selectedin FOLDER collect MSG])

(UNSELECTALLMESSAGES
  [LAMBDA (MAILFOLDER)                                   (* bvm%: "15-Feb-84 16:21")
    (for N from (fetch FIRSTSELECTEDMESSAGE of MAILFOLDER)
       to (fetch LASTSELECTEDMESSAGE of MAILFOLDER)
       bind (MESSAGES _ (fetch MESSAGEDESCRIPTORS of MAILFOLDER))
       do (LA.DESELECTRANGE MAILFOLDER N N)
             (LA.SHOW.SELECTION MAILFOLDER (NTHMESSAGE MESSAGES N)
                    'ERASE])

(SELECTMESSAGE
  [LAMBDA (MSGDESCRIPTOR MAILFOLDER)                     (* bvm%: "15-Feb-84 12:34")
    (PROG ((N (fetch (LAFITEMSG %#) of MSGDESCRIPTOR)))
          (LA.SELECTRANGE MAILFOLDER N N T)
          (LA.SHOW.SELECTION MAILFOLDER MSGDESCRIPTOR 'REPLACE])

(LAB.GO.TO.MESSAGE
  [LAMBDA (FOLDER N)                                     (* ; "Edited 23-Aug-88 18:14 by bvm")

    (* ;; "Jump to nth message in folder.  N must be in range, or be a msg object in the folder.  Returns the message object")

    (LET [(MSG (if (type? LAFITEMSG N)
                   then N
                 else (\DTEST (NTHMESSAGE (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of
                                                                                         FOLDER)
                                         N)
                                 'LAFITEMSG]
         (UNSELECTALLMESSAGES FOLDER)
         (LAB.EXPOSEMESSAGE FOLDER MSG)
         (LA.SHOW.SELECTION FOLDER MSG 'REPLACE)
         (replace (LAFITEMSG SELECTED?) of MSG with T)
         (replace FIRSTSELECTEDMESSAGE of FOLDER with (replace LASTSELECTEDMESSAGE
                                                                     of FOLDER
                                                                     with (fetch (LAFITEMSG
                                                                                          %#)
                                                                                 of MSG)))
         MSG])

(MARKMESSAGE
  [LAMBDA (MSG FOLDER MARK)                              (* ; "Edited 25-Apr-89 17:54 by bvm")

(* ;;; 
"Changes the mark byte of MSGDESCRIPTOR to be MARK.  This may also imply something about SEEN?")

    (replace (LAFITEMSG MARKCHAR) of MSG with MARK)
    (replace (LAFITEMSG SEEN?) of MSG with (NOT (UNSEENMARKP MARK)))
    (LAB.MARKS.CHANGED MSG FOLDER)
    (COND
       ((OPENWP (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
        (LA.SHOW.MARK MSG FOLDER))
       (T                                                    (* ; 
                                           "Wait until browser expanded before showing mark update")
          (PROG ((N (fetch (LAFITEMSG %#) of MSG))
                 (OLDU (fetch (MAILFOLDER BROWSERUPDATEFROMHERE) of FOLDER)))
                (COND
                   ((OR (NULL OLDU)
                        (> OLDU N))
                    (replace (MAILFOLDER BROWSERUPDATEFROMHERE) of FOLDER with N])

(LAB.MARKS.CHANGED
  [LAMBDA (MSG FOLDER)                                   (* ; "Edited 21-Jun-99 22:42 by rmk:")

    (* ;; 
  "Call this whenever you change one of the 3 mark bytes (seen, deleted, mark) of a message.")

    (LET ((N (fetch (LAFITEMSG %#) of MSG)))
         (if (< N (fetch (MAILFOLDER FIRSTCHANGEDMESSAGE) of FOLDER))
             then (replace (MAILFOLDER FIRSTCHANGEDMESSAGE) of FOLDER with N)))
    (replace (LAFITEMSG MARKSCHANGED?) of MSG with T)

    (* ;; 
  "rmk:  MARKSCHANGEDINTOC? wasn't being set, and changes only to marks weren't being written out.")

    (replace (LAFITEMSG MARKSCHANGEDINTOC?) of MSG with T)
    (replace (MAILFOLDER FOLDERNEEDSUPDATE) of FOLDER with T])

(LA.SHOW.MARK
  [LAMBDA (MSGDESCRIPTOR MAILFOLDER)                     (* bvm%: "17-Feb-84 15:34")
    (PROG ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of MAILFOLDER))
           (YPOS (MESSAGE#.TO.YPOS MSGDESCRIPTOR MAILFOLDER))
           (MARK (fetch (LAFITEMSG MARKCHAR) of MSGDESCRIPTOR)))
          (LA.BLT.MARK.BOX MAILFOLDER WINDOW YPOS 'REPLACE WHITESHADE)
                                                             (* ; "Erase whatever's there")
          (COND
             ((NEQ MARK (CHARCODE SPACE))
              (MOVETO BROWSERMARKXPOSITION YPOS WINDOW)
              (BOUT WINDOW MARK])

(LA.INVERT.MARK.BOX
  [LAMBDA (MAILFOLDER MSG#)                              (* bvm%: "17-Feb-84 14:44")
    (LA.BLT.MARK.BOX MAILFOLDER (fetch (MAILFOLDER BROWSERWINDOW) of MAILFOLDER)
           (MESSAGE#.TO.YPOS (NTHMESSAGE (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of 
                                                                                           MAILFOLDER
                                                    )
                                        MSG#)
                  MAILFOLDER)
           'INVERT BLACKSHADE])

(LA.BLT.MARK.BOX
  [LAMBDA (MAILFOLDER WINDOW YPOS OPERATION TEXTURE)     (* ; "Edited  3-Sep-87 18:02 by bvm:")
    (BLTSHADE TEXTURE WINDOW BROWSERMARKXPOSITION (- YPOS (fetch (MAILFOLDER BROWSERFONTDESCENT)
                                                             of MAILFOLDER))
           (- (fetch (MAILFOLDER ORDINALXPOS) of MAILFOLDER)
              BROWSERMARKXPOSITION)
           (fetch (MAILFOLDER BROWSERFONTHEIGHT) of MAILFOLDER)
           OPERATION])

(LA.SHOW.DELETION
  [LAMBDA (MAILFOLDER MSGDESCRIPTOR WINDOW OPERATION)    (* ; "Edited  3-Sep-87 16:23 by bvm:")

(* ;;; "Draws or erases, for OPERATION = REPLACE or ERASE, the line indicating that MSGDESCRIPTOR is deleted")

    (BLTSHADE BLACKSHADE WINDOW BROWSERMARKXPOSITION (- (+ (MESSAGE#.TO.YPOS MSGDESCRIPTOR 
                                                                  MAILFOLDER)
                                                           (LRSH (fetch (MAILFOLDER 
                                                                                   BROWSERFONTASCENT)
                                                                    of MAILFOLDER)
                                                                 1))
                                                        (LRSH LAFITEDELETEDLINEHEIGHT 1))
           NIL LAFITEDELETEDLINEHEIGHT OPERATION])

(LA.SHOW.SELECTION
  [LAMBDA (MAILFOLDER MSGDESCRIPTOR OPERATION)           (* bvm%: " 2-Feb-84 12:37")

(* ;;; "Displays or erases, per OPERATION = REPLACE or ERASE, the mark indicating that MSGDESCRIPTOR is selected")

    (BITBLT LA.SELECTION.BITMAP 0 0 (fetch (MAILFOLDER BROWSERWINDOW) of MAILFOLDER)
           0
           (+ (MESSAGE#.TO.YPOS MSGDESCRIPTOR MAILFOLDER)
              (LRSH (fetch (MAILFOLDER BROWSERFONTASCENT) of MAILFOLDER)
                    1)
              -5)
           NIL NIL 'INPUT OPERATION])

(SEENMESSAGE
  [LAMBDA (MSG FOLDER)                                   (* ; "Edited 25-Apr-89 17:52 by bvm")

(* ;;; 
"causes the 'seen character' -- as opposed to the 'seen mark' -- to be changed to 'S' on the file")

    (LET ((OLDMARK (fetch (LAFITEMSG MARKCHAR) of MSG)))
         (COND
            ((OR (NULL (fetch (LAFITEMSG SEEN?) of MSG))
                 (UNSEENMARKP OLDMARK))
             (replace (LAFITEMSG SEEN?) of MSG with T)
             (LAB.MARKS.CHANGED MSG FOLDER)
             (COND
                ((UNSEENMARKP OLDMARK)

                 (* ;; "only change the mark if it was ?  -- it might already be something more meaningful like an answer mark")

                 (MARKMESSAGE MSG FOLDER SEENMARK])

(DELETEMESSAGE
  [LAMBDA (MSG FOLDER)                                   (* ; "Edited 25-Apr-89 17:53 by bvm")
    (replace (LAFITEMSG DELETED?) of MSG with T)
    (LAB.MARKS.CHANGED MSG FOLDER)
    (replace (MAILFOLDER FOLDERNEEDSEXPUNGE) of FOLDER with T)
    (LA.SHOW.DELETION FOLDER MSG (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER)
           'REPLACE])

(UNDELETEMESSAGE
  [LAMBDA (MSG FOLDER)                                   (* ; "Edited 25-Apr-89 17:52 by bvm")
    (if (fetch (LAFITEMSG DELETED?) of MSG)
        then (LET ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER)))
                      (replace (LAFITEMSG DELETED?) of MSG with NIL)
                      (LAB.MARKS.CHANGED MSG FOLDER)
                      (LA.SHOW.DELETION FOLDER MSG WINDOW 'ERASE)
                                                             (* ; "undeleted;  reprint the header.")
                      (PRINTMESSAGESUMMARY MSG FOLDER WINDOW)
                                                             (* ; 
                   "Finally, maybe clear the expungeable flag if this was the last deleted message")
                      (LAB.SET.EXPUNGEABILITY FOLDER])

(LAB.SET.EXPUNGEABILITY
  [LAMBDA (FOLDER)                                       (* ; "Edited 25-Apr-89 17:46 by bvm")

    (* ;; "Sets the FOLDERNEEDSEXPUNGE flag according to whether any messages are marked deleted, and returns the number of the first deleted message (or NIL if none).")

    (LET [(FIRSTDELETED (for I from 1 to (fetch (MAILFOLDER %#OFMESSAGES)
                                                        of FOLDER)
                           bind (MESSAGES _ (fetch (MAILFOLDER MESSAGEDESCRIPTORS)
                                                   of FOLDER))
                           thereis (fetch (LAFITEMSG DELETED?) of (NTHMESSAGE MESSAGES I]
         (replace (MAILFOLDER FOLDERNEEDSEXPUNGE) of FOLDER with FIRSTDELETED)
         FIRSTDELETED])
)



(* ;; 
"PRINTMESSAGESUMMARY.STRING prints From and Subject.  Redefined when MIME is loaded to deal with different character encodings."
)


(MOVD? 'PRIN3 'PRINTMESSAGESUMMARY.STRING)



(* ; "ICON stuff")


(FILESLOAD ICONW)
(DEFINEQ

(LAB.ICONFN
  [LAMBDA (WINDOW OLDICON)                               (* ; "Edited 20-Apr-89 19:38 by bvm")

(* ;;; "the holding place for all the fancy stuff for making an icon for a mail broswer window")

    (OR (WINDOWP (WINDOWPROP WINDOW 'ICONWINDOW))
        (LET ((MAILFOLDER (WINDOWPROP WINDOW 'MAILFOLDER))
              ICON)
             (SETQ ICON (TITLEDICONW LAFITE.FOLDER.ICON (COND
                                                           (MAILFOLDER (LA.SHORTFILENAME
                                                                        (fetch (MAILFOLDER 
                                                                                       FULLFOLDERNAME
                                                                                          )
                                                                           of MAILFOLDER)
                                                                        LAFITEMAIL.EXT))
                                                           (T "??"))
                               NIL
                               (OR (WINDOWPROP WINDOW 'ICONPOSITION)
                                   (SELECTQ LAFITE.BROWSER.ICON.PREFERENCE
                                       ((:ASK ASK)           (* ; "force prompt")
                                            NIL)
                                       (NIL (LA.POSITION.FROM.REGION (WINDOWPROP WINDOW 'REGION)))
                                       (CL:FUNCALL LAFITE.BROWSER.ICON.PREFERENCE WINDOW)))
                               T NIL 'FILE))
             (WINDOWPROP ICON 'BUTTONEVENTFN (FUNCTION LAB.ICON.BUTTONEVENTFN))
             ICON])

(LAB.ICON.BUTTONEVENTFN
  [LAMBDA (ICONW)                                        (* ; "Edited 23-Aug-88 18:30 by bvm")

    (* ;; "BUTTONEVENTFN for browser windows.  This one is like the default, except that middle button offers choices")

    (COND
       [(LASTMOUSESTATE MIDDLE)
        (LET (HOW)
             (if [AND (fetch (MAILFOLDER FOLDERGETSMAIL) of (WINDOWPROP
                                                                         (WINDOWPROP ICONW
                                                                                'ICONFOR)
                                                                         'MAILFOLDER))
                          (SETQ HOW (MENU (OR LAFITEBROWSERICONMENU (SETQ LAFITEBROWSERICONMENU
                                                                     (\LAFITE.CREATE.MENU 
                                                                           LAFITEBROWSERICONMENUITEMS
                                                                            NIL T]
                 then                                    (* ; 
                                                  "Folder accepts new mail, and offer was accepted")
                       (CL:FUNCALL HOW ICONW)
               else                                      (* ; 
                                            "No menu selection, just expand as you otherwise would")
                     (EXPANDW ICONW]
       (T (MOVEW ICONW])
)

(RPAQQ LAFITE.FOLDER.ICON (#*(100 72)@OOOOOOOO@@@@@@@@@@@@@@@@@@@AOOOOOOOOH@@@@@@@@@@@@@@@@@@C@@@@@@@@L@@@@@@@@@@@@@@@@@@F@@@@@@@@F@@@@@@@@@@@@@@@@@@L@DA@@@@@C@@@@@@@@@@@@@@@@@@L@FC@@@@@C@@@@@@@@@@@@@@@@@@L@EE@HGB@C@@@@@@@@@@@@@@@@@@L@EEADBB@C@@@@@@@@@@@@@@@@@@L@DIBBBB@COOOOOOOOOOOOOOL@@@L@DACNBB@COOOOOOOOOOOOOOL@@@L@DABBGCL@@@@@@@@@@@@@@@L@@@L@@@@@@@@@@@@@@@@@@@@@@@L@@@L@@@@@@@@@@@@@@@@@@@@@@@L@@@LOOOOOOOOOOOOOOOOOOOOOOOO@@@LOOOOOOOOOOOOOOOOOOOOOOOO@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@LL@@@@@@@@@@@@@@@@@@@@@@C@@@FL@@@@@@@@@@@@@@@@@@@@@@C@@@CL@@@@@@@@@@@@@@@@@@@@@@C@@@AOOOOOOOOOOOOOOOOOOOOOOOO@@@@OOOOOOOOOOOOOOOOOOOOOOOO@@@

                               (8 4 88 51)))

(RPAQ? LAFITEFROMFRACTION 0.3)

(RPAQ? LAFITEMINFROMCHARS 15)

(RPAQ? LAFITEVERIFYFLG T)

(RPAQ? LAFITEDELETEDLINEHEIGHT 1)

(RPAQ? LAFITE.BROWSER.ICON.PREFERENCE )

(RPAQQ LAFITEBROWSERMENUITEMS
       (("Display" '\LAFITE.DISPLAY "Displays the selected message in the display window.")
        ("Delete" '\LAFITE.DELETE "Deletes the selected messages.")
        ("Undel" '\LAFITE.UNDELETE "Undeletes the selected messages.")
        ("Answer" '\LAFITE.ANSWER "Prepares a delivery form to reply to the selected message.")
        ("Forward" '\LAFITE.FORWARD "Prepares a delivery form to forward the selected message(s).")
        (HCopy '\LAFITE.HARDCOPY "Sends hardcopy of the selected message(s) to the default printer")
        ("Move To" '\LAFITE.MOVETO "Moves the selected message(s) to another mail folder.")
        ("Update" '\LAFITE.UPDATE 
     "Write out browser changes to the physical mail file.%
 Option to expunge all deleted messages."
               )
        ("Get Mail" '\LAFITE.GETMAIL "Retrieves new messages and puts them into this mail folder.")))

(RPAQQ LAFITESUBBROWSEMENUITEMS
       [("Browse" '\LAFITE.BROWSE.PROC "Browse a mail file")
        ("Browse & Forget" '\LAFITE.BROWSE.FORGET 
               "Browse a mail file, but don't add it to the menu of known folders")
        ("Forget Folders" '\LAFITE.UNCACHE.FOLDER 
               "Remove one or more folders from list of known folders")
        ("Forget Message Form" '\LAFITE.UNCACHE.MESSAGEFORM 
         "Remove a form from list of known message forms,%
but do not delete the file containing it."
               )
        ("Delete Message Form" '\LAFITE.DELETE.MESSAGEFORM 
              "Remove a form from list of known message forms%
and delete the file(s) containing it."
               )
        ("Notice Folders" '\LAFITE.NOTICE.FOLDERS 
               "Scan specified directory and add any folders found to the list of known folders")
        ("Clean up Folders" '\LAFITE.GC.FOLDERS 
         "Check that all known folders correspond to actual files; remove those that no longer exist"
               )
        ("Rename Folder" '\LAFITE.RENAME.FOLDER "Change the name of a folder")
        ("Edit Folder Hierarchy" '\LAFITE.EDIT.HIERARCHY 
               "Add, delete, or change membership of a folder group"
               (SUBITEMS ("Edit a Group" '\LAFITE.EDIT.HIERARCHY "Modify an existing group")
                      ("Add New Group" '[LAMBDA (ITEM MENU)
                                               (\LAFITE.ADD.NEW.GROUP]
                             "Define a new top-level group")
                      ("Change Top-Level Groups" '\LAFITE.CHANGE.TOP.GROUPS 
                             "Specify which subgroups should also appear at top level."])

(RPAQQ LAFITEBROWSERICONMENUITEMS (("Get Mail" '\LAFITE.GETMAIL.FROM.ICON 
                                              "Open this window and retrieve new mail into it")))

(RPAQ? LAFITESUBBROWSEMENU )

(RPAQ? LAFITEBROWSERICONMENU )

(RPAQ? LAFITEEXTRAMENU )
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS LAFITESUBBROWSEMENU LAFITEBROWSERICONMENU LAFITEEXTRAMENU)
)

(ADDTOVAR LAFITEMENUVARS LAFITESUBBROWSEMENU LAFITEBROWSERICONMENU LAFITEEXTRAMENU)

(ADDTOVAR LAFITEEXTRAMENUITEMS ("Describe Folder" '\LAFITE.DESCRIBE.FOLDER 
                                          "Display some relevant info about this folder"
                                          (SUBITEMS ("Inspect Folder" 'INSPECT 
                                 "Inspect the MAILFOLDER data structure associated with this browser"
                                                           ))))

(RPAQQ BROWSERMARKXPOSITION 8)

(RPAQQ LA.SELECTION.BITMAP #*(8 10)L@@@N@@@O@@@OH@@OL@@OH@@O@@@N@@@L@@@@@@@)



(* ; "Obsolete")


(RPAQ? LAFITEBROWSERREGION (CREATEREGION 30 30 575 210))
(DECLARE%: DOEVAL@COMPILE DONTCOPY 

(RPAQQ TOCSTATES ((TS.IDLE 0)
                      (TS.REPLACING 1)
                      (TS.ADDING 2)
                      (TS.REMOVING 3)
                      (TS.EXTENDING.HI 4)
                      (TS.EXTENDING.LO 5)
                      (TS.SHRINKING.HI 6)
                      (TS.SHRINKING.LO 7)))
(DECLARE%: EVAL@COMPILE 

(RPAQQ TS.IDLE 0)

(RPAQQ TS.REPLACING 1)

(RPAQQ TS.ADDING 2)

(RPAQQ TS.REMOVING 3)

(RPAQQ TS.EXTENDING.HI 4)

(RPAQQ TS.EXTENDING.LO 5)

(RPAQQ TS.SHRINKING.HI 6)

(RPAQQ TS.SHRINKING.LO 7)


(CONSTANTS (TS.IDLE 0)
       (TS.REPLACING 1)
       (TS.ADDING 2)
       (TS.REMOVING 3)
       (TS.EXTENDING.HI 4)
       (TS.EXTENDING.LO 5)
       (TS.SHRINKING.HI 6)
       (TS.SHRINKING.LO 7))
)


(CL:PROCLAIM '(CL:SPECIAL \CURRENTDISPLAYLINE))


(FILESLOAD (SOURCE)
       LAFITEDECLS)

(DECLARE%: DOEVAL@COMPILE DONTCOPY

(LOCALVARS . T)
)
)
(DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 

(ADDTOVAR NLAMA )

(ADDTOVAR NLAML )

(ADDTOVAR LAMA LAB.MOUSECONFIRM LAB.FORMAT LAB.PROMPTPRINT)
)
(PUTPROPS LAFITEBROWSE COPYRIGHT ("Xerox Corporation" 1984 1985 1986 1987 1988 1989 1999 2001 2021))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (5768 31473 (\LAFITE.BROWSE 5778 . 6525) (\LAFITE.SUBBROWSE 6527 . 6864) (
\LAFITE.BROWSE.PROC 6866 . 7959) (\LAFITE.BROWSE.FORGET 7961 . 8507) (LAFITE.BROWSE.FOLDER 8509 . 
10444) (\LAFITE.PREPARE.BROWSER 10446 . 12612) (\LAFITE.MAYBE.OPEN.FOLDER 12614 . 16056) (
LAB.LOADFOLDER 16058 . 16553) (LAB.DISPLAYFOLDER 16555 . 18126) (LAB.MAKE.INITIAL.SELECTION 18128 . 
19364) (LAB.CREATEWINDOW 19366 . 27821) (LAB.TITLE.STRING 27823 . 29588) (LAB.COMMANDFN 29590 . 30120)
 (LAB.DO.COMMAND 30122 . 31099) (LAB.ASSURE.SELECTIONS 31101 . 31471)) (31474 41387 (
BUILD.LAFITE.LAYOUTS 31484 . 37742) (\LAFITE.LAYOUT.FROM.WINDOW 37744 . 40224) (
\LAFITE.MAKE.DUMMY.WINDOWS 40226 . 41385)) (41813 67265 (LAB.SETUP 41823 . 48008) (LAB.BUTTONEVENTFN 
48010 . 48540) (LAB.DO.UNLESS.BUSY 48542 . 49038) (LOADMAILFOLDER 49040 . 50323) (LAFITE.OBTAIN.FOLDER
 50325 . 59227) (\LAFITE.FIND.EXISTING.FOLDER 59229 . 60076) (\LAFITE.CONFLICTING.OLD.FOLDER 60078 . 
61249) (LAB.REPAINTFN 61251 . 61876) (LAB.SCROLLFN 61878 . 62466) (LAB.RESHAPEFN 62468 . 63761) (
LAB.CLOSEFN 63763 . 63932) (LAB.SHRINKFN 63934 . 64098) (LAB.CLOSE/SHRINK 64100 . 65685) (LAB.EXPANDFN
 65687 . 66931) (LAFITEEXTRABROWSERCOMMANDFN 66933 . 67263)) (67300 85005 (LAB.SELECTMESSAGE 67310 . 
80668) (LAB.CHANGEMARK 80670 . 82271) (LA.READ.NEW.MARK 82273 . 84056) (YPOS.TO.MESSAGE# 84058 . 84666
) (MESSAGE#.TO.YPOS 84668 . 85003)) (85006 93673 (LA.CONSIDERRANGE 85016 . 85700) (LA.DECONSIDERRANGE 
85702 . 86118) (LA.RECONSIDERRANGE 86120 . 86824) (LA.SELECTRANGE 86826 . 88162) (LA.DESELECTRANGE 
88164 . 90242) (LAB.FIND.SELECTED.MSG 90244 . 90621) (LAB.REV.FIND.SELECTED.MSG 90623 . 91108) (
LA.UNDOSELECTION 91110 . 91404) (LA.VERIFY.SELECTION 91406 . 93671)) (93674 100537 (
LAB.COPYBUTTONEVENTFN 93684 . 98889) (LAB.SHOW.COPY.SELECTION 98891 . 100535)) (100744 108238 (
LAB.PROMPTPRINT 100754 . 100933) (LAB.FORMAT 100935 . 101372) (LAB.MOUSECONFIRM 101374 . 101837) (
LAB.PRINT.TO.PROMPTWINDOW 101839 . 104988) (LAB.PAGEFULLFN 104990 . 106042) (
\LAFITE.MAYBE.CLEAR.PROMPT 106044 . 108236)) (108462 129133 (PRINTMESSAGESUMMARY 108472 . 113229) (
FIRSTVISIBLEMESSAGE 113231 . 114251) (LASTVISIBLEMESSAGE 114253 . 115442) (LAB.DISPLAYLINES 115444 . 
117686) (LAB.EXPOSEMESSAGE 117688 . 118795) (LAB.SELECTED.MESSAGES 118797 . 119059) (
UNSELECTALLMESSAGES 119061 . 119547) (SELECTMESSAGE 119549 . 119841) (LAB.GO.TO.MESSAGE 119843 . 
121152) (MARKMESSAGE 121154 . 122201) (LAB.MARKS.CHANGED 122203 . 123010) (LA.SHOW.MARK 123012 . 
123657) (LA.INVERT.MARK.BOX 123659 . 124228) (LA.BLT.MARK.BOX 124230 . 124736) (LA.SHOW.DELETION 
124738 . 125642) (LA.SHOW.SELECTION 125644 . 126208) (SEENMESSAGE 126210 . 126996) (DELETEMESSAGE 
126998 . 127406) (UNDELETEMESSAGE 127408 . 128287) (LAB.SET.EXPUNGEABILITY 128289 . 129131)) (129370 
132578 (LAB.ICONFN 129380 . 131073) (LAB.ICON.BUTTONEVENTFN 131075 . 132576)))))
STOP
