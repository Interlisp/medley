(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 7-Feb-2022 12:04:09" 
{DSK}<Users>kaplan>Local>medley3.5>my-medley>library>lafite>LAFITECOMMANDS.;2 164626 

      :CHANGES-TO (FILES LAFITEDECLS)
                  (FNS \LAFITE.HARDCOPY.PROC \LAFITE.HARDCOPY.HEADERS)

      :PREVIOUS-DATE "30-Sep-2021 22:58:57" 
{DSK}<Users>kaplan>Local>medley3.5>my-medley>library>lafite>LAFITECOMMANDS.;1)


(* ; "
Copyright (c) 1988-1989, 1992-1993, 1999, 2021 by Xerox Corporation.
")

(PRETTYCOMPRINT LAFITECOMMANDSCOMS)

(RPAQQ LAFITECOMMANDSCOMS
       [
        (* ;; "Handling of the main Lafite browser commands")

        (COMS                                                (* ; "DISPLAY")
              (FNS \LAFITE.DISPLAY \LAFITE.DO.DISPLAY SELECTMESSAGETODISPLAY MESSAGEDISPLAYER 
                   LA.COPY.MESSAGE.TEXT \LAFITE.CLOSE.DISPLAYWINDOWS \LAFITE.CLOSE.DISPLAYER)
              (FNS \LAFITE.UNHIDE.HEADERS \LAFITE.HIDE.HEADERS \LAFITE.REHIDE.HEADERS 
                   LAFITE.EAT.UNDESIRABLE.FIELD LAFITE.EAT.GVGV \LAFITE.HARDCOPY.FROM.DISPLAY 
                   LAFITE.HARDCOPY.TAB.WIDTH)
              (FNS \LAFITE.SET.LOOKS.FROM.MENU \LAFITE.SET.DEFAULT.LOOKS \LAFITE.SET.FIXED.LOOKS 
                   LAFITE.SET.LOOKS LAFITE.SET.TAB.LOOKS LAFITE.SET.PARA.SEPARATION 
                   LAFITE.SET.LOWER.CASE LAFITE.SUBSTITUTE.VP.EOL)
              (INITVARS \LAFITE.DISPLAY.COMMANDS)
              (ADDVARS [LAFITE.EXTRA.DISPLAY.COMMANDS ("Looks" '\LAFITE.SET.LOOKS.FROM.MENU 
                   "Change the appearance of the selected text, or whole message if nothing selected"
                                                             )
                              ("Hardcopy" '\LAFITE.HARDCOPY.FROM.DISPLAY 
                                     "Hardcopy this message in its current appearance")
                              ("Unhide" '\LAFITE.UNHIDE.HEADERS 
                                     "Display the header fields that are hidden from view."
                                     (SUBITEMS ("Hide" '\LAFITE.REHIDE.HEADERS 
                                                      "Hide uninteresting fields from view again"]
                     (LAFITE.LOOKS.SUBCOMMANDS ("VP Line Breaks" 'LAFITE.SUBSTITUTE.VP.EOL 
                                             "Replace the Viewpoint end of line character with ours."
                                                      )
                            ("Lowercase" 'LAFITE.SET.LOWER.CASE 
                                   "Lowercase the region or whole message.")
                            ("Spread Paragraphs" 'LAFITE.SET.PARA.SEPARATION 
                                   "Separate paragraphs by 10 points (useful for Tioga messages).")
                            ("Default" '\LAFITE.SET.DEFAULT.LOOKS 
                                   "Change selection (or whole text) back to default font")
                            ("Fixed Width" '\LAFITE.SET.FIXED.LOOKS 
                                   "Change selection (or whole text) to fixed-width font")))
              (GLOBALVARS \LAFITE.DISPLAY.COMMANDS))
        (COMS                                                (* ; "DELETE")
              (FNS LAFITE.DELETE.MESSAGES \LAFITE.DELETE DISPLAYAFTERDELETE \LAFITE.SELECT.NEXT 
                   \LAFITE.UNDELETE))
        (COMS                                                (* ; "MOVE")
              (FNS LAFITE.MOVE.MESSAGES \COERCE.TO.MSGLST \LAFITE.MOVETO \LAFITE.COPYTO 
                   \LAFITE.MOVETO.PROC \LAFITE.MOVE.MESSAGES.INTERNAL)
                                                             (* ; "Aux move")
              (FNS \LAFITE.ENABLE.MOVE.MENU \LAFITE.ADD.TO.MOVE.MENU \LAFITE.UPDATE.MOVE.MENU 
                   \LAFITE.RESTORE.MOVE.MENU \LAFITE.HANDLE.AUTO.MOVE)
              (ADDVARS (LAFITEEXTRAMENUITEMS ("Enable MoveTo Menu" '\LAFITE.ENABLE.MOVE.MENU 
                           "Attach a menu of folders for accelerated MoveTo (or modify existing one)"
                                                    (SUBITEMS ("Restore MoveTo Menu" 
                                                                     '\LAFITE.RESTORE.MOVE.MENU 
                                                "Just reopen the attached MoveTo menu if it existed."
                                                                     )))
                              ("Copy To" '\LAFITE.COPYTO 
                                     "Like MoveTo, but don't delete the message(s)."))
                     (LAFITE.EXTRA.MOVE.ITEMS ("---Display---" '\LAFITE.DISPLAY 
                                                     "Display the next message")
                            ("---Delete---" '\LAFITE.DELETE "Delete the selected message(s)")))
              (INITVARS (LAFITE.AUTO.MOVE.MENU)))
        (COMS                                                (* ; "UPDATE")
              (FNS \LAFITE.UPDATE \LAFITE.EXPUNGE.PROC \LAFITE.UPDATE.PROC \LAFITE.HARDCOPYONLY.PROC
                   LAB.CHOOSE.UPDATE.MENU LAB.CREATE.UPDATE.MENU LAB.UPDATE.NEEDED? 
                   \LAFITE.START.UPDATE LAB.START.COMMAND \LAFITE.FINISH.UPDATE 
                   \LAFITE.CLOSE.OTHER.FOLDERS)
              (FNS LAB.FLUSHWINDOW LAB.APPENDMESSAGES \LAFITE.COMPACT.FOLDER \LAFITE.COMPACT.FOLDER1
                   \LAFITE.COMPACT.FOLDER2 \LAFITE.COMPACT.EXTRA \LAFITE.INVALIDATE.TOC 
                   \LAFITE.RENAMEFILE SMART-RENAMEFILEP LA.OPENTEMPFILE)
              (FNS \LAFITE.UPDATE.FOLDER \LAFITE.UPDATE.CONTENTS \LAFITE.UPDATE.CONTENTS1 
                   WRITETOCENTRY WRITETOCMARKBYTES WRITEFOLDERMARKBYTES))
        [COMS                                                (* ; "HARDCOPY")
              (FNS LAFITE.HARDCOPY.MESSAGES \LAFITE.HARDCOPY \LAFITE.HARDCOPY.PROC 
                   \LAFITE.HARDCOPY.HEADERS \LAFITE.MARK.HARDCOPIED \LAFITE.TRANSMIT.HARDCOPY 
                   \LAFITE.HARDCOPY.BODIES \LAFITE.APPEND.MESSAGE.BODY \LAFITE.DO.PENDING.HARDCOPY 
                   \LAFITE.CANCEL.HARDCOPY \LAFITE.CLEAR.HARDCOPY.STATE)
              (ADDVARS (LAFITEEXTRAMENUITEMS ("Cancel Pending Hardcopy" '\LAFITE.CANCEL.HARDCOPY 
                                  "Forget about hardcopying the messages so far marked for hardcopy."
                                                    ]
        [COMS (INITVARS (LAFITEHARDCOPYBATCHFLG NIL)
                     (LAFITEHARDCOPY.MIN.TOC NIL)
                     (LAFITEDISPLAYAFTERDELETEFLG T)
                     (LAFITEMOVETOCONFIRMFLG 'ALWAYS)
                     (LAFITENEWPAGEFLG T)
                     (LAFITEENDOFMESSAGESTR "End of message")
                     [LAFITEENDOFMESSAGEFONT (FONTCREATE '(TIMESROMAN 10 ITALIC]
                     (LAFITE.DISPLAY.SIZE '(500 . 300))
                     (LAFITE.BROWSER.LAYOUTS NIL)
                     (LAFITE.MIDDLE.UPDATE '(:EXPUNGE :SHRINK :CONFIRM))
                     (LAFITEHARDCOPYBATCHSHADE 1025)
                     (LAFITEHARDCOPYSEPARATOR "%
 Next Message %
"))
              (COMS                                          (* ; "Obsolete")
                    (INITVARS (LAFITEDISPLAYREGION (CREATEREGION 375 25 600 335]
        (DECLARE%: DOEVAL@COMPILE DONTCOPY (FILES (SOURCE)
                                                  LAFITEDECLS)
               (LOCALVARS . T))
        (DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA)
                                                                             (NLAML)
                                                                             (LAMA 
                                                                             LAFITE.HARDCOPY.MESSAGES
                                                                                   ])



(* ;; "Handling of the main Lafite browser commands")




(* ; "DISPLAY")

(DEFINEQ

(\LAFITE.DISPLAY
  [LAMBDA (WINDOW MAILFOLDER ITEM MENU KEY)              (* ; "Edited 22-Sep-87 14:56 by bvm:")
    (PROG (DISPLAYWINDOW)
          (COND
             ([WINDOWP (SETQ DISPLAYWINDOW
                        (RESETLST
                            (LA.RESETSHADE ITEM MENU)
                            (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
                                (\LAFITE.MAYBE.CLEAR.PROMPT MAILFOLDER)
                                [OR (LAB.ASSURE.SELECTIONS MAILFOLDER)
                                    (LET ((MSGDESCRIPTOR (SELECTMESSAGETODISPLAY WINDOW 
                                                                MAILFOLDER))
                                          W)
                                         (COND
                                            [MSGDESCRIPTOR (\LAFITE.DO.DISPLAY
                                                            MAILFOLDER MSGDESCRIPTOR
                                                            (EQ KEY 'MIDDLE]
                                            (T (LAB.PROMPTPRINT MAILFOLDER T "No more messages.")
                                                             (* ; 
                        "But return current display window for topping, just in case it was buried")
                                               (CAR (fetch (MAILFOLDER FOLDERDISPLAYWINDOWS)
                                                       of MAILFOLDER]))]
                                                             (* ; 
             "make sure the display window is on top in case SHADEITEM put the browser back on top")
              (TOTOPW DISPLAYWINDOW])

(\LAFITE.DO.DISPLAY
  [LAMBDA (MAILFOLDER MSGDESCRIPTOR NEWWINDOWFLG)        (* ; "Edited 28-Jun-99 10:22 by rmk:")
                                                             (* ; "Edited 27-Jun-99 22:44 by rmk:")
                                                             (* ; "Edited 25-Jun-99 19:05 by rmk:")
                                                             (* ; "Edited 25-Jun-99 18:31 by rmk:")
                                                             (* ; "Edited 13-Oct-87 15:56 by bvm:")

(* ;;; "Display MSGDESCRIPTOR from MAILFOLDER, using a new window if NEWWINDOWFLG is true, else reusing if possible the primary window.  Returns the window.")

(* ;;; "")

(* ;;; "rmk, 6/99.  I modified the interface to LA.COPY.MESSAGE.TEXT to make it easier to replace that function with something that deals with MIME attachments.  I moved the MAYBEVERIFYMSG up to this level to eliminate a compile-time dependency on that macro, and this required moving the \LAFITE.OPEN.FOLDER as well.  That call is harmlessly repeated in LA.COPY.MESSAGE.TEXT")

    (PROG (TEMPMSG DISPLAYWINDOW)
          (LAB.EXPOSEMESSAGE MAILFOLDER MSGDESCRIPTOR)
          (replace (MAILFOLDER CURRENTDISPLAYEDMESSAGE) of MAILFOLDER with NIL)
                                                             (* ; "Clear it here in case of abort")
          (\LAFITE.OPEN.FOLDER MAILFOLDER 'INPUT :ABORT)
          (MAYBEVERIFYMSG MSGDESCRIPTOR MAILFOLDER)
          (SETQ TEMPMSG (LA.COPY.MESSAGE.TEXT MAILFOLDER MSGDESCRIPTOR NEWWINDOWFLG))
          (SETQ DISPLAYWINDOW (MESSAGEDISPLAYER MAILFOLDER TEMPMSG (CONCAT "Message "
                                                                              (fetch (LAFITEMSG
                                                                                          %#)
                                                                                 of MSGDESCRIPTOR
                                                                                     )
                                                                              " from "
                                                                              (fetch (MAILFOLDER
                                                                                          
                                                                                       FULLFOLDERNAME
                                                                                          )
                                                                                 of MAILFOLDER)
                                                                              "   ["
                                                                              (fetch (LAFITEMSG
                                                                                          
                                                                                        MESSAGELENGTH
                                                                                          )
                                                                                 of MSGDESCRIPTOR
                                                                                     )
                                                                              " chars]")
                                     NEWWINDOWFLG))
          (SEENMESSAGE MSGDESCRIPTOR MAILFOLDER)
          (PROGN                                             (* ; "Cache the stream that we copied the message text to, since we might be able to use it to accelerate a Move or Hardcopy.  Unfortunately, we can't take advantage of it now, since NODIRCORE doesn't support multiple streams per file.")
                 (replace (MAILFOLDER CURRENTDISPLAYEDSTREAM) of MAILFOLDER with TEMPMSG)
                 (replace (MAILFOLDER CURRENTDISPLAYEDMESSAGE) of MAILFOLDER with 
                                                                                        MSGDESCRIPTOR
                        ))
          (RETURN DISPLAYWINDOW])

(SELECTMESSAGETODISPLAY
  [LAMBDA (WINDOW MAILFOLDER)                            (* bvm%: " 1-Mar-86 18:19")

(* ;;; "Laurel acts differently if there is currently only one message selected or many about whether it unselects the one that was displayed before.  Lafite will follow the same model")

    (LET ((CURRENTDISPLAYEDMSG (fetch (MAILFOLDER CURRENTDISPLAYEDMESSAGE) of MAILFOLDER))
          (MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of MAILFOLDER))
          (FIRST# (fetch (MAILFOLDER FIRSTSELECTEDMESSAGE) of MAILFOLDER))
          (LAST# (fetch (MAILFOLDER LASTSELECTEDMESSAGE) of MAILFOLDER))
          DISPLAYED# MSGDESCRIPTOR)
         (COND
            ((IGREATERP FIRST# LAST#)                        (* ; 
                                                          "Nothing selected, so nothing to display")
             NIL)
            ((OR (NULL CURRENTDISPLAYEDMSG)
                 (NOT (fetch (LAFITEMSG SELECTED?) of CURRENTDISPLAYEDMSG)))
                                                             (* ; 
                         "haven't displayed any yet, or displayed one is not part of the selection")
             (NTHMESSAGE MESSAGES FIRST#))
            ((EQ FIRST# LAST#)                               (* ; 
                      "Only one msg selected and it is displayed, so move on to next undeleted msg")
             (\LAFITE.SELECT.NEXT MAILFOLDER (fetch (LAFITEMSG %#) of CURRENTDISPLAYEDMSG
                                                        )))
            (T                                               (* ; 
                                                     "Multiple selections -- Cycle to the next one")
               (NTHMESSAGE MESSAGES (COND
                                       ((EQ (SETQ DISPLAYED# (fetch (LAFITEMSG %#) of 
                                                                                  CURRENTDISPLAYEDMSG
                                                                    ))
                                            LAST#)           (* ; "Cycle back to first")
                                        FIRST#)
                                       (T (LAB.FIND.SELECTED.MSG MAILFOLDER (ADD1 DISPLAYED#)
                                                 LAST#])

(MESSAGEDISPLAYER
  [LAMBDA (MAILFOLDER TEXTFILE TITLE NEWWINDOWFLG)       (* ; "Edited 24-Jun-99 15:34 by rmk:")
                                                             (* ; "Edited 24-Jun-99 15:32 by rmk:")
                                                             (* ; "Edited 24-Jun-99 15:32 by rmk:")
                                                             (* ; "Edited  6-Aug-93 18:48 by bvm")

(* ;;; "Displayer for individual messages")

    (LET ((CURRENTWINDOWS (fetch (MAILFOLDER FOLDERDISPLAYWINDOWS) of MAILFOLDER))
          [PROPS `(FONT ,LAFITEDISPLAYFONT]
          (WINDOWPROPS '(READONLY T PROMPTWINDOW DON'T))
          (EOF (GETEOFPTR TEXTFILE))
          TEXTSTREAM DISPLAYWINDOW FILTERED)

         (* ;; "WINDOWPROPS for when we finally give TEdit a window: READONLY in order to avoid TEdit's odd temptation to display an ugly caret at the start and prevent mouse actions from yielding %"NewEditProcess%" menu; PROMPTWINDOW to inhibit attaching a prompt window.  Due to a TEdit bug, you can't give the PROMPTWINDOW prop when opening without a window or it will try to make the symbol DON'T be the promptwindow later on.")

         (if (AND \LAPARSE.DONT.DISPLAY.HEADERS (NEQ EOF 0)
                      (SETQ FILTERED (LAFITE.NEW.PARSE.HEADER TEXTFILE \LAPARSE.DONT.DISPLAY.HEADERS
                                            0)))
             then                                        (* ; 
                                  "We will filter some headers out, so put * in title to show this")
                   (SETQ TITLE (CONCAT "*" TITLE)))
         [COND
            ((AND (NOT NEWWINDOWFLG)
                  (SETQ DISPLAYWINDOW (CAR CURRENTWINDOWS)))
             (MAPC (WINDOWPROP DISPLAYWINDOW 'EXTRAWINDOWS NIL)
                   (FUNCTION CLOSEW))                        (* ; 
                                                 "Get rid of extra windows produced by attachments")
             (CLEARW DISPLAYWINDOW)
             (WINDOWPROP DISPLAYWINDOW 'TITLE TITLE))
            (T (SETQ DISPLAYWINDOW (CREATEW (COND
                                               [(AND (NOT NEWWINDOWFLG)
                                                     (PROGN  (* ; 
                                              "This says where we'd like the primary window to be.")
                                                            (fetch (MAILFOLDER 
                                                                              FOLDERDISPLAYREGION)
                                                               of MAILFOLDER]
                                               (LAFITE.DISPLAY.SIZE 
                                                             (* ; "Global default")
                                                      (GETBOXREGION (CAR LAFITE.DISPLAY.SIZE)
                                                             (CDR LAFITE.DISPLAY.SIZE)
                                                             NIL NIL NIL TITLE)))
                                          TITLE))
               (WINDOWADDPROP DISPLAYWINDOW 'CLOSEFN (FUNCTION \LAFITE.CLOSE.DISPLAYER))
               (WINDOWPROP DISPLAYWINDOW 'TEDIT.MENU.COMMANDS \LAFITE.DISPLAY.COMMANDS)
               (COND
                  [(NOT CURRENTWINDOWS)
                   (replace (MAILFOLDER FOLDERDISPLAYWINDOWS) of MAILFOLDER
                      with (if NEWWINDOWFLG
                                   then                  (* ; 
                                               "not primary, even though no window previously open")
                                         (LIST NIL DISPLAYWINDOW)
                                 else (LIST DISPLAYWINDOW]
                  [NEWWINDOWFLG (RPLACD CURRENTWINDOWS (CONS DISPLAYWINDOW (CDR CURRENTWINDOWS]
                  (T                                         (* ; 
       "DIsplaying the primary window for the first time when there are already secondary windows.")
                     (RPLACA CURRENTWINDOWS DISPLAYWINDOW]   (* ; "Now let TEDIT display it")
         [COND
            ((EQ EOF 0)
             (LAB.PROMPTPRINT MAILFOLDER "Message is empty"))
            (T [LET (WINDOW)
                    (if (NOT FILTERED)
                        then                             (* ; 
                                                           "Go ahead and display it right off. ")
                              (SETQ PROPS (NCONC PROPS WINDOWPROPS))
                              (SETQ WINDOW DISPLAYWINDOW))
                    (SETQ TEXTSTREAM (OR (CAR (NLSETQ (OPENTEXTSTREAM TEXTFILE WINDOW NIL NIL PROPS))
                                              )
                                         (PROGN (LAB.PROMPTPRINT MAILFOLDER T 
                                                   "Problems displaying message, trying unformatted."
                                                       )
                                                (OPENTEXTSTREAM TEXTFILE WINDOW NIL NIL
                                                       (LIST* 'CLEARGET T PROPS]
               (if FILTERED
                   then (if (NOT (= EOF (GETEOFPTR TEXTSTREAM)))
                                then                     (* ; 
                  "rats, there may have been nschars in the header, so parse it now more carefully")
                                      (SETQ FILTERED (LAFITE.NEW.PARSE.HEADER TEXTSTREAM 
                                                            \LAPARSE.DONT.DISPLAY.HEADERS 0)))
                         (\LAFITE.HIDE.HEADERS TEXTSTREAM FILTERED) 
                                                             (* ; 
                                                     "Now we can display it without a major glitch")
                         (OPENTEXTSTREAM TEXTSTREAM DISPLAYWINDOW NIL NIL WINDOWPROPS)
                         (TEXTPROP TEXTSTREAM 'FILTERED FILTERED) 
                                                             (* ; 
                                              "Remember what's invisible, so we can easily undo it")
                      )
               (COND
                  (LAFITEENDOFMESSAGESTR                     (* ; 
                   "Add %"End of message%" token.  Have to take away READONLY for a moment here...")
                         (TEXTPROP TEXTSTREAM 'READONLY NIL)
                         [SETFILEPTR TEXTSTREAM (SUB1 (SETQ EOF (GETEOFPTR TEXTSTREAM]
                         (COND
                            ((NEQ (BIN TEXTSTREAM)
                                  (CHARCODE CR))             (* ; 
                        "Message doesn't end in CR, so add one before inserting end of message str")
                             (TEDIT.INSERT TEXTSTREAM LAFITEEOL (ADD1 (add EOF 1))
                                    NIL T)))
                         (TEDIT.INSERT TEXTSTREAM LAFITEENDOFMESSAGESTR (ADD1 EOF)
                                LAFITEENDOFMESSAGEFONT T)
                         (TEXTPROP TEXTSTREAM 'READONLY T)
                         (TEDIT.SETSEL TEXTSTREAM 1 0)
                         (\CARET.DOWN)                       (* ; "Patch around TEdit bug")
                         ]
         DISPLAYWINDOW])

(LA.COPY.MESSAGE.TEXT
  [LAMBDA (MAILFOLDER MSGDESCRIPTOR NEWWINDOWFLG)        (* ; "Edited 27-Jun-99 22:47 by rmk:")
                                                             (* ; "Edited 27-Jun-99 22:44 by rmk:")
                                                             (* ; "Edited 25-Jun-99 18:30 by rmk:")
    (LET (OUTPUTSTREAM (INSTREAM (\LAFITE.OPEN.FOLDER MAILFOLDER 'INPUT :ABORT)))
         (SETQ OUTPUTSTREAM (OPENSTREAM '{NODIRCORE} 'BOTH))
         (COPYBYTES INSTREAM OUTPUTSTREAM (fetch (LAFITEMSG START) of MSGDESCRIPTOR)
                (fetch (LAFITEMSG END) of MSGDESCRIPTOR))
         (CLOSEF OUTPUTSTREAM)
         (OPENSTREAM OUTPUTSTREAM 'INPUT NIL '((ENDOFSTREAMOP \LAFITE.EOF])

(\LAFITE.CLOSE.DISPLAYWINDOWS
  [LAMBDA (FOLDER)                                       (* ; "Edited 22-Sep-87 15:36 by bvm:")

    (* ;; "Called when browser closed, to close associated windows.")

    (PROG ((WINDOWS (fetch (MAILFOLDER FOLDERDISPLAYWINDOWS) of FOLDER))
           W)
          (replace (MAILFOLDER CURRENTDISPLAYEDMESSAGE) of FOLDER with NIL)
          (replace (MAILFOLDER CURRENTDISPLAYEDSTREAM) of FOLDER with NIL)
          (COND
             (WINDOWS (for WINDOW in (CDR WINDOWS) do 
                                                             (* ; 
                                   "Leave secondary windows open, but disconnect them from browser")
                                                                 (WINDOWDELPROP
                                                                  WINDOW
                                                                  'CLOSEFN
                                                                  (FUNCTION \LAFITE.CLOSE.DISPLAYER))
                             )
                    (COND
                       ((WINDOWP (SETQ W (CAR WINDOWS)))     (* ; "Save region for later")
                        [replace (MAILFOLDER FOLDERDISPLAYREGION) of FOLDER
                           with (APPEND (WINDOWPROP W 'REGION]
                        (WINDOWDELPROP W 'CLOSEFN (FUNCTION \LAFITE.CLOSE.DISPLAYER))
                        (CLOSEW W)))
                    (replace (MAILFOLDER FOLDERDISPLAYWINDOWS) of FOLDER with NIL])

(\LAFITE.CLOSE.DISPLAYER
  [LAMBDA (WINDOW)                                       (* ; "Edited 16-Aug-89 11:27 by bvm")

    (* ;; "called via CLOSEFN when a display window is explicitly closed")

    (MAPC (WINDOWPROP WINDOW 'EXTRAWINDOWS NIL)
          (FUNCTION CLOSEW))
    (for FOLDER in \ACTIVELAFITEFOLDERS bind THESEWINDOWS
       when (MEMB WINDOW (SETQ THESEWINDOWS (fetch (MAILFOLDER FOLDERDISPLAYWINDOWS)
                                                   of FOLDER)))
       do                                                (* ; "Do we need a monitorlock here?")
             (replace (MAILFOLDER CURRENTDISPLAYEDMESSAGE) of FOLDER with NIL)
             (replace (MAILFOLDER CURRENTDISPLAYEDSTREAM) of FOLDER with NIL)
             [if (EQ WINDOW (CAR THESEWINDOWS))
                 then                                    (* ; 
                                                           "the main window--keep its region")
                       [replace (MAILFOLDER FOLDERDISPLAYREGION) of FOLDER
                          with (APPEND (WINDOWPROP WINDOW 'REGION]
                       (if (CDR THESEWINDOWS)
                           then (RPLACA THESEWINDOWS NIL)
                         else (replace (MAILFOLDER FOLDERDISPLAYWINDOWS) of FOLDER
                                     with NIL))
               else                                      (* ; "floating window, just remove")
                     (RPLACD THESEWINDOWS (DREMOVE WINDOW (CDR THESEWINDOWS]
             (RETURN])
)
(DEFINEQ

(\LAFITE.UNHIDE.HEADERS
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited 10-Dec-87 19:48 by bvm:")
    (LET ((FILTERED (TEXTPROP TEXTSTREAM 'FILTERED))
          START W)
         (if (OR (NULL FILTERED)
                     (TEXTPROP TEXTSTREAM 'VISIBLE))
             then (PROMPTPRINT "The whole message is already displayed")
           else (TEXTPROP TEXTSTREAM 'READONLY NIL)
                 (TEDIT.LOOKS TEXTSTREAM '(INVISIBLE OFF)
                        [ADD1 (SETQ START (CAAR (LAST FILTERED]
                        (- (CADAR FILTERED)
                           START))
                 (TEDIT.SETSEL TEXTSTREAM 1 0)
                 (TEXTPROP TEXTSTREAM 'VISIBLE T)
                 (TEXTPROP TEXTSTREAM 'READONLY T)
                 (if (SETQ W (LA.WINDOW.FROM.TEXTSTREAM TEXTSTREAM))
                     then                                (* ; "Remove the * from the title.")
                           (WINDOWPROP W 'TITLE (SUBSTRING (WINDOWPROP W 'TITLE)
                                                       2])

(\LAFITE.HIDE.HEADERS
  [LAMBDA (TEXTSTREAM FILTERED)                          (* ; "Edited 10-Dec-87 19:44 by bvm:")
    [for PAIR in FILTERED do                     (* ; 
                                                           "Make each filtered field invisible")
                                        (TEDIT.LOOKS TEXTSTREAM '(INVISIBLE ON)
                                               (+ (CAR PAIR)
                                                  1)
                                               (- (CADR PAIR)
                                                  (CAR PAIR]
    (TEDIT.SETSEL TEXTSTREAM 1 0])

(\LAFITE.REHIDE.HEADERS
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited 10-Dec-87 19:44 by bvm:")

    (* ;; "Called from display window menu to hide the headers again after having them unhidden.")

    (LET ((FILTERED (TEXTPROP TEXTSTREAM 'FILTERED))
          START W)
         (if (NULL FILTERED)
             then (PROMPTPRINT "No uninteresting header fields were found")
           elseif (NOT (TEXTPROP TEXTSTREAM 'VISIBLE))
             then (PROMPTPRINT "Uninteresting headers are already hidden")
           else (TEXTPROP TEXTSTREAM 'READONLY NIL)
                 (\LAFITE.HIDE.HEADERS TEXTSTREAM FILTERED)
                 (TEXTPROP TEXTSTREAM 'VISIBLE NIL)
                 (TEXTPROP TEXTSTREAM 'READONLY T)
                 (if (SETQ W (LA.WINDOW.FROM.TEXTSTREAM TEXTSTREAM))
                     then                                (* ; "Add * back to the title.")
                           (WINDOWPROP W 'TITLE (CONCAT "*" (WINDOWPROP W 'TITLE])

(LAFITE.EAT.UNDESIRABLE.FIELD
  [LAMBDA (STREAM IGNORE)                                (* ; "Edited 23-Sep-87 13:12 by bvm:")

    (* ;; "Parser function called when a field to be filtered is found--skip over the field, and push onto the result a pair giving (start stop) of the whole field.")

    (DECLARE (USEDFREE PARSERESULT PARSEBEGIN))          (* ; "bound in parser")
    (LA.SKIP.TO.EOL STREAM)
    (if [AND PARSERESULT (= PARSEBEGIN (CADR (CAR PARSERESULT]
        then                                             (* ; "two in a row--combine them")
              (CL:SETF (CADR (CAR PARSERESULT))
                     (GETFILEPTR STREAM))
      else (push PARSERESULT (LIST PARSEBEGIN (GETFILEPTR STREAM])

(LAFITE.EAT.GVGV
  [LAMBDA (STREAM)                                       (* ; "Edited  6-Feb-89 14:18 by bvm")
    (DECLARE (USEDFREE PARSERESULT))

    (* ;; "Called when we get to the CR at the end of the header.  Now look for a section of thext beginning and ending in lines of the form GVGVGVGV...")

    (LET ((HERE (GETFILEPTR STREAM))
          GVSTART GVEND)
         (if (AND (EQ (SKIPSEPRCODES STREAM)
                          (CHARCODE G))
                      [PROGN (SETQ GVSTART (GETFILEPTR STREAM))
                             (bind CH until (EQ (SETQ CH (BIN STREAM))
                                                        (CHARCODE EOL))
                                always (OR (EQ CH (CHARCODE G))
                                               (EQ CH (CHARCODE V]
                      (SETQ GVEND (FFILEPOS "GVGVGV

" STREAM NIL NIL NIL T)))
             then (push PARSERESULT (LIST GVSTART GVEND)))
         (SETFILEPTR STREAM HERE)                            (* ; 
                                                           "Return STOP to tell parser to stop")
         'STOP])

(\LAFITE.HARDCOPY.FROM.DISPLAY
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited 10-Jun-88 18:36 by bvm")

    (* ;; "Hardcopy command on title bar of message display -- like window hardcopy, but gets the title right and omits the end of message string.")

    (RESETLST
        [if LAFITEENDOFMESSAGESTR
            then                                         (* ; "Hide end of message")
            (LET [(LEN (GETEOFPTR TEXTSTREAM))
                  (NC (NCHARS LAFITEENDOFMESSAGESTR))
                  (FIXEDLOOKS (TEXTPROP TEXTSTREAM 'LAFITEFIXEDLOOKS]
                 (RESETSAVE
                  NIL
                  (LIST [FUNCTION (LAMBDA (TEXTSTREAM LEN NC FIXEDLOOKS)
                                    (LET ((W (LA.WINDOW.FROM.TEXTSTREAM TEXTSTREAM)))
                                         (if (AND W (OPENWP W)
                                                      (EQ (WINDOWPROP W 'TEXTSTREAM)
                                                          TEXTSTREAM))
                                             then        (* ; 
                                    "Don't screw around if the message isn't in the window anymore")
                                                   (TEDIT.LOOKS TEXTSTREAM '(INVISIBLE OFF)
                                                          (ADD1 (- LEN NC))
                                                          NC)
                                                   (TEDIT.SETSEL TEXTSTREAM 1 0)
                                                   (TEXTPROP TEXTSTREAM 'READONLY T)
                                                   (if FIXEDLOOKS
                                                       then (LAFITE.SET.TAB.LOOKS
                                                                 TEXTSTREAM FIXEDLOOKS
                                                                 (TIMES 8 (CHARWIDTH (CHARCODE X)
                                                                                 LAFITEFIXEDWIDTHFONT
                                                                                 ]
                        TEXTSTREAM LEN NC FIXEDLOOKS))
                 (TEXTPROP TEXTSTREAM 'READONLY NIL)
                 (TEDIT.LOOKS TEXTSTREAM '(INVISIBLE ON)
                        (ADD1 (- LEN NC))
                        NC)
                 (if FIXEDLOOKS
                     then                                (* ; 
                                                           "Change to the hardcopy tab width")
                           (LAFITE.SET.TAB.LOOKS TEXTSTREAM FIXEDLOOKS (
                                                                          LAFITE.HARDCOPY.TAB.WIDTH
                                                                            ]
        [TEDIT.HARDCOPY TEXTSTREAM NIL NIL (LET ((TMP (LA.WINDOW.FROM.TEXTSTREAM TEXTSTREAM)))
                                                (AND TMP (SETQ TMP (WINDOWPROP TMP 'TITLE))
                                                     (if (EQ (CHCON1 TMP)
                                                                 (CHARCODE *))
                                                         then 
                                                             (* ; "Remove the * that says filtered")
                                                               (SUBSTRING TMP 2)
                                                       else TMP])])

(LAFITE.HARDCOPY.TAB.WIDTH
  [LAMBDA NIL                                            (* ; "Edited 10-Jun-88 18:27 by bvm")
    (FIXR (TIMES (FQUOTIENT (CHARWIDTH (CHARCODE X)
                                   (FONTCOPY LAFITEFIXEDWIDTHFONT 'DEVICE 'INTERPRESS))
                        (CONSTANT (FQUOTIENT 2540 72)))
                 8])
)
(DEFINEQ

(\LAFITE.SET.LOOKS.FROM.MENU
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited 22-Sep-87 12:43 by bvm:")
    (LAFITE.SET.LOOKS TEXTSTREAM T])

(\LAFITE.SET.DEFAULT.LOOKS
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited 22-Sep-87 12:33 by bvm:")
    (LAFITE.SET.LOOKS TEXTSTREAM LAFITEDISPLAYFONT])

(\LAFITE.SET.FIXED.LOOKS
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited 22-Sep-87 12:43 by bvm:")
    (LAFITE.SET.LOOKS TEXTSTREAM LAFITEFIXEDWIDTHFONT])

(LAFITE.SET.LOOKS
  [LAMBDA (TEXTSTREAM NEWLOOKS PARALOOKS OMITHEADER USERFN)
                                                             (* ; "Edited  3-Nov-89 14:50 by bvm")

    (* ;; "Called from Looks (sub)commands of Lafite display window.  Change the looks of the current selection (if there is an interesting one) or the whole message to be NEWLOOKS.  If NEWLOOKS is T, we use TEdit's menu interface.  PARALOOKS is for paragraph formatting.  USERFN is arbitrary function called with arg textstream & selection set appropriately.  Any of NEWLOOKS, PARALOOKS, USERFN can be NIL.  If OMITHEADER is true, the header is left out of the modification if user has not selected a region of text already.")

    (RESETLST
        (RESETSAVE NIL (LIST 'TEXTPROP TEXTSTREAM 'READONLY T))
        (TEXTPROP TEXTSTREAM 'READONLY NIL)
        (LET ((SEL (TEDIT.GETSEL TEXTSTREAM))
              START LEN WIDTH FIXEDLOOKS)
             [if (AND (NOT PARALOOKS)
                          (FONTP NEWLOOKS)
                          (EQ (SETQ WIDTH (CHARWIDTH (CHARCODE "i")
                                                 NEWLOOKS))
                              (CHARWIDTH (CHARCODE "W")
                                     NEWLOOKS)))
                 then                                    (* ; "If font is fixed-width, let's make the tab the right width.  Might be nice to restore default tab if it's not fixed-width, but TEdit apparently doesn't support that.")
                       (SETQ FIXEDLOOKS (SETQ PARALOOKS `(TABS (,(TIMES WIDTH 8]
             (if (> (SETQ LEN (fetch (SELECTION DCH) of SEL))
                        1)
                 then                                    (* ; "User has already selected something.  Assume any selection greater than a single character is not accidental.")
                       (if (AND FIXEDLOOKS (NEQ (SETQ FIXEDLOOKS (TEXTPROP TEXTSTREAM
                                                                            'LAFITEFIXEDLOOKS))
                                                    T))
                           then 

                                 (* ;; "Record the portions we have so marked, so hardcopy can work right--T means everything.  If FIXEDLOOKS is false, might want to unset, but that's tedious, unlikely to be worth the hairy code")

                                 (TEXTPROP TEXTSTREAM 'LAFITEFIXEDLOOKS
                                        (CONS (CONS (fetch (SELECTION CH#) of SEL)
                                                    LEN)
                                              FIXEDLOOKS)))
               else (SETQ START (if OMITHEADER
                                        then             (* ; 
                                                  "Start after the blank line following the header")
                                              (\LAFITE.HEADER.EOF TEXTSTREAM)
                                      else 0))
                     (SETQ LEN (- (GETEOFPTR TEXTSTREAM)
                                  (if LAFITEENDOFMESSAGESTR
                                      then (NCHARS LAFITEENDOFMESSAGESTR)
                                    else 0)
                                  START))
                     (TEDIT.SETSEL TEXTSTREAM (ADD1 START)
                            LEN
                            'RIGHT)
                     (if FIXEDLOOKS
                         then                            (* ; "The whole thing is fixed now")
                               (TEXTPROP TEXTSTREAM 'LAFITEFIXEDLOOKS T)))

             (* ;; "Now do the modification")

             (if (EQ NEWLOOKS T)
                 then                                    (* ; "Use menu")
                       (\TEDIT.LOOKS (TEXTOBJ TEXTSTREAM))
               elseif NEWLOOKS
                 then (TEDIT.LOOKS TEXTSTREAM NEWLOOKS))
             (if PARALOOKS
                 then                                    (* ; "Paragraph looks")
                       (TEDIT.PARALOOKS TEXTSTREAM PARALOOKS))
             (if USERFN
                 then                                    (* ; "Arbitrary user manipulation.")
                       (CL:FUNCALL USERFN TEXTSTREAM))

             (* ;; "Finally, set selection back to where it was.")

             (TEDIT.SETSEL TEXTSTREAM SEL)))])

(LAFITE.SET.TAB.LOOKS
  [LAMBDA (TEXTSTREAM FIXEDLOOKS TABWIDTH)               (* ; "Edited 11-Jun-88 17:07 by bvm")
    (LET ([LOOKS `(TABS (,TABWIDTH]
          (SEL (TEDIT.GETSEL TEXTSTREAM)))
         [if (EQ FIXEDLOOKS T)
             then (TEDIT.PARALOOKS TEXTSTREAM LOOKS 1 (GETEOFPTR TEXTSTREAM))
           else (for PAIR in FIXEDLOOKS do (TEDIT.PARALOOKS TEXTSTREAM LOOKS
                                                                  (CAR PAIR)
                                                                  (CDR PAIR]
                                                             (* ; "Finally, restore selection")
         (TEDIT.SETSEL TEXTSTREAM SEL])

(LAFITE.SET.PARA.SEPARATION
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited 29-Aug-89 14:53 by bvm")
    (LAFITE.SET.LOOKS TEXTSTREAM NIL '(PARALEADING 10)
           T])

(LAFITE.SET.LOWER.CASE
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited  7-Nov-89 13:06 by bvm")

    (* ;; "Called from Looks (sub)commands of Lafite display window.  Change the current selection (if there is an interesting one) or the whole message to be lowercase.")

    (LAFITE.SET.LOOKS TEXTSTREAM NIL NIL T (FUNCTION (LAMBDA (TEXTSTREAM)
                                                           (LET ((STR (TEDIT.SEL.AS.STRING TEXTSTREAM
                                                                             )))
                                                                (TEDIT.DELETE TEXTSTREAM)
                                                                (TEDIT.INSERT TEXTSTREAM (L-CASE
                                                                                          STR])

(LAFITE.SUBSTITUTE.VP.EOL
  [LAMBDA (TEXTSTREAM)                                   (* ; "Edited  4-Aug-89 16:55 by bvm")

    (* ;; 
  "Called from Looks (sub)commands of Lafite display window.  Replace VP eol (29) with ours.")

    (RESETLST
        (RESETSAVE NIL (LIST 'TEXTPROP TEXTSTREAM 'READONLY T))
        (TEXTPROP TEXTSTREAM 'READONLY NIL)
        (LET* ((SEL (TEDIT.GETSEL TEXTSTREAM))
               (LEN (fetch (SELECTION DCH) of SEL))
               POS)
              (if (<= LEN 1)
                  then                                   (* ; 
 "If user has already selected something (more than a single character), assume is not accidental.")
                        (SETQ POS (CADAR (LAFITE.PARSE.HEADER TEXTSTREAM NIL NIL NIL NIL T)))
                        (TEDIT.SETSEL TEXTSTREAM POS (- (GETEOFPTR TEXTSTREAM)
                                                        (if LAFITEENDOFMESSAGESTR
                                                            then (NCHARS LAFITEENDOFMESSAGESTR)
                                                          else 0)
                                                        POS)))
              (TEDIT.SUBSTITUTE TEXTSTREAM (ALLOCSTRING 1 29)
                     (ALLOCSTRING 1 (CHARCODE EOL)))
              (if POS
                  then                                   (* ; "Undo the selection")
                        (TEDIT.SETSEL TEXTSTREAM 1 0))))])
)

(RPAQ? \LAFITE.DISPLAY.COMMANDS NIL)

(ADDTOVAR LAFITE.EXTRA.DISPLAY.COMMANDS ("Looks" '\LAFITE.SET.LOOKS.FROM.MENU 
                   "Change the appearance of the selected text, or whole message if nothing selected"
                                               )
                                        ("Hardcopy" '\LAFITE.HARDCOPY.FROM.DISPLAY 
                                               "Hardcopy this message in its current appearance")
                                        ("Unhide" '\LAFITE.UNHIDE.HEADERS 
                                               "Display the header fields that are hidden from view."
                                               (SUBITEMS ("Hide" '\LAFITE.REHIDE.HEADERS 
                                                          "Hide uninteresting fields from view again"
                                                                ))))

(ADDTOVAR LAFITE.LOOKS.SUBCOMMANDS ("VP Line Breaks" 'LAFITE.SUBSTITUTE.VP.EOL 
                                          "Replace the Viewpoint end of line character with ours.")
                                   ("Lowercase" 'LAFITE.SET.LOWER.CASE 
                                          "Lowercase the region or whole message.")
                                   ("Spread Paragraphs" 'LAFITE.SET.PARA.SEPARATION 
                                      "Separate paragraphs by 10 points (useful for Tioga messages)."
                                          )
                                   ("Default" '\LAFITE.SET.DEFAULT.LOOKS 
                                          "Change selection (or whole text) back to default font")
                                   ("Fixed Width" '\LAFITE.SET.FIXED.LOOKS 
                                          "Change selection (or whole text) to fixed-width font"))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS \LAFITE.DISPLAY.COMMANDS)
)



(* ; "DELETE")

(DEFINEQ

(LAFITE.DELETE.MESSAGES
  [LAMBDA (FOLDER MESSAGES)                              (* ; "Edited 31-Aug-88 12:47 by bvm")

    (* ;; "Programmatic entrypoint to delete a single MSG (# or msg object) from FOLDER.  FOLDER must have a browser.")

    (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of FOLDER)
        (for MSG inside MESSAGES do (DELETEMESSAGE
                                                 (if (type? LAFITEMSG MSG)
                                                     then MSG
                                                   else (NTHMESSAGE (fetch (MAILFOLDER 
                                                                                   MESSAGEDESCRIPTORS
                                                                                          )
                                                                           of FOLDER)
                                                                   MSG))
                                                 FOLDER)))])

(\LAFITE.DELETE
  [LAMBDA (WINDOW MAILFOLDER ITEM MENU)                  (* ; "Edited 30-Aug-88 11:42 by bvm")
    (SHADEITEM ITEM MENU LAFITEITEMBUSYSHADE)
    (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
        (\LAFITE.MAYBE.CLEAR.PROMPT MAILFOLDER)
        (OR (LAB.ASSURE.SELECTIONS MAILFOLDER)
            (for MSGDESCRIPTOR selectedin MAILFOLDER when (NOT (fetch (LAFITEMSG
                                                                                       DELETED?)
                                                                              of MSGDESCRIPTOR))
               do                                        (* ; 
                          "delete all the currrently selected messages that aren't already deleted")
                     (DELETEMESSAGE MSGDESCRIPTOR MAILFOLDER) finally (SHADEITEM ITEM MENU 
                                                                                 WHITESHADE)
                                                                    (DISPLAYAFTERDELETE 
                                                                           MAILFOLDER WINDOW))))])

(DISPLAYAFTERDELETE
  [LAMBDA (FOLDER WINDOW)                                (* ; "Edited 29-Aug-88 15:34 by bvm")

(* ;;; "Maybe select and maybe display the next message after a deletion, according to setting of LAFITEDISPLAYAFTERDELETEFLG --- T means display next if the deleted one is the one currently displayed and the next message is undeleted and unseen --- ALWAYS means display the next undeleted message if the deleted one is the one currently displayed;  if it's not currently displayed, merely select the next undeleted message --- MULTIPLE means ALWAYS plus when the selection is multiple, still advance to next undeleted msg.")

    (COND
       (LAFITEDISPLAYAFTERDELETEFLG
        (LET ((FIRST# (fetch (MAILFOLDER FIRSTSELECTEDMESSAGE) of FOLDER))
              CURRENT LASTMSG# MESSAGES MENU)
             (COND
                [(NEQ FIRST# (fetch (MAILFOLDER LASTSELECTEDMESSAGE) of FOLDER))

                 (* ;; "More than one message was selected.  Only do something if flag says MULTIPLE -- select but don't display next message")

                 (COND
                    ((EQ LAFITEDISPLAYAFTERDELETEFLG 'MULTIPLE)
                     (\LAFITE.SELECT.NEXT FOLDER FIRST#]
                ((OR (NOT (SETQ CURRENT (fetch (MAILFOLDER CURRENTDISPLAYEDMESSAGE) of FOLDER
                                               )))
                     (NEQ FIRST# (fetch (LAFITEMSG %#) of CURRENT)))
                                                             (* ; 
                                               "Deleted message is not the one currently displayed")
                 (SELECTQ LAFITEDISPLAYAFTERDELETEFLG
                     ((ALWAYS MULTIPLE)                      (* ; 
                                                           "select but don't display next message")
                          (\LAFITE.SELECT.NEXT FOLDER FIRST#))
                     NIL))
                ([SELECTQ LAFITEDISPLAYAFTERDELETEFLG
                     ((ALWAYS MULTIPLE)                      (* ; 
                                                    "Always do it, assuming there's a next message")
                          (\LAFITE.SELECT.NEXT FOLDER FIRST#))
                     (AND (NEQ FIRST# (SETQ LASTMSG# (fetch (MAILFOLDER %#OFMESSAGES)
                                                        of FOLDER)))
                          [NOT (fetch (LAFITEMSG DELETED?) of (NTHMESSAGE
                                                                       (SETQ MESSAGES
                                                                        (fetch (MAILFOLDER 
                                                                                   MESSAGEDESCRIPTORS
                                                                                          )
                                                                           of FOLDER))
                                                                       (ADD1 FIRST#]
                          (for I from (ADD1 FIRST#) to LASTMSG# bind NEXTMSG
                             do 

                                 (* ;; "Next message undeleted, so maybe display it.  LAFITEDISPLAYAFTERDELETEFLG = T means only do so if it is unexamined.  However, messages from us are usually already examined, so pretend the message is unexamined if there is some unexamined message immediately after any from me")

                                   (COND
                                      ([NOT (fetch (LAFITEMSG SEEN?) of (SETQ NEXTMSG
                                                                                 (NTHMESSAGE MESSAGES
                                                                                        I]
                                                             (* ; "An unexamined message, ok")
                                       (RETURN T))
                                      ((NOT (fetch (LAFITEMSG MSGFROMMEP) of NEXTMSG))
                                                             (* ; 
                              "Not from me, but examined, so must not be in the stream of new mail")
                                       (RETURN NIL]
                 (\LAFITE.DISPLAY WINDOW FOLDER (LA.MENU.ITEM (FUNCTION \LAFITE.DISPLAY)
                                                           (SETQ MENU (fetch (MAILFOLDER 
                                                                                        BROWSERMENU)
                                                                         of FOLDER)))
                        MENU])

(\LAFITE.SELECT.NEXT
  [LAMBDA (MAILFOLDER AFTER#)                            (* ; "Edited 23-Aug-88 18:35 by bvm")

(* ;;; "Select the next undeleted message in MAILFOLDER following AFTER# and return the msg, or NIL if there are no more")

    (for N from (ADD1 AFTER#) to (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER)
       bind (MESSAGES _ (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of MAILFOLDER))
             MSG unless (fetch (LAFITEMSG DELETED?) of (SETQ MSG (NTHMESSAGE MESSAGES N))
                                   ) do (RETURN (LAB.GO.TO.MESSAGE MAILFOLDER MSG])

(\LAFITE.UNDELETE
  [LAMBDA (WINDOW MAILFOLDER ITEM MENU)                  (* bvm%: "28-Mar-84 14:48")
    (RESETLST
        (LA.RESETSHADE ITEM MENU)
        (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
            (\LAFITE.MAYBE.CLEAR.PROMPT MAILFOLDER)
            (OR (LAB.ASSURE.SELECTIONS MAILFOLDER)
                (for MSGDESCRIPTOR selectedin MAILFOLDER when (fetch (LAFITEMSG
                                                                                      DELETED?)
                                                                             of MSGDESCRIPTOR)
                   do (UNDELETEMESSAGE MSGDESCRIPTOR MAILFOLDER)))))])
)



(* ; "MOVE")

(DEFINEQ

(LAFITE.MOVE.MESSAGES
  [LAMBDA (SOURCEFOLDER DESTINATIONFOLDER MESSAGES COPYFLG)
                                                             (* ; "Edited 13-Sep-88 18:38 by bvm")

    (* ;; "Programmatic entry to move (or copy if COPYFLG true) specified MESSAGES from SOURCEFOLDER to DESTINATIONFOLDER.  Returns T on success.")

    (AND MESSAGES (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of SOURCEFOLDER)
                      (\LAFITE.MOVE.MESSAGES.INTERNAL SOURCEFOLDER DESTINATIONFOLDER
                             (\COERCE.TO.MSGLST MESSAGES SOURCEFOLDER)
                             NIL NIL COPYFLG))])

(\COERCE.TO.MSGLST
  [LAMBDA (MSGLST FOLDER)                                (* ; "Edited 30-Aug-88 14:11 by bvm")

    (* ;; "Accepts a singleton or list of LAFITEMSG objects or numbers relative to FOLDER and returns a list of LAFITEMSG objects")

    (if (AND (CL:LISTP MSGLST)
                 (for M in MSGLST always (type? LAFITEMSG M)))
        then MSGLST
      else (LET ((MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER)))
                    (for M inside MSGLST collect (if (type? LAFITEMSG M)
                                                                 then M
                                                               else (NTHMESSAGE MESSAGES M])

(\LAFITE.MOVETO
  [LAMBDA (WINDOW MAILFOLDER ITEM MENU KEY COPYFLG)      (* ; "Edited 13-Sep-88 18:33 by bvm")
    (PROG ((BROWSERPROMPTWINDOW (fetch (MAILFOLDER BROWSERPROMPTWINDOW) of MAILFOLDER))
           LONGFORMP TOFILE OUTPUTFILE DESTINATIONFOLDER MIDDLESELECTED)
          (CLEARW BROWSERPROMPTWINDOW)
          (COND
             ((LAB.ASSURE.SELECTIONS MAILFOLDER)             (* ; "Nothing to move")
              (RETURN)))
          [COND
             ((AND (EQ KEY 'MIDDLE)
                   (SETQ DESTINATIONFOLDER (fetch (MAILFOLDER DEFAULTMOVETOFILE) of 
                                                                                           MAILFOLDER
                                                  )))        (* ; "Accelerator: don't use menu.  We will still re-obtain the destination folder below, since the pointer sitting in the folder may be to a long-closed folder.")
              (SETQ MIDDLESELECTED T)
              (SETQ OUTPUTFILE (fetch (MAILFOLDER VERSIONLESSFOLDERNAME) of DESTINATIONFOLDER
                                      )))
             (T (CL:MULTIPLE-VALUE-SETQ (TOFILE LONGFORMP)
                       (\LAFITE.PROMPTFORFOLDER BROWSERPROMPTWINDOW))
                (if (NULL TOFILE)
                    then (RETURN NIL))
                (SETQ OUTPUTFILE (LA.LONGFILENAME TOFILE LAFITEMAIL.EXT))
                (COND
                   ((STRING-EQUAL OUTPUTFILE (fetch (MAILFOLDER VERSIONLESSFOLDERNAME)
                                                of MAILFOLDER))
                    (LAB.PROMPTPRINT MAILFOLDER T "This IS " TOFILE ", can't move to there.")
                    (RETURN NIL]
          (AND ITEM (SHADEITEM ITEM MENU LAFITEITEMBUSYSHADE))
          (COND
             (LONGFORMP                                      (* ; "if user had to type file longhand, don't confirm now (but there may be a confirmation for creation later on)")
                    )
             ((SELECTQ LAFITEMOVETOCONFIRMFLG
                  (NIL                                       (* ; "never confirm")
                       T)
                  (LEFT                                      (* ; 
                                                           "don't confirm when middle selected")
                        MIDDLESELECTED)
                  (MIDDLE                                    (* ; 
                                                           "confirm ONLY when middle selected")
                          (NOT MIDDLESELECTED))
                  NIL))
             [(LAB.MOUSECONFIRM MAILFOLDER "Click LEFT to confirm ~A ~@[of ~D msgs ~]to ~A"
                     (if COPYFLG
                         then "copy"
                       else "move")
                     (AND (< (fetch (MAILFOLDER FIRSTSELECTEDMESSAGE) of MAILFOLDER)
                             (fetch (MAILFOLDER LASTSELECTEDMESSAGE) of MAILFOLDER))
                          (for MSG selectedin MAILFOLDER sum 
                                                             (* ; "Count how many selected")
                                                                       1))
                     (if DESTINATIONFOLDER
                         then (fetch (MAILFOLDER SHORTFOLDERNAME) of DESTINATIONFOLDER)
                       else (LA.SHORTFILENAME OUTPUTFILE LAFITEMAIL.EXT]
             (T                                              (* ; "abort")
                (AND ITEM (SHADEITEM ITEM MENU WHITESHADE))
                (RETURN NIL)))
          (\LAFITE.PROCESS `(,(FUNCTION \LAFITE.MOVETO.PROC)
                             ',WINDOW
                             ',MAILFOLDER
                             ',OUTPUTFILE
                             ',ITEM
                             ',MENU NIL ',COPYFLG)
                 'LAFITEMOVE])

(\LAFITE.COPYTO
  [LAMBDA (FOLDER ITEM MENU KEY)                         (* ; "Edited 13-Sep-88 18:37 by bvm")
    (LET ((MENU (fetch (MAILFOLDER BROWSERMENU) of FOLDER)))
         (\LAFITE.MOVETO (fetch (MAILFOLDER BROWSERPROMPTWINDOW) of FOLDER)
                FOLDER
                (LA.MENU.ITEM (FUNCTION \LAFITE.MOVETO)
                       MENU)
                MENU NIL T])

(\LAFITE.MOVETO.PROC
  [LAMBDA (WINDOW SOURCEFOLDER DESTINATIONFULLNAME ITEM MENU FROM.AUTO.MENU COPYFLG)
                                                             (* ; "Edited 13-Sep-88 18:24 by bvm")

    (* ;; "Move selected messages from SOURCEFOLDER to the folder named by OUTPUTFILE.  If FROM.AUTO.MENU is true, it came from the auxiliary moveto menu.  Note that MENU is thus not necessarily SOURCEFOLDER's menu.")

    (if (RESETLST
                (LA.RESETSHADE ITEM MENU)
                (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of SOURCEFOLDER)
                       NIL T)
                (LET ((DESTINATIONFOLDER (LAFITE.OBTAIN.FOLDER DESTINATIONFULLNAME 'BOTH SOURCEFOLDER
                                                :CONFIRM)))
                     (if DESTINATIONFOLDER
                         then (\LAFITE.MOVE.MESSAGES.INTERNAL SOURCEFOLDER DESTINATIONFOLDER
                                         (LAB.SELECTED.MESSAGES SOURCEFOLDER)
                                         FROM.AUTO.MENU T COPYFLG))))
        then (if COPYFLG
                     then (LAB.PROMPTPRINT SOURCEFOLDER "Copy completed.")
                   else (DISPLAYAFTERDELETE SOURCEFOLDER WINDOW])

(\LAFITE.MOVE.MESSAGES.INTERNAL
  [LAMBDA (SOURCEFOLDER DESTINATIONFOLDER MSGLST FROM.AUTO.MENU INTERACTIVE COPYFLG)
                                                             (* ; "Edited  5-Aug-93 19:50 by bvm")

    (* ;; "Move the messages in MSGLST from SOURCEFOLDER to DESTINATIONFOLDER.  Caller must have acquired the lock on SOURCEFOLDER.  FROM.AUTO.MENU means the call was from the auxiliary move menu; INTERACTIVE means it was interactive call vs. programmatic.")

    (PROG (OUTPUTSTREAM MSGDESCRIPTORS OLDMOVETO)
          (COND
             ((NOT (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of DESTINATIONFOLDER)
                          T T))
              (LAB.PROMPTPRINT SOURCEFOLDER T "Waiting for " (fetch (MAILFOLDER SHORTFOLDERNAME)
                                                                of DESTINATIONFOLDER)
                     " to become available...")
              (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of DESTINATIONFOLDER)
                     NIL T)
              (LAB.PROMPTPRINT SOURCEFOLDER T)))
          (COND
             ([NOT (AND (\LAFITE.OPEN.FOLDER SOURCEFOLDER 'INPUT NIL)
                        (SETQ OUTPUTSTREAM (\LAFITE.OPEN.FOLDER DESTINATIONFOLDER 'BOTH :OK 
                                                  SOURCEFOLDER]
                                                             (* ; "Failed to open source or dest")
              (RETURN NIL)))
          [COND
             ((NEQ (SETQ OLDMOVETO (fetch (MAILFOLDER DEFAULTMOVETOFILE) of SOURCEFOLDER))
                   DESTINATIONFOLDER)
              (LET ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of SOURCEFOLDER)))
                   (replace (MAILFOLDER DEFAULTMOVETOFILE) of SOURCEFOLDER with 
                                                                                    DESTINATIONFOLDER
                          )
                   (WINDOWPROP WINDOW 'TITLE (LAB.TITLE.STRING SOURCEFOLDER))
                   (if [AND OLDMOVETO (NOT FROM.AUTO.MENU)
                                (OR LAFITE.AUTO.MOVE.MENU (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.NAMES]
                       then (\LAFITE.ADD.TO.MOVE.MENU SOURCEFOLDER DESTINATIONFOLDER 
                                       OLDMOVETO]
          (SETQ MSGDESCRIPTORS (for OLDMSG in MSGLST bind NEWMSG
                                                                   (INSTREAM _ (\LAFITE.OPEN.FOLDER
                                                                                SOURCEFOLDER
                                                                                'INPUT))
                                  collect (MAYBEVERIFYMSG OLDMSG SOURCEFOLDER)
                                        (SETFILEPTR OUTPUTSTREAM -1)
                                        (SETQ NEWMSG (NCREATE 'LAFITEMSG OLDMSG)) 
                                                             (* ; 
                                                           "New descriptor looks a lot like old")
                                        (replace (LAFITEMSG BEGIN) of NEWMSG
                                           with (GETFILEPTR OUTPUTSTREAM))
                                        (replace (LAFITEMSG MESSAGELENGTHCHANGED?) of NEWMSG
                                           with NIL)
                                        (replace (LAFITEMSG MARKSCHANGEDINFILE?) of NEWMSG
                                           with NIL)
                                        (replace (LAFITEMSG MARKSCHANGEDINTOC?) of NEWMSG
                                           with NIL)
                                        (replace (LAFITEMSG DELETED?) of NEWMSG with
                                                                                        NIL)
                                        (replace (LAFITEMSG SELECTED?) of NEWMSG with
                                                                                         NIL)
                                        (LA.PRINTHEADER OUTPUTSTREAM (- (fetch (LAFITEMSG 
                                                                                        MESSAGELENGTH
                                                                                          )
                                                                           of OLDMSG)
                                                                        (fetch (LAFITEMSG 
                                                                                          STAMPLENGTH
                                                                                          )
                                                                           of OLDMSG))
                                               NEWMSG)
                                        (PROGN               (* ; "Now the 3 flag bytes")
                                               (BOUT OUTPUTSTREAM UNDELETEDFLAG)
                                               (BOUT OUTPUTSTREAM (COND
                                                                     ((fetch (LAFITEMSG SEEN?)
                                                                         of OLDMSG)
                                                                      SEENFLAG)
                                                                     (T UNSEENFLAG)))
                                               (BOUT OUTPUTSTREAM (fetch (LAFITEMSG MARKCHAR)
                                                                     of OLDMSG))
                                               (BOUT OUTPUTSTREAM (CHARCODE CR)))
                                        (COPYBYTES INSTREAM OUTPUTSTREAM (fetch (LAFITEMSG START)
                                                                            of OLDMSG)
                                               (fetch (LAFITEMSG END) of OLDMSG))
                                        (if (NOT COPYFLG)
                                            then (MARKMESSAGE OLDMSG SOURCEFOLDER MOVETOMARK) 
                                                             (* ; "delete it")
                                                  (DELETEMESSAGE OLDMSG SOURCEFOLDER))
                                        NEWMSG))             (* ; "delete them from FROMFILE")
          [COND
             ((AND (fetch (MAILFOLDER BROWSERWINDOW) of DESTINATIONFOLDER)
                   (fetch (MAILFOLDER BROWSERREADY) of DESTINATIONFOLDER))
                                                             (* ; 
                                                        "now print them in the other window, if up")
              (LAB.APPENDMESSAGES DESTINATIONFOLDER MSGDESCRIPTORS))
             (T                                              (* ; "still have to update eof")
                (replace (MAILFOLDER FOLDEREOFPTR) of DESTINATIONFOLDER with (GETEOFPTR
                                                                                          
                                                                                         OUTPUTSTREAM
                                                                                          ]
          (RETURN T])
)



(* ; "Aux move")

(DEFINEQ

(\LAFITE.ENABLE.MOVE.MENU
  [LAMBDA (FOLDER)                                       (* ; "Edited 31-Aug-88 12:39 by bvm")

    (* ;; "Bring up a menu of folders attached to FOLDER's browser for accelerated MoveTo")

    (LET* ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
           (ITEMS (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.NAMES))
           (OLDDEFAULT (fetch (MAILFOLDER DEFAULTMOVETOFILE) of FOLDER)))
          (LAB.PROMPTPRINT FOLDER T "Specify which folders to include in the accelerated menu.")
          (if OLDDEFAULT
              then (CL:PUSHNEW (fetch (MAILFOLDER SHORTFOLDERNAME) of OLDDEFAULT)
                              ITEMS :TEST 'STRING-EQUAL))
          (if (SETQ ITEMS (LAFITE.SELECT.FOLDERS ITEMS))
              then                                       (* ; "Didn't abort")
                    (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.NAMES ITEMS)
                    (\LAFITE.UPDATE.MOVE.MENU FOLDER T))
          (LAB.PROMPTPRINT FOLDER T])

(\LAFITE.ADD.TO.MOVE.MENU
  [LAMBDA (FOLDER NEWFOLDER OLDFOLDER)                   (* ; "Edited 31-Aug-88 12:43 by bvm")

    (* ;; "Add NEWFOLDER to FOLDER's auto move menu, creating it if necessary, in which case also include OLDFOLDER")

    (PROG* ((NEWNAME (fetch (MAILFOLDER SHORTFOLDERNAME) of NEWFOLDER))
            (WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
            (OLDITEMS (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.NAMES))
            (ITEMS OLDITEMS))
           (COND
              [(NULL ITEMS)
               (SETQ ITEMS (LIST NEWNAME))
               (if OLDFOLDER
                   then (push ITEMS (fetch (MAILFOLDER SHORTFOLDERNAME) of OLDFOLDER]
              ((CL:MEMBER NEWNAME ITEMS :TEST 'STRING-EQUAL) (* ; "Nothing new to do")
               (RETURN))
              (T (push ITEMS NEWNAME)))
           (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.NAMES ITEMS)
           (\LAFITE.UPDATE.MOVE.MENU FOLDER (NULL OLDITEMS])

(\LAFITE.UPDATE.MOVE.MENU
  [LAMBDA (FOLDER FORCE)                                 (* ; "Edited 23-Aug-89 12:21 by bvm")

    (* ;; "Called when someone has changed the set of folder names in FOLDER's auto move menu.  This function creates a new menu.  If the menu is not currently open, we don't open one unless FORCE is true.")

    (PROG* ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
            (MENUW (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.MENU))
            HOW POSITION TITLE)
           (if (NOT (OPENWP WINDOW))
               then                                      (* ; "Maybe the browser is shrunk.  The system doesn't know how to attach to shrunken windows, so just punt it")
                     (RETURN)
             elseif MENUW
               then                                      (* ; 
                                                           "Remove the old window and make a new")
                     (DETACHWINDOW MENUW WINDOW)
                     (CLOSEW MENUW)
             elseif (NULL FORCE)
               then (RETURN))
           [SETQ POSITION (SELECTQ (SETQ HOW LAFITE.AUTO.MOVE.MENU)
                              ((LEFT RIGHT) 
                                   'TOP)
                              ((BOTTOM TOP) 
                                   'LEFT)
                              (PROGN (SETQ HOW 'RIGHT)
                                     'TOP]
           [CL:MULTIPLE-VALUE-BIND (NCOLUMNS ITEMS)
                  (\LAFITE.ARRANGE.MENU (APPEND (SORT (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.NAMES)
                                                      (FUNCTION UALPHORDER))
                                               (AND LAFITE.EXTRA.MOVE.ITEMS
                                                    (CONS '("" 'NILL "")
                                                          LAFITE.EXTRA.MOVE.ITEMS)))
                         LAFITE.FOLDER.MENU.FONT
                         (- (LET* ((REG (WINDOWREGION WINDOW))
                                   (BROWSERHEIGHT (fetch (REGION HEIGHT) of REG)))
                                  (if (EQ POSITION 'TOP)
                                      then               (* ; 
                        "Don't make the menu much taller than the window or below bottom of screen")
                                            (MIN (+ BROWSERHEIGHT (IQUOTIENT BROWSERHEIGHT 2))
                                                 (fetch (REGION TOP) of REG))
                                    else                 (* ; 
                                                           "Don't make it taller than the screen")
                                          (- SCREENHEIGHT BROWSERHEIGHT)))
                            (FONTPROP WINDOWTITLEFONT 'HEIGHT))
                         (SETQ TITLE "Move To:"))
                  (SETQ MENUW
                   (MENUWINDOW (create MENU
                                      ITEMS _ ITEMS
                                      MENUCOLUMNS _ NCOLUMNS
                                      CENTERFLG _ T
                                      TITLE _ TITLE
                                      WHENHELDFN _ [FUNCTION (LAMBDA (ITEM)
                                                               (PROMPTPRINT (if (LISTP ITEM)
                                                                                then (CADDR
                                                                                          ITEM)
                                                                              else 
                                                        "Move the selected message(s) to this folder"
                                                                                   ]
                                      WHENSELECTEDFN _ (FUNCTION \LAFITE.HANDLE.AUTO.MOVE)
                                      MENUFONT _ LAFITE.FOLDER.MENU.FONT
                                      MENUTITLEFONT _ WINDOWTITLEFONT]
           (ATTACHWINDOW MENUW WINDOW HOW POSITION 'LOCALCLOSE)
           (WINDOWADDPROP MENUW 'CLOSEFN [FUNCTION (LAMBDA (W)

                                                     (* ;; 
                    "Remove pointer to me.  Note that this fn must come first, before detachwindow")

                                                     (AND (SETQ W (MAINWINDOW W))
                                                          (WINDOWPROP W 'LAFITE.AUTO.MOVE.MENU NIL]
                  T)
           (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.MENU MENUW])

(\LAFITE.RESTORE.MOVE.MENU
  [LAMBDA (FOLDER)                                       (* ; "Edited 31-Aug-88 15:19 by bvm")
    (LET* [(WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
           (ITEMS (WINDOWPROP WINDOW 'LAFITE.AUTO.MOVE.NAMES]
          (if ITEMS
              then                                       (* ; 
                                                           "Yes, there was a menu, so bring it up")
                    (\LAFITE.UPDATE.MOVE.MENU FOLDER T)
            else                                         (* ; "Start from scratch")
                  (\LAFITE.ENABLE.MOVE.MENU FOLDER])

(\LAFITE.HANDLE.AUTO.MOVE
  [LAMBDA (ITEM MENU KEY)                                (* ; "Edited 29-Aug-88 15:06 by bvm")

    (* ;; 
  "Handle the selection of an item from Lafite's auto moveto menu.  Just do the specified move")

    (LET ((MENUW (WFROMMENU MENU))
          WINDOW FOLDER)
         (AND MENUW (SETQ WINDOW (MAINWINDOW MENUW))
              (SETQ FOLDER (WINDOWPROP WINDOW 'MAILFOLDER))
              (fetch (MAILFOLDER BROWSERREADY) of FOLDER)
              (if (LISTP ITEM)
                  then                                   (* ; "Handle other commands")
                        (CL:FUNCALL (EXTRACTMENUCOMMAND ITEM)
                               WINDOW FOLDER ITEM MENU KEY)
                else (\LAFITE.PROCESS `(,(FUNCTION \LAFITE.MOVETO.PROC)
                                            ',WINDOW
                                            ',FOLDER
                                            ',(LA.LONGFILENAME ITEM LAFITEMAIL.EXT)
                                            ',ITEM
                                            ',MENU T)
                                'LAFITEMOVE])
)

(ADDTOVAR LAFITEEXTRAMENUITEMS ("Enable MoveTo Menu" '\LAFITE.ENABLE.MOVE.MENU 
                           "Attach a menu of folders for accelerated MoveTo (or modify existing one)"
                                      (SUBITEMS ("Restore MoveTo Menu" '\LAFITE.RESTORE.MOVE.MENU 
                                                "Just reopen the attached MoveTo menu if it existed."
                                                       )))
                               ("Copy To" '\LAFITE.COPYTO 
                                      "Like MoveTo, but don't delete the message(s)."))

(ADDTOVAR LAFITE.EXTRA.MOVE.ITEMS ("---Display---" '\LAFITE.DISPLAY "Display the next message")
                                  ("---Delete---" '\LAFITE.DELETE "Delete the selected message(s)"))

(RPAQ? LAFITE.AUTO.MOVE.MENU )



(* ; "UPDATE")

(DEFINEQ

(\LAFITE.UPDATE
  [LAMBDA (WINDOW FOLDER ITEM MENU BUTTONS)              (* ; "Edited 25-Apr-89 15:10 by bvm")
    (LET
     ((HOWINDEX (LAB.UPDATE.NEEDED? FOLDER))
      HOW? HOWSTRING CLOSEFLG CONFIRMFLG)
     (\LAFITE.MAYBE.CLEAR.PROMPT FOLDER)
     [if (AND (EQ BUTTONS 'MIDDLE)
                  LAFITE.MIDDLE.UPDATE)
         then                                            (* ; 
                          "Accelerator: do what this flag says, asking only for confirmation first")
               (for OP inside LAFITE.MIDDLE.UPDATE
                  do (CASE OP
                             ((:CLOSE :SHRINK) (SETQ CLOSEFLG OP))
                             ((:UPDATE :EXPUNGE) 
                                (SETQ HOWSTRING (if (AND (EQ OP :EXPUNGE)
                                                             (BITTEST HOWINDEX \EXPUNGE.MENU.BIT))
                                                    then (* ; "Expunge is needed and requested")
                                                          (SETQ HOW? (FUNCTION \LAFITE.EXPUNGE.PROC))
                                                          "Expunge"
                                                  elseif (BITTEST HOWINDEX \SORT.MENU.BIT)
                                                    then (* ; "Have to do wtih expunge")
                                                          (SETQ HOW? (FUNCTION \LAFITE.EXPUNGE.PROC))
                                                          "Write sorted"
                                                  elseif (BITTEST HOWINDEX \EXPUNGE&SORT.MENU.BIT
                                                                    )
                                                    then (* ; "Have to do wtih expunge")
                                                          (SETQ HOW? (FUNCTION \LAFITE.EXPUNGE.PROC))
                                                          "Expunge (write sorted)"
                                                  elseif (BITTEST HOWINDEX \UPDATE.MENU.BIT)
                                                    then (SETQ HOW? (FUNCTION \LAFITE.UPDATE.PROC
                                                                         ))
                                                          "Write out changes"
                                                  elseif (BITTEST HOWINDEX \TOC.MENU.BIT)
                                                    then (SETQ HOW? (FUNCTION \LAFITE.UPDATE.PROC
                                                                         ))
                                                          "Update table of contents"))
                                (if (BITTEST HOWINDEX \HARDCOPY.MENU.BIT)
                                    then                 (* ; "Also might want to hardcopy")
                                          (SETQ HOWSTRING (if (NULL HOW?)
                                                              then (SETQ HOW?
                                                                        (FUNCTION 
                                                                         \LAFITE.HARDCOPYONLY.PROC))
                                                                    "Hardcopy"
                                                            else (CONCAT "Hardcopy, " HOWSTRING))
                                           )
                                  elseif (NULL HOW?)
                                    then                 (* ; 
                         "Pretend no update is needed, even if left-update would have said Expunge")
                                          (SETQ HOWINDEX 0)))
                             (:CONFIRM (SETQ CONFIRMFLG T)))]
     (if (AND (NULL CLOSEFLG)
                  (EQ 0 HOWINDEX))
         then                                            (* ; 
                                               "We weren't asked to close it, and nothing changed.")
               (LAB.PROMPTPRINT FOLDER T "No changes since the last Update")
       elseif
       [SETQ HOW?
        (if (OR HOWSTRING CLOSEFLG)
            then
            (if (AND (NULL HOWSTRING)
                         (EQ CLOSEFLG :SHRINK))
                then                                     (* ; 
                         "Accelerator says Shrink, and there is nothing else to do, so just shrink")
                      (FUNCTION \LAFITE.FINISH.UPDATE)
              elseif [OR (NULL CONFIRMFLG)
                             (LAB.MOUSECONFIRM
                              FOLDER
                              (CONCATLIST (CONS "Click LEFT to confirm "
                                                (LET [(CF (AND CLOSEFLG (LIST (L-CASE CLOSEFLG T]
                                                     (if HOWSTRING
                                                         then (LIST* HOWSTRING
                                                                         (AND CF (CONS " and " CF)))
                                                       else CF]
                then (OR HOW? (FUNCTION \LAFITE.FINISH.UPDATE)))
          else (MENU (LAB.CHOOSE.UPDATE.MENU HOWINDEX]
         then (\LAFITE.PROCESS (LIST HOW? (KWOTE WINDOW)
                                         (KWOTE FOLDER)
                                         CLOSEFLG
                                         (KWOTE ITEM)
                                         (KWOTE MENU))
                         'LAFITEUPDATE])

(\LAFITE.EXPUNGE.PROC
  [LAMBDA (WINDOW MAILFOLDER CLOSEFLG ITEM MENU)         (* ; "Edited  1-May-89 12:53 by bvm")
    (RESETLST
        (\LAFITE.START.UPDATE MAILFOLDER ITEM MENU)
        (\LAFITE.CLOSE.DISPLAYWINDOWS MAILFOLDER)
        (CLEARW WINDOW)
        (\LAFITE.COMPACT.FOLDER MAILFOLDER)
        (\LAFITE.CLOSE.FOLDER MAILFOLDER T)
        (COND
           (CLOSEFLG (replace (MAILFOLDER BROWSERUPDATEFROMHERE) of MAILFOLDER with
                                                                                       0))
           (T (LAB.DISPLAYFOLDER MAILFOLDER))))              (* ; 
                                   "Do the following outside RESETLST so that Update gets unshaded")
    (\LAFITE.FINISH.UPDATE WINDOW MAILFOLDER CLOSEFLG])

(\LAFITE.UPDATE.PROC
  [LAMBDA (WINDOW MAILFOLDER CLOSEFLG ITEM MENU)         (* ; "Edited 14-Oct-87 20:00 by bvm:")
    (RESETLST
        (\LAFITE.START.UPDATE MAILFOLDER ITEM MENU)
        (COND
           ((OR (COND
                   ((fetch (MAILFOLDER FOLDERNEEDSUPDATE) of MAILFOLDER)
                    (\LAFITE.UPDATE.FOLDER MAILFOLDER)
                    T))
                (NEQ (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER)
                     (fetch (MAILFOLDER TOCLASTMESSAGE#) of MAILFOLDER)))
            (\LAFITE.UPDATE.CONTENTS MAILFOLDER (fetch (MAILFOLDER %#OFMESSAGES) of
                                                                                         MAILFOLDER))
            )
           (T (LAB.PROMPTPRINT MAILFOLDER T "No changes since last update")))
        (\LAFITE.CLOSE.FOLDER MAILFOLDER T))                 (* ; 
                                   "Do the following outside RESETLST so that Update gets unshaded")
    (\LAFITE.FINISH.UPDATE WINDOW MAILFOLDER CLOSEFLG])

(\LAFITE.HARDCOPYONLY.PROC
  [LAMBDA (WINDOW MAILFOLDER CLOSEFLG ITEM MENU)         (* ; "Edited 29-Aug-88 17:49 by bvm")

    (* ;; "Called by Update or Close to just do pending hardcopy, nothing else")

    (RESETLST
        (LAB.START.COMMAND MAILFOLDER (FUNCTION \LAFITE.UPDATE)
               ITEM MENU)
        (\LAFITE.DO.PENDING.HARDCOPY MAILFOLDER))
    (\LAFITE.FINISH.UPDATE WINDOW MAILFOLDER CLOSEFLG])

(LAB.CHOOSE.UPDATE.MENU
  [LAMBDA (FOLDER CLOSEFLG)                              (* ; "Edited 25-Apr-89 15:10 by bvm")

    (* ;; "Returns a menu for prompting the user about what to do with FOLDER when Update is requested, or if CLOSEFLG is true, if Close/Shrink is requested.  Returns NIL if there is no interesting choice.")

    (LET [(INDEX (OR (FIXP FOLDER)
                     (LAB.UPDATE.NEEDED? FOLDER]
         (if (NEQ INDEX 0)
             then (CASE CLOSEFLG
                          (:CLOSE (SETQ INDEX (LOGOR INDEX \CLOSE.MENU.BIT)))
                          (:SHRINK (SETQ INDEX (LOGOR INDEX \SHRINK.MENU.BIT))))
                   (OR (GETHASH INDEX LAFITE.UPDATE.MENU.HASH)
                       (LAB.CREATE.UPDATE.MENU INDEX])

(LAB.CREATE.UPDATE.MENU
  [LAMBDA (INDEX)                                        (* ; "Edited 25-Apr-89 15:08 by bvm")

    (* ;; "Create a menu to ask about updating.  There is a bit in INDEX for each possible thing you might want to do to update this folder -- Update, Expunge, Update TOC, Hardcopy, Expunge&Sort.  Not all bit combinations are possible.  In practice, only a small number of combinations actually occur, so we remember menus in a hash table.")

    (LET* ((LASTITEM NIL)
           (ITEMS (for ITEM in LAFITEUPDATEMENUITEMS as (BIT _ 1)
                     by (LLSH BIT 1) when (BITTEST INDEX BIT)
                     collect (if (NOT (BITTEST INDEX (LOGOR \CLOSE.MENU.BIT \SHRINK.MENU.BIT)
                                                     ))
                                     then (SETQ LASTITEM ITEM))
                           ITEM))
           MENU)
          [if (STRPOS "Only" (CAR LASTITEM)
                         -4 NIL T NIL UPPERCASEARRAY)
              then                                       (* ; 
                                                          "Sounds funny if last item says %"Only%"")
                    (RPLACA (FMEMB LASTITEM ITEMS)
                           (CONS (SUBSTRING (CAR LASTITEM)
                                        1 -6)
                                 (CDR LASTITEM]
          (SETQ MENU (\LAFITE.CREATE.MENU ITEMS (if (BITTEST INDEX \CLOSE.MENU.BIT)
                                                    then "Close Options"
                                                  elseif (BITTEST INDEX \SHRINK.MENU.BIT)
                                                    then "Shrink Options"
                                                  else "Update Options")))
          (PUTHASH INDEX MENU LAFITE.UPDATE.MENU.HASH)
          MENU])

(LAB.UPDATE.NEEDED?
  [LAMBDA (FOLDER)                                       (* ; "Edited 25-Apr-89 15:08 by bvm")

    (* ;; "Returns an integer whose bits indicate the type of updating needed by FOLDER; zero if it needs none.")

    (LOGOR (COND
              ((fetch (MAILFOLDER HARDCOPYSTREAM) of FOLDER)
               \HARDCOPY.MENU.BIT)
              (T 0))
           (if (NOT (fetch (MAILFOLDER FOLDEROUTOFORDER) of FOLDER))
               then (LOGOR (if (fetch (MAILFOLDER FOLDERNEEDSUPDATE) of FOLDER)
                                   then \UPDATE.MENU.BIT
                                 elseif (NEQ (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER)
                                                 (fetch (MAILFOLDER TOCLASTMESSAGE#) of
                                                                                         FOLDER))
                                   then                  (* ; 
                                                        "Update toc if messages have been appended")
                                         \TOC.MENU.BIT
                                 else 0)
                               (if (fetch (MAILFOLDER FOLDERNEEDSEXPUNGE) of FOLDER)
                                   then \EXPUNGE.MENU.BIT
                                 else 0))
             elseif (fetch (MAILFOLDER FOLDERNEEDSEXPUNGE) of FOLDER)
               then \EXPUNGE&SORT.MENU.BIT
             else \SORT.MENU.BIT])

(\LAFITE.START.UPDATE
  [LAMBDA (MAILFOLDER ITEM MENU)                         (* ; "Edited 18-Jul-88 11:56 by bvm")

    (* ;; "Called under a RESETLST to start an UPDATE or EXPUNGE")

    (LAB.START.COMMAND MAILFOLDER (FUNCTION \LAFITE.UPDATE)
           ITEM MENU)
    (RESETSAVE NIL (LIST [FUNCTION (LAMBDA (MAILFOLDER)
                                     (replace (MAILFOLDER FOLDERBEINGUPDATED) of MAILFOLDER
                                        with NIL]
                         MAILFOLDER))                        (* ; 
                                            "Mark folder being updated for benefit of LOGOUT check")
    (replace (MAILFOLDER FOLDERBEINGUPDATED) of MAILFOLDER with T)
                                                             (* ; 
                                              "Close all other folders, so MoveTo's are up to date")
    (\LAFITE.CLOSE.OTHER.FOLDERS MAILFOLDER)
    (\LAFITE.DO.PENDING.HARDCOPY MAILFOLDER MENU])

(LAB.START.COMMAND
  [LAMBDA (MAILFOLDER CMD ITEM MENU)                     (* ; "Edited 18-Jul-88 11:56 by bvm")

    (* ;; "Shades MAILFOLDER's command implemented by CMD, or ITEM of MENU if supplied and obtains the folder lock.  Opens browser window if it is shrunk.  Must be called under RESETLST surrounding command execution.")

    (LET ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of MAILFOLDER)))
         (if (AND WINDOW (NOT (OPENWP WINDOW)))
             then (EXPANDW WINDOW)))
    (LA.RESETSHADE [OR ITEM (LA.MENU.ITEM CMD (SETQ MENU (fetch (MAILFOLDER BROWSERMENU)
                                                            of MAILFOLDER]
           MENU)
    (OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
           NIL T)
    (\LAFITE.MAYBE.CLEAR.PROMPT MAILFOLDER])

(\LAFITE.FINISH.UPDATE
  [LAMBDA (WINDOW MAILFOLDER CLOSEFLG)                   (* ; "Edited  7-Jun-88 14:28 by bvm")

(* ;;; "Takes care of closing/shrinking WINDOW after an update or expunge.")

    (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
        (CASE CLOSEFLG
            ((:CLOSE :EXIT) (WITH.MONITOR \LAFITE.BROWSELOCK
                                (\LAFITE.CLOSE.FOLDER MAILFOLDER T)
                                (SETQ WINDOW (LAB.FLUSHWINDOW WINDOW MAILFOLDER))
                                (CLOSEW WINDOW)
                                (COND
                                   ((AND (NEQ CLOSEFLG :EXIT)
                                         (OR (NOT (fetch (MAILFOLDER FOLDEREOFPTR) of 
                                                                                           MAILFOLDER
                                                         ))
                                             (= (fetch (MAILFOLDER FOLDEREOFPTR) of 
                                                                                           MAILFOLDER
                                                       )
                                                0))
                                         (EQ (GETFILEINFO (fetch (MAILFOLDER FULLFOLDERNAME)
                                                             of MAILFOLDER)
                                                    'LENGTH)
                                             0))

                                 (* ;; "Folder is empty, and we are explicitly closing it (as opposed to indirectly via the Quit command), so delete underlying file, etc.  FOLDEREOFPTR should always be right, but be paranoid and double-check with the file itself before deleting")

                                    (DELETEMAILFOLDER MAILFOLDER)))))
            (:SHRINK 
               (\LAFITE.CLOSE.DISPLAYWINDOWS MAILFOLDER)
               (\LAFITE.CLOSE.FOLDER MAILFOLDER T)
               (WINDOWADDPROP WINDOW 'EXPANDFN (FUNCTION LAB.EXPANDFN))
               (WINDOWDELPROP WINDOW 'SHRINKFN (FUNCTION LAB.SHRINKFN))
               (SHRINKW WINDOW))))
    (COND
       (\LAFITEPROFILECHANGED (\LAFITE.WRITE.PROFILE])

(\LAFITE.CLOSE.OTHER.FOLDERS
  [LAMBDA (THISFOLDER)                                   (* bvm%: "31-Jul-84 15:17")

    (* ;; "Closes or flushes output of all Lafite folders except THISFOLDER.  If a folder does not have an open browser, the file is closed;  else output is flushed")

    (WITH.MONITOR \LAFITE.MAINLOCK
        [for FOLDER in \ACTIVELAFITEFOLDERS when (AND (NEQ FOLDER THISFOLDER)
                                                                  (fetch (MAILFOLDER FOLDERSTREAM
                                                                                    ) of FOLDER))
           do (RESETLST
                      [COND
                         ((OBTAIN.MONITORLOCK (fetch (MAILFOLDER FOLDERLOCK) of FOLDER)
                                 T T)
                          (\LAFITE.CLOSE.FOLDER FOLDER (NULL (OPENWP (fetch (MAILFOLDER 
                                                                                       BROWSERWINDOW)
                                                                        of FOLDER])])])
)
(DEFINEQ

(LAB.FLUSHWINDOW
  [LAMBDA (WINDOW MAILFOLDER)                            (* ; "Edited 18-Jul-88 11:37 by bvm")
    (\LAFITE.CLOSE.DISPLAYWINDOWS MAILFOLDER)
    (WINDOWDELPROP WINDOW 'CLOSEFN (FUNCTION LAB.CLOSEFN))
    [replace (MAILFOLDER BROWSERREADY) of MAILFOLDER
       with (replace (MAILFOLDER MESSAGEDESCRIPTORS) of MAILFOLDER
                   with (replace (MAILFOLDER DEFAULTMOVETOFILE) of MAILFOLDER
                               with (replace (MAILFOLDER BROWSERMENUWINDOW) of MAILFOLDER
                                           with (replace (MAILFOLDER BROWSERWINDOW)
                                                       of MAILFOLDER
                                                       with (replace (MAILFOLDER BROWSERMENU)
                                                                   of MAILFOLDER
                                                                   with (replace (MAILFOLDER
                                                                                          
                                                                                  BROWSERPROMPTWINDOW
                                                                                          )
                                                                               of MAILFOLDER
                                                                               with NIL]
    (WINDOWPROP WINDOW 'MAILFOLDER NIL)
    (SETQ \ACTIVELAFITEFOLDERS (DREMOVE MAILFOLDER \ACTIVELAFITEFOLDERS))
    (OR (OPENWP WINDOW)
        (OPENWP (WINDOWPROP WINDOW 'ICONWINDOW])

(LAB.APPENDMESSAGES
  [LAMBDA (FOLDER NEWMESSAGEDESCRIPTORS)                 (* ; "Edited 28-Apr-89 15:47 by bvm")

    (* ;; "Append list of message descriptors to folder, adjusting display, etc as needed.")

    (PROG ((LASTMSG# (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER))
           FIRSTMSG#)
          (SETQ FIRSTMSG# (ADD1 LASTMSG#))
          (replace (MAILFOLDER FOLDEREOFPTR) of FOLDER with (GETEOFPTR
                                                                         (fetch (MAILFOLDER
                                                                                     FOLDERSTREAM)
                                                                            of FOLDER)))
          (for MSGDESCRIPTOR in NEWMESSAGEDESCRIPTORS do (replace (LAFITEMSG %#)
                                                                        of MSGDESCRIPTOR
                                                                        with (add LASTMSG# 1)
                                                                            )
                                                                    (LAFITE.PARSE.MSG.FOR.TOC 
                                                                           MSGDESCRIPTOR FOLDER))
          (replace (MAILFOLDER %#OFMESSAGES) of FOLDER with LASTMSG#)
          (replace (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER
             with (\LAFITE.ADDMESSAGES.TO.ARRAY (fetch (MAILFOLDER MESSAGEDESCRIPTORS)
                                                       of FOLDER)
                             NEWMESSAGEDESCRIPTORS FIRSTMSG# LASTMSG#))
          (LET ((EXTENT (fetch (MAILFOLDER BROWSEREXTENT) of FOLDER))
                (HEIGHT (TIMES LASTMSG# (fetch (MAILFOLDER BROWSERFONTHEIGHT) of FOLDER)))
                WINDOW)
               (replace (REGION HEIGHT) of EXTENT with HEIGHT)
               (replace (REGION BOTTOM) of EXTENT with (- (fetch (MAILFOLDER 
                                                                                        BROWSERORIGIN
                                                                                        )
                                                                         of FOLDER)
                                                                      HEIGHT))
               (WINDOWPROP (SETQ WINDOW (fetch (MAILFOLDER BROWSERWINDOW) of FOLDER))
                      'EXTENT EXTENT)
               (COND
                  ((OPENWP WINDOW)                           (* ; 
                                                           "If window is visible, update it now")
                   (LAB.DISPLAYLINES FOLDER FIRSTMSG#))
                  ((NULL (fetch (MAILFOLDER BROWSERUPDATEFROMHERE) of FOLDER))
                                                             (* ; 
                                             "Mark browser for display update after being unshrunk")
                   (replace (MAILFOLDER BROWSERUPDATEFROMHERE) of FOLDER with FIRSTMSG#])

(\LAFITE.COMPACT.FOLDER
  [LAMBDA (FOLDER)                                       (* ; "Edited 10-May-89 12:42 by bvm")

(* ;;; "Expunge deleted messages from MAILFOLDER.  We copy undeleted messages after the first deleted one into a scratch file and copy the scratch file back into the main file.  Returns the msg # of the last message before the compacted section.  This function must also be used if the folder is out of order.")

    (LET* ((MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER))
           (LASTMSG# (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER))
           (FIRSTCHANGED# (fetch (MAILFOLDER FIRSTCHANGEDMESSAGE) of FOLDER))
           (LASTGOODMSG# (SUB1 FIRSTCHANGED#))
           (LASTLENGTH 0)
           (LASTBEGIN 0)
           FOLDERSTREAM MSG TOCSTREAM)
          (if (> FIRSTCHANGED# 1)
              then                                       (* ; "Get this loop initialized")
                    (SETQ MSG (NTHMESSAGE MESSAGES LASTGOODMSG#))
                    (SETQ LASTBEGIN (fetch (LAFITEMSG BEGIN) of MSG))
                    (SETQ LASTLENGTH (fetch (LAFITEMSG MESSAGELENGTH) of MSG)))

          (* ;; "first see if there are any messages to delete or messages out of order and while doing so collect information for rapidly compacting the file just in case we have to.  We check for out of order by maintaining previous pointer and length so as to avoid boxing most of the time.")

          (for MSG# from (MAX 1 FIRSTCHANGED#) to LASTMSG#
             until (OR (fetch (LAFITEMSG DELETED?) of (SETQ MSG (NTHMESSAGE MESSAGES MSG#
                                                                                   )))
                           (NOT (= (- (fetch (LAFITEMSG BEGIN) of MSG)
                                      LASTBEGIN)
                                   LASTLENGTH))) do [COND
                                                           ((fetch (LAFITEMSG MARKSCHANGEDINFILE?
                                                                              ) of MSG)
                                                            (WRITEFOLDERMARKBYTES
                                                             MSG FOLDER (OR FOLDERSTREAM
                                                                            (SETQ FOLDERSTREAM
                                                                             (\LAFITE.OPEN.FOLDER
                                                                              FOLDER
                                                                              'BOTH :ABORT]
                                                       (SETQ LASTGOODMSG# MSG#)
                                                       (SETQ LASTBEGIN (fetch (LAFITEMSG BEGIN)
                                                                          of MSG))
                                                       (SETQ LASTLENGTH (fetch (LAFITEMSG 
                                                                                        MESSAGELENGTH
                                                                                          )
                                                                           of MSG)))
          [COND
             ((NEQ LASTGOODMSG# LASTMSG#)
              (SETQ TOCSTREAM (\LAFITE.COMPACT.FOLDER1 FOLDER (OR FOLDERSTREAM
                                                                      (\LAFITE.OPEN.FOLDER
                                                                       FOLDER
                                                                       'BOTH :ABORT))
                                     LASTGOODMSG#]
          (replace (MAILFOLDER FOLDERNEEDSEXPUNGE) of FOLDER with NIL)
          (replace (MAILFOLDER FOLDEROUTOFORDER) of FOLDER with NIL)
          (replace (MAILFOLDER FIRSTCHANGEDMESSAGE) of FOLDER
             with (ADD1 (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER)))
          (\LAFITE.UPDATE.CONTENTS FOLDER LASTGOODMSG# TOCSTREAM])

(\LAFITE.COMPACT.FOLDER1
  [LAMBDA (FOLDER FOLDERSTREAM LASTGOODMSG#)             (* ; "Edited 13-Jul-92 16:01 by bvm")

(* ;;; "LASTGOODMSG# is the number of the last good message before the region to be compacted.  FOLDERSTREAM is open for io.")

    (LET (SCRATCHFILE STATE ORIGEOF CONDITION TOCSTREAM)
         (CL:UNWIND-PROTECT
             (PROG ((*PRINT-BASE* 10)
                    (*UPPER-CASE-FILE-NAMES* NIL)
                    (MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER))
                    (OLDLASTMSG# (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER))
                    (FIRSTSELECTED (fetch (MAILFOLDER FIRSTSELECTEDMESSAGE) of FOLDER))
                    (LASTSELECTED (fetch (MAILFOLDER LASTSELECTEDMESSAGE) of FOLDER))
                    COMPACTLENGTH GOODMSGSPTR MSGLIST RESULT NEWDATE)
                   (LAB.PROMPTPRINT FOLDER "Compacting folder... ")
                   [COND
                      ((> LASTSELECTED LASTGOODMSG#)         (* ; 
                                                    "There are selections in the compacting region")
                       (COND
                          ((> FIRSTSELECTED LASTGOODMSG#)    (* ; 
                                                "All selections are there, so recompute completely")
                           (SETQ LASTSELECTED (SETQ FIRSTSELECTED NIL)))
                          (T                                 (* ; 
                                                  "Some selections before it, so only Last changes")
                             (SETQ LASTSELECTED (LAB.REV.FIND.SELECTED.MSG FOLDER FIRSTSELECTED 
                                                       LASTGOODMSG#]
                   [SETQ GOODMSGSPTR (COND
                                        ((EQ LASTGOODMSG# 0)
                                         0)
                                        (T (fetch (LAFITEMSG END) of (NTHMESSAGE MESSAGES 
                                                                                    LASTGOODMSG#]
                                                             (* ; 
                                                           "End of the region that we leave alone")
                   (SETQ COMPACTLENGTH (for I from (ADD1 LASTGOODMSG#) to OLDLASTMSG#
                                          bind MSG unless (fetch (LAFITEMSG DELETED?)
                                                                     of (SETQ MSG
                                                                             (NTHMESSAGE MESSAGES I))
                                                                         )
                                          sum (fetch (LAFITEMSG MESSAGELENGTH) of MSG)))
                   [COND
                      ((NEQ COMPACTLENGTH 0)
                       (if (if (EQ LASTGOODMSG# 0)
                                   then                  (* ; 
                                                           "WIll have to rewrite whole folder")
                                         (SMART-RENAMEFILEP FOLDERSTREAM)
                                 elseif (AND (fetch (MAILFOLDER FOLDEROUTOFORDER)
                                                    of FOLDER)
                                                 (SMART-RENAMEFILEP FOLDERSTREAM))
                                   then                  (* ; "Will it be faster to write a brand new file and rename it to the destination than to do the overwriting stuff, given the extra messages we'll have to save on the end in case of disaster?")
                                         (> (\LAFITE.COMPACT.EXTRA FOLDER LASTGOODMSG# 
                                                   GOODMSGSPTR GOODMSGSPTR)
                                            GOODMSGSPTR))
                           then [SETQ SCRATCHFILE (OPENSTREAM (PACKFILENAME.STRING
                                                                   'VERSION NIL 'EXTENSION
                                                                   (CONCAT (UNPACKFILENAME.STRING
                                                                            FOLDERSTREAM
                                                                            'EXTENSION)
                                                                          "-compacted")
                                                                   'BODY FOLDERSTREAM)
                                                             'OUTPUT
                                                             'NEW
                                                             `((LENGTH ,(+ GOODMSGSPTR COMPACTLENGTH)
                                                                      )
                                                               (SEQUENTIAL T)
                                                               (TYPE LAFITE]
                                 (COPYBYTES FOLDERSTREAM SCRATCHFILE 0 GOODMSGSPTR)
                                 (LINELENGTH T SCRATCHFILE)
                                 (SETQ MSGLIST (\LAFITE.COMPACT.FOLDER2 FOLDER FOLDERSTREAM 
                                                      LASTGOODMSG# GOODMSGSPTR SCRATCHFILE T))
                                 (SETQ SCRATCHFILE (CLOSEF SCRATCHFILE))
                                 (SETQ NEWDATE (GETFILEINFO SCRATCHFILE 'ICREATIONDATE))
                                 (SETQ FOLDERSTREAM (FULLNAME FOLDERSTREAM))
                                 (\LAFITE.CLOSE.FOLDER FOLDER T)
                                 (SETQ STATE :NEW)
                                 (CL:MULTIPLE-VALUE-SETQ (RESULT CONDITION)
                                        (\LAFITE.RENAMEFILE SCRATCHFILE FOLDERSTREAM))
                                 (if (NULL RESULT)
                                     then (RETURN)
                                   else                  (* ; "Scratch file now gone")
                                         (SETQ SCRATCHFILE NIL)
                                         (SETQ STATE :OPEN)  (* ; 
                                     "At this point, file is inconsistent with in-core structures.")
                                         (SETQ TOCSTREAM (\LAFITE.INVALIDATE.TOC FOLDER)))
                         else (SETQ ORIGEOF (GETEOFPTR FOLDERSTREAM)) 
                                                             (* ; "Save info for abort")
                               (SETQ STATE :APPEND)
                               [SETQ MSGLIST (\LAFITE.COMPACT.FOLDER2 FOLDER FOLDERSTREAM 
                                                    LASTGOODMSG# GOODMSGSPTR (SETQ SCRATCHFILE
                                                                              (LA.OPENTEMPFILE
                                                                               'SCRATCH
                                                                               'BOTH
                                                                               'NEW COMPACTLENGTH] 

                               (* ;; 
 "Up til now, you could abort and nothing bad would happen--the folder hasn't been written on yet.")

                               (SETFILEPTR FOLDERSTREAM GOODMSGSPTR) 
                                                             (* ; 
                                                  "set the pointer to the end of the good messages")
                               (SETQ STATE :OPEN)            (* ; 
                                                       "We're about to make the world inconsistent")
                               (SETQ TOCSTREAM (\LAFITE.INVALIDATE.TOC FOLDER))
                               (COPYBYTES SCRATCHFILE FOLDERSTREAM 0 -1) 
                                                             (* ; 
                  "copy the scratch file to the end of the good messages left in the original file")
                               (FORCEOUTPUT FOLDERSTREAM)    (* ; 
       "Ensure that all those writes succeeded, before we update core and truncate the file below.")
                              )
                       [for MSG in MSGLIST do 

                                                         (* ;; 
                                          "Now that it's all written, update the incore structures")

                                                         (if (LISTP MSG)
                                                             then 
                                                             (* ; "Need to fix stamp & msg length")
                                                                   (replace (LAFITEMSG 
                                                                                       MESSAGELENGTH)
                                                                      of (CAR MSG)
                                                                      with (CADDR MSG))
                                                                   (replace (LAFITEMSG 
                                                                                       STAMPLENGTH)
                                                                      of (CAR MSG)
                                                                      with (CADR MSG))
                                                                   (SETQ MSG (CAR MSG)))
                                                         (replace (LAFITEMSG MARKSCHANGEDINFILE?)
                                                            of MSG with NIL)
                                                         (replace (LAFITEMSG BEGIN) of MSG
                                                            with GOODMSGSPTR)
                                                         (add GOODMSGSPTR (fetch (LAFITEMSG
                                                                                          
                                                                                        MESSAGELENGTH
                                                                                          )
                                                                                 of MSG))
                                                         (replace (LAFITEMSG %#) of MSG
                                                            with (add LASTGOODMSG# 1))
                                                         (SETA MESSAGES LASTGOODMSG# MSG)
                                                         (COND
                                                            ((fetch (LAFITEMSG SELECTED?)
                                                                of MSG)
                                                             (COND
                                                                ((NOT FIRSTSELECTED)
                                                                 (SETQ FIRSTSELECTED LASTGOODMSG#)))
                                                             (SETQ LASTSELECTED LASTGOODMSG#]
                       (if [AND (NOT NEWDATE)
                                    (NOT (= GOODMSGSPTR (GETFILEPTR FOLDERSTREAM]
                           then (HELP "Miscalculation in Lafite Expunge" (LIST GOODMSGSPTR
                                                                                   'NEQ
                                                                                   (GETFILEPTR 
                                                                                         FOLDERSTREAM
                                                                                          ]
                   (replace (MAILFOLDER %#OFMESSAGES) of FOLDER with LASTGOODMSG#)
                   (replace (MAILFOLDER FIRSTSELECTEDMESSAGE) of FOLDER
                      with (OR FIRSTSELECTED 1))
                   (replace (MAILFOLDER LASTSELECTEDMESSAGE) of FOLDER
                      with (OR LASTSELECTED 0))
                   (for I from (ADD1 LASTGOODMSG#) to OLDLASTMSG#
                      do                                 (* ; 
                                                     "Erase entries beyond the new end of messages")
                            (SETA MESSAGES I NIL))
                   (if NEWDATE
                       then                              (* ; 
                                                     "Did via separate file, so get the date right")
                             (replace (MAILFOLDER FOLDERCREATIONDATE) of FOLDER with
                                                                                        NEWDATE)
                     else                                (* ; "Truncate to new length")
                           (SETFILEPTR FOLDERSTREAM GOODMSGSPTR)
                           (SETFILEINFO FOLDERSTREAM 'LENGTH GOODMSGSPTR))
                   (replace (MAILFOLDER FOLDEREOFPTR) of FOLDER with GOODMSGSPTR)
                   (SETQ STATE :END)
                   (RETURN TOCSTREAM))

             (* ;; "Cleanup code--this runs even if we are aborted.")

             (if (NEQ STATE :END)
                 then (LAB.PROMPTPRINT FOLDER " aborted.")
                       [if (EQ STATE :OPEN)
                           then (LAB.PROMPTPRINT FOLDER 
                                     " Folder is now in an inconsistent state and must be rebrowsed."
                                           )
                         else                            (* ; 
                      "We have not yet overwritten anything, so folder is still consistent, mainly")
                               (if (AND (EQ STATE :APPEND)
                                            (> (GETEOFPTR FOLDERSTREAM)
                                               ORIGEOF))
                                   then                  (* ; 
                                                  "We have written stuff to end of file--delete it")
                                         (SETFILEPTR FOLDERSTREAM ORIGEOF)
                                         (SETFILEINFO FOLDERSTREAM 'LENGTH ORIGEOF))
                               (if (EQ STATE :NEW)
                                   then                  (* ; "The RENAMEFILE failed")
                                         (LAB.FORMAT FOLDER "  Help! Could not replace mail file with compacted file~@[ because ~A~].  The compacted file is stored as ~A.  You must rename this file to ~A before proceeding. "
                                                CONDITION SCRATCHFILE FOLDERSTREAM)
                                 else (LET ((WINDOW (fetch (MAILFOLDER BROWSERWINDOW)
                                                           of FOLDER)))
                                               (if (OPENWP WINDOW)
                                                   then  (* ; 
                                                          "Window was cleared, so redisplay it now")
                                                         (REDISPLAYW WINDOW]
                       (if TOCSTREAM
                           then (CLOSEF TOCSTREAM)))
             (\LAFITE.CLOSE.FOLDER FOLDER T)
             (if SCRATCHFILE
                 then (if (STREAMP SCRATCHFILE)
                              then (SETQ SCRATCHFILE (CLOSEF SCRATCHFILE)))
                       (DELFILE SCRATCHFILE))
             (if (AND (EQ STATE :END)
                          (EQ LAFITEVERIFYFLG 'ALL))
                 then (VERIFYMAILFOLDER FOLDER)))])

(\LAFITE.COMPACT.FOLDER2
  [LAMBDA (FOLDER FOLDERSTREAM LASTGOODMSG# GOODMSGSPTR SCRATCHFILE NEWFILEP)
                                                             (* ; "Edited  2-May-89 11:09 by bvm")

    (* ;; "We want to compact FOLDER's messages beyond LASTGOODMSG#, which ends at GOODMSGSPTR.  We map down the messages moving the undeleted ones into SCRATCHFILE (which is a new mail file if NEWFILEP is true).  Return a list of the messages written to SCRATCHFILE.  If the stamp length of any message changed, the corresponding element is not the message but a list (msg newstamplength newmsglength).")

    (for I from (ADD1 LASTGOODMSG#) to (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER
                                                          ) bind (MESSAGES _ (fetch
                                                                                  (MAILFOLDER 
                                                                                   MESSAGEDESCRIPTORS
                                                                                         )
                                                                                    of FOLDER))
                                                                  (NEXTFILEPTR _ GOODMSGSPTR)
                                                                  MSG TMP
       unless (fetch (LAFITEMSG DELETED?) of (SETQ MSG (NTHMESSAGE MESSAGES I)))
       collect (MAYBEVERIFYMSG MSG FOLDER)
             (LET* ((BEGIN (fetch (LAFITEMSG BEGIN) of MSG))
                    (STAMPLENGTH (fetch (LAFITEMSG STAMPLENGTH) of MSG))
                    (MSGLENGTH (fetch (LAFITEMSG MESSAGELENGTH) of MSG))
                    (BODYLENGTH (- MSGLENGTH STAMPLENGTH))
                    (NEWSTAMPLENGTH (LA.PRINTHEADER SCRATCHFILE BODYLENGTH)))
                   (WRITEFOLDERMARKBYTES MSG NIL SCRATCHFILE)
                   (BOUT SCRATCHFILE (CHARCODE CR))
                   (COPYBYTES FOLDERSTREAM SCRATCHFILE (+ BEGIN STAMPLENGTH)
                          (+ BEGIN MSGLENGTH))
                   (if (NOT NEWFILEP)
                       then (if (< BEGIN NEXTFILEPTR)
                                    then 

                                 (* ;; "By the time we get to copying this message to the main file, we will already have overwritten at least part of the original message.  That means we could lose messages if a crash occurs here.  So instead, copy this message to after the eof as a saving place")

                                          (SETFILEPTR FOLDERSTREAM -1)
                                          [LA.PRINTHEADER FOLDERSTREAM BODYLENGTH NIL
                                                 (+ (NCHARS BEGIN)
                                                    (CONSTANT (ADD1 (NCHARS "*duplicate*"]
                                          (BOUT FOLDERSTREAM DELETEDFLAG) 
                                                             (* ; 
                                                           "Make message look deleted ordinarily")
                                          (BOUT FOLDERSTREAM UNSEENFLAG)
                                          (BOUT FOLDERSTREAM DUPLICATEMARK)
                                          (BOUT FOLDERSTREAM (CHARCODE CR))
                                          (PRIN3 "*duplicate*" FOLDERSTREAM) 
                                                             (* ; 
                                                           "Mark as duplicate and tell where")
                                          (PRIN3 BEGIN FOLDERSTREAM)
                                          (BOUT FOLDERSTREAM (CHARCODE CR))
                                          (COPYBYTES SCRATCHFILE FOLDERSTREAM (- (SETQ TMP
                                                                                  (GETFILEPTR 
                                                                                         SCRATCHFILE)
                                                                                  )
                                                                                 BODYLENGTH)
                                                 TMP)
                                          (SETFILEPTR SCRATCHFILE TMP))
                             (add NEXTFILEPTR BODYLENGTH NEWSTAMPLENGTH))
                   (if (EQ STAMPLENGTH NEWSTAMPLENGTH)
                       then                              (* ; "normal case, no length changed")
                             MSG
                     else (LIST MSG NEWSTAMPLENGTH (+ BODYLENGTH NEWSTAMPLENGTH])

(\LAFITE.COMPACT.EXTRA
  [LAMBDA (FOLDER LASTGOODMSG# GOODMSGSPTR STOPAT)       (* ; "Edited  5-May-89 11:25 by bvm")

    (* ;; "Returns an estimate of the length of stuff we'll have to append to folder while compacting it, due to messages being out of order.  If the estimate ever exceeds STOPAT we can stop counting and return the current estimate.")

    (for I from (ADD1 LASTGOODMSG#) to (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER
                                                          ) bind (MESSAGES _ (fetch
                                                                                  (MAILFOLDER 
                                                                                   MESSAGEDESCRIPTORS
                                                                                         )
                                                                                    of FOLDER))
                                                                  (NEXTFILEPTR _ GOODMSGSPTR)
                                                                  (EXTRALENGTH _ 0)
                                                                  MSG
       unless (fetch (LAFITEMSG DELETED?) of (SETQ MSG (NTHMESSAGE MESSAGES I)))
       do (LET ((MSGLENGTH (fetch (LAFITEMSG MESSAGELENGTH) of MSG)))
                   (if (< (fetch (LAFITEMSG BEGIN) of MSG)
                              NEXTFILEPTR)
                       then 

                             (* ;; "By the time we get to copying this message to the main file, we will already have overwritten at least part of the original message.  That means we could lose messages if a crash occurs here.  So instead, copy this message to after the eof as a saving place")

                             (if (> [add EXTRALENGTH MSGLENGTH (CONSTANT (+ 6 (NCHARS 
                                                                                        "*duplicate*"
                                                                                             ]
                                        STOPAT)
                                 then (RETURN EXTRALENGTH)))
                   (add NEXTFILEPTR MSGLENGTH)) finally (RETURN EXTRALENGTH])

(\LAFITE.INVALIDATE.TOC
  [LAMBDA (FOLDER)                                       (* ; "Edited  5-May-89 11:45 by bvm")

    (* ;; 
  "Invalidate the toc file for this folder by trashing the password.  Returns the stream, if any.")

    (LET* ((*UPPER-CASE-FILE-NAMES* NIL)
           (NAME (INFILEP (TOCFILENAME FOLDER)))
           TOCSTREAM)
          (if [AND NAME (SETQ TOCSTREAM (IGNORE-ERRORS (\LAFITE.OPENSTREAM NAME 'BOTH
                                                                  'OLD NIL NIL 'BINARY]
              then (WORDOUT TOCSTREAM (LOGXOR 65535 LAFITETOCPASSWORD))
                    (FORCEOUTPUT TOCSTREAM)
                    TOCSTREAM])

(\LAFITE.RENAMEFILE
  [LAMBDA (SCRATCHFILE FOLDERNAME)                       (* ; "Edited  2-May-89 11:33 by bvm")

    (* ;; "Called to replace FOLDERNAME with SCRATCHFILE, e.g., as a result of a scavenge.  On success, returns the new file name, otherwise returns NIL and, if an error was signaled, a CONDITION.")

    (LET ((*UPPER-CASE-FILE-NAMES* NIL))
         (IGNORE-ERRORS (DELFILE FOLDERNAME)
                (RENAMEFILE SCRATCHFILE FOLDERNAME])

(SMART-RENAMEFILEP
  [LAMBDA (OBJECT)                                       (* ; "Edited  1-May-89 12:31 by bvm")

    (* ;; "true if RENAMEFILE can be done intelligently on this path/stream/device")

    (LET [(DEV (CL:TYPECASE OBJECT
                   (FDEV OBJECT)
                   (STREAM (fetch (STREAM DEVICE) of OBJECT))
                   (T (\GETDEVICEFROMNAME OBJECT T)))]
         (AND DEV (CASE (fetch (FDEV RENAMEFILE) of DEV)
                      ((NILL \GENERIC.RENAMEFILE) NIL)
                      (T T))])

(LA.OPENTEMPFILE
  [LAMBDA (EXTENSION ACCESS RECOG LENGTH)                (* ; "Edited  3-Sep-87 16:29 by bvm:")
    (LET [(STREAM (OPENSTREAM (PACKFILENAME.STRING 'HOST 'SCRATCH 'NAME 'LAFITETEMPORARY 'EXTENSION 
                                     EXTENSION)
                         (OR ACCESS 'OUTPUT)
                         (OR RECOG 'NEW)
                         NIL
                         (AND LENGTH (LIST (LIST 'LENGTH LENGTH]
         (COND
            (STREAM (WHENCLOSE STREAM 'CLOSEALL 'NO)
                   (LINELENGTH MAX.SMALLP STREAM)
                   (if NIL
                       then                              (* ; 
                                                  "save them so they can be deleted by LAFITE.QUIT")

                             (* ;; "no need to keep list--they vanish via gc")

                             (push \LAFITE.TEMPFILES (FULLNAME STREAM)))
                   STREAM])
)
(DEFINEQ

(\LAFITE.UPDATE.FOLDER
  [LAMBDA (FOLDER)                                       (* ; "Edited 28-Apr-89 10:55 by bvm")

(* ;;; "Write out any changed marks in MAILFOLDER, but don't expunge deleted messages")

    (LET ((MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER))
          OUTSTREAM MSG)
         (if (fetch (MAILFOLDER FOLDEROUTOFORDER) of FOLDER)
             then (LAB.PROMPTPRINT FOLDER 
                        "Folder has been reordered, so can't simply write out changes--must Expunge."
                             ))
         (LAB.PROMPTPRINT FOLDER "Writing out changes...")
         [for MSG# from (fetch (MAILFOLDER FIRSTCHANGEDMESSAGE) of FOLDER)
            to (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER)
            when (fetch (LAFITEMSG MARKSCHANGEDINFILE?) of (SETQ MSG (NTHMESSAGE MESSAGES
                                                                                        MSG#)))
            do (WRITEFOLDERMARKBYTES MSG FOLDER (OR OUTSTREAM (SETQ OUTSTREAM
                                                                       (\LAFITE.OPEN.FOLDER
                                                                        FOLDER
                                                                        'OUTPUT :ABORT]
         (\LAFITE.CLOSE.FOLDER FOLDER)
         (LAB.PROMPTPRINT FOLDER (COND
                                    (OUTSTREAM " done. ")
                                    (T "nothing changed. ")))
         [if (NOT (fetch (MAILFOLDER FOLDERNEEDSEXPUNGE) of FOLDER))
             then                                        (* ; "Everything is up to date now.")
                   (replace (MAILFOLDER FIRSTCHANGEDMESSAGE) of FOLDER
                      with (ADD1 (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER]
         (replace (MAILFOLDER FOLDERNEEDSUPDATE) of FOLDER with NIL])

(\LAFITE.UPDATE.CONTENTS
  [LAMBDA (MAILFOLDER LASTUNCHANGEDMESSAGE# TOCSTREAM)   (* ; "Edited  1-May-89 13:02 by bvm")

(* ;;; 
"Update the TOC file for MAILFOLDER, assuming that entries up to LASTUNCHANGEDMESSAGE# are okay.")

    (COND
       ((NLSETQ (\LAFITE.UPDATE.CONTENTS1 MAILFOLDER LASTUNCHANGEDMESSAGE# TOCSTREAM))
        (LAB.PROMPTPRINT MAILFOLDER " done."))
       (T (LAB.PROMPTPRINT MAILFOLDER " failed.")))

    (* ;; "FOLDERNEEDSUPDATE set to NIL now either because toc was completely written or because toc was deleted on error, in which case 'Update Table of Contents' is still needed")

    (replace (MAILFOLDER FOLDERNEEDSUPDATE) of MAILFOLDER with NIL])

(\LAFITE.UPDATE.CONTENTS1
  [LAMBDA (FOLDER LASTUNCHANGEDMESSAGE# TOCSTREAM)       (* ; "Edited  1-May-89 13:02 by bvm")

    (* ;; "Write the table of contents file for FOLDER.  LASTUNCHANGEDMESSAGE# is the last message in the folder before compacting changes set in.  Prior to that message, we'll only have to update flag bytes if anything.  If TOCSTREAM is supplied, it is a stream already open for i/o on the toc file (from Expunge, which invalidates the toc password before trashing the mail file).")

    (RESETLST
        (LET ((*UPPER-CASE-FILE-NAMES* NIL)
              (LASTMSG# (fetch (MAILFOLDER %#OFMESSAGES) of FOLDER))
              (MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of FOLDER))
              (TOCSTART LAFITETOCHEADERLENGTH)
              FIRSTMSG# MSG)
             (COND
                ((> LASTMSG# 0)
                 (LAB.PROMPTPRINT FOLDER "Writing table of contents...")
                 (RESETSAVE NIL (LIST [FUNCTION (LAMBDA (STREAM FOLDER)
                                                  (SETQ STREAM (CLOSEF STREAM))
                                                  (COND
                                                     (RESETSTATE 
                                                             (* ; 
                                                         "If we aborted out, assume toc is garbage")
                                                            (replace (MAILFOLDER TOCLASTMESSAGE#)
                                                               of FOLDER with 0)
                                                            (DELFILE (FULLNAME STREAM]
                                      [OR TOCSTREAM (SETQ TOCSTREAM (OPENSTREAM (TOCFILENAME FOLDER)
                                                                           'BOTH
                                                                           'OLD/NEW
                                                                           '((TYPE BINARY]
                                      FOLDER))
                 (SETQ LASTUNCHANGEDMESSAGE# (IMIN LASTUNCHANGEDMESSAGE# (fetch (MAILFOLDER
                                                                                     TOCLASTMESSAGE#)
                                                                            of FOLDER)))
                 [COND
                    ((EQ (GETEOFPTR TOCSTREAM)
                         0)
                     (SETQ LASTUNCHANGEDMESSAGE# 0))
                    ((AND (EQ LASTUNCHANGEDMESSAGE# 0)
                          (NEQ (PROGN (SETFILEPTR TOCSTREAM BYTESPERWORD)
                                      (WORDIN TOCSTREAM))
                               LAFITEVERSION#))              (* ; 
                                                      "A version number change, rewrite entire toc")
                     )
                    (T                                       (* ; 
                                                           "TOC already existed, just update it")
                       (for MSG# from 1 to LASTUNCHANGEDMESSAGE#
                          do (COND
                                    ((fetch (LAFITEMSG MARKSCHANGEDINTOC?)
                                        of (SETQ MSG (NTHMESSAGE MESSAGES MSG#)))
                                                             (* ; 
                                       "Message not compacted out, but its mark bytes have changed")
                                     (SETFILEPTR TOCSTREAM TOCSTART)
                                     (WRITETOCMARKBYTES MSG TOCSTREAM)
                                     (replace (LAFITEMSG MARKSCHANGEDINTOC?) of MSG
                                        with NIL)))
                                (add TOCSTART (fetch (LAFITEMSG TOCLENGTH) of MSG]
                 (SETFILEPTR TOCSTREAM TOCSTART)
                 (for MSG# from (ADD1 LASTUNCHANGEDMESSAGE#) to LASTMSG#
                    do (WRITETOCENTRY (NTHMESSAGE MESSAGES MSG#)
                                  TOCSTREAM))
                 (SETFILEINFO TOCSTREAM 'LENGTH (GETFILEPTR TOCSTREAM))
                 (SETFILEPTR TOCSTREAM 0)                    (* ; "Now write the header info")
                 (WORDOUT TOCSTREAM LAFITETOCPASSWORD)
                 (WORDOUT TOCSTREAM LAFITEVERSION#)
                 (FIXPOUT TOCSTREAM (fetch (MAILFOLDER FOLDEREOFPTR) of FOLDER))
                 (WORDOUT TOCSTREAM LASTMSG#))
                ((SETQ TOCSTREAM (INFILEP (TOCFILENAME FOLDER)))
                 (LAB.PROMPTPRINT FOLDER "Deleting table of contents...")
                 (DELFILE TOCSTREAM)))
             (replace (MAILFOLDER TOCLASTMESSAGE#) of FOLDER with LASTMSG#)))])

(WRITETOCENTRY
  [LAMBDA (MSG STREAM)                                   (* ; "Edited 28-Apr-89 12:18 by bvm")

(* ;;; "Dumps TOC entry for MSG on STREAM")

    (PROG ((TOCLENGTH 6)
           (MESSAGELENGTH (fetch (LAFITEMSG MESSAGELENGTH) of MSG))
           DAT NC)                                           (* ; 
    "TOCLENGTH 6 counts for 3 bytes of message length, 1 byte each of stamplength, flags and mark.")
          (WRITETOCMARKBYTES MSG STREAM)
          (COND
             ((> MESSAGELENGTH MAX.SMALLP)

              (* ;; "Ugh, length greater than fits in one word.  Would be surprised if this ever happens, but file format permits it")

              (LET ((HIWORD (LRSH MESSAGELENGTH BITSPERWORD)))
                   (if (> HIWORD 254)
                       then                              (* ; 
                                                  "a very long length, escape to 4 bytes of length")
                             (BOUT STREAM 255)
                             (WORDOUT STREAM HIWORD)
                             (add TOCLENGTH 2)
                     else (BOUT STREAM HIWORD)))
              (WORDOUT STREAM (LOGAND MESSAGELENGTH MAX.SMALLP)))
             (T                                              (* ; "Normal case, a small length")
                (BOUT STREAM 0)
                (WORDOUT STREAM MESSAGELENGTH)))
          (BOUT STREAM (fetch (LAFITEMSG STAMPLENGTH) of MSG))
          (if (fetch (LAFITEMSG DATEFETCHED?) of MSG)
              then                                       (* ; "Write 4 bytes of idate")
                    (\BOUTS STREAM MSG (UNFOLD (INDEXF (FETCH (LAFITEMSG IDATE)))
                                              BYTESPERWORD)
                           4)
                    (add TOCLENGTH 4))
          (if (NOT (fetch (LAFITEMSG DATEKNOWN?) of MSG))
              then                                       (* ; "Write 6 bytes of ascii string")
                    (PRIN3 [COND
                              ((EQ [SETQ NC (NCHARS (SETQ DAT (fetch (LAFITEMSG DATE)
                                                                 of MSG]
                                   6)                        (* ; "The usual case")
                               DAT)
                              (T (OR (SUBSTRING DAT 1 6)
                                     (CONCAT DAT (ALLOCSTRING (IDIFFERENCE 6 NC)
                                                        (CHARCODE SPACE]
                           STREAM)
                    (add TOCLENGTH 6))
          (add TOCLENGTH (LA.PRINTSHORTSTRING STREAM (fetch (LAFITEMSG SUBJECT) of MSG)))
          (add TOCLENGTH (LA.PRINTSHORTSTRING STREAM (fetch (LAFITEMSG FROM) of MSG)))
          (add TOCLENGTH (LA.PRINTSHORTSTRING STREAM (fetch (LAFITEMSG TO) of MSG)))
          (replace (LAFITEMSG TOCLENGTH) of MSG with TOCLENGTH)
          (replace (LAFITEMSG MARKSCHANGEDINTOC?) of MSG with NIL])

(WRITETOCMARKBYTES
  [LAMBDA (MSG STREAM)                                   (* bvm%: "20-Feb-84 12:53")
    (BOUT STREAM (fetch (LAFITEMSG MSGFLAGBITS) of MSG))
    (BOUT STREAM (fetch (LAFITEMSG MARKCHAR) of MSG])

(WRITEFOLDERMARKBYTES
  [LAMBDA (MSG MAILFOLDER OUTSTREAM)                     (* ; "Edited 21-Apr-89 12:41 by bvm")

(* ;;; "Write the three magic flag bytes for MSG onto OUTSTREAM.  If MAILFOLDER is supplied, then OUTSTREAM is MAILFOLDER's own file, and we will first position OUTSTREAM accordingly--otherwise caller has positioned us properly.")

    [COND
       (MAILFOLDER (MAYBEVERIFYMSG MSG MAILFOLDER)
              (SETFILEPTR OUTSTREAM (fetch (LAFITEMSG BEGIN) of MSG))
              (OR (LA.READSTAMP OUTSTREAM)
                  (HELP))
              (COND
                 ((fetch (LAFITEMSG MESSAGELENGTHCHANGED?) of MSG)
                                                             (* ; 
                        "Length is different in core and on file.  This is for scavenging purposes")
                  (LET ((LENPOS (GETFILEPTR OUTSTREAM))
                        LEN)
                       (LA.READCOUNT OUTSTREAM T)            (* ; "Skip over current length")
                       (SETQ LEN (- (GETFILEPTR OUTSTREAM)
                                    LENPOS 1))               (* ; 
                       "Number of bytes of length--have to use the same format when overwriting it")
                       (SETFILEPTR OUTSTREAM LENPOS)
                       (LA.PRINTCOUNT (fetch (LAFITEMSG MESSAGELENGTH) of MSG)
                              OUTSTREAM
                              `(FIX ,LEN 10 T))
                       (BIN OUTSTREAM)                       (* ; "Skip over terminating space")
                       )
                  (replace (LAFITEMSG MESSAGELENGTHCHANGED?) of MSG with NIL))
                 (T                                          (* ; "Just skip over lengths")
                    (LA.READCOUNT OUTSTREAM T)
                    (LA.READCOUNT OUTSTREAM T]
    (BOUT OUTSTREAM (COND
                       ((fetch (LAFITEMSG DELETED?) of MSG)
                        DELETEDFLAG)
                       (T UNDELETEDFLAG)))
    (BOUT OUTSTREAM (COND
                       ((fetch (LAFITEMSG SEEN?) of MSG)
                        SEENFLAG)
                       (T UNSEENFLAG)))
    (BOUT OUTSTREAM (fetch (LAFITEMSG MARKCHAR) of MSG))
    (if MAILFOLDER
        then (replace (LAFITEMSG MARKSCHANGEDINFILE?) of MSG with NIL])
)



(* ; "HARDCOPY")

(DEFINEQ

(LAFITE.HARDCOPY.MESSAGES
  [CL:LAMBDA (FOLDER MESSAGES &OPTIONAL (BATCHFLG NIL BATCHP))
                                                             (* ; "Edited 30-Aug-88 14:13 by bvm")
         (AND MESSAGES (\LAFITE.HARDCOPY.PROC FOLDER NIL NIL (\COERCE.TO.MSGLST MESSAGES)
                              (if BATCHP
                                  then BATCHFLG
                                else LAFITEHARDCOPYBATCHFLG])

(\LAFITE.HARDCOPY
  [LAMBDA (WINDOW FOLDER ITEM MENU)                      (* ; "Edited 23-Aug-88 15:45 by bvm")
    (\LAFITE.PROCESS `(,(FUNCTION \LAFITE.HARDCOPY.PROC)
                       ',FOLDER
                       ',ITEM
                       ',MENU NIL ',LAFITEHARDCOPYBATCHFLG)
           'MESSAGEHARDCOPIER])

(\LAFITE.HARDCOPY.PROC
  [LAMBDA (MAILFOLDER ITEM MENU MSGLST BATCHFLG)             (* ; "Edited  7-Feb-2022 12:00 by rmk")
                                                             (* ; "Edited 23-Aug-88 15:37 by bvm")
    (PROG (LCASEFILENAME TEXTSTREAM)
          (RESETLST
              (LA.RESETSHADE ITEM MENU (AND BATCHFLG LAFITEHARDCOPYBATCHSHADE))
              (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
                  (\LAFITE.MAYBE.CLEAR.PROMPT MAILFOLDER)
                  [COND
                     ((OR MSGLST (NOT (LAB.ASSURE.SELECTIONS MAILFOLDER)))
                      (LET (CONTINUEFLG)
                           (OR MSGLST (SETQ MSGLST (LAB.SELECTED.MESSAGES MAILFOLDER)))
                           (SETQ LCASEFILENAME (L-CASE (fetch (MAILFOLDER FULLFOLDERNAME)
                                                          of MAILFOLDER)))
                           [SETQ TEXTSTREAM (COND
                                               [(AND BATCHFLG (SETQ CONTINUEFLG (fetch (MAILFOLDER
                                                                                        
                                                                                       HARDCOPYSTREAM
                                                                                        )
                                                                                   of MAILFOLDER]
                                               ((AND (NOT BATCHFLG)
                                                     LAFITEHARDCOPY.MIN.TOC
                                                     (>= (LENGTH MSGLST)
                                                         LAFITEHARDCOPY.MIN.TOC))
                                                (\LAFITE.HARDCOPY.HEADERS MAILFOLDER LCASEFILENAME 
                                                       MSGLST))
                                               (T            (* ; "Start fresh")
                                                  (OPENTEXTSTREAM NIL NIL NIL NIL (LIST 'FONT 
                                                                                   LAFITEHARDCOPYFONT
                                                                                        ]
                           (\LAFITE.HARDCOPY.BODIES MAILFOLDER TEXTSTREAM MSGLST CONTINUEFLG)
                           (COND
                              (BATCHFLG (\LAFITE.MARK.HARDCOPIED MAILFOLDER MSGLST HARDCOPYBATCHMARK)
                                     (replace (MAILFOLDER HARDCOPYSTREAM) of MAILFOLDER with 
                                                                                           TEXTSTREAM
                                            )
                                     (replace (MAILFOLDER HARDCOPYMESSAGES) of MAILFOLDER
                                        with (NCONC (fetch (MAILFOLDER HARDCOPYMESSAGES) of 
                                                                                           MAILFOLDER
                                                           )
                                                    MSGLST))
                                     (SETQ TEXTSTREAM]))
          (COND
             (TEXTSTREAM                                     (* ; "Send to printer now...")
                    (\LAFITE.TRANSMIT.HARDCOPY MAILFOLDER TEXTSTREAM MSGLST LCASEFILENAME])

(\LAFITE.HARDCOPY.HEADERS
  [LAMBDA (MAILFOLDER LCASEFILENAME MESSAGES INCLUDE# TEXTSTREAM)
                                                             (* ; "Edited  7-Feb-2022 12:01 by rmk")
                                                             (* ; "Edited  3-Jun-88 17:50 by bvm")
    (PROG ((OUTPUTFILE (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW))
           TITLELEN TITLE TOCSTART TOCLEN FROMSTR SUBJLEFT DATELEFT TABSTOPS)
          (LINELENGTH MAX.SMALLP OUTPUTFILE)
          (for MSG in MESSAGES as N from 1 do 
                                              (* ;; 
                                  "Each line consists of [<tab>#.<tab>]date<tab>from<tab>subject<cr>")

                                              (OR (fetch (LAFITEMSG PARSED?) of MSG)
                                                  (LAFITE.PARSE.MSG.FOR.TOC MSG MAILFOLDER))
                                              (POSITION OUTPUTFILE 0)
                                              [COND
                                                 (INCLUDE# (\OUTCHAR OUTPUTFILE (CHARCODE TAB))
                                                        (CL:FORMAT OUTPUTFILE "~D." N)
                                                        (\OUTCHAR OUTPUTFILE (CHARCODE TAB]
                                              (PRIN3 (OR (fetch (LAFITEMSG DATE) of MSG)
                                                         UNSUPPLIEDFIELDSTR)
                                                     OUTPUTFILE)
                                              (\OUTCHAR OUTPUTFILE (CHARCODE TAB))
                                              (PRIN3 (OR (COND
                                                            ((fetch (LAFITEMSG MSGFROMMEP)
                                                                of MSG)
                                                             (PRIN3 "To: " OUTPUTFILE)
                                                             (OR (fetch (LAFITEMSG TO) of MSG)
                                                                 (LAFITE.FETCH.TO.FIELD MSG 
                                                                        MAILFOLDER)))
                                                            (T (fetch (LAFITEMSG FROM) of MSG)))
                                                         UNSUPPLIEDFIELDSTR)
                                                     OUTPUTFILE)
                                              (\OUTCHAR OUTPUTFILE (CHARCODE TAB))
                                              (PRIN3 (OR (fetch (LAFITEMSG SUBJECT) of MSG)
                                                         UNSUPPLIEDFIELDSTR)
                                                     OUTPUTFILE)
                                              (TERPRI OUTPUTFILE))
          (SETQ OUTPUTFILE (OPENSTREAM (CLOSEF OUTPUTFILE)
                                  'INPUT))
          (SETQ TITLE (CL:FORMAT NIL "Messages from ~A~%%Listed on ~A~%%~%%" LCASEFILENAME (DATE)))
          (SETQ TITLELEN (NCHARS TITLE))
          [COND
             (TEXTSTREAM                                     (* ; 
                                           "Need to insert all this stuff at beginning of textstream")
                    (TEDIT.INSERT TEXTSTREAM TITLE 1))
             (T (SETQ TEXTSTREAM (OPENTEXTSTREAM (OPENSTRINGSTREAM TITLE)
                                        (AND NIL (CREATEW NIL "Lafite headers"))
                                        NIL NIL (LIST 'FONT LAFITEHARDCOPYFONT]
          (PROGN                                             (* ; "Make title centered")
                 (TEDIT.PARALOOKS TEXTSTREAM '(QUAD CENTERED)
                        1
                        (SUB1 TITLELEN))
                 (TEDIT.PARALOOKS TEXTSTREAM '(POSTPARALEADING 30)
                        (- TITLELEN 4)
                        1))
          (PROGN                                             (* ; "Insert toc lines. ")
                 [SETQ TOCLEN (LA.TEDIT.INCLUDE TEXTSTREAM OUTPUTFILE (SETQ TOCSTART (ADD1 TITLELEN]
                 (TEDIT.INSERT TEXTSTREAM [CONSTANT (CONCATCODES (CHARCODE (FF]
                        (+ TOCSTART TOCLEN)))                (* ; "Formfeed after the insertion")
          (PROGN                                             (* ; 
                                               "Now give the toc lines the appropriate tab settings.")
                 (SETQ DATELEFT (COND
                                   (INCLUDE# 30)
                                   (T 0)))
                 [SETQ TABSTOPS (LIST (CONS (+ DATELEFT 50)
                                            'LEFT)
                                      (CONS (SETQ SUBJLEFT (+ DATELEFT 170))
                                            'LEFT]
                 [COND
                    (INCLUDE# (push TABSTOPS '(20 . RIGHT)
                                    (CONS DATELEFT 'LEFT]
                 (TEDIT.PARALOOKS TEXTSTREAM `(TABS (NIL ,@TABSTOPS)
                                                    LEFTMARGIN
                                                    ,(+ SUBJLEFT 20))
                        TOCSTART
                        (SUB1 TOCLEN)))
          (RETURN TEXTSTREAM])

(\LAFITE.MARK.HARDCOPIED
  [LAMBDA (MAILFOLDER MSGS MARK)                         (* bvm%: "26-Feb-86 12:34")
    (WITH.MONITOR (fetch (MAILFOLDER FOLDERLOCK) of MAILFOLDER)
        [LET ((MESSAGES (fetch (MAILFOLDER MESSAGEDESCRIPTORS) of MAILFOLDER))
              (LASTMSG (fetch (MAILFOLDER %#OFMESSAGES) of MAILFOLDER))
              N)
             (COND
                (MESSAGES                                    (* ; "If not, folder has been closed")
                       (for MSG in MSGS when (AND (ILEQ (SETQ N (fetch (LAFITEMSG
                                                                                        %#)
                                                                               of MSG))
                                                                    LASTMSG)
                                                              (EQ MSG (NTHMESSAGE MESSAGES N))
                                                              (SELCHARQ (fetch (LAFITEMSG 
                                                                                          MARKCHAR)
                                                                           of MSG)
                                                                   ((? SPACE H) 
                                                                        T)
                                                                   NIL))
                          do                             (* ; 
                   "If message doesn't already have a more interesting mark, set the hardcopy mark")
                                (MARKMESSAGE MSG MAILFOLDER MARK])])

(\LAFITE.TRANSMIT.HARDCOPY
  [LAMBDA (MAILFOLDER TEXTSTREAM MSGLST LCASEFILENAME)   (* bvm%: " 2-Mar-84 13:32")

(* ;;; "Sends TEXTSTREAM off to be hardcopied, then deletes it")

    (WITH.MONITOR \LAFITE.HARDCOPYLOCK                       (* ; 
                                                           "Because press isn't reentrant yet")
        [TEDIT.HARDCOPY TEXTSTREAM NIL NIL (CONCAT [COND
                                                      ((CDR MSGLST)
                                                       (CONCAT (LENGTH MSGLST)
                                                              " messages"))
                                                      (T (CONCAT "Message #" (fetch (LAFITEMSG
                                                                                         %#)
                                                                                of (CAR MSGLST]
                                                  " from "
                                                  (OR LCASEFILENAME (L-CASE (fetch (MAILFOLDER
                                                                                        
                                                                                       FULLFOLDERNAME
                                                                                        )
                                                                               of MAILFOLDER])
    (CLOSEF TEXTSTREAM)
    (DELFILE TEXTSTREAM)
    (\LAFITE.MARK.HARDCOPIED MAILFOLDER MSGLST HARDCOPYMARK])

(\LAFITE.HARDCOPY.BODIES
  [LAMBDA (MAILFOLDER TEXTSTREAM MESSAGES CONTINUEFLG NEXTMSG#)
                                                             (* ; "Edited 23-Aug-88 12:50 by bvm")
    (for MSGDESCRIPTOR in MESSAGES bind (NTHTIME _ CONTINUEFLG)
                                                 (INPUTFILE _ (\LAFITE.OPEN.FOLDER MAILFOLDER
                                                                     'INPUT :ABORT))
       do [COND
                 ((NULL NTHTIME)
                  (SETQ NTHTIME T))
                 ((OR LAFITENEWPAGEFLG CONTINUEFLG)
                  (\OUTCHAR TEXTSTREAM (CHARCODE FF))
                  (SETQ CONTINUEFLG))
                 (T (TERPRI TEXTSTREAM)
                    (COND
                       ((NOT NEXTMSG#)
                        (PRIN3 LAFITEHARDCOPYSEPARATOR TEXTSTREAM)
                        (TERPRI TEXTSTREAM]
             (COND
                (NEXTMSG# (CL:FORMAT TEXTSTREAM "Message ~D~%%~%%" NEXTMSG#)
                       (add NEXTMSG# 1)))
             (\LAFITE.APPEND.MESSAGE.BODY TEXTSTREAM INPUTFILE MSGDESCRIPTOR 
                    \LAPARSE.DONT.HARDCOPY.HEADERS)
             (TEDIT.CARETLOOKS TEXTSTREAM LAFITEHARDCOPYFONT])

(\LAFITE.APPEND.MESSAGE.BODY
  [LAMBDA (TEXTSTREAM MSGSTREAM MSGDESCRIPTOR FILTERS)   (* ; "Edited  5-Aug-93 20:20 by bvm")

    (* ;; "Appends the text of the indicated message to TEXTSTREAM, filtering out any header fields found in FILTERS")

    (LET ((START (fetch (LAFITEMSG START) of MSGDESCRIPTOR))
          (END (fetch (LAFITEMSG END) of MSGDESCRIPTOR))
          (EOF (GETEOFPTR TEXTSTREAM))
          FILTERED)
         (if FILTERS
             then (SETQ FILTERED (LAFITE.NEW.PARSE.HEADER MSGSTREAM FILTERS START END)))
         (TEDIT.SETSEL TEXTSTREAM (ADD1 EOF)
                0
                'LEFT)                                       (* ; 
                                                           "Get selection right for TEDIT.INCLUDE")
         (TEDIT.INCLUDE TEXTSTREAM MSGSTREAM START END)
         [if FILTERED
             then (if [NOT (= (GETEOFPTR TEXTSTREAM)
                                      (+ EOF (- END START]
                          then                           (* ; "Rats, we have to recalculate more slowly now, since there could be ns chars in header.  TEdit counts them differently than the plain text file does")
                                (SETQ FILTERED (LAFITE.PARSE.HEADER TEXTSTREAM FILTERS EOF)))
                   (for PAIR in FILTERED do      (* ; "Note: we are depending on the pairs being in reverse order from the parse, so that the deletions do not affect the char count")
                                                       (TEDIT.DELETE TEXTSTREAM
                                                              (+ EOF (- (CAR PAIR)
                                                                        START)
                                                                 1)
                                                              (- (CADR PAIR)
                                                                 (CAR PAIR]
         (TEDIT.SETSEL TEXTSTREAM (ADD1 (GETEOFPTR TEXTSTREAM))
                0)
         (SETFILEPTR TEXTSTREAM -1])

(\LAFITE.DO.PENDING.HARDCOPY
  [LAMBDA (FOLDER)                                       (* ; "Edited 20-Jan-89 14:29 by bvm")
    (LET ((TEXTSTREAM (fetch (MAILFOLDER HARDCOPYSTREAM) of FOLDER))
          (MSGLST (fetch (MAILFOLDER HARDCOPYMESSAGES) of FOLDER)))
         (COND
            (TEXTSTREAM (LAB.PROMPTPRINT FOLDER T "Hardcopying... ")
                   (COND
                      ((AND LAFITEHARDCOPY.MIN.TOC (>= (LENGTH MSGLST)
                                                       LAFITEHARDCOPY.MIN.TOC))
                       (\LAFITE.HARDCOPY.HEADERS FOLDER (L-CASE (fetch (MAILFOLDER 
                                                                                      FULLFOLDERNAME)
                                                                       of FOLDER))
                              MSGLST NIL TEXTSTREAM)))
                   (\LAFITE.TRANSMIT.HARDCOPY FOLDER TEXTSTREAM MSGLST)
                   (\LAFITE.CLEAR.HARDCOPY.STATE FOLDER)
                   (LAB.PROMPTPRINT FOLDER "done. "])

(\LAFITE.CANCEL.HARDCOPY
  [LAMBDA (FOLDER)                                       (* ; "Edited 20-Jan-89 14:29 by bvm")
    (LET ((PENDING (fetch (MAILFOLDER HARDCOPYMESSAGES) of FOLDER)))
         (if (NOT PENDING)
             then (LAB.PROMPTPRINT FOLDER "No messages are queued for hardcopy")
           elseif (LAB.MOUSECONFIRM FOLDER "Click LEFT to cancel hardcopy of ~D message~:P"
                             (LENGTH PENDING))
             then (for MSG in PENDING do     (* ; "Set mark back to space")
                                                        (MARKMESSAGE MSG FOLDER SEENMARK))
                   (\LAFITE.CLEAR.HARDCOPY.STATE FOLDER])

(\LAFITE.CLEAR.HARDCOPY.STATE
  [LAMBDA (FOLDER)                                       (* ; "Edited 20-Jan-89 14:28 by bvm")

    (* ;; "Clear all the places that think there is pending hardcopy")

    (replace (MAILFOLDER HARDCOPYSTREAM) of FOLDER with (replace (MAILFOLDER 
                                                                                     HARDCOPYMESSAGES
                                                                                        )
                                                                       of FOLDER with NIL))
    (LET ((MENU (fetch (MAILFOLDER BROWSERMENU) of FOLDER)))
                                                             (* ; "Take the speckle off the menu")
         (SHADEITEM (LA.MENU.ITEM (FUNCTION \LAFITE.HARDCOPY)
                           MENU)
                MENU WHITESHADE])
)

(ADDTOVAR LAFITEEXTRAMENUITEMS ("Cancel Pending Hardcopy" '\LAFITE.CANCEL.HARDCOPY 
                                  "Forget about hardcopying the messages so far marked for hardcopy."
                                      ))

(RPAQ? LAFITEHARDCOPYBATCHFLG NIL)

(RPAQ? LAFITEHARDCOPY.MIN.TOC NIL)

(RPAQ? LAFITEDISPLAYAFTERDELETEFLG T)

(RPAQ? LAFITEMOVETOCONFIRMFLG 'ALWAYS)

(RPAQ? LAFITENEWPAGEFLG T)

(RPAQ? LAFITEENDOFMESSAGESTR "End of message")

(RPAQ? LAFITEENDOFMESSAGEFONT (FONTCREATE '(TIMESROMAN 10 ITALIC)))

(RPAQ? LAFITE.DISPLAY.SIZE '(500 . 300))

(RPAQ? LAFITE.BROWSER.LAYOUTS NIL)

(RPAQ? LAFITE.MIDDLE.UPDATE '(:EXPUNGE :SHRINK :CONFIRM))

(RPAQ? LAFITEHARDCOPYBATCHSHADE 1025)

(RPAQ? LAFITEHARDCOPYSEPARATOR "%
 Next Message %
")



(* ; "Obsolete")


(RPAQ? LAFITEDISPLAYREGION (CREATEREGION 375 25 600 335))
(DECLARE%: DOEVAL@COMPILE DONTCOPY 

(FILESLOAD (SOURCE)
       LAFITEDECLS)

(DECLARE%: DOEVAL@COMPILE DONTCOPY

(LOCALVARS . T)
)
)
(DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 

(ADDTOVAR NLAMA )

(ADDTOVAR NLAML )

(ADDTOVAR LAMA LAFITE.HARDCOPY.MESSAGES)
)
(PUTPROPS LAFITECOMMANDS COPYRIGHT ("Xerox Corporation" 1988 1989 1992 1993 1999 2021))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (7934 27602 (\LAFITE.DISPLAY 7944 . 9649) (\LAFITE.DO.DISPLAY 9651 . 13816) (
SELECTMESSAGETODISPLAY 13818 . 16186) (MESSAGEDISPLAYER 16188 . 23604) (LA.COPY.MESSAGE.TEXT 23606 . 
24360) (\LAFITE.CLOSE.DISPLAYWINDOWS 24362 . 25956) (\LAFITE.CLOSE.DISPLAYER 25958 . 27600)) (27603 
36195 (\LAFITE.UNHIDE.HEADERS 27613 . 28703) (\LAFITE.HIDE.HEADERS 28705 . 29358) (
\LAFITE.REHIDE.HEADERS 29360 . 30396) (LAFITE.EAT.UNDESIRABLE.FIELD 30398 . 31157) (LAFITE.EAT.GVGV 
31159 . 32320) (\LAFITE.HARDCOPY.FROM.DISPLAY 32322 . 35841) (LAFITE.HARDCOPY.TAB.WIDTH 35843 . 36193)
) (36196 44499 (\LAFITE.SET.LOOKS.FROM.MENU 36206 . 36383) (\LAFITE.SET.DEFAULT.LOOKS 36385 . 36576) (
\LAFITE.SET.FIXED.LOOKS 36578 . 36770) (LAFITE.SET.LOOKS 36772 . 41229) (LAFITE.SET.TAB.LOOKS 41231 . 
41942) (LAFITE.SET.PARA.SEPARATION 41944 . 42152) (LAFITE.SET.LOWER.CASE 42154 . 43005) (
LAFITE.SUBSTITUTE.VP.EOL 43007 . 44497)) (46416 54744 (LAFITE.DELETE.MESSAGES 46426 . 47476) (
\LAFITE.DELETE 47478 . 48665) (DISPLAYAFTERDELETE 48667 . 53393) (\LAFITE.SELECT.NEXT 53395 . 54033) (
\LAFITE.UNDELETE 54035 . 54742)) (54766 69261 (LAFITE.MOVE.MESSAGES 54776 . 55423) (\COERCE.TO.MSGLST 
55425 . 56183) (\LAFITE.MOVETO 56185 . 60129) (\LAFITE.COPYTO 60131 . 60547) (\LAFITE.MOVETO.PROC 
60549 . 61819) (\LAFITE.MOVE.MESSAGES.INTERNAL 61821 . 69259)) (69287 77839 (\LAFITE.ENABLE.MOVE.MENU 
69297 . 70339) (\LAFITE.ADD.TO.MOVE.MENU 70341 . 71357) (\LAFITE.UPDATE.MOVE.MENU 71359 . 75999) (
\LAFITE.RESTORE.MOVE.MENU 76001 . 76677) (\LAFITE.HANDLE.AUTO.MOVE 76679 . 77837)) (78695 96179 (
\LAFITE.UPDATE 78705 . 84338) (\LAFITE.EXPUNGE.PROC 84340 . 85145) (\LAFITE.UPDATE.PROC 85147 . 86230)
 (\LAFITE.HARDCOPYONLY.PROC 86232 . 86674) (LAB.CHOOSE.UPDATE.MENU 86676 . 87457) (
LAB.CREATE.UPDATE.MENU 87459 . 89358) (LAB.UPDATE.NEEDED? 89360 . 90930) (\LAFITE.START.UPDATE 90932
 . 91964) (LAB.START.COMMAND 91966 . 92816) (\LAFITE.FINISH.UPDATE 92818 . 95071) (
\LAFITE.CLOSE.OTHER.FOLDERS 95073 . 96177)) (96180 130974 (LAB.FLUSHWINDOW 96190 . 97869) (
LAB.APPENDMESSAGES 97871 . 101033) (\LAFITE.COMPACT.FOLDER 101035 . 105199) (\LAFITE.COMPACT.FOLDER1 
105201 . 121240) (\LAFITE.COMPACT.FOLDER2 121242 . 125956) (\LAFITE.COMPACT.EXTRA 125958 . 128273) (
\LAFITE.INVALIDATE.TOC 128275 . 128968) (\LAFITE.RENAMEFILE 128970 . 129440) (SMART-RENAMEFILEP 129442
 . 130002) (LA.OPENTEMPFILE 130004 . 130972)) (130975 144317 (\LAFITE.UPDATE.FOLDER 130985 . 132962) (
\LAFITE.UPDATE.CONTENTS 132964 . 133681) (\LAFITE.UPDATE.CONTENTS1 133683 . 138537) (WRITETOCENTRY 
138539 . 141657) (WRITETOCMARKBYTES 141659 . 141901) (WRITEFOLDERMARKBYTES 141903 . 144315)) (144343 
163318 (LAFITE.HARDCOPY.MESSAGES 144353 . 144813) (\LAFITE.HARDCOPY 144815 . 145150) (
\LAFITE.HARDCOPY.PROC 145152 . 148630) (\LAFITE.HARDCOPY.HEADERS 148632 . 153961) (
\LAFITE.MARK.HARDCOPIED 153963 . 155673) (\LAFITE.TRANSMIT.HARDCOPY 155675 . 157265) (
\LAFITE.HARDCOPY.BODIES 157267 . 158509) (\LAFITE.APPEND.MESSAGE.BODY 158511 . 160619) (
\LAFITE.DO.PENDING.HARDCOPY 160621 . 161696) (\LAFITE.CANCEL.HARDCOPY 161698 . 162414) (
\LAFITE.CLEAR.HARDCOPY.STATE 162416 . 163316)))))
STOP
