(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 9-May-2023 22:09:32" {WMEDLEY}<library>tedit>TEDIT.;237 107969 

      :EDIT-BY rmk

      :CHANGES-TO (FNS TEDIT.MOVE TEDITSTRING)

      :PREVIOUS-DATE " 9-May-2023 17:40:50" {WMEDLEY}<library>tedit>TEDIT.;234)


(* ; "
Copyright (c) 1983-1993, 1995, 1999, 2018, 2021 by Venue & Xerox Corporation.
")

(PRETTYCOMPRINT TEDITCOMS)

(RPAQQ TEDITCOMS
       [(COMS                                                (* ; "Loadup stuff")
              (VARS TEDITFILES)
              (FNS MAKE-TEDIT-EXPORTS.ALL UPDATE-TEDIT EDIT-TEDIT)
              [* (DECLARE%: DONTEVAL@LOAD DONTCOPY DONTEVAL@COMPILE 

                        (* ;; "This gets EXPORTS.ALL in the TEDIT-EXPORTS.ALL")

                        (EXPORT (FILES EXPORTS.ALL]
              (DECLARE%: DONTCOPY (FILES EXPORTS.ALL)
                     (FILES TEDIT-EXPORTS.ALL)))
        [DECLARE%: EVAL@COMPILE DONTCOPY 

               (* ;; "Assertions go to comments if not being checked, so we see value-warnings")

               (EXPORT (MACROS TEDIT-ASSERT)
                      (GLOBALVARS CHECK-TEDIT-ASSERTIONS)
                      (INITVARS (CHECK-TEDIT-ASSERTIONS T]
        (FILES TEDIT-PCTREE TEDIT-STREAM TEDIT-COMMAND TEDIT-SCREEN TEDIT-ABBREV TEDIT-LOOKS)
        (FNS \CREATE.TEDIT.RESTART.MENU)
        (VARS (TEDIT.TERMSA.FONTS NIL)
              (TEDIT.TENTATIVE NIL)
              (TEDIT.DEFAULT.PROPS NIL)
              (TEDIT.STARTUP.MONITORLOCK (CREATE.MONITORLOCK 'TEDIT.STARTUP))
              (TEDIT.RESTART.MENU (\CREATE.TEDIT.RESTART.MENU)))
        (GLOBALVARS TEDIT.TENTATIVE TEDIT.DEFAULT.PROPS)
        
        (* ;; "Unslashed functions.  Public?")

        (FNS TEDIT COERCETEXTOBJ TEDITSTRING TEDIT-SEE TEDIT.CHARWIDTH TEDIT.COPY TEDIT.DELETE 
             TEDIT.INSERT TEDIT.KILL TEDIT.MAPPIECES TEDIT.QUIT TEDIT.DO.BLUEPENDINGDELETE TEDIT.MOVE
             TEDIT.STRINGWIDTH TEXTOBJ TEDITMENUP TEXTSTREAM)
        
        (* ;; "Slashed functions. Private?")

        (FNS \TEDIT2 \TEDIT.INSERT \TEDIT.INCLUDE \TEDIT.MOVE.SELPIECES \TEDIT.INSERT.SELPIECES 
             \TEDIT.OBJECT.SHOWSEL \TEDIT.RESTARTFN \TEDIT.CHARDELETE \TEDIT.COPYPIECE 
             \TEDIT.COPYOBJECT \SELPIECES.COPY \TEDIT.DELETE \TEDIT.DIFFUSE.PARALOOKS 
             \TEDIT.FOREIGN.COPY? \TEDIT.QUIT \TEDIT.WORDDELETE \TEDIT1)
        (P (MOVD? 'NILL 'OBJECTOUTOFTEDIT))
                                                             (* ; 
                                    "HOOK for looked-string copy, etc. Used in \TEDIT.FOREIGN.COPY?.")
        (COMS                                                (* ; "Object-oriented editing")
              (FNS TEDIT.INSERT.OBJECT TEDIT.EDIT.OBJECT TEDIT.FIND.OBJECT TEDIT.PUT.OBJECT 
                   TEDIT.GET.OBJECT TEDIT.OBJECT.CHANGED TEDIT.MAP.OBJECTS)
              (FILES IMAGEOBJ))
        
        (* ;; "Would be nice to just do (DOFILESLOAD (CDR TEDITFILES)).  But the order for exports.all and the order for loading have to be aligned.")

        (FILES TEDIT-FIND TEDIT-HISTORY TEDIT-FILE TEDIT-WINDOW TEDIT-SELECTION TEDIT-TFBRAVO 
               TEDIT-HCPY TEDIT-PAGE TEDIT-MENU TEDIT-FNKEYS)
        (COMS                                                (* ; "TEDIT Support information")
              (E (SETQ TEDITSYSTEMDATE (DATE)))
              (VARS TEDITSYSTEMDATE))
        (COMS                                                (* ; 
                           "LISTFILES Interface, so the system can decide if a file is a TEdit file.")
              (ADDVARS (PRINTFILETYPES (TEDIT (TEST \TEDIT.FORMATTEDP1)
                                              (EXTENSION (TEDIT])



(* ; "Loadup stuff")


(RPAQQ TEDITFILES (TEDIT TEDIT-PCTREE TEDIT-SELECTION TEDIT-SCREEN TEDIT-STREAM TEDIT-COMMAND 
                         TEDIT-FILE TEDIT-LOOKS TEDIT-WINDOW TEDIT-MENU TEDIT-FIND TEDIT-FNKEYS 
                         TEDIT-HCPY TEDIT-HISTORY TEDIT-PAGE TEDIT-ABBREV TEDIT-TFBRAVO))
(DEFINEQ

(MAKE-TEDIT-EXPORTS.ALL
  [LAMBDA NIL                                                (* ; "Edited 11-Sep-2022 23:43 by rmk")
    (CNDIR (MEDLEYDIR "library>tedit"))
    (GATHEREXPORTS TEDITFILES (MEDLEYDIR "library/tedit" "tedit-exports.all" T])

(UPDATE-TEDIT
  [LAMBDA (FILES)                                            (* ; "Edited 26-Oct-2022 21:10 by rmk")

    (* ;; "updates sysout with new versions of loaded files.  Keeps the extension")

    (FOR FILE DIRFILE LOADEDFILE INSIDE (OR FILES TEDITFILES)
       WHEN [AND (SETQ LOADEDFILE (FOR F IN LOADEDFILELST WHEN (EQ FILE (FILENAMEFIELD F 'NAME))
                                     DO (RETURN F)))
                 (SETQ DIRFILE (INFILEP (PACKFILENAME 'VERSION NIL 'BODY LOADEDFILE]
       UNLESS (EQ LOADEDFILE DIRFILE) COLLECT (LOAD DIRFILE T])

(EDIT-TEDIT
  [LAMBDA NIL                                                (* ; "Edited 25-Apr-2023 17:39 by rmk")
                                                             (* ; "Edited 26-Oct-2022 21:12 by rmk")
                                                             (* ; "Edited 14-Sep-2022 08:37 by rmk")
    (BKSYSBUF " ")

    (* ;; "TEDIT-TFBRAVO isn't in the main list, but we want to track it")

    (RESETLST
        (RESETSAVE LOADDBFLG 'YES)
        (FOR F IN TEDITFILES DO (LOADCOMP F)
                                (LOADFROM F)))
    (%. ANALYZE ON IN TEDITFILES])
)



(* (DECLARE%: DONTEVAL@LOAD DONTCOPY DONTEVAL@COMPILE (* ;; 
"This gets EXPORTS.ALL in the TEDIT-EXPORTS.ALL") (EXPORT (FILES EXPORTS.ALL))))

(DECLARE%: DONTCOPY 

(FILESLOAD EXPORTS.ALL)


(FILESLOAD TEDIT-EXPORTS.ALL)
)
(DECLARE%: EVAL@COMPILE DONTCOPY 
(* "FOLLOWING DEFINITIONS EXPORTED")(DECLARE%: EVAL@COMPILE 

(PUTPROPS TEDIT-ASSERT MACRO [ARGS (COND
                                      [CHECK-TEDIT-ASSERTIONS
                                       `(CL:UNLESS ,(CAR ARGS)
                                            [HELP "TEDIT-ASSERT FAILURE" ,(KWOTE (CAR ARGS])]
                                      (T `                   (* (TEDIT-ASSERT (\,@ ARGS)))])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS CHECK-TEDIT-ASSERTIONS)
)

(RPAQ? CHECK-TEDIT-ASSERTIONS T)

(* "END EXPORTED DEFINITIONS")

)

(FILESLOAD TEDIT-PCTREE TEDIT-STREAM TEDIT-COMMAND TEDIT-SCREEN TEDIT-ABBREV TEDIT-LOOKS)
(DEFINEQ

(\CREATE.TEDIT.RESTART.MENU
  [LAMBDA NIL                                                (* ; "Edited 28-Aug-2022 22:45 by rmk")

    (* ;; "Separate dinky function to compile for SUNLOADUP without DWIM.")

    (CREATE MENU
           ITEMS _ '(NewEditProcess])
)

(RPAQQ TEDIT.TERMSA.FONTS NIL)

(RPAQQ TEDIT.TENTATIVE NIL)

(RPAQQ TEDIT.DEFAULT.PROPS NIL)

(RPAQ TEDIT.STARTUP.MONITORLOCK (CREATE.MONITORLOCK 'TEDIT.STARTUP))

(RPAQ TEDIT.RESTART.MENU (\CREATE.TEDIT.RESTART.MENU))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.TENTATIVE TEDIT.DEFAULT.PROPS)
)



(* ;; "Unslashed functions.  Public?")

(DEFINEQ

(TEDIT
  [LAMBDA (TEXT WINDOW DONTSPAWN PROPS)

    (* ;; "Edited 10-Aug-2022 11:24 by rmk")

    (* ;; "Edited 22-Jun-2022 20:01 by rmk: Call to OPENSTREAM passes FORMAT from PROPS")

    (* ;; "Edited 22-Jun-2022 19:58 by rmk")

    (* ;; "Edited  4-Jun-2022 15:42 by rmk")

    (* ;; "Edited 31-Jan-2022 17:19 by rmk: String TEXT is a file name")

    (* ;; "Edited 24-Dec-2021 19:21 by rmk")

    (* ;; "Edited 11-Jun-99 14:14 by rmk:")

    (* ;; "Edited  3-Jun-88 14:27 by jds")

    (* ;; "User entry to the text editor.  Takes an optional window to be used for editing")

    (* ;; "DONTSPAWN => Don't try to create a new process for this edit.")

    (PROG (PROC TEDITCREATEDWINDOW)
          (CL:WHEN (AND TEXT (OR (LITATOM TEXT)
                                 (STRINGP TEXT)
                                 (CL:PATHNAMEP TEXT)))       (* ; 
                                        "Make sure the file exists before trying to open the window.")
              [SETQ TEXT (OPENSTREAM TEXT 'INPUT 'OLD `((TYPE TEXT)
                                                        (FORMAT ,(LISTGET PROPS 'FORMAT])
          (CL:WHEN (AND WINDOW (OR (LITATOM WINDOW)
                                   (REGIONP WINDOW)))        (* ; 
                                                  "Pass specified and typed regions to TEDIT.CREATEW")
              (PUSH PROPS 'REGION-TYPE WINDOW)
              (SETQ WINDOW NIL))
          (RESETLST
              [RESETSAVE NIL `(AND ,WINDOW (WINDOWPROP ,WINDOW 'TEXTOBJ NIL]
              (WITH.MONITOR TEDIT.STARTUP.MONITORLOCK
                  (CL:UNLESS WINDOW
                      (SETQ TEDITCREATEDWINDOW T)
                      (SETQ WINDOW (COND
                                      [(OR (LISTGET PROPS 'REGION-TYPE)
                                           (NOT TEDIT.DEFAULT.WINDOW)
                                           (\TEDIT.ACTIVE.WINDOWP TEDIT.DEFAULT.WINDOW))
                                       (TEDIT.CREATEW (COND
                                                         (TEXT (CONCAT 
                                                              "Please specify an editing window for "
                                                                      (FULLNAME TEXT)))
                                                         (T 
                                                    "Please specify a region for the editing window."
                                                            ))
                                              TEXT
                                              (APPEND PROPS (COPY TEDIT.DEFAULT.PROPS]
                                      (T (\TEDIT.CREATEW.FROM.REGION (WINDOWPROP TEDIT.DEFAULT.WINDOW
                                                                            'REGION)
                                                TEXT
                                                (APPEND PROPS (COPY TEDIT.DEFAULT.PROPS)))
                                                             (* ; "Replace the old title")
                                         TEDIT.DEFAULT.WINDOW)))

                      (* ;; 
                 "Mark the newly-created window reserved until the OPENTEXTSTREAM has done its work.")

                      (* ;; 
                      "mark that we created the window so that we know we can update the title, etc.")

                      (WINDOWPROP WINDOW 'TEXTOBJ T))))
          [SETQ TEXT (OPENTEXTSTREAM TEXT WINDOW NIL NIL (APPEND PROPS '(BEING-EDITED T]
                                                             (* ; "Connect the editor to the window")
          (replace (TEXTOBJ TXTEDITING) of (TEXTOBJ TEXT) with T)
                                                             (* ; "For the moment, mark the document as actively in edit. (so caret flashes when the window is first brought up.)")
          (CL:WHEN TEDITCREATEDWINDOW
              (TEXTPROP TEXT 'TEDITCREATEDWINDOW 'T))
          (COND
             (DONTSPAWN                                      (* ; 
                                     "Either no processes running, or specifically not to spawn one.")
                    (RETURN (\TEDIT2 TEXT WINDOW T)))
             (T                                              (* ; "Spawn a process to do the edit.")
                [SETQ PROC (ADD.PROCESS (LIST '\TEDIT2 (KWOTE TEXT)
                                              WINDOW NIL)
                                  'NAME
                                  'TEdit
                                  'RESTARTABLE
                                  'HARDRESET
                                  'RESTARTFORM
                                  (LIST '\TEDIT.RESTARTFN (KWOTE TEXT)
                                        WINDOW
                                        (KWOTE PROPS]
                (PROCESSPROP PROC 'WINDOW WINDOW)
                (COND
                   ((NOT (LISTGET (APPEND PROPS (COPY TEDIT.DEFAULT.PROPS))
                                'LEAVETTY))                  (* ; 
                              "Unless he asked us to leave the tty where it is, TEdit should get it.")
                    (TTY.PROCESS PROC)))
                (RETURN PROC])

(COERCETEXTOBJ
  [LAMBDA (TSTREAM TYPE OUTPUTSTREAM)                        (* ; "Edited  8-May-2023 13:25 by rmk")
                                                             (* ; "Edited  4-May-2023 12:13 by rmk")
                                                             (* ; "Edited 11-Jun-99 15:10 by rmk:")
                                                             (* ; "Edited 18-Apr-93 23:42 by jds")

    (* ;; "Coerce the contents of the TEXOTBJ to be of the given type.  This is for making a string from a textobj, e.g.")

    (* ;; "RMK: moved the string case up from the piece level to the stream-BIN level")

    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          OFILE FMTFILE)
         (SETQ TSTREAM (TEXTSTREAM TEXTOBJ))
         (SELECTQ TYPE
             ((STRINGP STRING) 
                  (\TEXTSETFILEPTR TSTREAM 0)                (* ; 
                                      "This gets underneath the OPENP test of the generic SETFILEPTR")

                  (* ;; "Allocstring presumably errors if greater than max stringsize.")

                  [for CH# (STR _ (ALLOCSTRING (TEXTLEN TEXTOBJ))) from 1 to (TEXTLEN TEXTOBJ)
                     do (RPLCHARCODE STR CH# (BIN TSTREAM))
                     finally (RETURN (OR (SUBSTRING STR 1 (SUB1 CH#))
                                         (CONCAT ""])
             (STREAM                                         (* ; 
                         "Does this code make sense if pieces are on different files, e.g. INCLUDE ?")
                     (CL:WHEN (type? STREAM (fetch (TEXTOBJ TXTFILE) of TEXTOBJ))
                         [OPENFILE (fetch (STREAM FULLNAME) of (fetch (TEXTOBJ TXTFILE) of TEXTOBJ))
                                'INPUT NIL '((TYPE TEXT]
                         (replace (STREAM ACCESSBITS) of (fetch (TEXTOBJ TXTFILE) of TEXTOBJ)
                            with ReadBit))
                     (SETFILEPTR TSTREAM 0)
                     TSTREAM)
             (FILE [SETQ OFILE (OR (AND OUTPUTSTREAM (OPENP OUTPUTSTREAM 'OUTPUT))
                                   (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW]
                   (TEDIT.PUT.PCTB TEXTOBJ OFILE)
                   (OR OUTPUTSTREAM (CLOSEF OFILE))
                   OFILE)
             (SPLIT 
                    (* ;; "I.e., Return 2 files, one with plain text, one with formatting info, such that concatenating them will do the right thing.")

                    (SETQ OFILE (OPENFILE '{NODIRCORE} 'BOTH 'NEW))
                    (SETQ FMTFILE (CAR (TEDIT.PUT.PCTB TEXTOBJ (\GETSTREAM OFILE 'BOTH)
                                              NIL T)))
                    (CLOSEF OFILE)
                    (CONS OFILE FMTFILE))
             NIL])

(TEDITSTRING
  [LAMBDA (TEXT WINDOW DONTSPAWN PROPS)

(* ;;; "Edited  9-May-2023 21:55 by rmk")

(* ;;; "Edited 23-May-2022 15:52 by rmk")

(* ;;; "Edited 19-May-2022 22:46 by rmk: An interface function to replace calls to TEDIT when the text argument may be the string to be edited rather than the name of a file.  This enables the transition that gets TEDIT aligned with the convention that strings, as well as litatoms, are file names")

    (TEDIT (IF (STRINGP TEXT)
               THEN (LET ((TSTR (OPENTEXTSTREAM)))
                         (TEDIT.INSERT TSTR TEXT 1 NIL T)
                         (TEDIT.SETSEL TSTR 1 0 'LEFT)
                         TSTR)
             ELSE TEXT)
           WINDOW DONTSPAWN PROPS])

(TEDIT-SEE
  [LAMBDA (FILE WINDOW FORMAT TITLE)

    (* ;; "Edited 13-Sep-2022 09:21 by rmk:  Changed the default format here to the current Medley default.  This shouldn't be special.")

    (* ;; "Edited  5-May-2022 15:18 by rmk")

    (* ;; "Edited 27-Feb-2021 20:07 by rmk:")

    (* ;; "Edited  1-Feb-88 19:00 by bvm:")

    (* ;; "See FILE in a scrollable READONLY TEDIT window.  If FILE is a LISP source file, copy first to a temporary NODIRCORE image file that interpretes the fontchange characters rather than showing black boxes.")

    (* ;; "FORMAT for text files defaults to to our *DEFAULT-EXTERNALFORMAT*")

    (CL:WITH-OPEN-FILE (STREAM FILE :DIRECTION :INPUT)
           (LET ((SEESTREAM STREAM)
                 TSTREAM)

                (* ;; "No need to fiddle with a TEDIT file")

                (IF (\TEDIT.FORMATTEDP1 STREAM)
                  ELSEIF (LISPSOURCEFILEP STREAM)
                    THEN 
                         (* ;; "Lisp source file")

                         (SETQ SEESTREAM (OPENTEXTSTREAM))
                         (APPLY* (FUNCTION SEE)
                                STREAM SEESTREAM)
                  ELSE 
                       (* ;; "Not a Lisp source file and not a Tedit file.  If it is not random access, we copy it so we can scroll around.")

                       (* ;; "Maybe there is a conventional way of finding out the external format of a plain-text stream (an EMACS header?), otherwise we use our default.")

                       (SETFILEINFO STREAM 'FORMAT (OR FORMAT :DEFAULT))
                       (CL:UNLESS (RANDACCESSP STREAM)
                           (SETQ SEESTREAM (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW))
                           (COPYCHARS STREAM SEESTREAM)))
                [SETQ TSTREAM (TEXTSTREAM (TEDIT SEESTREAM WINDOW NIL
                                                 `(READONLY T LEAVETTY T FONT ,DEFAULTFONT]
                [WINDOWPROP (WFROMDS TSTREAM)
                       'TITLE
                       (OR TITLE (CONCAT "SEE window for " (FULLNAME STREAM]
                TSTREAM])

(TEDIT.CHARWIDTH
  [LAMBDA (CH FONT TERMSA)                                   (* jds "22-OCT-83 19:32")
          
          (* Returns the width of CH in FONT printed according to any special printing 
          instructions in CHARTABLE TERMSA)

    (COND
       (TERMSA                                               (* There IS a TERMTABLE to account for)
              (SELECTC (fetch CCECHO of (\SYNCODE TERMSA CH))
                  (INDICATE.CCE (IPLUS (COND
                                          ((IGREATERP CH 127)(* META character)
                                           (SETQ CH (LOGAND CH 127))
                                           (CHARWIDTH (CHARCODE %#)
                                                  FONT))
                                          (T 0))
                                       (COND
                                          ((ILESSP CH 32)    (* CONTROL character)
                                           (SETQ CH (LOGOR CH 64))
                                           (CHARWIDTH (CHARCODE ^)
                                                  FONT))
                                          (T 0))
                                       (CHARWIDTH CH FONT)))
                  (SIMULATE.CCE (SELCHARQ CH
                                     ((EOL CR LF) 
                                          (IMAX 6 (CHARWIDTH CH FONT)))
                                     (ESCAPE (CHARWIDTH (CHARCODE $)
                                                    FONT))
                                     (BELL 0)
                                     (TAB 36)
                                     (CHARWIDTH CH FONT)))
                  (REAL.CCE (CHARWIDTH CH FONT))
                  (IGNORE.CCE 0)
                  (SHOULDNT)))
       (T (* The usual case is to treat every character as a graphic.)
          (SELCHARQ CH
               (CR (IMAX 6 (CHARWIDTH CH FONT)))
               (TAB 36)
               (CHARWIDTH CH FONT])

(TEDIT.COPY
  [LAMBDA (FROM TO)                                          (* ; "Edited  9-May-2023 13:13 by rmk")
                                                             (* ; "Edited  7-May-2023 14:08 by rmk")
                                                             (* ; "Edited  4-Jun-92 11:11 by jds")

    (* ;; "Copy the FROM-selected pieces into the destination object and position as indicated by the TO selection.")

    (SETQ TEDIT.COPY.PENDING NIL)                            (* ; 
                                                  "First, Turn off the global flag that got us here.")
    (LET ((FROMOBJ (AND FROM (GETSEL FROM SET)
                        (GETSEL FROM SELTEXTOBJ)))
          (TOOBJ (AND TO (GETSEL TO SET)
                      (GETSEL TO SELTEXTOBJ)))
          MSGOBJ)
         (SETQ MSGOBJ (OR FROMOBJ TOOBJ))
         (CL:WHEN MSGOBJ
             (if (NOT FROMOBJ)
                 then (TEDIT.PROMPTPRINT MSGOBJ "Please select a source for the copy" T)
               elseif (NOT TOOBJ)
                 then (TEDIT.PROMPTPRINT MSGOBJ "Please select a destination for the copy" T)
               elseif (fetch (TEXTOBJ TXTREADONLY) of TOOBJ)
                 then (TEDIT.PROMPTPRINT MSGOBJ "Destination is read only--aborted" T)
               else (TEDIT.PROMPTPRINT MSGOBJ "help" T)      (* ; 
                                              "General tidiness: get rid of lingering prompt garbage")
                    (\TEDIT.MOVE.PIECERANGE (\SELPIECES FROM)
                           TO
                           'COPY)))])

(TEDIT.DELETE
  [LAMBDA (STREAM SEL LEN LEAVECARETLOOKS)                   (* ; "Edited 10-Nov-2022 22:48 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "DELETE THE CHARACTERS SPECIFIED FROM THE MAIN TEXT.")

    (* ;; "If LEAVECARETLOOKS is non-NIL, the selection will NOT be set up to do the right thing with type-in.  This can save time in inner loops.")

    (LET ((TEXTOBJ (TEXTOBJ STREAM)))
         (CL:WHEN (FIXP SEL)
             (TEDIT.SETSEL STREAM SEL LEN NIL NIL LEAVECARETLOOKS)
             (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ)))
         (\TEDIT.DELETE (OR SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                TEXTOBJ])

(TEDIT.INSERT
  [LAMBDA (TSTREAM TEXT CH#ORSEL LOOKS DONTSCROLL)           (* ; "Edited  9-May-2023 17:40 by rmk")
                                                             (* ; "Edited  6-May-2023 17:26 by rmk")
                                                             (* ; "Edited 20-Mar-2023 12:40 by rmk")
                                                             (* ; "Edited 15-Mar-2023 11:49 by rmk")
                                                             (* ; "Edited  9-Nov-2022 10:36 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Insert TEXT (charcode, litatom or string) at the appropriate spot in the text..  No-op if given something else--should it error?")

    (CL:WHEN (LITATOM TEXT)
        (SETQ TEXT (MKSTRING TEXT)))

    (* ;; "Can't insert an empty string sensibly.")

    (PROG ((TEXTOBJ (TEXTOBJ TSTREAM))
           CH# NCHARSADDED)
          (CL:WHEN (OR (NOT (STRINGP TEXT))
                       (ZEROP (NCHARS TEXT))
                       (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ))
                 (RETURN))
          (if (FIXP CH#ORSEL)
              then (TEDIT.SETSEL TEXTOBJ CH#ORSEL 1 'LEFT)   (* ; "He gave us a ch# to insert before")
                   (SETQ CH#ORSEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
            elseif (NOT CH#ORSEL)
              then (SETQ CH#ORSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)))
          (CL:UNLESS (AND CH#ORSEL (fetch (SELECTION SET) of CH#ORSEL))
              (TEDIT.PROMPTPRINT TEXTOBJ "Please select a place for the insertion." T)
              (RETURN))
          (BTVALIDATE 'TEDIT.INSERT 'START TEXTOBJ)
          (TEDIT.DO.BLUEPENDINGDELETE CH#ORSEL TEXTOBJ)      (* ; 
                    "If the selected text was for pending delete, delete it before doing the insert.")
          (CL:WHEN LOOKS                                     (* ; "Set up any specified looks.")
              (TEDIT.CARETLOOKS TSTREAM LOOKS))
          (\TEDIT.INSERT TEXT CH#ORSEL TEXTOBJ DONTSCROLL T)
          (BTVALIDATE 'TEDIT.INSERT 'END TEXTOBJ])

(TEDIT.KILL
  [LAMBDA (STREAM)                                      (* ; "Edited 12-Jun-90 17:49 by mitani")
                                                             (* Force the edit session supported 
                                                           by STREAM to terminate, and to 
                                                           return VALUE)
    (COND
       ((type? STREAM STREAM)                            (* If he gave us a textofd, get the 
                                                           textobj)
        (SETQ STREAM (fetch (TEXTSTREAM TEXTOBJ) of STREAM)))
       [(WINDOWP STREAM)                                     (* Take a window, and do the obvious 
                                                           with it.)
        (SETQ STREAM (WINDOWPROP STREAM 'TEXTOBJ]
       ((type? TEXTOBJ STREAM)                           (* A Textobj is just fine)
        )
       (T                                                    (* Anything else is ungood, 
                                                           double-plus)
          (\ILLEGAL.ARG STREAM)))
    (replace (TEXTOBJ EDITFINISHEDFLG) of STREAM with T)
    (PROG (TEDW TEDPROC)
          (AND (SETQ TEDW (CAR (fetch (TEXTOBJ \WINDOW) of STREAM)))
               [PROCESSP (SETQ TEDPROC (WINDOWPROP TEDW 'PROCESS]
               (NEQ TEDPROC (THIS.PROCESS))
               (DEL.PROCESS TEDPROC)
               (TEDIT.DEACTIVATE.WINDOW TEDW])

(TEDIT.MAPPIECES
  [LAMBDA (TEXTOBJ FN FNARG)                                 (* ; "Edited  6-Nov-2022 11:12 by rmk")
                                                             (* ; "Edited  4-Nov-2022 23:11 by rmk")
                                                             (* ; "Edited  9-Sep-2022 16:08 by rmk")
                                                             (* ; "Edited 22-Aug-2022 14:28 by rmk")
                                                             (* ; "Edited 22-Jul-2022 09:19 by rmk")
                                                             (* ; "Edited 22-Apr-93 16:02 by jds")

    (* ;; "Go thru all the pieces in a document, applying a function to them serially")

    (* ;; "FN is a function of 3 args (PIECE    CH#-of-1st-char-in-piece    FNARG)")

    (for CH# from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (EQ (APPLY* FN CH# PC FNARG)
                'STOP) do (RETURN (LIST CH# PC])

(TEDIT.QUIT
  [LAMBDA (STREAM VALUE)                                     (* ; "Edited 10-Apr-2023 10:19 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "Force the edit session supported by STREAM to terminate, and to return VALUE")

    (LET (MAINW (TEXTOBJ (TEXTOBJ STREAM)))
         (replace (TEXTOBJ EDITFINISHEDFLG) of TEXTOBJ with (OR VALUE T))
                                                             (* ; 
                                                    "tell the command loop to stop next time through")
         (CL:WHEN [AND (fetch (TEXTOBJ \WINDOW) of TEXTOBJ)
                       (NEQ (SETQ MAINW (\TEDIT.PRIMARYW TEXTOBJ))
                            (PROCESSPROP (TTY.PROCESS)
                                   'WINDOW]

             (* ;; "there is a main window of the stream, and it is not the window of the tty process, so give it the tty")

             (TTY.PROCESS (WINDOWPROP MAINW 'PROCESS))
             (AND (NEQ (TTY.PROCESS)
                       (THIS.PROCESS))
                  (until [OR (NOT (WINDOWPROP MAINW 'PROCESS))
                             (PROCESS.FINISHEDP (WINDOWPROP MAINW 'PROCESS] do 
                                                             (* ; 
                    "Wait until the Edit process has had a chance to go away before continuing here.")
                                                                               (DISMISS))))])

(TEDIT.DO.BLUEPENDINGDELETE
  [LAMBDA (SEL TEXTOBJ)                                      (* ; "Edited  4-May-2023 00:05 by rmk")
                                                             (* ; "Edited 22-Apr-2023 18:31 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Check for blue-pending-delete, and do it if it's there.")

    (* ;; "Return T if the deletion was made.  For people who need to know")

    (CL:WHEN (fetch (TEXTOBJ BLUEPENDINGDELETE) of TEXTOBJ)
        (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)              (* ; "Make it a normal selection again.")
        (\TEDIT.DELETE SEL TEXTOBJ NIL))])

(TEDIT.MOVE
  [LAMBDA (FROM TO)                                          (* ; "Edited  9-May-2023 22:08 by rmk")
                                                             (* ; "Edited  5-May-2023 13:12 by rmk")
                                                             (* ; "Edited  1-May-2023 23:29 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Move the text described by the selection FROM to the place described by the selection TO")

    (SETQ TEDIT.MOVE.PENDING NIL)                            (* ; 
                                                  "First, Turn off the global flag that got us here.")
    (COND
       ((fetch (TEXTOBJ TXTREADONLY) of (GETSEL TO SELTEXTOBJ))
                                                             (* ; 
                                                             "The target is read-only.  Skip it..")
        (\SHOWSEL FROM NIL))
       ((NOT (AND FROM (GETSEL FROM SET)))                   (* ; 
                                                             "There MUST be a source selected first.")
        (TEDIT.PROMPTPRINT (GETSEL TO SELTEXTOBJ)
               "Please select the text to be moved" T))
       ((ZEROP (GETSEL FROM DCH))                            (* ; 
                                                  "The source selection is empty.  Just turn it off.")
        (\SHOWSEL FROM NIL))
       ((NOT (AND TO (GETSEL TO SET)))                       (* ; 
                                                           "There is no target selection -- complain")
        (TEDIT.PROMPTPRINT (GETSEL FROM SELTEXTOBJ)
               "Please select a destination for the move" T))
       (T (PROG ((TOOBJ (GETSEL TO SELTEXTOBJ))
                 (FROMOBJ (GETSEL FROM SELTEXTOBJ))
                 LEN BLUEPENDING FROMCH# TOCH# FROMPIECES EVENT)

           (* ;; "Grab copies of the (undeleted) source-selection pieces")

                (SETQ FROMPIECES (\SELPIECES.COPY (\SELPIECES FROM)))
                (CL:UNLESS (IGREATERP (fetch SPLEN of FROMPIECES)
                                  0)
                       (RETURN))

           (* ;; "")

           (* ;; "If TOBJ is marked for pending delete, we clean it out, assuming that the TO selection picks out the intended deletion target, even though it may be a copy from some time ago.  This modifies TO to a point selection for the move destination.")

                (SETQ BLUEPENDING (TEDIT.DO.BLUEPENDINGDELETE TO TOOBJ))
                (CL:WHEN BLUEPENDING
                    (SETQ BLUEPENDING (fetch (TEXTOBJ TXTHISTORY) of TOOBJ)))
                (SETQ TOCH# (TEDIT.GETPOINT NIL TO))

           (* ;; "")

                (SETQ FROMCH# (GETSEL FROM CH#))             (* ; "Save pre-deletion from positions.")
                (SETQ LEN (GETSEL FROM DCH))
                (\TEDIT.DELETE FROM FROMOBJ)                 (* ; "Delete and redisplay from")

           (* ;; "")

           (* ;; "Now work on TO.  If TOOBJ and FROMOBJ are the same, and if INSERTCH# comes after the original FROM#, then we have to move the INSERTCH# down by LEN to compensate for the deletion")

                (CL:WHEN (AND (EQ TOOBJ FROMOBJ)
                              (IGREATERP TOCH# FROMCH#))
                    (add TOCH# (IMINUS LEN))
                    (TEDIT.MAKEPOINT TO TOCH# T))
                (SETQ EVENT (\TEDIT.MOVE.SELPIECES FROMPIECES TO 'NOCOPY))

           (* ;; "Make one history entry for the two operations")

                (\TEDIT.HISTORYADD TOOBJ
                       (create TEDITHISTORYEVENT
                              THTEXTOBJ _ TOOBJ
                              THACTION _ (CL:IF BLUEPENDING
                                             'Replace
                                             'Move)
                              THLEN _ LEN
                              THCH# _ TOCH#
                              THFIRSTPIECE _ FROMPIECES
                              THAUXINFO _ FROMOBJ
                              THOLDINFO _ FROMCH#])

(TEDIT.STRINGWIDTH
  [LAMBDA (STR FONT TERMSA)                                  (* jds "19-AUG-83 14:40")
    (COND
       (TERMSA 
          
          (* We have a terminal table to take account of.
          Do so.)

              (for CH instring STR sum (TEDIT.CHARWIDTH CH FONT TERMSA)))
       (T                                                    (* Just use the native character 
                                                             widths)
          (for CH instring STR sum (SELCHARQ CH
                                        (TAB 36)
                                        (CHARWIDTH CH FONT])

(TEXTOBJ
  [LAMBDA (STREAM NOERROR)                                   (* ; "Edited 10-Apr-2023 09:32 by rmk")
                                                             (* ; "Edited  5-Apr-2023 15:12 by rmk")
                                                             (* ; "Edited 24-Mar-2023 18:01 by rmk")
                                                             (* jds "11-Jul-85 12:06")

    (* ;; "Convert from any designator of a textobj to that  textobj")

    (LET (TOBJ)
         (if (type? TEXTOBJ STREAM)
             then STREAM
           else (SETQ TOBJ (if [AND (type? STREAM STREAM)
                                    (type? TEXTOBJ (SETQ TOBJ (fetch (TEXTSTREAM TEXTOBJ)
                                                                 of STREAM]
                               then 
                                    (* ;; 
                                "Text stream - test TEXTOBJ to distinguish displaystream case below.")

                                    TOBJ
                             else (WINDOWP STREAM)
                               then (WINDOWPROP STREAM 'TEXTOBJ)
                             elseif (AND (PROCESSP STREAM)
                                         (PROCESS.WINDOW STREAM))
                               then                          (* ; "It's an edit PROCESS")
                                    (WINDOWPROP (PROCESS.WINDOW STREAM)
                                           'TEXTOBJ)
                             elseif (AND (DISPLAYSTREAMP STREAM)
                                         (SETQ TOBJ (WFROMDS STREAM)))
                               then (WINDOWPROP TOBJ 'TEXTOBJ)
                             elseif (type? SELECTION STREAM)
                               then (fetch (SELECTION SELTEXTOBJ) of STREAM)))
                (CL:UNLESS (OR (type? TEXTOBJ TOBJ)
                               NOERROR)
                       (\ILLEGAL.ARG STREAM))
                TOBJ])

(TEDITMENUP
  [LAMBDA (WINDOW TITLE)                                     (* ; "Edited 10-Apr-2023 10:14 by rmk")
    [if (WINDOWP WINDOW)
      elseif (SETQ WINDOW (TEXTOBJ WINDOW T))
        then (SETQ WINDOW (CAR (fetch (TEXTOBJ \WINDOW)
                                      WINDOW]
    (CL:WHEN (AND WINDOW (WINDOWPROP WINDOW 'TEDITMENU)
                  (WINDOWPROP WINDOW 'TEXTOBJ)
                  (CL:IF TITLE
                      (STRING.EQUAL TITLE (WINDOWPROP WINDOW 'TITLE))
                      T))
        (WINDOWPROP WINDOW 'TITLE))])

(TEXTSTREAM
  [LAMBDA (STREAM)                                           (* ; "Edited 21-Aug-2022 08:14 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")
                                                             (* ; 
                                                           "Force a textobj or stream to be a stream")
    (COND
       ((AND (type? STREAM STREAM)
             (fetch (TEXTSTREAM TEXTOBJ) of STREAM)
             (type? TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of STREAM)))
                                                             (* ; 
                                       "It's a stream, and is really a TEXT stream.  Just return it.")
        STREAM)
       ((type? TEXTOBJ STREAM)                               (* ; 
                                     "It's a TEXTOBJ, so grab the stream hint field and return that.")
        (fetch (TEXTOBJ STREAMHINT) of STREAM))
       ((AND (PROCESSP STREAM)
             (PROCESS.WINDOW STREAM))                        (* ; 
                                "It's an edit process, so grab the text stream from the edit window.")
        (WINDOWPROP (PROCESS.WINDOW STREAM)
               'TEXTSTREAM))
       [(AND (WINDOWP STREAM)
             (WINDOWPROP STREAM 'TEXTSTREAM]
       [(AND (DISPLAYSTREAMP STREAM)
             (WINDOWPROP STREAM 'TEXTSTREAM]
       (T                                                    (* ; 
                                               "Not a reasonable coercion to the text stream.  Punt.")
          (\ILLEGAL.ARG STREAM])
)



(* ;; "Slashed functions. Private?")

(DEFINEQ

(\TEDIT2
  [LAMBDA (TEXT WINDOW UNSPAWNED)                       (* ; "Edited 12-Jun-90 17:51 by mitani")

    (* ;; "Does the actual editing work, once TEDIT has OPENTEXTSTREAMed the thing to be edited.")

    (\TEDIT.COMMAND.LOOP (fetch (TEXTSTREAM TEXTOBJ) of TEXT))
                                                             (* ; "Run the editing engine")
    (CLOSEW WINDOW)                                          (* ; "Close the edit window")
    (\TEXTCLOSEF TEXT)                                       (* ; "Close the underlying files")
    (replace (STREAM ACCESSBITS) of TEXT with BothBits)
                                                             (* ; 
                                                           "But leave the stream itself accessible")
    (AND (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                'AFTERQUITFN)
         (APPLY* (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                        'AFTERQUITFN)
                WINDOW TEXT))                                (* ; 
                                             "Apply any post-window-close (and post-QUIT) function")
    (COND
       (UNSPAWNED                                            (* ; 
                    "We're not a distinct process: Send back the edited text in some suitable form")
              (COND
                 ((NEQ (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                   TEXTOBJ)
                                                                          of TEXT))
                       T)
                  (PROG1 (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                     TEXTOBJ)
                                                                            of TEXT))
                      (replace (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                    TEXTOBJ)
                                                                           of TEXT) with
                                                                                        NIL)))
                 ((STRINGP (fetch (TEXTOBJ TXTFILE) of (fetch (TEXTSTREAM TEXTOBJ
                                                                                     ) of TEXT)))
                  (COERCETEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                         'STRINGP))
                 (T TEXT])

(\TEDIT.INSERT
  [LAMBDA (INSERT SEL TEXTOBJ DONTSCROLL NOTINCREMENTAL)     (* ; "Edited  8-May-2023 12:19 by rmk")
                                                             (* ; "Edited  5-May-2023 17:01 by rmk")
                                                             (* ; "Edited 28-Apr-2023 13:29 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; ";; The selection runs from CH# to CHLIM-1. The insertion is before the selection if POINT=LEFT or after the selection (POINT=RIGHT).  This translated to before CH# or before CHLIM respectively.  ")

    (* ;; "Inserts INSERT at the location picked out by the selection, and then implements all the consequences for line and screen updates. Assumes that the caller got the selection and the text set up properly.")

    (* ;; "Text can be a string or a single charcode (only on the call from \TEDIT.COMMAND.LOOP).  ")

    (* ;; 
   "TEDIT.INSERT passes DONTSCROLL and asserts NOTINCREMENTAL, other calls do incremental scrolling.")

    (* ;; "SELECTION-SET test may be unnecessary here, TEDIT.INSERT already checks, not sure about the 2 other calls.")

    (if (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)
        then (TEDIT.PROMPTPRINT TEXTOBJ "Text is read only--aborted" T)
      elseif (NOT (AND SEL (fetch (SELECTION SET) of SEL)))
        then (TEDIT.PROMPTPRINT TEXTOBJ "Please select a place for the insertion." T)
      else (PROG ((CHNO (TEDIT.GETPOINT TEXTOBJ SEL))
                  (PANES (fetch (TEXTOBJ \WINDOW) of TEXTOBJ))
                  NCHARSADDED)
                 (CL:WHEN PANES
                     (TEDIT.NORMALIZECARET TEXTOBJ SEL)
                     (\SHOWSEL SEL NIL))                     (* ; "Turn off any old highlights")
                 (if (CHARCODEP INSERT)
                     then (SELCHARQ INSERT
                               ((EOL %#EOL Meta,EOL)         (* ; "Need to do para breaking if EOL.")
                                    (\INSERTEOL INSERT CHNO TEXTOBJ))
                               (\INSERTCH INSERT CHNO TEXTOBJ))
                          (SETQ NCHARSADDED 1)
                   else (for CH instring INSERT as NCH# from CHNO
                           do (SELCHARQ CH
                                   ((EOL %#EOL Meta,EOL) 
                                        (\INSERTEOL CH NCH# TEXTOBJ))
                                   (\INSERTCH CH NCH# TEXTOBJ)))
                        (SETQ NCHARSADDED (NCHARS INSERT)))

            (* ;; "")

            (* ;; "The model (piece table) is now correct:  NCHARSADDED new characters have been been added in front of CHNO.  ")

                 (\TEDIT.UPDATE.LINES TEXTOBJ CHNO NCHARSADDED DONTSCROLL)

            (* ;; 
            " Make the selection point just after the last inserted character--it's always real.")

                 (TEDIT.MAKEPOINT SEL (SUB1 (IPLUS CHNO NCHARSADDED))
                        NIL)
                 (\FIXSEL SEL TEXTOBJ)
                 (CL:UNLESS DONTSCROLL (TEDIT.NORMALIZECARET TEXTOBJ SEL))
                 (\SHOWSEL SEL T)
                 (\COPYSEL SEL TEDIT.SELECTION)
                 (for PANE inside PANES do (\TEDIT.SET.WINDOW.EXTENT TEXTOBJ PANE])

(\TEDIT.INCLUDE
  [LAMBDA (TEXTOBJ FILE START END)                   (* ; "Edited 29-May-91 18:22 by jds")

         (* A NATIVE text includer%: Includes part of a file, without checking to see if 
       it's a bravo file, a TEdit file or whatever.)
                                                             (* (PROG ((LEN (IDIFFERENCE
                                                           (OR END (GETEOFPTR FILE))
                                                           (OR START 0))) (SEL
                                                           (fetch (TEXTOBJ SEL) of TEXTOBJ)) 
                                                           NPC) (SETQ NPC (create PIECE PFILE _
                                                           (\GETOFD FILE (QUOTE INPUT)) PFPOS _
                                                           (OR START 0) PLEN _ LEN PLOOKS _
                                                           (\TEDIT.GET.INSERT.CHARLOOKS TEXTOBJ 
                                                           SEL) PPARALOOKS _ NIL))
                                                           (* Create a PIECE to describe the 
                                                           text) (\TEDIT.INSERT.PIECES TEXTOBJ
                                                           (fetch (SELECTION CH#) of SEL) NPC 
                                                           LEN) (* Insert it in the document)
                                                           (add (fetch (TEXTOBJ TEXTLEN) of 
                                                           TEXTOBJ) LEN) (* And update the 
                                                           document's length)
                                                           (\TEDIT.MARK.LINES.DIRTY TEXTOBJ
                                                           (fetch (SELECTION CH#) of SEL)
                                                           (IPLUS (fetch (SELECTION CH#) of SEL)
  LEN)) (* Mark the screen dirty, so updating it will find something to do) (replace
                                                           (SELECTION CHLIM) of SEL with
                                                           (IPLUS (fetch (SELECTION CH#) of SEL)
  LEN)) (replace (SELECTION DCH) of SEL with LEN) (replace (SELECTION DX) of SEL with 0)
                                                           (replace (SELECTION POINT) of SEL 
                                                           with (QUOTE RIGHT))
                                                           (replace (SELECTION SELKIND) of SEL 
                                                           with (QUOTE CHAR))
                                                           (replace (SELECTION SELOBJ) of SEL 
                                                           with NIL) (COND ((fetch
                                                           (TEXTOBJ \WINDOW) of TEXTOBJ)
                                                           (\SHOWSEL SEL NIL NIL)
                                                           (TEDIT.UPDATE.SCREEN TEXTOBJ)
                                                           (\FIXSEL SEL TEXTOBJ)
                                                           (\SHOWSEL SEL NIL T)))
                                                           (* Update the screen)
                                                           (replace (TEXTOBJ \DIRTY) of TEXTOBJ 
                                                           with T) (\SETUPGETCH
                                                           (fetch (SELECTION CH#) of SEL) 
                                                           TEXTOBJ)))
    (HELP])

(\TEDIT.MOVE.SELPIECES
  [LAMBDA (FROMPIECES TOSEL OPERATION)                       (* ; "Edited  9-May-2023 12:59 by rmk")
                                                             (* ; "Edited  7-May-2023 21:04 by rmk")
                                                             (* ; "Edited  4-Jun-92 11:11 by jds")

    (* ;; "Subfunction that copies the piece-range FROMPIECES pieces-into the TO-destination object and position as indicated by the TO selection.  .")

    (* ;; "Returns the history event, for caller to adjust")

    (CL:UNLESS (ZEROP (fetch (SELPIECES SPLEN) of FROMPIECES))
        (LET ((TOOBJ (GETSEL TOSEL SELTEXTOBJ))
              (FROMLEN (fetch (SELPIECES SPLEN) of FROMPIECES))
              BLUEDELETE TOCH# EVENT)

             (* ;; "We start by preparing the TOOBJ to receive the new pieces.  Clear out its pending delete, turn of its current selection, figure out where the insert goes, convert to formatted if needed")

             (SETQ BLUEDELETE (TEDIT.DO.BLUEPENDINGDELETE TOSEL TOOBJ))
             (CL:WHEN BLUEDELETE                             (* ; 
                                                    "Get the pending-delete event, to compose below.")
                 (SETQ BLUEDELETE (fetch (TEXTOBJ TXTHISTORY) of TOOBJ)))
             (\SHOWSEL TOSEL NIL)
             [SETQ TOCH# (CL:IF (EQ (GETSEL TOSEL POINT)
                                    'LEFT)
                             (GETSEL TOSEL CH#)
                             (IMIN (GETSEL TOSEL CHLIM)
                                   (ADD1 (TEXTLEN TOOBJ))))]
             (SETQ EVENT (\TEDIT.INSERT.SELPIECES FROMPIECES TOOBJ TOCH# OPERATION))
             (CL:WHEN BLUEDELETE
                 (replace (TEDITHISTORYEVENT THACTION) of EVENT with 'Replace)
                 (replace (TEDITHISTORYEVENT THOLDINFO) of EVENT with BLUEDELETE))
             (\TEDIT.UPDATE.LINES TOOBJ TOCH# FROMLEN)
             (\TEDIT.UPDATE.SEL TOSEL TOCH# FROMLEN)
             (\SHOWSEL TOSEL T)
             EVENT))])

(\TEDIT.INSERT.SELPIECES
  [LAMBDA (FROMPIECES TOOBJ TOCH# OPERATION FROMOBJ)         (* ; "Edited  9-May-2023 12:59 by rmk")
                                                             (* ; "Edited  8-May-2023 00:10 by rmk")
                                                             (* ; "Edited  4-Jun-92 11:11 by jds")

    (* ;; "Inserts pieces in  FROMPIECES into TOOBJ starting at TOCH#.  The range knows where its pieces came from (its PCRTEXTOBJ), and it knows their total length.  Unless OPERATION is NOCOPY, the pieces are copied for that operation as they are inserted into TOOOBJ. They are also copied if the TOOBJ and the PCRTEXTOBJ are not the same--cross-copying. ")

    (* ;; "Returns the insertion history event, for caller to adjust")

    (CL:UNLESS (OR (fetch (TEXTOBJ TXTREADONLY) of TOOBJ)
                   (ZEROP (fetch (SELPIECES SPLEN) of FROMPIECES)))
        [SETQ TOCH# (IMIN TOCH# (ADD1 (TEXTLEN TOOBJ]        (* ; 
                                                             "Figure out where to do the insertion.")

        (* ;; "TOOBJ is ready to go.")

        (CL:UNLESS FROMOBJ                                   (* ; 
                                                 "Needed for imobj copying and formatted conversion.")
            (SETQ FROMOBJ (fetch (SELPIECES SPTEXTOBJ) of FROMPIECES)))
        (for PC NPC POSTINSERTPC PREINSERTPC FIRSTNEWPC EVENT (NOCOPY _ (EQ OPERATION 'NOCOPY))
             (FROMLEN _ (fetch (SELPIECES SPLEN) of FROMPIECES))
           first (CL:WHEN (AND (fetch (TEXTOBJ FORMATTEDP) of FROMOBJ)
                               (NOT (fetch (TEXTOBJ FORMATTEDP) of TOOBJ)))
                                                             (* ; 
                                                    "The source is formatted and the target isn't.  ")
                     (\TEDIT.CONVERT.TO.FORMATTED TOOBJ))
                 (SETQ POSTINSERTPC (\ALIGNEDPIECE TOCH# TOOBJ))
                 (SETQ PREINSERTPC (PREVPIECE POSTINSERTPC)) (* ; "Hold it for looks diffusion")
           inselpieces FROMPIECES do (SETQ NPC (CL:IF NOCOPY
                                                   PC
                                                   (\TEDIT.COPYPIECE PC FROMOBJ TOOBJ NIL OPERATION))
                                      )
                                     (CL:UNLESS FIRSTNEWPC   (* ; "Save for history")
                                         (SETQ FIRSTNEWPC NPC))
                                     (\INSERTPIECE NPC POSTINSERTPC TOOBJ)
           finally (\TEDIT.DIFFUSE.PARALOOKS PREINSERTPC POSTINSERTPC) 

                 (* ;; "Make a history-list entry for the COPY.")

                 (SETQ EVENT (create TEDITHISTORYEVENT
                                    THACTION _ 'Copy
                                    THLEN _ FROMLEN
                                    THCH# _ TOCH#
                                    THFIRSTPIECE _ FIRSTNEWPC))
                 (\TEDIT.HISTORYADD TOOBJ EVENT)
                 (CL:WHEN (AND (fetch (TEXTOBJ FORMATTEDP) of TOOBJ)
                               (NOT (fetch (TEXTOBJ FORMATTEDP) of FROMOBJ)))
                                                             (* ; 
                           "If TO is formatted but FROM is not, the copied text has to be converted.")
                     (\TEDIT.CONVERT.TO.FORMATTED TOOBJ TOCH# (IPLUS TOCH# FROMLEN)))
                 (replace (TEXTOBJ \DIRTY) of TOOBJ with T)
                 (replace (TEXTOBJ HINTPC) of TOOBJ with NIL)
                 (RETURN EVENT)))])

(\TEDIT.OBJECT.SHOWSEL
  [LAMBDA (TEXTOBJ SEL ON SELPANE)                           (* ; "Edited  1-May-2023 14:36 by rmk")
                                                             (* ; "Edited  9-Apr-2023 15:37 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "We are hilighting (or dehilighting) a selected object.  Let it know.")

    (CL:WHEN SELPANE
        [LET ((X0 (fetch (SELECTION X0) of SEL))
              (Y (fetch (SELECTION Y0) of SEL))
              (L1 (CAR (fetch (SELECTION L1) of SEL)))
              (OBJ (fetch (SELECTION SELOBJ) of SEL))
              (XOFFSET (DSPXOFFSET NIL SELPANE))
              (YOFFSET (DSPYOFFSET NIL SELPANE))
              (IMAGEFN (IMAGEOBJPROP (fetch (SELECTION SELOBJ) of SEL)
                              'WHENOPERATEDONFN))
              (WWIDTH (WINDOWPROP SELPANE 'WIDTH))
              (WHEIGHT (WINDOWPROP SELPANE 'HEIGHT))
              IMAGEBOX)
             (CL:WHEN (INSIDE? (CREATEREGION 0 0 WWIDTH WHEIGHT)
                             X0 Y)                           (* ; 
                                                        "Only do this if the selection is on-screen.")
                 (SETQ IMAGEBOX (OR (IMAGEOBJPROP OBJ 'BOUNDBOX)
                                    (APPLY* (IMAGEOBJPROP OBJ 'IMAGEBOXFN)
                                           OBJ SELPANE)))
                 (CL:WHEN L1

                     (* ;; "There's really a line this selection is being displayed on, so we need to use the YBASE of the line- the object's descent, rather than the YBOT, which is what Y0 is.")

                     (SETQ Y (- (GETLD L1 YBASE)
                                (fetch (IMAGEBOX YDESC) of IMAGEBOX))))
                 (RESETLST
                     [RESETSAVE (DSPXOFFSET (IDIFFERENCE (IPLUS X0 XOFFSET)
                                                   (fetch XKERN of IMAGEBOX))
                                       SELPANE)
                            (LIST (FUNCTION DSPXOFFSET)
                                  XOFFSET
                                  (WINDOWPROP SELPANE 'DSP]
                     (RESETSAVE (DSPYOFFSET (IPLUS Y YOFFSET)
                                       SELPANE)
                            (LIST (FUNCTION DSPYOFFSET)
                                  YOFFSET SELPANE))
                     (RESETSAVE (DSPCLIPPINGREGION (create REGION
                                                          LEFT _ 0
                                                          BOTTOM _ 0
                                                          WIDTH _ (IMIN (fetch (SELECTION DX)
                                                                           of SEL)
                                                                        (IDIFFERENCE
                                                                         (fetch (TEXTOBJ WRIGHT)
                                                                            of TEXTOBJ)
                                                                         X0))
                                                          HEIGHT _ (fetch YSIZE of IMAGEBOX))
                                       SELPANE)
                            (LIST (FUNCTION DSPCLIPPINGREGION)
                                  (DSPCLIPPINGREGION NIL SELPANE)
                                  SELPANE))
                     [AND IMAGEFN (ERSETQ (APPLY* IMAGEFN OBJ SELPANE (COND
                                                                         (ON 'HIGHLIGHTED)
                                                                         (T 'UNHIGHLIGHTED))
                                                 SEL
                                                 (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ]))])])

(\TEDIT.RESTARTFN
  [LAMBDA (TEXT WINDOW PROPS)                                (* ; "Edited 21-Aug-2022 08:13 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:51 by mitani")
                                                             (* ; "Restarts a TEdit session.")
    (replace (TEXTOBJ \WINDOW) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT) with NIL)
                                                             (* ; 
                                                         "Unattach the window, so we do a redisplay.")
    (LET [(ODIRTY (fetch (TEXTOBJ \DIRTY) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT]
         (SETQ TEXT (OPENTEXTSTREAM TEXT WINDOW NIL NIL PROPS))
         (replace (TEXTOBJ \DIRTY) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT) with ODIRTY))
                                                             (* ; 
                                                             "Now reconnect the world together again")
    (\TEDIT.COMMAND.LOOP (fetch (TEXTSTREAM TEXTOBJ) of TEXT))
                                                             (* ; "Run the editing engine")
    (CLOSEW WINDOW)                                          (* ; "Close the edit window")
    (\TEXTCLOSEF TEXT)                                       (* ; "Close the underlying files")
    (replace (STREAM ACCESSBITS) of TEXT with BothBits)      (* ; 
                                                             "But leave the stream itself accessible")
                                                             (* ; 
                                               "Apply any post-window-close (and post-QUIT) function")
    (CL:WHEN (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                    'AFTERQUITFN)
        (APPLY* (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                       'AFTERQUITFN)
               WINDOW TEXT))])

(\TEDIT.CHARDELETE
  [LAMBDA (TEXTOBJ SEL)                                      (* ; "Edited  1-May-2023 23:24 by rmk")
                                                             (* ; "Edited 27-Apr-2023 10:34 by rmk")
                                                             (* ; "Edited 19-Apr-93 10:50 by jds")

    (* ;; "This creates a selection that specifies a deletion of the single character just before SEL's caret, and then uses that to delete the character.  It assumes that SEL can be smashed.")

    (SETQ TEXTOBJ (TEXTOBJ TEXTOBJ))
    (PROG [FIRSTPIECE (CH# (SUB1 (TEDIT.GETPOINT TEXTOBJ SEL]
          (CL:WHEN (ILEQ CH# 0)                              (* ; 
                                                             "Can't backspace past start of document")
              (RETURN))

     (* ;; "Back up to the first visible character--that's the target, unless it is protected")

          (for PC PLOOKS START-OF-PIECE backpieces (SETQ FIRSTPIECE (\CHTOPC CH# TEXTOBJ T))
             declare (SPECVARS START-OF-PIECE) do (SETQ PLOOKS (\TEDIT.APPLY.STYLES (PLOOKS PC)
                                                                      PC TEXTOBJ))
                                                  (CL:WHEN (ffetch (CHARLOOKS CLPROTECTED)
                                                              of PLOOKS)
                                                             (* ; "First visible was protected")
                                                      (RETURN))
                                                  (if (ffetch (CHARLOOKS CLINVISIBLE) of PLOOKS)
                                                      then (add START-OF-PIECE (IMINUS (PLEN PC)))
                                                    else (CL:UNLESS (EQ PC FIRSTPIECE)
                                                             (* ; 
                                                "The last character of the most recent visible piece")
                                                             (SETQ CH# (SUB1 START-OF-PIECE)))
                                                         (FSETSEL SEL CH# CH#)
                                                         (FSETSEL SEL CHLIM (ADD1 CH#))
                                                         (FSETSEL SEL DCH 1)
                                                         (\FIXSEL SEL TEXTOBJ)
                                                         (\TEDIT.DELETE SEL TEXTOBJ)
                                                         (RETURN])

(\TEDIT.COPYPIECE
  [LAMBDA (PC FROMOBJ TOOBJ UNPROTECT OPERATION PROMPTTEXTOBJ)
                                                             (* ; "Edited  7-May-2023 11:46 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "TEXTOBJ's prompt gets the message that a copy is not allowed, the FROMOBJ and TOOBJ provide the streams for the object's copy function.  The copy is disconnected from PC's original connections.")

    (* ;; "If UNPROTECT, the copies of protected pieces are unprotected")

    (* ;; "OPERATION keys which imageobject function to apply, if any")

    (PROG (NEWPC SRCPFILE (CROSSCOPY (NEQ FROMOBJ TOOBJ)))   (* ; 
                                                             "No matter what, we need a fresh copy.")
          (SETQ NEWPC
           (create PIECE using PC PNEW _ T PREVPIECE _ NIL NEXTPIECE _ NIL PTREENODE _ NIL))
          (SELECTQ (PTYPE PC)
              (FILE.PTYPES (CL:WHEN CROSSCOPY

                               (* ;; "If this is a cross-document copy, and the text comes from a file, we must REALLY make a copy of the text, lest the source file be deleted. We want to preserve the external format, so that we can just copy the bytes.")

                               (SETQ SRCPFILE (PCONTENTS PC))
                               (CL:UNLESS (\GETSTREAM SRCPFILE 'INPUT T)
                                                             (* ; 
                                               "The source file was CLOSED -- reopen it, for our use")
                                   [SETQ SRCPFILE (OPENSTREAM SRCPFILE 'INPUT 'OLD
                                                         '((TYPE TEXT])
                               [freplace (PIECE PCONTENTS) of PC
                                  with (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW
                                              `((:EXTERNAL-FORMAT ,(STREAMPROP SRCPFILE 
                                                                          :EXTERNAL-FORMAT]
                               (COPYBYTES SRCPFILE (PCONTENTS PC)
                                      (PFPOS PC)
                                      (IPLUS (PFPOS PC)
                                             (CL:IF (EQ FATFILE2.PTYPE (PTYPE PC))
                                                 (UNFOLD PCPLEN 2)
                                                 PCPLEN)))
                               (freplace (PIECE PFPOS) of PC with 0)))
              (STRING.PTYPES                                 (* ; 
                                                    "In case this is in the current insertion string")
                             (change (ffetch (PIECE PCONTENTS) of NEWPC)
                                    (CONCAT DATUM)))
              (OBJECT.PTYPE                                  (* ; 
                              "No copy if object doesn't allow it.  Caller must be prepared for NIL?")
                            (freplace (PIECE PCONTENTS) of NEWPC
                               with (OR (\TEDIT.COPYOBJECT (PCONTENTS NEWPC)
                                               OPERATION FROMOBJ TOOBJ PROMPTTEXTOBJ)
                                        (RETURN NIL))))
              NIL)

     (* ;; "If moving from one text to another, we have to register the looks.")

          (if (AND UNPROTECT (fetch CLPROTECTED of (PLOOKS NEWPC)))
              then (freplace (PIECE PLOOKS) of NEWPC
                      with (\TEDIT.UNIQUIFY.CHARLOOKS (create CHARLOOKS
                                                         using (PLOOKS PC)
                                                               CLPROTECTED _ NIL CLSELHERE _ NIL)
                                  TOOBJ))
            elseif CROSSCOPY
              then (freplace (PIECE PLOOKS) of NEWPC with (\TEDIT.UNIQUIFY.CHARLOOKS (PLOOKS PC)
                                                                 TOOBJ))
                   (freplace (PIECE PPARALOOKS) of NEWPC with (\TEDIT.UNIQUIFY.PARALOOKS (PPARALOOKS
                                                                                          PC)
                                                                     TOOBJ)))
          (RETURN NEWPC])

(\TEDIT.COPYOBJECT
  [LAMBDA (OBJ OPERATION FROMTOBJ TOTOBJ PROMPTTEXTOBJ)      (* ; "Edited  7-May-2023 11:46 by rmk")

    (* ;; "As part of an OPERATION to copy an image object piece from FROMTOBJ to TOTOBJ, we execute the appropriate object functions.  If any of them returns DONT, we print a message in the prompt window of  PROMPTTEXTOBJ  or  FROMTOBJ.")

    (PROG [NEWOBJ (OBJFN (IMAGEOBJPROP OBJ (SELECTQ OPERATION
                                               (COPY 'COPYFN)
                                               (MOVE 'WHENMOVEDFN)
                                               (INSERT 'WHENINSERTEDFN)
                                               NIL]
          (SETQ NEWOBJ (CL:IF OBJFN
                           (APPLY* OBJFN OBJ (fetch (TEXTOBJ STREAMHINT) of FROMTOBJ)
                                  (fetch (TEXTOBJ STREAMHINT) of TOTOBJ))
                           (COPYALL OBJ)))
          (CL:WHEN (MEMB NEWOBJ '(DON'T DONT))
              (TEDIT.PROMPTPRINT (OR PROMPTTEXTOBJ FROMTOBJ)
                     (CONCAT (L-CASE OPERATION T)
                            " of this object not allowed.")
                     T)
              (RETURN))

     (* ;; "The WHENCOPIEDFN wants the display stream, not just the text stream.  ")

          (CL:WHEN [AND (EQ OPERATION 'COPY)
                        (SETQ OBJFN (IMAGEOBJPROP OBJ 'WHENCOPIEDFN))
                        (MEMB (APPLY* OBJFN OBJ (WINDOWPROP (CAR (fetch (TEXTOBJ \WINDOW)
                                                                    of TOTOBJ))
                                                       'DSP)
                                     (fetch (TEXTOBJ STREAMHINT) of FROMTOBJ)
                                     (fetch (TEXTOBJ STREAMHINT) of TOTOBJ))
                              '(DON'T DONT]
                 (RETURN NIL))
          (RETURN NEWOBJ])

(\SELPIECES.COPY
  [LAMBDA (SELPIECES OPERATION TEXTOBJ)                      (* ; "Edited  9-May-2023 12:59 by rmk")
                                                             (* ; "Edited  7-May-2023 17:26 by rmk")

    (* ;; "Produces a copy of SELPIECES where the pieces from first to last are chained-together copies of the original pieces, so that later inpieces can run from first to last.")

    (* ;; 
    " We know that the first and last pieces in SELPIECES are properly aligned at their boundaries.")

    (CL:UNLESS TEXTOBJ
        (SETQ TEXTOBJ (fetch SPTEXTOBJ of SELPIECES)))
    (for PC NPC PREVPC NEWFIRSTPIECE inselpieces SELPIECES
       do (SETQ NPC (\TEDIT.COPYPIECE PC TEXTOBJ TEXTOBJ NIL OPERATION))
          (CL:UNLESS NPC                                     (* ; "Was an object-copy disallowed?")
              (RETURN))
          (if PREVPC
              then (replace (PIECE NEXTPIECE) of PREVPC with NPC)
            else (SETQ NEWFIRSTPIECE NPC))
          (replace (PIECE PREVPIECE) of NPC with PREVPC)
          (SETQ PREVPC NPC) finally (RETURN (create SELPIECES
                                               using SELPIECES SPFIRST _ NEWFIRSTPIECE SPLAST _ 
                                                     PREVPC])

(\TEDIT.DELETE
  [LAMBDA (SEL TEXTOBJ DONTDISPLAY)                          (* ; "Edited  7-May-2023 22:23 by rmk")
                                                             (* ; "Edited  5-May-2023 14:58 by rmk")
                                                             (* ; "Edited  4-May-2023 00:26 by rmk")
                                                             (* ; "Edited  1-May-2023 22:28 by rmk")
                                                             (* ; "Edited 28-Apr-2023 13:29 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; "Delete the characters selected by SEL. On return, the pieces, lines, and selection are complete and correct, and the display is correct unless DONTDISPLAY.")

    (CL:UNLESS [OR (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)
                   (NOT (AND (GETSEL SEL SET)
                             (IGEQ (GETSEL SEL DCH)
                                   1]
        (CL:UNLESS DONTDISPLAY (TEDIT.NORMALIZECARET TEXTOBJ SEL))
        (LET ((CH# (GETSEL SEL CH#))
              (CHLIM (GETSEL SEL CHLIM)))                    (* ; 
                   "If the text appears in a window, move the deletion point on-screen in every pane")
             (\TEDIT.SHOWSELS TEXTOBJ NIL)                   (* ; 
                                                             "Turn off the selection's highlighting")
             (\DELETECH CH# CHLIM TEXTOBJ)                   (* ; 
                                                             "Do the actual deletion of characters")
             (replace THPOINT of (fetch (TEXTOBJ TXTHISTORY) of TEXTOBJ) with (GETSEL SEL POINT))
                                                             (* ; 
                           "Remember which side of the selection we were on, in case it gets undone.")

             (* ;; "Update changed lines")

             (\TEDIT.UPDATE.LINES TEXTOBJ CH# (IDIFFERENCE CH# CHLIM)
                    DONTDISPLAY)

             (* ;; "Make the selection point to the right of the last remaining character")

             [TEDIT.MAKEPOINT SEL (SUB1 (IDIFFERENCE CHLIM (GETSEL SEL DCH]
             (\FIXSEL SEL TEXTOBJ)
             (\SHOWSEL SEL T)
             T))])

(\TEDIT.DIFFUSE.PARALOOKS
  [LAMBDA (PRIORPC SUCCEEDINGPC)                             (* ; "Edited 11-Apr-2023 00:08 by rmk")
                                                             (* ; "Edited 22-Oct-2022 22:22 by rmk")
                                                             (* ; "Edited  5-Sep-2022 14:32 by rmk")
                                                             (* ; "Edited 23-Aug-2022 08:40 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:48 by mitani")

    (* ;; "Given a discontinuity in paragraph looks, caused by an insertion or by a deletion: Diffuse the existing paragraph looks across the discontinuity, so that all the pieces in a single paragraph have consistent paragraph looks.  Give preference to diffusion toward the END of the document.  This means that if you delete an EOL between paragraphs, the second para is absorbed into the first.")

    (* ;; "PRIORPC and SUCCEEDINGPC are the pieces that bound the area of potential discontinuity: the change will occur at one boundary or the other.")

    (CL:WHEN (AND PRIORPC (NOT (PPARALAST PRIORPC)))         (* ; 
              "The discontinuity is inside a paragraph.  Must copy para looks forward into the text.")
        (for PC (PPLOOKS _ (PPARALOOKS PRIORPC)) inpieces (NEXTPIECE PRIORPC)
           do                                                (* ; 
                                "Copy para looks info in from the left, up the the first para break.")
              (replace (PIECE PPARALOOKS) of PC with PPLOOKS) repeatuntil (PPARALAST PC)))
                                                             (* ; 
                                                        "If this piece ends a paragraph, we're done.")
    (CL:WHEN SUCCEEDINGPC                                    (* ; 
                                   "Copy para looks  back from the right, up to the first para break")
        (for PC (PPLOOKS _ (PPARALOOKS SUCCEEDINGPC)) backpieces (PREVPIECE SUCCEEDINGPC)
           until (OR (EQ PC PRIORPC)
                     (PPARALAST PC)) do (replace (PIECE PPARALOOKS) of PC with PPLOOKS)))])

(\TEDIT.FOREIGN.COPY?
  [LAMBDA (SEL)                                              (* ; "Edited 18-Apr-2023 23:37 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:44 by rmk")
                                                             (* ; "Edited  7-Sep-2022 23:36 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 21-Jan-93 11:46 by jds")

    (* ;; "IF the current process's window isn't a TEdit window, do a 'Copy' by BKSYSBUFing the selected text.  Then turn off all the various indicators.")

    (PROG (PROCW (SOURCE.TEXTOBJ (fetch (SELECTION SELTEXTOBJ) of SEL))
                 CH DEST.TEDIT? DEST.TEXTOBJ)
          [SETQ DEST.TEDIT? (AND (SETQ PROCW (PROCESSPROP (TTY.PROCESS)
                                                    'WINDOW))
                                 (SETQ DEST.TEXTOBJ (WINDOWPROP PROCW 'TEXTOBJ))
                                 (NOT (TEXTPROP DEST.TEXTOBJ 'COPYBYBKSYSBUF]
                                                             (* ; "Treat the destination specially if (1) the recipient process has a window, and (2) it's a TEdit window, and (3) the TEdit isn't declining special treatment by having COPYBYBKSYSBUF set in its props.")
          (COND
             ((ZEROP (fetch (SELECTION DCH) of SEL))         (* ; 
                                         "Nothing to copy (0 characters in selection); don't bother.")
              (SETQ TEDIT.COPY.PENDING NIL))
             ((IGREATERP (fetch (SELECTION CH#) of SEL)
                     (FETCH (TEXTOBJ TEXTLEN) OF SOURCE.TEXTOBJ))
                                                             (* ; 
                                   "Trying to copy from beyond the end of the document; don't bother")
              (SETQ TEDIT.COPY.PENDING NIL))
             ((OR (NOT DEST.TEDIT?)
                  (AND PROCW DEST.TEXTOBJ (NEQ SOURCE.TEXTOBJ DEST.TEXTOBJ)
                       (fetch (TEXTOBJ EDITOPACTIVE) of DEST.TEXTOBJ)))
                                                             (* ; 
                                                   "OK -- receiver isn't TEdit.  Do it the hard way.")
              [COND
                 [(AND (WINDOWPROP [OR PROCW (WFROMDS (PROCESS.TTY (TTY.PROCESS]
                              'COPYINSERTFN)
                       (PROGN                                (* ; 
                                                         "This is the exit for looked-string objects")
                              (OBJECTOUTOFTEDIT SOURCE.TEXTOBJ SEL]
                 (T                                          (* ; 
                         "Old tedit method, run if OBJECTOUTOFTEDIT is NILL (ie., not installed yet)")

                    (* ;; "Still used because COPYINSERT does (PRIN2 BKSYSBUF) if there's no insertfn, which cretes undesired string quotes.")
                                                             (* ; 
                                                             "Go to the first character to be copied")
                    (for I (TSTREAM _ (fetch (TEXTOBJ STREAMHINT) of SOURCE.TEXTOBJ)) from 1
                       to (fetch (SELECTION DCH) of SEL)
                       first (SETFILEPTR TSTREAM (SUB1 (fetch (SELECTION CH#) of SEL)))
                       do 
                          (* ;; "Run thru the selected text, copying only those items that really ARE characters--IMAGEOBJs don't get copied by this route.")

                          (COND
                             ((FIXP (SETQ CH (BIN TSTREAM)))
                              (BKSYSBUF (CHARACTER CH)))
                             (T (COPYINSERT CH]
              (\SHOWSEL SEL NIL)                             (* ; 
                                                             "Then reset the copy-pending flags.")
              (SETQ TEDIT.COPY.PENDING NIL])

(\TEDIT.QUIT
  [LAMBDA (W NOFORCE)                                   (* ; "Edited 12-Jun-90 17:50 by mitani")
                                                             (* Called by the default 
                                                           TEDIT.DEFAULT.MENUFN to perform the 
                                                           QUIT command.)
    (PROG* ((TEXTOBJ (WINDOWPROP W 'TEXTOBJ))
            (QUITFNS (TEXTPROP TEXTOBJ 'QUITFN))
            QUITFLG RESP)
           [for QUITFN inside QUITFNS while (AND (NEQ QUITFLG 'DON'T)
                                                             (NEQ QUITFLG T))
              do (COND
                        ((EQ QUITFN T)
                         (SETQ QUITFLG T))
                        (T (AND QUITFN (NEQ QUITFN T)
                                (SETQ QUITFLG (APPLY* QUITFN W (fetch (TEXTOBJ STREAMHINT)
                                                                  of TEXTOBJ)
                                                     TEXTOBJ
                                                     (fetch (TEXTOBJ EDITPROPS) of 
                                                                                              TEXTOBJ
                                                            ]
           (COND
              ((EQ QUITFLG 'DON'T)

         (* The user supplied a QUITFN, and it returned "DON'T" %, so just ignore all 
       this Fooferaw and keep editing.)

               (RETURN))
              [(AND (fetch (TEXTOBJ \DIRTY) of TEXTOBJ)
                    (NOT (fetch (TEXTOBJ MENUFLG) of TEXTOBJ))
                    (NEQ QUITFNS T)
                    (NEQ QUITFLG T))

         (* If this document has changed, check with the user to make sure he really 
       wants to do it.)

               (replace (TEXTOBJ EDITFINISHEDFLG) of TEXTOBJ
                  with (MOUSECONFIRM "Not saved yet; LEFT to Quit anyway." T (fetch
                                                                                  (TEXTOBJ 
                                                                                         PROMPTWINDOW
                                                                                         )
                                                                                    of TEXTOBJ]
              (T                                             (* Go ahead and quit the next time 
                                                           we see the main command loop.)
                 (replace (TEXTOBJ EDITFINISHEDFLG) of TEXTOBJ with T)))
           [AND (fetch (TEXTOBJ \WINDOW) of TEXTOBJ)
                (NOT NOFORCE)
                (NEQ (\TEDIT.PRIMARYW TEXTOBJ)
                     (PROCESSPROP (TTY.PROCESS)
                            'WINDOW))
                (TTY.PROCESS (WINDOWPROP (\TEDIT.PRIMARYW TEXTOBJ)
                                    'PROCESS]
           (RETURN (fetch (TEXTOBJ EDITFINISHEDFLG) of TEXTOBJ])

(\TEDIT.WORDDELETE
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited 18-Apr-2023 23:35 by rmk")
                                                             (* ; "Edited  8-Sep-2022 17:18 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; "Delete the word to the left of the caret.")

    (* ;; "Back word.")

    (* ;; "THIS FUNCTION IS FRAUGHT WITH FENCEPOST PROBLEM POTENTIAL, AND THE WHILE vs FOR LOGIC IS CONVOLUTED.  CAUTION, CAUTION.")

    (LET* ((SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
           (TSTREAM (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ))
           (READSA (fetch READSA of (OR (fetch (TEXTOBJ TXTWTBL) of TEXTOBJ)
                                        TEDIT.WORDBOUND.READTABLE)))
           (INSCH# (SELECTQ (fetch (SELECTION POINT) of SEL)
                       (LEFT (SUB1 (fetch (SELECTION CH#) of SEL)))
                       (RIGHT (SUB1 (fetch (SELECTION CHLIM) of SEL)))
                       NIL))
           CH CHNO)

          (* ;; "INSCH# is the final (i.e., highest-numbered) character to be deleted.")

          (COND
             ((IGREATERP INSCH# 0)                           (* ; 
                                                           "Don't try to back up past start of file.")
              (\TEXTSETFILEPTR TSTREAM (SUB1 INSCH#))
              (SETQ CH (BIN TSTREAM))
              (for old CHNO from INSCH# to 1 by -1
                 while [AND (SELECTC (COND
                                        ((FIXP CH)
                                         (\SYNCODE READSA CH))
                                        (T                   (* ; "It's an object!")
                                           TEXT.TTC))
                                (TEXT.TTC NIL)
                                T)
                            (NOT (fetch CLPROTECTED of (fetch (PIECE PLOOKS)
                                                          of (fetch (TEXTSTREAM PIECE) of TSTREAM]
                 do 
                    (* ;; "Skip over any initial separator characters")

                    (SETQ CH (\BACKBIN TSTREAM)))

              (* ;; "At this point, CH is the first non-separator character, and CHNO is the character number of the character BEFORE that one.")

              (for old CHNO from CHNO to 1 by -1
                 while [AND (SELECTC (COND
                                        ((FIXP CH)
                                         (\SYNCODE READSA CH))
                                        (T                   (* ; "It's an object!")
                                           TEXT.TTC))
                                (TEXT.TTC T)
                                NIL)
                            (NOT (fetch CLPROTECTED of (fetch (PIECE PLOOKS)
                                                          of (fetch (TEXTSTREAM PIECE) of TSTREAM]
                 do 
                    (* ;; "Skip over the next group of non-separators (= a 'word')")

                    (SETQ CH (\BACKBIN TSTREAM)))

              (* ;; "At this point, CH is the first separator character you encountered, and CHNO is the character number of the character BEFORE the separator, or 0 if you hit the front of the document.")

              (\SHOWSEL SEL NIL)

              (* ;; "First character to delete:")

              [replace (SELECTION CH#) of SEL with (COND
                                                      ((ILESSP CHNO 1)
                                                             (* ; 
                                                   "Front of document, so start deleting at char # 1")
                                                       1)
                                                      (T     (* ; 
 "Otherwise, we need to start 1 later than the separator we hit, which is 2 higher than CHNO is now.")
                                                         (IPLUS 2 CHNO]
              (replace (SELECTION CHLIM) of SEL with (ADD1 INSCH#))
              (replace (SELECTION DCH) of SEL with (IDIFFERENCE INSCH# CHNO))
              (\FIXSEL SEL TEXTOBJ)
              (\SHOWSEL SEL T)
              (\TEDIT.DELETE SEL TEXTOBJ])

(\TEDIT1
  [LAMBDA (TEXT WINDOW UNSPAWNED PROPS)                 (* ; "Edited 12-Jun-90 17:50 by mitani")

         (* Does the actual editing work, and re-coercion or process kill when done.
       Called by TEDIT directly, or ADD.PROCESSed by it.)

    (SETQ TEXT (OPENTEXTSTREAM TEXT WINDOW NIL NIL PROPS))   (* Open the text for editing)
    (\TEDIT.COMMAND.LOOP (fetch (TEXTSTREAM TEXTOBJ) of TEXT))
                                                             (* Run the editing engine)
    (CLOSEW WINDOW)
    (replace (TEXTOBJ \WINDOW) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
       with NIL)
    (AND (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                'AFTERQUITFN)
         (APPLY* (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                        'AFTERQUITFN)
                WINDOW TEXT))                                (* Apply any post-window-close
                                                           (and post-QUIT) function)
    (COND
       (UNSPAWNED                                            (* We're not a distinct process%: 
                                                           Send back the edited text in some 
                                                           suitable form)
              (COND
                 ((NEQ (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                   TEXTOBJ)
                                                                          of TEXT))
                       T)
                  (PROG1 (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                     TEXTOBJ)
                                                                            of TEXT))
                      (replace (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                    TEXTOBJ)
                                                                           of TEXT) with
                                                                                        NIL)))
                 ((STRINGP (fetch (TEXTOBJ TXTFILE) of (fetch (TEXTSTREAM TEXTOBJ
                                                                                     ) of TEXT)))
                  (COERCETEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                         'STRINGP))
                 (T TEXT])
)

(MOVD? 'NILL 'OBJECTOUTOFTEDIT)



(* ; "HOOK for looked-string copy, etc. Used in \TEDIT.FOREIGN.COPY?.")




(* ; "Object-oriented editing")

(DEFINEQ

(TEDIT.INSERT.OBJECT
  [LAMBDA (OBJECT TSTREAM CH#)                               (* ; "Edited  7-May-2023 22:23 by rmk")
                                                             (* ; "Edited  5-May-2023 13:11 by rmk")
                                                             (* ; "Edited 28-Apr-2023 17:21 by rmk")
                                                             (* ; "Edited 18-Apr-2023 23:34 by rmk")
                                                             (* ; "Edited 12-Apr-2023 14:30 by rmk")
                                                             (* ; "Edited  2-Mar-2023 14:58 by rmk")
                                                             (* ; "Edited 21-Apr-93 00:52 by jds")

    (* ;; "Inserts the Image-object OBJECT into text STREAM in front of character CH.")

    (LET ((TEXTOBJ (TEXTOBJ TSTREAM)))
         (CL:UNLESS (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)
             (PROG (TEXTLEN PC OBJPC PREVPC INSERTFN SUBSTREAM (SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                          )
                   (BTVALIDATE 'TEDIT.INSERT.OBJECT 'START TEXTOBJ)
                   (TEDIT.DO.BLUEPENDINGDELETE SEL TEXTOBJ)  (* ; 
                                                            "Do the pending delete, if there is one.")
                   (CL:UNLESS CH#                            (* ; 
                                                      "Omitted CH# means put it at the current spot.")
                       (SETQ CH# SEL))
                   (CL:WHEN (type? SELECTION CH#)

                       (* ;; "If the CH# passed in was a selection (or we set it because he defaulted CH#), then compute the REAL CH#.")

                       (SETQ CH# (TEDIT.GETPOINT NIL CH#)))
                   (\SHOWSEL SEL NIL)                        (* ; "Turn off the selection for now")
                   (SETQ TEXTLEN (TEXTLEN TEXTOBJ))
                   (SETQ CH# (IMIN CH# (ADD1 TEXTLEN)))      (* ; 
                                                   "CH# we're to insert these characters in front of")
                   (SETQ PC (\ALIGNEDPIECE CH# TEXTOBJ))     (* ; 
                                                        "Piece we're to insert in front of or inside")
                   (SETQ OBJPC (create PIECE
                                      PCONTENTS _ OBJECT
                                      PLEN _ 1
                                      PTYPE _ OBJECT.PTYPE)) (* ; "The new piece we're inserting")
                   (CL:WHEN (SETQ SUBSTREAM (IMAGEOBJPROP OBJECT 'SUBSTREAM))
                                                             (* ; 
                                                  "If this is computed text in bulk, fix the length.")
                       (freplace (PIECE PTYPE) of OBJPC with SUBSTREAM.PTYPE)
                       (replace (PIECE PLEN) of OBJPC with (TEXTLEN (fetch (TEXTSTREAM TEXTOBJ)
                                                                       of SUBSTREAM))))
                   (\INSERTPIECE OBJPC PC TEXTOBJ)
                   (CL:WHEN (SETQ INSERTFN (IMAGEOBJPROP OBJECT 'WHENINSERTEDFN))
                                                             (* ; 
                                                            "If there is a WHENINSERTEDFN, apply it.")
                       (APPLY* INSERTFN OBJECT (AND (CAR (fetch (TEXTOBJ \WINDOW) of TEXTOBJ))
                                                    (WINDOWPROP (CAR (fetch (TEXTOBJ \WINDOW)
                                                                        of TEXTOBJ))
                                                           'DSP))
                              NIL TSTREAM))                  (* ; "Fill in the para looks")
                   [freplace (PIECE PPARALOOKS) of OBJPC with (COND
                                                                 [(SETQ PREVPC (PREVPIECE OBJPC))
                                                                  (PPARALOOKS (COND
                                                                                 ((AND (PPARALAST
                                                                                        PREVPC)
                                                                                       (NEXTPIECE
                                                                                        OBJPC)))
                                                                                 (T PREVPC]
                                                                 ((SETQ PREVPC (NEXTPIECE OBJPC))
                                                                  (PPARALOOKS PREVPC))
                                                                 (T (fetch (TEXTOBJ FMTSPEC)
                                                                       of TEXTOBJ]
                   (replace (PIECE PLOOKS) of OBJPC with (fetch (TEXTOBJ CARETLOOKS) of TEXTOBJ))
                   (\TEDIT.HISTORYADD TEXTOBJ (create TEDITHISTORYEVENT
                                                     THACTION _ 'Insert
                                                     THCH# _ CH#
                                                     THLEN _ 1
                                                     THFIRSTPIECE _ OBJPC))
                   (replace (TEXTOBJ \DIRTY) of TEXTOBJ with T)
                   (replace (THISLINE DESC) of (fetch (TEXTOBJ THISLINE) of TEXTOBJ) with NIL)
                   (SETSEL SEL SELKIND 'CHAR)
                   [COND
                      ((fetch (TEXTOBJ \WINDOW) of TEXTOBJ)
                       (\TEDIT.UPDATE.LINES TEXTOBJ CH# (PLEN OBJPC)))
                      (T (TEDIT.MAKEPOINT SEL (IPLUS CH# (PLEN OBJPC]
                   (BTVALIDATE 'TEDIT.INSERT.OBJECT 'END TEXTOBJ)
                   (\COPYSEL SEL TEDIT.SELECTION)))])

(TEDIT.EDIT.OBJECT
  [LAMBDA (STREAM OBJ)                                       (* ; "Edited 27-Apr-2023 00:14 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:37 by rmk")
                                                             (* ; "Edited 29-May-91 18:23 by jds")
    (LET ((TEXTOBJ (TEXTOBJ STREAM))
          SEL CH# SELOBJ EDITFN)
         [COND
            [(AND OBJ (IMAGEOBJP OBJ))
             (SETQ CH# (TEDIT.FIND.OBJECT TEXTOBJ OBJ))
             (COND
                (CH# (SETQ SEL (SCRATCHSEL TEXTOBJ))
                     (SETSEL SEL CH# CH#)
                     (SETSEL SEL CHLIM (ADD1 CH#))
                     (SETSEL SEL SELOBJ OBJ)
                     (SETSEL SEL DCH 1)
                     (SETSEL SEL SELTEXTOBJ TEXTOBJ)
                     (\FIXSEL SEL TEXTOBJ))
                (T (TEDIT.PROMPTPRINT TEXTOBJ "Can't find specified object." T]
            (T (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
               (SETQ OBJ (GETSEL SEL SELOBJ]
         (COND
            [OBJ                                             (* ; 
                                                           "OK There's an object selected.  Edit it.")
                 (SETQ EDITFN (IMAGEOBJPROP OBJ 'EDITFN))
                 (COND
                    ((AND EDITFN (APPLY* EDITFN OBJ))        (* ; 
                                                   "If the editfn makes a change, update the screen.")
                     (for LINE inside (GETSEL SEL L1) do (SETLD LINE DIRTY T))
                     (replace (TEXTOBJ TXTNEEDSUPDATE) of TEXTOBJ with T)
                     (TEDIT.UPDATE.SCREEN TEXTOBJ]
            (T                                               (* ; "No object selected.")
               (TEDIT.PROMPTPRINT TEXTOBJ "Please select an editable object first." T])

(TEDIT.FIND.OBJECT
  [LAMBDA (TEXTOBJ OBJ)                                      (* ; "Edited  6-Nov-2022 11:12 by rmk")
                                                             (* ; "Edited  3-May-93 12:52 by jds")
    (for CH# from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (EQ OBJ (PCONTENTS PC)) do (RETURN CH#])

(TEDIT.PUT.OBJECT
  [LAMBDA (PIECE OFILE FONTFILE CURCH#)                      (* ; "Edited  6-Aug-2022 10:02 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "Given a piece which describes an object, put the object out there.")

    (LET ((OBJECT (fetch (PIECE PCONTENTS) of PIECE))
          (FONTCH# (GETFILEPTR FONTFILE))
          TOFILE LEN)
         (\DWOUT FONTFILE 0)                                 (* ; 
                                                 "Placeholder for length of the object's description")
         (\SMALLPOUT FONTFILE \PieceDescriptorOBJECT)        (* ; 
                                                             "Mark this as setting the piece's looks")
         (\ATMOUT FONTFILE (IMAGEOBJPROP OBJECT 'GETFN))     (* ; 
                                                          "The FN to apply to reconstruct the object")
         (APPLY* (IMAGEOBJPROP OBJECT 'PUTFN)
                OBJECT OFILE)
         (SETFILEPTR FONTFILE FONTCH#)                       (* ; 
                          "Now go back and fill in the length of the text description of the object.")
         [\DWOUT FONTFILE (SETQ LEN (ADD1 (IDIFFERENCE (GETEOFPTR OFILE)
                                                 CURCH#]
         (SETFILEPTR FONTFILE -1)                            (* ; 
                                                        "Make sure we're at the end of the font file")
         (AND (RANDACCESSP OFILE)
              (SETFILEPTR OFILE -1))                         (* ; "And the text part of the file")
         LEN])

(TEDIT.GET.OBJECT
  [LAMBDA (TSTREAM PIECE FILE CURFILEBYTE#)                  (* ; "Edited 12-Oct-2022 14:10 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "Get an object from the file")

    (* ;; "CURFILEBYTE# = fileptr within the text section of the file where the object's text starts. On entry the file is positioned just before the object's GETFN in the looks section of the file. On exit, the fileptr points just after the GETFN in the looks section, after having been detoured to the text section for the getfn to read the object's data.")

    (PROG ((TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TSTREAM))
           FILEPTRSAVE NAMELEN GETFN OBJ NBYTES)

     (* ;; "rrb 10-AUG-87 --- calculate the length of the image object's data.  This assumes that the file is currently pointed at the end of the data which is where the GETFN is written {I think}")

          (SETQ NBYTES (DIFFERENCE (GETFILEPTR FILE)
                              CURFILEBYTE#))
          (SETQ GETFN (\ATMIN FILE))                         (* ; 
                                                             "The GETFN for this kind of IMAGEOBJ")
          (SETQ FILEPTRSAVE (GETFILEPTR FILE))               (* ; 
                                             "Save our file location thru the building of the object")
          (SETFILEPTR FILE CURFILEBYTE#)
          (SETQ OBJ (READIMAGEOBJ FILE GETFN NIL NBYTES))
          (CL:WHEN (IMAGEOBJPROP OBJ 'UNKNOWNGETFN)          (* ; 
      "If the object has an unknown getfn property, then it's an encapsulated object.  Warn the user")
              (TEDIT.PROMPTPRINT TSTREAM "WARNING: Document contains unknown image objects." T))
          (SETFILEPTR FILE FILEPTRSAVE)
          (replace (PIECE PCONTENTS) of PIECE with OBJ)
          [replace (PIECE PLOOKS) of PIECE with (COND
                                                   ((PREVPIECE PIECE)
                                                    (PLOOKS (PREVPIECE PIECE)))
                                                   (T (OR (fetch (TEXTOBJ DEFAULTCHARLOOKS)
                                                             of TEXTOBJ)
                                                          (\TEDIT.UNIQUIFY.CHARLOOKS (
                                                                                  CHARLOOKS.FROM.FONT
                                                                                      DEFAULTFONT)
                                                                 TEXTOBJ]
          (freplace (PIECE PTYPE) of PIECE WITH (CL:IF (IMAGEOBJPROP OBJ 'SUBSTREAM)
                                                    SUBSTREAM.PTYPE
                                                    OBJECT.PTYPE))
          (RETURN OBJ])

(TEDIT.OBJECT.CHANGED
  [LAMBDA (TSTREAM OBJECT)                                   (* ; "Edited 18-Apr-2023 23:57 by rmk")
                                                             (* ; "Edited 10-Apr-2023 00:02 by rmk")
                                                             (* ; "Edited  9-Sep-2022 09:32 by rmk")
                                                             (* ; "Edited  6-Aug-2022 09:37 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:51 by mitani")
                                                             (* ; 
                   "Notify TEdit that an object has changed, and the display may need to be updated.")
    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          OBJPIECE CHANGEDCH#)
         [SETQ OBJPIECE (find PC inpieces (\FIRSTPIECE TEXTOBJ) suchthat (EQ OBJECT (PCONTENTS PC]
                                                             (* ; 
                                                             "Find the piece containing this object")
         (CL:UNLESS OBJPIECE (HELP "Changed OBJECT not found!?"))
         (SETQ CHANGEDCH# (\PCTOCH OBJPIECE))                (* ; "Get the CH# of the changed object")
         (\TEDIT.MARK.LINES.DIRTY TEXTOBJ CHANGEDCH# CHANGEDCH#)
                                                             (* ; "Mark affected lines")
         (replace (TEXTOBJ \DIRTY) of TEXTOBJ with T)        (* ; "And mark the document dirty.")
         (\SHOWSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                NIL)
         (TEDIT.UPDATE.SCREEN TEXTOBJ)
         (\FIXSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                TEXTOBJ)
         (\SHOWSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                T])

(TEDIT.MAP.OBJECTS
  [LAMBDA (TEXTOBJ FN FNARG COLLECT?)                        (* ; "Edited  6-Nov-2022 12:15 by rmk")

    (* ;; "Apply FN to each of the imageobjects in TEXTOBJ.  If COLLECT? value is the list of (CH# OBJ FNVAL) pairs that satisfy the predicate")

    (* ;; "FN is a function of 3 args (OBJ   CH#-of-OBJ    FNARG)")

    (for CH# OBJ FNVAL from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (AND (EQ OBJECT.PTYPE (PTYPE PC))
                 (type? IMAGEOBJ (SETQ OBJ (PCONTENTS PC)))
                 (SETQ FNVAL (APPLY* FN CH# OBJ FNARG)))
       do (CL:WHEN COLLECT?
              (PUSH $$VAL (LIST CH# OBJ FNVAL)))
          (CL:WHEN (EQ FNVAL 'STOP)
                 (GO $$OUT)) finally (RETURN (DREVERSE $$VAL])
)

(FILESLOAD IMAGEOBJ)



(* ;; 
"Would be nice to just do (DOFILESLOAD (CDR TEDITFILES)).  But the order for exports.all and the order for loading have to be aligned."
)


(FILESLOAD TEDIT-FIND TEDIT-HISTORY TEDIT-FILE TEDIT-WINDOW TEDIT-SELECTION TEDIT-TFBRAVO TEDIT-HCPY
       TEDIT-PAGE TEDIT-MENU TEDIT-FNKEYS)



(* ; "TEDIT Support information")


(RPAQQ TEDITSYSTEMDATE " 9-May-2023 22:09:32")



(* ; "LISTFILES Interface, so the system can decide if a file is a TEdit file.")


(ADDTOVAR PRINTFILETYPES (TEDIT (TEST \TEDIT.FORMATTEDP1)
                                (EXTENSION (TEDIT))))
(PUTPROPS TEDIT COPYRIGHT ("Venue & Xerox Corporation" 1983 1984 1985 1986 1987 1988 1989 1990 1991 
1992 1993 1995 1999 2018 2021))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (4083 5599 (MAKE-TEDIT-EXPORTS.ALL 4093 . 4350) (UPDATE-TEDIT 4352 . 4965) (EDIT-TEDIT 
4967 . 5597)) (6531 6824 (\CREATE.TEDIT.RESTART.MENU 6541 . 6822)) (7199 39312 (TEDIT 7209 . 12545) (
COERCETEXTOBJ 12547 . 15424) (TEDITSTRING 15426 . 16187) (TEDIT-SEE 16189 . 18342) (TEDIT.CHARWIDTH 
18344 . 20368) (TEDIT.COPY 20370 . 22035) (TEDIT.DELETE 22037 . 22817) (TEDIT.INSERT 22819 . 25065) (
TEDIT.KILL 25067 . 26624) (TEDIT.MAPPIECES 26626 . 27688) (TEDIT.QUIT 27690 . 29261) (
TEDIT.DO.BLUEPENDINGDELETE 29263 . 30002) (TEDIT.MOVE 30004 . 34254) (TEDIT.STRINGWIDTH 34256 . 34927)
 (TEXTOBJ 34929 . 37022) (TEDITMENUP 37024 . 37613) (TEXTSTREAM 37615 . 39310)) (39358 91195 (\TEDIT2 
39368 . 42119) (\TEDIT.INSERT 42121 . 45540) (\TEDIT.INCLUDE 45542 . 49442) (\TEDIT.MOVE.SELPIECES 
49444 . 51572) (\TEDIT.INSERT.SELPIECES 51574 . 55346) (\TEDIT.OBJECT.SHOWSEL 55348 . 59319) (
\TEDIT.RESTARTFN 59321 . 61394) (\TEDIT.CHARDELETE 61396 . 64038) (\TEDIT.COPYPIECE 64040 . 68487) (
\TEDIT.COPYOBJECT 68489 . 70440) (\SELPIECES.COPY 70442 . 71807) (\TEDIT.DELETE 71809 . 74207) (
\TEDIT.DIFFUSE.PARALOOKS 74209 . 76504) (\TEDIT.FOREIGN.COPY? 76506 . 80702) (\TEDIT.QUIT 80704 . 
83850) (\TEDIT.WORDDELETE 83852 . 88495) (\TEDIT1 88497 . 91193)) (91349 107193 (TEDIT.INSERT.OBJECT 
91359 . 97510) (TEDIT.EDIT.OBJECT 97512 . 99459) (TEDIT.FIND.OBJECT 99461 . 99868) (TEDIT.PUT.OBJECT 
99870 . 101569) (TEDIT.GET.OBJECT 101571 . 104497) (TEDIT.OBJECT.CHANGED 104499 . 106357) (
TEDIT.MAP.OBJECTS 106359 . 107191)))))
STOP
