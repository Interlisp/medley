(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "16-Dec-2023 12:08:10" {WMEDLEY}<library>tedit>TEDIT.;396 115059 

      :EDIT-BY rmk

      :CHANGES-TO (FNS TEDITSTRING)

      :PREVIOUS-DATE "15-Dec-2023 08:45:30" {WMEDLEY}<library>tedit>TEDIT.;395)


(PRETTYCOMPRINT TEDITCOMS)

(RPAQQ TEDITCOMS
       [(COMS                                                (* ; "Loadup stuff")
              (VARS TEDITFILES)
              (FNS MAKE-TEDIT-EXPORTS.ALL UPDATE-TEDIT EDIT-TEDIT)
              (DECLARE%: DONTEVAL@LOAD DONTCOPY DONTEVAL@COMPILE 

                     (* ;; "This gets EXPORTS.ALL loaded when TEDIT-EXPORTS.ALL is loaded")

                     (EXPORT (FILES (FROM LOADUPS)
                                    EXPORTS.ALL)))
              (DECLARE%: EVAL@COMPILE DONTCOPY (FILES TEDIT-EXPORTS.ALL)))
        (DECLARE%: EVAL@COMPILE DONTCOPY 

               (* ;; "Assertions go to comments if not being checked, so we see value-warnings")

               (EXPORT (COMS (MACROS TEDIT-ASSERT)
                             (GLOBALVARS CHECK-TEDIT-ASSERTIONS)
                             (INITVARS (CHECK-TEDIT-ASSERTIONS T)))
                      (MACROS OBJECT.ALLOWS)))
        (FILES TEDIT-PCTREE TEDIT-STREAM TEDIT-COMMAND TEDIT-SCREEN TEDIT-ABBREV TEDIT-LOOKS)
        (FNS \CREATE.TEDIT.RESTART.MENU)
        (VARS (TEDIT.TERMSA.FONTS NIL)
              (TEDIT.TENTATIVE NIL)
              (TEDIT.DEFAULT.PROPS NIL)
              (TEDIT.STARTUP.MONITORLOCK (CREATE.MONITORLOCK 'TEDIT.STARTUP))
              (TEDIT.RESTART.MENU (\CREATE.TEDIT.RESTART.MENU)))
        (GLOBALVARS TEDIT.TENTATIVE TEDIT.DEFAULT.PROPS)
        
        (* ;; "Unslashed functions.  Public?")

        (FNS TEDIT COERCETEXTOBJ TEDITSTRING TEDIT-SEE TEDIT.CHARWIDTH TEDIT.COPY TEDIT.DELETE 
             TEDIT.INSERT TEDIT.KILL TEDIT.MAPPIECES TEDIT.QUIT TEDIT.DO.BLUEPENDINGDELETE TEDIT.MOVE
             TEDIT.STRINGWIDTH TEXTOBJ TEDITMENUP TEXTSTREAM)
        (FNS \TEDIT.MOVE.MSG \TEDIT.READONLY)
        (FNS TEDIT.NCHARS TEDIT.RPLCHARCODE TEDIT.NTHCHARCODE \TEDIT.PIECE.NTHCHARCODE)
        
        (* ;; "Slashed functions. Private?")

        (FNS \TEDIT1 \TEDIT.INSERT \TEDIT.REPLACE.SELPIECES \TEDIT.INSERT.SELPIECES 
             \TEDIT.OBJECT.SHOWSEL \TEDIT.RESTARTFN \TEDIT.CHARDELETE \TEDIT.COPYPIECE 
             \TEDIT.APPLY.OBJFN \TEDIT.DELETE \TEDIT.DIFFUSE.PARALOOKS \TEDIT.FOREIGN.COPY? 
             \TEDIT.QUIT \TEDIT.WORDDELETE)
        (FNS \SELPIECES.COPY \SELPIECES.CONCAT \SELPIECES.CHARTRANSFORM \SELPIECES.FROM.STRING 
             \SELPIECES.TO.STRING)
        (FNS \TEDIT.PARAPIECES \TEDIT.PARA.FIRST \TEDIT.PARA.LAST)
        (P (MOVD? 'NILL 'OBJECTOUTOFTEDIT))
                                                             (* ; 
                                    "HOOK for looked-string copy, etc. Used in \TEDIT.FOREIGN.COPY?.")
        (COMS                                                (* ; "Object-oriented editing")
              (FNS TEDIT.INSERT.OBJECT TEDIT.EDIT.OBJECT TEDIT.FIND.OBJECT TEDIT.OBJECT.CHANGED 
                   TEDIT.MAP.OBJECTS TEDIT.COLLECT.OBJECTS TEDIT.COLLECT.OBJECT.GETFNS)
              (FILES IMAGEOBJ))
        
        (* ;; "Would be nice to just do (DOFILESLOAD (CDR TEDITFILES)).  But the order for exports.all and the order for loading have to be aligned.")

        (FILES TEDIT-FIND TEDIT-HISTORY TEDIT-FILE TEDIT-WINDOW TEDIT-SELECTION TEDIT-TFBRAVO 
               TEDIT-HCPY TEDIT-PAGE TEDIT-MENU TEDIT-FNKEYS)
        (COMS                                                (* ; "TEDIT Support information")
              (E (SETQ TEDITSYSTEMDATE (DATE)))
              (VARS TEDITSYSTEMDATE))
        (COMS                                                (* ; 
                           "LISTFILES Interface, so the system can decide if a file is a TEdit file.")
              (ADDVARS (PRINTFILETYPES (TEDIT (TEST \TEDIT.FORMATTEDP1)
                                              (EXTENSION (TEDIT])



(* ; "Loadup stuff")


(RPAQQ TEDITFILES (TEDIT TEDIT-PCTREE TEDIT-SELECTION TEDIT-SCREEN TEDIT-STREAM TEDIT-COMMAND 
                         TEDIT-FILE TEDIT-LOOKS TEDIT-WINDOW TEDIT-MENU TEDIT-FIND TEDIT-FNKEYS 
                         TEDIT-HCPY TEDIT-HISTORY TEDIT-PAGE TEDIT-ABBREV TEDIT-TFBRAVO))
(DEFINEQ

(MAKE-TEDIT-EXPORTS.ALL
  [LAMBDA NIL                                                (* ; "Edited 29-Aug-2023 21:59 by rmk")
                                                             (* ; "Edited 11-Sep-2022 23:43 by rmk")
    (LET (VAL)
         [CNDIR (PROG1 (DIRECTORYNAME T)
                    (CNDIR (MEDLEYDIR "library>tedit"))
                    (SETQ VAL (GATHEREXPORTS TEDITFILES (MEDLEYDIR "library/tedit" 
                                                               "tedit-exports.all" T))))]
         VAL])

(UPDATE-TEDIT
  [LAMBDA (FILES)                                            (* ; "Edited 26-Oct-2022 21:10 by rmk")

    (* ;; "updates sysout with new versions of loaded files.  Keeps the extension")

    (FOR FILE DIRFILE LOADEDFILE INSIDE (OR FILES TEDITFILES)
       WHEN [AND (SETQ LOADEDFILE (FOR F IN LOADEDFILELST WHEN (EQ FILE (FILENAMEFIELD F 'NAME))
                                     DO (RETURN F)))
                 (SETQ DIRFILE (INFILEP (PACKFILENAME 'VERSION NIL 'BODY LOADEDFILE]
       UNLESS (EQ LOADEDFILE DIRFILE) COLLECT (LOAD DIRFILE T])

(EDIT-TEDIT
  [LAMBDA NIL                                                (* ; "Edited  3-Jul-2023 13:44 by rmk")
                                                             (* ; "Edited 17-Jun-2023 10:00 by rmk")
                                                             (* ; "Edited 25-Apr-2023 17:39 by rmk")
                                                             (* ; "Edited 26-Oct-2022 21:12 by rmk")
                                                             (* ; "Edited 14-Sep-2022 08:37 by rmk")
    (BKSYSBUF " ")
    (RESETLST
        (RESETSAVE LOADDBFLG 'YES)
        (FOR F IN TEDITFILES DO (LOADFROM F)
                                (LOADCOMP F)))
    (%. ANALYZE ON IN TEDITFILES])
)
(DECLARE%: DONTEVAL@LOAD DONTCOPY DONTEVAL@COMPILE 
(* "FOLLOWING DEFINITIONS EXPORTED")
(FILESLOAD (FROM LOADUPS)
       EXPORTS.ALL)

(* "END EXPORTED DEFINITIONS")

)
(DECLARE%: EVAL@COMPILE DONTCOPY 

(FILESLOAD TEDIT-EXPORTS.ALL)
)
(DECLARE%: EVAL@COMPILE DONTCOPY 
(* "FOLLOWING DEFINITIONS EXPORTED")(DECLARE%: EVAL@COMPILE 

(PUTPROPS TEDIT-ASSERT MACRO [ARGS (COND
                                      [CHECK-TEDIT-ASSERTIONS
                                       `(CL:UNLESS ,(CAR ARGS)
                                            [HELP "TEDIT-ASSERT FAILURE" ,(KWOTE (CAR ARGS])]
                                      (T `                   (* (TEDIT-ASSERT (\,@ ARGS)))])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS CHECK-TEDIT-ASSERTIONS)
)

(RPAQ? CHECK-TEDIT-ASSERTIONS T)
(DECLARE%: EVAL@COMPILE 

(PUTPROPS OBJECT.ALLOWS MACRO ((PC OPERATION FROMTOBJ TOTOBJ)
                               (OR (NOT (EQ OBJECT.PTYPE (PTYPE PC)))
                                   (\TEDIT.APPLY.OBJFN (PCONTENTS PC)
                                          OPERATION FROMTOBJ TOTOBJ))))
)

(* "END EXPORTED DEFINITIONS")

)

(FILESLOAD TEDIT-PCTREE TEDIT-STREAM TEDIT-COMMAND TEDIT-SCREEN TEDIT-ABBREV TEDIT-LOOKS)
(DEFINEQ

(\CREATE.TEDIT.RESTART.MENU
  [LAMBDA NIL                                                (* ; "Edited 28-Aug-2022 22:45 by rmk")

    (* ;; "Separate dinky function to compile for SUNLOADUP without DWIM.")

    (CREATE MENU
           ITEMS _ '(NewEditProcess])
)

(RPAQQ TEDIT.TERMSA.FONTS NIL)

(RPAQQ TEDIT.TENTATIVE NIL)

(RPAQQ TEDIT.DEFAULT.PROPS NIL)

(RPAQ TEDIT.STARTUP.MONITORLOCK (CREATE.MONITORLOCK 'TEDIT.STARTUP))

(RPAQ TEDIT.RESTART.MENU (\CREATE.TEDIT.RESTART.MENU))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.TENTATIVE TEDIT.DEFAULT.PROPS)
)



(* ;; "Unslashed functions.  Public?")

(DEFINEQ

(TEDIT
  [LAMBDA (TEXT WINDOW DONTSPAWN PROPS)

    (* ;; "Edited 20-Oct-2023 11:02 by rmk")

    (* ;; "Edited 17-Oct-2023 08:53 by rmk")

    (* ;; "Edited 22-Jun-2022 20:01 by rmk: Call to OPENSTREAM passes FORMAT from PROPS")

    (* ;; "Edited 31-Jan-2022 17:19 by rmk: String TEXT is a file name")

    (* ;; "Edited 24-Dec-2021 19:21 by rmk")

    (* ;; "Edited 11-Jun-99 14:14 by rmk:")

    (* ;; "Edited  3-Jun-88 14:27 by jds")

    (* ;; "User entry to the text editor.  Takes an optional window to be used for editing")

    (SETQ PROPS (APPEND PROPS TEDIT.DEFAULT.PROPS))

    (* ;; "DONTSPAWN => Don't try to create a new process for this edit.")

    (LET (TSTREAM PROC)                                      (* ; 
                                        "Make sure the file exists before trying to open the window.")
         (push PROPS 'BEING-EDITED T)                        (* ; 
               "Mark the document as actively in edit, so caret flashes when the window first opens.")
         (SETQ TSTREAM (OPENTEXTSTREAM TEXT (OR WINDOW 'Tedit)
                              NIL NIL PROPS))
         (CL:UNLESS (WINDOWP WINDOW)
             (SETQ WINDOW (CAR (GETTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TSTREAM)
                                      \WINDOW))))
         (COND
            (DONTSPAWN                                       (* ; 
                                     "Either no processes running, or specifically not to spawn one.")
                   (\TEDIT1 TSTREAM WINDOW T))
            (T                                               (* ; "Spawn a process to do the edit.")
               [SETQ PROC (ADD.PROCESS (LIST (FUNCTION \TEDIT1)
                                             (KWOTE TSTREAM)
                                             WINDOW NIL)
                                 'NAME
                                 'TEdit
                                 'RESTARTABLE
                                 'HARDRESET
                                 'RESTARTFORM
                                 (LIST (FUNCTION \TEDIT.RESTARTFN)
                                       (KWOTE TSTREAM)
                                       WINDOW
                                       (KWOTE PROPS]
               (PROCESSPROP PROC 'WINDOW WINDOW)
               (CL:UNLESS (LISTGET PROPS 'LEAVETTY)          (* ; 
                              "Unless he asked us to leave the tty where it is, TEdit should get it.")
                   (TTY.PROCESS PROC))
               PROC])

(COERCETEXTOBJ
  [LAMBDA (TSTREAM TYPE OUTPUTSTREAM)                        (* ; "Edited 21-Nov-2023 00:08 by rmk")
                                                             (* ; "Edited 15-Sep-2023 00:08 by rmk")
                                                             (* ; "Edited 15-Aug-2023 20:20 by rmk")
                                                             (* ; "Edited  8-May-2023 13:25 by rmk")
                                                             (* ; "Edited  4-May-2023 12:13 by rmk")
                                                             (* ; "Edited 11-Jun-99 15:10 by rmk:")
                                                             (* ; "Edited 18-Apr-93 23:42 by jds")

    (* ;; "Coerce the contents of the TEXOTBJ to be of the given type.  This is for making a string from a textobj, e.g.")

    (* ;; "RMK: moved the string case up from the piece level to the stream-BIN level")

    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          OFILE FMTFILE)
         (SETQ TSTREAM (TEXTSTREAM TEXTOBJ))
         (SELECTQ TYPE
             ((STRINGP STRING) 
                  (\TEXTSETFILEPTR TSTREAM 0)                (* ; 
                                      "This gets underneath the OPENP test of the generic SETFILEPTR")

                  (* ;; "Allocstring presumably errors if greater than max stringsize.")

                  [for CH# (STR _ (ALLOCSTRING (TEXTLEN TEXTOBJ))) from 1 to (TEXTLEN TEXTOBJ)
                     do (RPLCHARCODE STR CH# (BIN TSTREAM))
                     finally (RETURN (OR (SUBSTRING STR 1 (SUB1 CH#))
                                         (CONCAT ""])
             (STREAM                                         (* ; 
                       "Does this code make sense if pieces are on different files, e.g. INCLUDE ?  ")
                     (CL:UNLESS (TEXTSTREAMP))
                     (\TEDIT.REOPEN.STREAM (FGETTOBJ TEXTOBJ TXTFILE))
                     (SETFILEPTR TSTREAM 0)
                     TSTREAM)
             (FILE                                           (* ; "Throw away looks if no formatting")
                   [SETQ OUTPUTSTREAM (OR (AND OUTPUTSTREAM (OPENP OUTPUTSTREAM 'OUTPUT))
                                          (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW]
                   [\TEDIT.PUT.PCTB TEXTOBJ OUTPUTSTREAM (CL:UNLESS (\TEDIT.FORMATTEDSTREAMP TEXTOBJ)
                                                             (OPENSTREAM '{NODIRCORE} 'BOTH))]
                   OUTPUTSTREAM)
             (SPLIT 
                    (* ;; "I.e., Return 2 NODIRCORE files, one with plain text, one with formatting info, such that concatenating them will produce a proper Tedit-format file.")

                    (LET [(LOOKSFILE (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW `((LINELENGTH ,MAX.SMALLP]
                         (SETQ OFILE (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW))
                         (\TEDIT.PUT.PCTB TEXTOBJ OFILE LOOKSFILE)
                         (CLOSEF OFILE)
                         (CONS OFILE LOOKSFILE)))
             NIL])

(TEDITSTRING
  [LAMBDA (TEXT WINDOW DONTSPAWN PROPS)

(* ;;; "Edited 16-Dec-2023 12:06 by rmk")

(* ;;; "Edited  9-May-2023 21:55 by rmk")

(* ;;; "Edited 23-May-2022 15:52 by rmk")

(* ;;; "Edited 19-May-2022 22:46 by rmk: An interface function to replace calls to TEDIT when the text argument may be the string to be edited rather than the name of a file.  This enables the transition that gets TEDIT aligned with the convention that strings, as well as litatoms, are file names")

    (SETQ TEXT (MKSTRING TEXT))
    (TEDIT (LET ((TSTR (OPENTEXTSTREAM)))
                (TEDIT.INSERT TSTR TEXT 1 NIL T)
                (TEDIT.SETSEL TSTR 1 0 'LEFT)
                TSTR)
           WINDOW DONTSPAWN PROPS])

(TEDIT-SEE
  [LAMBDA (FILE WINDOW FORMAT TITLE)

    (* ;; 
  "Edited 13-Sep-2023 09:04 by rmk:  Old code replaced to take advantage of new standard interfaces.")

    (* ;; "Edited 14-Jul-2023 00:02 by rmk")

    (* ;; "Edited 13-Sep-2022 09:21 by rmk:  Changed the default format here to the current Medley default.  This shouldn't be special.")

    (* ;; "Edited 27-Feb-2021 20:07 by rmk:")

    (* ;; "Edited  1-Feb-88 19:00 by bvm:")

    (TEXTSTREAM (TEDIT FILE WINDOW NIL `(READONLY T LEAVETTY T FONT ,DEFAULTFONT])

(TEDIT.CHARWIDTH
  [LAMBDA (CH FONT TERMSA)                                   (* jds "22-OCT-83 19:32")
          
          (* Returns the width of CH in FONT printed according to any special printing 
          instructions in CHARTABLE TERMSA)

    (COND
       (TERMSA                                               (* There IS a TERMTABLE to account for)
              (SELECTC (fetch CCECHO of (\SYNCODE TERMSA CH))
                  (INDICATE.CCE (IPLUS (COND
                                          ((IGREATERP CH 127)(* META character)
                                           (SETQ CH (LOGAND CH 127))
                                           (CHARWIDTH (CHARCODE %#)
                                                  FONT))
                                          (T 0))
                                       (COND
                                          ((ILESSP CH 32)    (* CONTROL character)
                                           (SETQ CH (LOGOR CH 64))
                                           (CHARWIDTH (CHARCODE ^)
                                                  FONT))
                                          (T 0))
                                       (CHARWIDTH CH FONT)))
                  (SIMULATE.CCE (SELCHARQ CH
                                     ((EOL CR LF) 
                                          (IMAX 6 (CHARWIDTH CH FONT)))
                                     (ESCAPE (CHARWIDTH (CHARCODE $)
                                                    FONT))
                                     (BELL 0)
                                     (TAB 36)
                                     (CHARWIDTH CH FONT)))
                  (REAL.CCE (CHARWIDTH CH FONT))
                  (IGNORE.CCE 0)
                  (SHOULDNT)))
       (T (* The usual case is to treat every character as a graphic.)
          (SELCHARQ CH
               (CR (IMAX 6 (CHARWIDTH CH FONT)))
               (TAB 36)
               (CHARWIDTH CH FONT])

(TEDIT.COPY
  [LAMBDA (FROM TO)                                          (* ; "Edited 20-May-2023 18:47 by rmk")
                                                             (* ; "Edited 15-May-2023 22:11 by rmk")
                                                             (* ; "Edited  4-Jun-92 11:11 by jds")

    (* ;; "Copy the FROM-selected pieces into the destination object and position as indicated by the TO selection.")

    (TEDIT.MOVE FROM TO 'copy])

(TEDIT.DELETE
  [LAMBDA (STREAM SEL LEN LEAVECARETLOOKS)                   (* ; "Edited 23-May-2023 12:57 by rmk")
                                                             (* ; "Edited 22-May-2023 10:54 by rmk")
                                                             (* ; "Edited 10-Nov-2022 22:48 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "Delete the specified characters from STREAM.")

    (* ;; "If LEAVECARETLOOKS is non-NIL, the selection will NOT be set up to do the right thing with type-in.  This can save time in inner loops.")

    (LET ((TEXTOBJ (TEXTOBJ STREAM)))
         (CL:WHEN (FIXP SEL)
             (TEDIT.SETSEL STREAM SEL LEN NIL NIL LEAVECARETLOOKS)
             (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ)))
         (\TEDIT.DELETE TEXTOBJ (OR SEL (fetch (TEXTOBJ SEL) of TEXTOBJ])

(TEDIT.INSERT
  [LAMBDA (TSTREAM TEXT CH#ORSEL LOOKS DONTSCROLL)           (* ; "Edited 12-Nov-2023 12:30 by rmk")
                                                             (* ; "Edited 15-Oct-2023 14:57 by rmk")
                                                             (* ; "Edited 31-May-2023 23:25 by rmk")
                                                             (* ; "Edited 27-May-2023 10:47 by rmk")
                                                             (* ; "Edited  9-Nov-2022 10:36 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Insert TEXT (litatom or string) at the appropriate spot in the text..  No-op if given something else--should it error? ")

    (CL:UNLESS (\TEDIT.READONLY TSTREAM)
        (PROG ((TEXTOBJ (TEXTOBJ TSTREAM)))
              (CL:WHEN (LITATOM TEXT)
                  (SETQ TEXT (MKSTRING TEXT)))

         (* ;; "Can't insert an empty string sensibly.")

              (CL:WHEN (OR (NOT (STRINGP TEXT))
                           (ZEROP (NCHARS TEXT)))
                     (RETURN))
              (if (FIXP CH#ORSEL)
                  then (TEDIT.SETSEL TEXTOBJ CH#ORSEL 1 'LEFT) 
                                                             (* ; "He gave us a ch# to insert before")
                       (SETQ CH#ORSEL (TEXTSEL TEXTOBJ))
                elseif (NOT CH#ORSEL)
                  then (SETQ CH#ORSEL (TEXTSEL TEXTOBJ)))
              (CL:UNLESS (AND CH#ORSEL (GETSEL CH#ORSEL SET))
                  (TEDIT.PROMPTPRINT TEXTOBJ "Please select a place for the insertion." T)
                  (RETURN))
              (CL:WHEN LOOKS                                 (* ; "Set up any specified looks.")
                  (TEDIT.CARETLOOKS TSTREAM LOOKS))
              (\TEDIT.INSERT TEXT CH#ORSEL TEXTOBJ DONTSCROLL T)))])

(TEDIT.KILL
  [LAMBDA (TSTREAM)                                          (* ; "Edited 20-Sep-2023 17:55 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "Force the edit session supported by TSTREAM to terminate")

    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          TEDW TEDPROC)
         (FSETTOBJ TEXTOBJ EDITFINISHEDFLG T)
         (CL:WHEN (AND (SETQ TEDW (CAR (FGETTOBJ TEXTOBJ \WINDOW)))
                       [PROCESSP (SETQ TEDPROC (WINDOWPROP TEDW 'PROCESS]
                       (NEQ TEDPROC (THIS.PROCESS)))
             (DEL.PROCESS TEDPROC)
             (TEDIT.DEACTIVATE.WINDOW TEDW))])

(TEDIT.MAPPIECES
  [LAMBDA (TEXTOBJ FN FNARG)                                 (* ; "Edited  6-Nov-2022 11:12 by rmk")
                                                             (* ; "Edited  4-Nov-2022 23:11 by rmk")
                                                             (* ; "Edited  9-Sep-2022 16:08 by rmk")
                                                             (* ; "Edited 22-Aug-2022 14:28 by rmk")
                                                             (* ; "Edited 22-Jul-2022 09:19 by rmk")
                                                             (* ; "Edited 22-Apr-93 16:02 by jds")

    (* ;; "Go thru all the pieces in a document, applying a function to them serially")

    (* ;; "FN is a function of 3 args (PIECE    CH#-of-1st-char-in-piece    FNARG)")

    (for CH# from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (EQ (APPLY* FN CH# PC FNARG)
                'STOP) do (RETURN (LIST CH# PC])

(TEDIT.QUIT
  [LAMBDA (STREAM VALUE)                                     (* ; "Edited 20-Sep-2023 17:55 by rmk")
                                                             (* ; "Edited 10-Apr-2023 10:19 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "Force the edit session supported by STREAM to terminate, and to return VALUE")

    (LET (MAINW (TEXTOBJ (TEXTOBJ STREAM)))
         (FSETTOBJ TEXTOBJ EDITFINISHEDFLG (OR VALUE T))     (* ; 
                                                    "tell the command loop to stop next time through")
         (CL:WHEN [AND (FGETTOBJ TEXTOBJ \WINDOW)
                       (NEQ (SETQ MAINW (\TEDIT.PRIMARYW TEXTOBJ))
                            (PROCESSPROP (TTY.PROCESS)
                                   'WINDOW]

             (* ;; "there is a main window of the stream, and it is not the window of the tty process, so give it the tty")

             (TTY.PROCESS (WINDOWPROP MAINW 'PROCESS))
             (AND (NEQ (TTY.PROCESS)
                       (THIS.PROCESS))
                  (until [OR (NOT (WINDOWPROP MAINW 'PROCESS))
                             (PROCESS.FINISHEDP (WINDOWPROP MAINW 'PROCESS] do 
                                                             (* ; 
                    "Wait until the Edit process has had a chance to go away before continuing here.")
                                                                               (DISMISS))))])

(TEDIT.DO.BLUEPENDINGDELETE
  [LAMBDA (SEL TEXTOBJ)                                      (* ; "Edited  8-Jul-2023 22:48 by rmk")
                                                             (* ; "Edited  4-May-2023 00:05 by rmk")
                                                             (* ; "Edited 22-Apr-2023 18:31 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Check for blue-pending-delete, and do it if it's there.")

    (* ;; "Return T if the deletion was made.  For people who need to know")

    (CL:WHEN (fetch (TEXTOBJ BLUEPENDINGDELETE) of TEXTOBJ)
        (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)              (* ; "Make it a normal selection again.")
        (\TEDIT.DELETE TEXTOBJ SEL T))])

(TEDIT.MOVE
  [LAMBDA (FROM TO COPYFLG)                                  (* ; "Edited 12-Oct-2023 22:23 by rmk")
                                                             (* ; "Edited 24-Sep-2023 21:43 by rmk")
                                                             (* ; "Edited 21-Jun-2023 15:58 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Insert the pieces at FROM into the location described by TO, possibly first deleting a TO-pending-delete and unless COPYFLG also removing the FROM pieces.  The FROM and TO SEL's are saved as pre-selections.")

    (* ;; "This results in a single history event if FROM and TO are in the same TEXTOBJ--undo will restore it.")

    (* ;; "If they are in separate texts, then the modifcations to TO go into TO's history (pending delete and insert), the deletion (if not COPYFLG) of FROM is an event in its object.  In that case it will require undos in both objects to get them both back to the original state.")

    (* ;; "If the FROM object is formatted and the TO object is not, the TO is converted.  And if FROM is not but TO is, then the copied FROM-pieces are upgraded after they are installed.")

    (SETQ TEDIT.COPY.PENDING NIL)                            (* ; 
                                                    "Turn off the global flag--we don't want to loop")
    (CL:UNLESS (\TEDIT.MOVE.MSG TO FROM COPYFLG)
        (\SHOWSEL FROM NIL)
        (\SHOWSEL TO NIL)
        (PROG ((TOBJ (GETSEL TO SELTEXTOBJ))
               (FOBJ (GETSEL FROM SELTEXTOBJ))
               FROMPIECES)

         (* ;; "Install FROM pieces  at TO, first clearing out the blue pending delete.  The move-event may be a composite of both.  If we are doing a move and not a copy in the same textobject, we assume that the FROM and TO selections are adjusted in the subfunctions.")

         (* ;; "")

         (* ;; "Grab (a copy of) the source pieces, if image object allows")

              (SETQ FROMPIECES (\SELPIECES.COPY (\SELPIECES FROM)
                                      (CL:IF COPYFLG
                                          'COPY
                                          'MOVE)
                                      TOBJ FOBJ))
              (CL:UNLESS FROMPIECES (RETURN))

         (* ;; "")

              (CL:WHEN (AND (GETTOBJ FOBJ FORMATTEDP)
                            (NOT (GETTOBJ TOBJ FORMATTEDP))) (* ; 
                                                    "The source is formatted and the target isn't.  ")
                  (\TEDIT.CONVERT.TO.FORMATTED TOBJ))

         (* ;; "")

              (CL:UNLESS COPYFLG                             (* ; 
                                                             "If this is a move, delete the source")
                  (\TEDIT.DELETE FOBJ FROM))

         (* ;; "")

         (* ;; "Either replace or insert in the target, depending on its BLUEPENDINGDELETE")

              (if (GETTOBJ TOBJ BLUEPENDINGDELETE)
                  then (SETTOBJ TOBJ BLUEPENDINGDELETE NIL)
                       (SETQ TEDIT.PENDINGDEL NIL)
                       (\TEDIT.REPLACE.SELPIECES FROMPIECES TOBJ TO)
                else (\TEDIT.INSERT.SELPIECES FROMPIECES TOBJ TO))

         (* ;; "")

              (CL:WHEN (AND (EQ FOBJ TOBJ)
                            (NOT COPYFLG))                   (* ; 
                                                    "A delete/add in same textobject, combine events")
                  (\TEDIT.HISTORYADD TOBJ (LIST (\TEDIT.POPEVENT TOBJ)
                                                (\TEDIT.POPEVENT TOBJ))))
              (\TEDIT.SET.SEL.LOOKS TO 'NORMAL)

         (* ;; "")

         (* ;; "If TO is formatted but FROM is not, just the copied text has to be converted.  (Could this be done implicitly after the \SELPIECE.COPY but before the insert?)")

              (CL:WHEN (AND (GETTOBJ TOBJ FORMATTEDP)
                            (NOT (GETTOBJ FOBJ FORMATTEDP)))
                  (\TEDIT.CONVERT.TO.FORMATTED TOBJ (GETSEL TO CH#)
                         (IPLUS (GETSEL TO CH#)
                                (GETSEL FROM DCH))))

         (* ;; "")

              (\SHOWSEL TO NIL)                              (* ; 
                                                        "Take down anything that migh thave appeared")
              (\FIXSEL TO TOBJ)
              (\SHOWSEL TO T)))])

(TEDIT.STRINGWIDTH
  [LAMBDA (STR FONT TERMSA)                                  (* jds "19-AUG-83 14:40")
    (COND
       (TERMSA 
          
          (* We have a terminal table to take account of.
          Do so.)

              (for CH instring STR sum (TEDIT.CHARWIDTH CH FONT TERMSA)))
       (T                                                    (* Just use the native character 
                                                             widths)
          (for CH instring STR sum (SELCHARQ CH
                                        (TAB 36)
                                        (CHARWIDTH CH FONT])

(TEXTOBJ
  [LAMBDA (STREAM NOERROR)                                   (* ; "Edited 16-Jun-2023 08:21 by rmk")
                                                             (* ; "Edited  6-Jun-2023 15:23 by rmk")
                                                             (* ; "Edited 10-Apr-2023 09:32 by rmk")
                                                             (* ; "Edited  5-Apr-2023 15:12 by rmk")
                                                             (* ; "Edited 24-Mar-2023 18:01 by rmk")
                                                             (* jds "11-Jul-85 12:06")

    (* ;; "Convert from any designator of a textobj to that  textobj")

    (LET (TOBJ)
         (if (type? TEXTOBJ STREAM)
             then STREAM
           else (SETQ TOBJ (if [AND (type? STREAM STREAM)
                                    (type? TEXTOBJ (SETQ TOBJ (fetch (TEXTSTREAM TEXTOBJ)
                                                                 of STREAM]
                               then 
                                    (* ;; 
                                "Text stream - test TEXTOBJ to distinguish displaystream case below.")

                                    TOBJ
                             else (WINDOWP STREAM)
                               then (WINDOWPROP STREAM 'TEXTOBJ)
                             elseif (AND (PROCESSP STREAM)
                                         (PROCESS.WINDOW STREAM))
                               then                          (* ; "It's an edit PROCESS")
                                    (WINDOWPROP (PROCESS.WINDOW STREAM)
                                           'TEXTOBJ)
                             elseif (AND (DISPLAYSTREAMP STREAM)
                                         (SETQ TOBJ (WFROMDS STREAM)))
                               then (WINDOWPROP TOBJ 'TEXTOBJ)
                             elseif (type? SELECTION STREAM)
                               then (GETSEL STREAM SELTEXTOBJ)))
                (CL:UNLESS (OR (type? TEXTOBJ TOBJ)
                               NOERROR)
                       (ERROR STREAM "is not a Tedit document"))
                TOBJ])

(TEDITMENUP
  [LAMBDA (WINDOW TITLE)                                     (* ; "Edited  7-Dec-2023 21:06 by rmk")
                                                             (* ; "Edited 20-Sep-2023 22:36 by rmk")
                                                             (* ; "Edited 10-Apr-2023 10:14 by rmk")
    (CL:WHEN (AND (WINDOWP WINDOW)
                  (WINDOWPROP WINDOW 'TEDITMENU)
                  (WINDOWPROP WINDOW 'TEXTOBJ)
                  (CL:IF TITLE
                      (STRING.EQUAL TITLE (WINDOWPROP WINDOW 'TITLE))
                      T))
        (WINDOWPROP WINDOW 'TITLE))])

(TEXTSTREAM
  [LAMBDA (STREAM)                                           (* ; "Edited 21-Aug-2022 08:14 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")
                                                             (* ; 
                                                           "Force a textobj or stream to be a stream")
    (COND
       ((AND (type? STREAM STREAM)
             (fetch (TEXTSTREAM TEXTOBJ) of STREAM)
             (type? TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of STREAM)))
                                                             (* ; 
                                       "It's a stream, and is really a TEXT stream.  Just return it.")
        STREAM)
       ((type? TEXTOBJ STREAM)                               (* ; 
                                     "It's a TEXTOBJ, so grab the stream hint field and return that.")
        (fetch (TEXTOBJ STREAMHINT) of STREAM))
       ((AND (PROCESSP STREAM)
             (PROCESS.WINDOW STREAM))                        (* ; 
                                "It's an edit process, so grab the text stream from the edit window.")
        (WINDOWPROP (PROCESS.WINDOW STREAM)
               'TEXTSTREAM))
       [(AND (WINDOWP STREAM)
             (WINDOWPROP STREAM 'TEXTSTREAM]
       [(AND (DISPLAYSTREAMP STREAM)
             (WINDOWPROP STREAM 'TEXTSTREAM]
       (T                                                    (* ; 
                                               "Not a reasonable coercion to the text stream.  Punt.")
          (\ILLEGAL.ARG STREAM])
)
(DEFINEQ

(\TEDIT.MOVE.MSG
  [LAMBDA (FROM TO COPYFLG)                                  (* ; "Edited 22-May-2023 09:35 by rmk")
                                                             (* ; "Edited 20-May-2023 18:53 by rmk")
                                                             (* ; "Edited 15-May-2023 22:11 by rmk")
                                                             (* ; "Edited  4-Jun-92 11:11 by jds")

    (* ;; "Check whether it is possible to insert the FROM-selected pieces into the TO-selection.  Value is NON-NIL if the operation can't be performed.")

    (LET ((FROMOBJ (AND FROM (GETSEL FROM SELTEXTOBJ))
                 (AND FROM (GETSEL FROM SET)
                      (GETSEL FROM SELTEXTOBJ)))
          (TOOBJ (AND TO (GETSEL TO SET)
                      (GETSEL TO SELTEXTOBJ)))
          (TYPE (CL:IF COPYFLG
                    "copy"
                    "move"))
          MSG)
         (SETQ MSG (if (NOT (AND FROM (GETSEL FROM SET)))
                       then (CONCAT "Please select a source for the " TYPE)
                     elseif (NOT (AND TOOBJ (GETSEL TO SET)))
                       then (CONCAT "Please select a destination for the " TYPE)
                     elseif (fetch (TEXTOBJ TXTREADONLY) of TOOBJ)
                       then "Destination is read only--aborted"
                     elseif (AND (EQ TYPE 'move)
                                 (fetch (TEXTOBJ TXTREADONLY) of FROMOBJ))
                       then "Source is read only--aborted"))
         (TEDIT.PROMPTPRINT (OR FROMOBJ TOOBJ)
                (OR MSG "")
                T)                                           (* ; 
                                                             "empty string to clean out old garbage")
         MSG])

(\TEDIT.READONLY
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited 13-Nov-2023 11:26 by rmk")
    (SETQ TEXTOBJ (TEXTOBJ TEXTOBJ))
    (CL:WHEN (FGETTOBJ TEXTOBJ TXTREADONLY)
        (TEDIT.PROMPTPRINT TEXTOBJ "Text is read only--aborted" T T)
        T)])
)
(DEFINEQ

(TEDIT.NCHARS
  [LAMBDA (TSTREAM)                                          (* ; "Edited  7-Nov-2023 09:42 by rmk")
    (FGETTOBJ (TEXTOBJ TSTREAM)
           TEXTLEN])

(TEDIT.RPLCHARCODE
  [LAMBDA (TSTREAM N NEWCHARCODE NEWCHARLOOKS)               (* ; "Edited  7-Dec-2023 16:01 by rmk")
                                                             (* ; "Edited  1-Dec-2023 21:52 by rmk")
                                                             (* ; "Edited  9-Nov-2023 15:53 by rmk")
                                                             (* ; "Edited  4-Nov-2023 15:23 by rmk")

    (* ;; "Replaces the Nth charcode (or object) in TSTREAM with  NEWCHARCODE (or object) with NEWCHARLOOKS.  This is accomplished by isolating the target character into a length 1 piece, then converting that into a string (or object) piece containing NEWCHAR.")

    (* ;; "NOTE:  this may introduce new pieces, so must be used carefully with other piece-based or BIN-based iterations.")

    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          PC START-OF-PIECE)
         (DECLARE (SPECVARS START-OF-PIECE))
         (CL:WHEN (ILESSP N 0)
             (add N (ADD1 (FGETTOBJ TEXTOBJ TEXTLEN))))
         (CL:UNLESS (AND (IGEQ N 1)
                         (ILEQ N (FGETTOBJ TEXTOBJ TEXTLEN)))
                (\ILLEGAL.ARG N))
         (CL:UNLESS (OR (CHARCODEP NEWCHARCODE)
                        (IMAGEOBJP NEWCHARCODE))
                (\ILLEGAL.ARG NEWCHARCODE))
         (CL:WHEN [AND NEWCHARLOOKS (NOT (OR (FONTP NEWCHARLOOKS)
                                             (type? CHARLOOKS NEWCHARLOOKS]
                (\ILLEGAL.ARG NEWCHARLOOKS))
         (CL:WHEN (FGETTOBJ TEXTOBJ STREAMHINT)
             (replace (STREAM BINABLE) of (FGETTOBJ TEXTOBJ STREAMHINT) with NIL))

         (* ;; "Chop off the suffix.  Unless N was last in PC, the piece containing is new.")

         (\ALIGNEDPIECE (ADD1 N)
                TEXTOBJ)
         (SETQ PC (\ALIGNEDPIECE N TEXTOBJ))                 (* ; 
                                                "Chop off the prefix. PC is now the singleton target")
         (if (IMAGEOBJP NEWCHARCODE)
             then (FSETPC PC PBINABLE NIL)
                  (FSETPC PC PCONTENTS NEWCHARCODE)
                  (FSETPC PC PTYPE OBJECT.PTYPE)
                  (FSETPC PC PBYTESPERCHAR NIL)              (* ; "Doesn't make sense for objects")
                  (FSETPC PC PBYTELEN NIL)
           else (FSETPC PC PCONTENTS (MKSTRING (CHARACTER NEWCHARCODE)))
                (if (IGREATERP NEWCHARCODE 255)
                    then (FSETPC PC PTYPE FATSTRING.PTYPE)
                         (FSETPC PC PBINABLE NIL)
                         (FSETPC PC PBYTESPERCHAR 2)
                         (FSETPC PC PBYTELEN 2)
                  else (FSETPC PC PTYPE THINSTRING.PTYPE)
                       (FSETPC PC PBINABLE T)
                       (FSETPC PC PBYTESPERCHAR 1)
                       (FSETPC PC PBYTELEN 1)))
         (FSETPC PC PFPOS NIL)
         (FSETPC PC PEXTERNALFORMAT NIL)
         (FSETPC PC PINCCODEFN NIL)
         (CL:WHEN NEWCHARLOOKS
             (FSETPC PC PLOOKS (CL:IF (FONTP NEWCHARLOOKS)
                                   (\TEDIT.UNIQUIFY.CHARLOOKS (CHARLOOKS.FROM.FONT NEWCHARLOOKS)
                                          TEXTOBJ)
                                   NEWCHARLOOKS)))
         NEWCHARCODE])

(TEDIT.NTHCHARCODE
  [LAMBDA (TSTREAM N)                                        (* ; "Edited  8-Nov-2023 08:41 by rmk")
                                                             (* ; "Edited  4-Nov-2023 15:23 by rmk")

    (* ;; "Returns the Nth character of TSTREAM.  First character is N=1, NIL if out of bounds.")

    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          START-OF-PIECE)
         (DECLARE (SPECVARS START-OF-PIECE))
         (CL:WHEN (ILESSP N 0)
             (SETQ N (IPLUS (FGETTOBJ TEXTOBJ TEXTLEN)
                            N 1)))
         (CL:WHEN (AND (IGEQ N 1)
                       (ILEQ N (FGETTOBJ TEXTOBJ TEXTLEN)))
             (\TEDIT.PIECE.NTHCHARCODE TEXTOBJ (\CHTOPC N TEXTOBJ T)
                    (IDIFFERENCE (ADD1 N)
                           START-OF-PIECE)))])

(\TEDIT.PIECE.NTHCHARCODE
  [LAMBDA (TEXTOBJ PC OFFSET)                                (* ; "Edited  8-Dec-2023 22:54 by rmk")
                                                             (* ; "Edited  7-Dec-2023 15:57 by rmk")
                                                             (* ; "Edited  8-Nov-2023 08:43 by rmk")
                                                             (* ; "Edited  5-Nov-2023 08:17 by rmk")

    (* ;; "Returns the OFFSETth charcode of PC, NIL if OFFSET is out of bounds.  ")

    (CL:WHEN (AND (IGEQ OFFSET 1)
                  (ILEQ OFFSET (PLEN PC)))
        [LET ((TSTREAM (FGETTOBJ TEXTOBJ STREAMHINT)))
             (SELECTC (PTYPE PC)
                 (STRING.PTYPES (NTHCHARCODE (PCONTENTS PC)
                                       OFFSET))
                 (THINFILE.PTYPE 
                      (replace (STREAM BINABLE) of TSTREAM with NIL)
                                                             (* ; "Force a reinstall")
                      (SETFILEPTR (PCONTENTS PC)
                             (IPLUS (PFPOS PC)
                                    OFFSET -1))
                      (BIN (PCONTENTS PC)))
                 (FATFILE1.PTYPE 
                      (replace (STREAM BINABLE) of TSTREAM with NIL)
                                                             (* ; "Force a reinstall")
                      (SETFILEPTR (PCONTENTS PC)
                             (IPLUS (PFPOS PC)
                                    OFFSET -1))
                      (LOGOR (LLSH (PCHARSET PC)
                                   8)
                             (BIN (PCONTENTS PC))))
                 (FATFILE2.PTYPE 
                      (freplace (STREAM BINABLE) of TSTREAM with NIL)
                      (SETFILEPTR (PCONTENTS PC)
                             (IPLUS (PFPOS PC)
                                    (UNFOLD (SUB1 OFFSET)
                                           2)))
                      (LOGOR (UNFOLD (BIN (PCONTENTS PC))
                                    256)
                             (BIN (PCONTENTS PC))))
                 (OBJECT.PTYPE (PCONTENTS PC))
                 (SUBSTREAM.PTYPE                            (* ; "A substream stored as an object")
                      (HELP)
                      (BIN (IMAGEOBJPROP (PCONTENTS PC)
                                  'SUBSTREAM)))
                 (PROGN 
                        (* ;; "For pieces not listed because they require more work (UTF8?). Assumes the function updates COFFSET and that multi-byte characters are safe: don't cross buffer boundaries.")

                        (HELP)
                        (replace (STREAM BINABLE) of TSTREAM with NIL)
                        (APPLY* (FGETPC PC PINCCODEFN)
                               TSTREAM])])
)



(* ;; "Slashed functions. Private?")

(DEFINEQ

(\TEDIT1
  [LAMBDA (TSTREAM WINDOW UNSPAWNED)                         (* ; "Edited 22-Sep-2023 20:23 by rmk")
                                                             (* ; "Edited 13-Sep-2023 22:37 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:51 by mitani")

    (* ;; "Does the actual editing work, once TEDIT has OPENTEXTSTREAMed the thing to be edited.")

    (LET ((TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TSTREAM)))
         (\TEDIT.COMMAND.LOOP TEXTOBJ)                       (* ; "Run the editing engine")
         (CLOSEW WINDOW)                                     (* ; "Close the edit window")
         (\TEXTCLOSEF TSTREAM)                               (* ; "Close the underlying files")
         (replace (STREAM ACCESSBITS) of TSTREAM with BothBits)
                                                             (* ; 
                                                             "But leave the stream itself accessible")
         (CL:WHEN (GETTEXTPROP TEXTOBJ 'AFTERQUITFN)         (* ; 
                                               "Apply any post-window-close (and post-QUIT) function")
             (APPLY* (GETTEXTPROP TEXTOBJ 'AFTERQUITFN)
                    WINDOW TSTREAM))
         (CL:WHEN UNSPAWNED                                  (* ; 
                      "We're not a distinct process: Send back the edited text in some suitable form")
             (COND
                ((NEQ T (FGETTOBJ TEXTOBJ EDITFINISHEDFLG))
                 (PROG1 (FGETTOBJ TEXTOBJ EDITFINISHEDFLG)
                        (FSETTOBJ TEXTOBJ EDITFINISHEDFLG NIL)))
                ((STRINGP (FGETTOBJ TEXTOBJ TXTFILE))
                 (COERCETEXTOBJ TEXTOBJ 'STRINGP))
                (T TSTREAM)))])

(\TEDIT.INSERT
  [LAMBDA (INSERT SEL TEXTOBJ DONTSCROLL NOTINCREMENTAL)     (* ; "Edited 12-Nov-2023 12:28 by rmk")
                                                             (* ; "Edited 19-Oct-2023 11:05 by rmk")
                                                             (* ; "Edited 15-Oct-2023 16:01 by rmk")
                                                             (* ; "Edited 18-Sep-2023 12:48 by rmk")
                                                             (* ; "Edited  6-Jun-2023 15:23 by rmk")
                                                             (* ; "Edited  2-Jun-2023 00:12 by rmk")
                                                             (* ; "Edited 27-May-2023 10:45 by rmk")
                                                             (* ; "Edited 24-May-2023 14:23 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; "The selection runs from CH# to CHLIM-1. The insertion is before the selection if POINT=LEFT or after the selection (POINT=RIGHT).  This translates to before CH# or before CHLIM respectively.  ")

    (* ;; "Inserts INSERT at the location picked out by the selection, and then implements all the consequences for line and screen updates. Assumes that the caller got the selection and the text set up properly.")

    (* ;; "")

    (* ;; "Text can be a string or a single charcode (only on the call from \TEDIT.COMMAND.LOOP).  ")

    (* ;; 
   "TEDIT.INSERT passes DONTSCROLL and asserts NOTINCREMENTAL, other calls do incremental scrolling.")

    (* ;; "SELECTION-SET test may be unnecessary here, TEDIT.INSERT already checks, not sure about the 2 other calls.")

    (CL:UNLESS (\TEDIT.READONLY TEXTOBJ)
        [if (NOT (AND SEL (GETSEL SEL SET)))
            then (TEDIT.PROMPTPRINT TEXTOBJ "Please select a place for the insertion." T)
          else 
               (* ;; "Check for blue-pending-delete, and do it if it's there.")

               (CL:WHEN (FGETTOBJ TEXTOBJ BLUEPENDINGDELETE)
                   (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)   (* ; "Make it a normal selection again.")
                   (\TEDIT.DELETE TEXTOBJ SEL))
               (PROG ((CHNO (TEDIT.GETPOINT TEXTOBJ SEL))
                      (PANES (FGETTOBJ TEXTOBJ \WINDOW))
                      NCHARSADDED)
                     (CL:WHEN PANES
                         (TEDIT.NORMALIZECARET TEXTOBJ SEL)
                         (\SHOWSEL SEL NIL))                 (* ; "Turn off any old highlights")
                     (if (CHARCODEP INSERT)
                         then 
                              (* ;; "Meta,EOL causes a line break but not a paragraph break, in terms of formatting.  Original code converted to a formatted file on the first appearance of Meta,EOL, not clear why and so removed.")

                              (* ;; "FORM is not included in the EOL characters.  It breaks a line, but the first line after it doesn't necessarily have first-line margins.  Not sure about #EOL, and CR/LF maybe should have been converted by plaintext reader or \TEXTBOUT.")

                              (\INSERTCH INSERT CHNO TEXTOBJ (SELCHARQ INSERT
                                                                  ((EOL %#EOL CR LF) 
                                                                       T)
                                                                  NIL))
                              (SETQ NCHARSADDED 1)
                       else 
                            (* ;; 
           "It's maybe worth a scan here to avoid the heavier per-character complexity of \INSERTCH.")

                            (if [thereis CH instring INSERT
                                   suchthat (FMEMB CH (CHARCODE (EOL %#EOL Meta,EOL CR LF]
                                then (for CH instring INSERT as NCH# from CHNO
                                        do (CL:WHEN (EQ CH (CHARCODE Meta,EOL))
                                                  (\TEDIT.CONVERT.TO.FORMATTED TEXTOBJ))
                                           (\INSERTCH CH NCH# TEXTOBJ (SELCHARQ CH
                                                                           ((EOL %#EOL CR LF) 
                                                                                T)
                                                                           NIL)))
                              else (\INSERTCH INSERT CHNO TEXTOBJ))
                            (SETQ NCHARSADDED (NCHARS INSERT)))
                     (FSETTOBJ TEXTOBJ \DIRTY T)

                (* ;; "")

                (* ;; "The model (piece table) is now correct:  NCHARSADDED new characters have been been added in front of CHNO.  ")

                     (\TEDIT.UPDATE.LINES TEXTOBJ 'INSERTION CHNO NCHARSADDED DONTSCROLL)

                (* ;; " The insertion happened before the original CHNO, which is now shifted back by NCHARSADDED. The next insertion should also come in front of that (now displaced) character.")

                     (TEDIT.MAKEPOINT SEL (SUB1 (IPLUS CHNO NCHARSADDED))
                            'RIGHT
                            'NORMAL)
                     (CL:UNLESS DONTSCROLL (TEDIT.NORMALIZECARET TEXTOBJ SEL))
                     (\SHOWSEL SEL T)
                     (\COPYSEL SEL TEDIT.SELECTION)
                     (for PANE in PANES do (\TEDIT.SET.WINDOW.EXTENT TEXTOBJ PANE])])

(\TEDIT.REPLACE.SELPIECES
  [LAMBDA (SELPIECES TEXTOBJ SEL DONTDISPLAY)                (* ; "Edited 27-May-2023 11:22 by rmk")
                                                             (* ; "Edited 24-May-2023 22:38 by rmk")

    (* ;; "Replaces the selection SEL of TEXTOBJ with SELPIECES, either a string or SELPIECES.  Produces a :Replace history event.  TEXTOBJ will remember the inserted SELPIECES for undoing, our history event only has to keep track of the pieces it replaced. (and where they were).")

    (LET ((POINT (GETSEL SEL POINT))
          DELEVENT)                                          (* ; "Keep the SEL point in case ")
         (\SHOWSEL SEL NIL)
         (CL:WHEN (\TEDIT.DELETE TEXTOBJ SEL T)
             (SETQ DELEVENT (\TEDIT.LASTEVENT TEXTOBJ))
             (\TEDIT.INSERT.SELPIECES SELPIECES TEXTOBJ SEL DONTDISPLAY)

             (* ;; "SELPIECES is now in the TEXTOBJ; we don't want the insert event")

             (\TEDIT.POPEVENT TEXTOBJ)
             (SETTH DELEVENT THACTION :Replace)
             (SETTH DELEVENT THLEN (fetch (SELPIECES SPLEN) of SELPIECES))
             (SETTH DELEVENT THPOINT POINT)
             (\TEDIT.UPDATE.SEL SEL NIL (fetch (SELPIECES SPLEN) of SELPIECES)
                    POINT
                    'NORMAL)                                 (* ; "Maintain the original point.")

             (* ;; "Make sure SEL is off to guarantee turning on")

             (\SHOWSEL SEL NIL))
         (\SHOWSEL SEL T])

(\TEDIT.INSERT.SELPIECES
  [LAMBDA (SELPIECES TEXTOBJ SEL DONTDISPLAY)                (* ; "Edited 29-Aug-2023 10:35 by rmk")
                                                             (* ; "Edited 12-Aug-2023 11:57 by rmk")
                                                             (* ; "Edited 17-Jun-2023 17:08 by rmk")
                                                             (* ; "Edited  2-Jun-2023 12:02 by rmk")
                                                             (* ; "Edited 31-May-2023 09:56 by rmk")
                                                             (* ; "Edited 21-May-2023 23:57 by rmk")

    (* ;; "Insert SELPIECES into TEXTOBJ at SEL's caret. ")

    (* ;; 
 "\INSERTCH.HISTORY uses the first piece to decide whether it is in a consecutive run of insertions.")

    (CL:WHEN (AND SELPIECES (fetch (SELPIECES SPFIRST) of SELPIECES))
        [LET ((INSCH# (TEDIT.GETPOINT NIL SEL))
              (SPLEN (fetch (SELPIECES SPLEN) of SELPIECES)))
             (\INSERTSELPIECES SELPIECES TEXTOBJ INSCH#)
             (\TEDIT.UPDATE.LINES TEXTOBJ 'INSERTION INSCH# SPLEN DONTDISPLAY)
             (\TEDIT.ADJUST.SELS TEXTOBJ 'INSERTION INSCH# SPLEN)
             (\TEDIT.UPDATE.SEL (TEXTSEL TEXTOBJ)
                    INSCH# SPLEN 'RIGHT NIL T)
             (\TEDIT.HISTORYADD TEXTOBJ
                    (create TEDITHISTORYEVENT
                           THACTION _ :Insert
                           THLEN _ SPLEN
                           THCH# _ INSCH#
                           THFIRSTPIECE _ (fetch (SELPIECES SPFIRST) of SELPIECES])])

(\TEDIT.OBJECT.SHOWSEL
  [LAMBDA (TEXTOBJ SEL L1 ON PANE)                           (* ; "Edited 25-Nov-2023 15:48 by rmk")
                                                             (* ; "Edited 14-Oct-2023 12:12 by rmk")
                                                             (* ; "Edited  6-Jun-2023 15:28 by rmk")
                                                             (* ; "Edited  1-May-2023 14:36 by rmk")
                                                             (* ; "Edited  9-Apr-2023 15:37 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "We are hilighting (or dehilighting) a selection containing only a single image object if it appears in PANE  ")

    (CL:WHEN (AND PANE L1)
        [LET ((X0 (FGETSEL SEL X0))
              (Y (FGETLD L1 YBOT))
              (OBJ (FGETSEL SEL SELOBJ))
              (XOFFSET (DSPXOFFSET NIL PANE))
              (YOFFSET (DSPYOFFSET NIL PANE))
              (IMAGEFN (IMAGEOBJPROP (FGETSEL SEL SELOBJ)
                              'WHENOPERATEDONFN))
              (WWIDTH (WINDOWPROP PANE 'WIDTH))
              (WHEIGHT (WINDOWPROP PANE 'HEIGHT))
              IMAGEBOX)
             (CL:WHEN (INSIDE? (CREATEREGION 0 0 WWIDTH WHEIGHT)
                             X0 Y)                           (* ; 
                                                        "Only do this if the selection is on-screen.")
                 (SETQ IMAGEBOX (OR (IMAGEOBJPROP OBJ 'BOUNDBOX)
                                    (APPLY* (IMAGEOBJPROP OBJ 'IMAGEBOXFN)
                                           OBJ PANE)))
                 (CL:WHEN L1                                 (* ; "If no line, why are we here??")

                     (* ;; "We need to use the YBASE of the line rather than the YBOT, taking into account the object's descent.")

                     (SETQ Y (- (GETLD L1 YBASE)
                                (fetch (IMAGEBOX YDESC) of IMAGEBOX))))
                 (RESETLST
                     [RESETSAVE (DSPXOFFSET (IDIFFERENCE (IPLUS X0 XOFFSET)
                                                   (fetch XKERN of IMAGEBOX))
                                       PANE)
                            (LIST (FUNCTION DSPXOFFSET)
                                  XOFFSET
                                  (WINDOWPROP PANE 'DSP]
                     (RESETSAVE (DSPYOFFSET (IPLUS Y YOFFSET)
                                       PANE)
                            (LIST (FUNCTION DSPYOFFSET)
                                  YOFFSET PANE))
                     (RESETSAVE (DSPCLIPPINGREGION (create REGION
                                                          LEFT _ 0
                                                          BOTTOM _ 0
                                                          WIDTH _ (IMIN (GETSEL SEL DX)
                                                                        (IDIFFERENCE (FGETTOBJ 
                                                                                            TEXTOBJ 
                                                                                            WRIGHT)
                                                                               X0))
                                                          HEIGHT _ (fetch YSIZE of IMAGEBOX))
                                       PANE)
                            (LIST (FUNCTION DSPCLIPPINGREGION)
                                  (DSPCLIPPINGREGION NIL PANE)
                                  PANE))
                     [AND IMAGEFN (ERSETQ (APPLY* IMAGEFN OBJ PANE (COND
                                                                      (ON 'HIGHLIGHTED)
                                                                      (T 'UNHIGHLIGHTED))
                                                 SEL
                                                 (FGETTOBJ TEXTOBJ STREAMHINT]))])])

(\TEDIT.RESTARTFN
  [LAMBDA (TEXT WINDOW PROPS)                                (* ; "Edited 22-Sep-2023 20:31 by rmk")
                                                             (* ; "Edited 21-Aug-2022 08:13 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:51 by mitani")
                                                             (* ; "Restarts a TEdit session.")
    (replace (TEXTOBJ \WINDOW) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT) with NIL)
                                                             (* ; 
                                                         "Unattach the window, so we do a redisplay.")
    (LET [(ODIRTY (fetch (TEXTOBJ \DIRTY) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT]
         (SETQ TEXT (OPENTEXTSTREAM TEXT WINDOW NIL NIL PROPS))
         (SETTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                \DIRTY ODIRTY))                              (* ; 
                                                             "Now reconnect the world together again")
    (\TEDIT.COMMAND.LOOP (fetch (TEXTSTREAM TEXTOBJ) of TEXT))
                                                             (* ; "Run the editing engine")
    (CLOSEW WINDOW)                                          (* ; "Close the edit window")
    (\TEXTCLOSEF TEXT)                                       (* ; "Close the underlying files")
    (replace (STREAM ACCESSBITS) of TEXT with BothBits)      (* ; 
                                                             "But leave the stream itself accessible")
                                                             (* ; 
                                               "Apply any post-window-close (and post-QUIT) function")
    (CL:WHEN (GETTEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                    'AFTERQUITFN)
        (APPLY* (GETTEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                       'AFTERQUITFN)
               WINDOW TEXT))])

(\TEDIT.CHARDELETE
  [LAMBDA (TEXTOBJ SEL)                                      (* ; "Edited 24-May-2023 22:50 by rmk")
                                                             (* ; "Edited 22-May-2023 23:24 by rmk")
                                                             (* ; "Edited 19-Apr-93 10:50 by jds")

    (* ;; "This creates a selection that specifies a deletion of the single character just before SEL's caret, and then uses that to delete the character.  It assumes that SEL can be smashed.")

    (SETQ TEXTOBJ (TEXTOBJ TEXTOBJ))
    (PROG [FIRSTPIECE (CH# (SUB1 (TEDIT.GETPOINT TEXTOBJ SEL]
          (CL:WHEN (ILEQ CH# 0)                              (* ; 
                                                             "Can't backspace past start of document")
              (RETURN))

     (* ;; "Back up to the first visible character--that's the target, unless it is protected")

          (for PC PLOOKS START-OF-PIECE backpieces (SETQ FIRSTPIECE (\CHTOPC CH# TEXTOBJ T))
             declare (SPECVARS START-OF-PIECE) eachtime (SETQ PLOOKS (\TEDIT.APPLY.STYLES
                                                                      (PLOOKS PC)
                                                                      PC TEXTOBJ)) 
                                                             (* ; 
                                                             "Can't backspace over a protected piece")
             until (fetch (CHARLOOKS CLPROTECTED) of PLOOKS)
             do (if (ffetch (CHARLOOKS CLINVISIBLE) of PLOOKS)
                    then (add START-OF-PIECE (IMINUS (PLEN PC)))
                  else 
                       (* ;; "Start at the last character of the most recent visible piece")

                       (\TEDIT.UPDATE.SEL SEL (CL:IF (EQ PC FIRSTPIECE)
                                                  CH#
                                                  (SUB1 START-OF-PIECE))
                              1
                              'RIGHT)
                       (\TEDIT.DELETE TEXTOBJ SEL)
                       (RETURN])

(\TEDIT.COPYPIECE
  [LAMBDA (PC FROMOBJ TOOBJ UNPROTECT OPERATION PROMPTTEXTOBJ)
                                                             (* ; "Edited 15-Oct-2023 20:14 by rmk")
                                                             (* ; "Edited 30-Jul-2023 22:44 by rmk")
                                                             (* ; "Edited 21-Jun-2023 00:15 by rmk")
                                                             (* ; "Edited 19-May-2023 21:39 by rmk")
                                                             (* ; "Edited  7-May-2023 11:46 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "TEXTOBJ's prompt gets the message that a copy is not allowed, the FROMOBJ and TOOBJ provide the streams for the object's copy function.  The copy is disconnected from PC's original connections.")

    (* ;; "If UNPROTECT, the copies of protected pieces are unprotected")

    (* ;; "OPERATION keys which imageobject function to apply, if any")

    (PROG (NEWPC SRCPFILE (CROSSCOPY (NEQ FROMOBJ TOOBJ)))   (* ; 
                                                             "No matter what, we need a fresh copy.")
          (SETQ NEWPC
           (create PIECE using PC PNEW _ T PREVPIECE _ NIL NEXTPIECE _ NIL PTREENODE _ NIL))
          (SELECTC (PTYPE PC)
              (FILE.PTYPES (CL:WHEN CROSSCOPY

                               (* ;; "If this is a cross-document copy, and the text comes from a file, we must REALLY make a copy of the text, lest the source file be deleted. We want to preserve the external format, so that we can just copy the bytes.")

                               (SETQ SRCPFILE (PCONTENTS PC))
                               (CL:UNLESS (\GETSTREAM SRCPFILE 'INPUT T)
                                                             (* ; 
                                               "The source file was CLOSED -- reopen it, for our use")
                                   [SETQ SRCPFILE (OPENSTREAM SRCPFILE 'INPUT 'OLD
                                                         '((TYPE TEXT])
                               [FSETPC PC PCONTENTS (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW
                                                           `((:EXTERNAL-FORMAT ,(STREAMPROP SRCPFILE
                                                                                       
                                                                                     :EXTERNAL-FORMAT
                                                                                       ]
                               [COPYBYTES SRCPFILE (PCONTENTS PC)
                                      (PFPOS PC)
                                      (IPLUS (PFPOS PC)
                                             (ITIMES (PLEN PC)
                                                    (PBYTESPERCHAR PC]
                               (FSETPC PC PFPOS 0)))
              (STRING.PTYPES                                 (* ; 
                                                    "In case this is in the current insertion string")
                             (change (PCONTENTS NEWPC)
                                    (CONCAT DATUM)))
              (OBJECT.PTYPE                                  (* ; 
                              "No copy if object doesn't allow it.  Caller must be prepared for NIL?")
                            (FSETPC NEWPC PCONTENTS (OR (\TEDIT.APPLY.OBJFN (PCONTENTS NEWPC)
                                                               OPERATION FROMOBJ TOOBJ PROMPTTEXTOBJ)
                                                        (RETURN NIL))))
              NIL)

     (* ;; "If moving from one text to another, we have to register the looks.")

          (if (AND UNPROTECT (ffetch CLPROTECTED of (PLOOKS NEWPC)))
              then (FSETPC NEWPC PLOOKS (\TEDIT.UNIQUIFY.CHARLOOKS (create CHARLOOKS
                                                                      using (PLOOKS PC)
                                                                            CLPROTECTED _ NIL 
                                                                            CLSELHERE _ NIL)
                                               TOOBJ))
            elseif CROSSCOPY
              then (FSETPC NEWPC PLOOKS (\TEDIT.UNIQUIFY.CHARLOOKS (PLOOKS PC)
                                               TOOBJ))
                   (FSETPC NEWPC PPARALOOKS (\TEDIT.UNIQUIFY.PARALOOKS (PPARALOOKS PC)
                                                   TOOBJ)))
          (RETURN NEWPC])

(\TEDIT.APPLY.OBJFN
  [LAMBDA (OBJ OPERATION FROMTOBJ TOTOBJ PROMPTTEXTOBJ)      (* ; "Edited 15-Jul-2023 10:43 by rmk")
                                                             (* ; "Edited  9-Jul-2023 16:24 by rmk")
                                                             (* ; "Edited  6-Jun-2023 13:35 by rmk")
                                                             (* ; "Edited 30-May-2023 08:15 by rmk")
                                                             (* ; "Edited 19-May-2023 21:37 by rmk")
                                                             (* ; "Edited  7-May-2023 11:46 by rmk")

    (* ;; "As part of an OPERATION on an image object piece, we execute the appropriate object functions.  If any of them returns DONT, we print a message in the prompt window of  PROMPTTEXTOBJ  or  FROMTOBJ, and return NIL.  Otherwise, we return an object, either OBJ or a copy.")

    (CL:UNLESS TOTOBJ (SETQ TOTOBJ FROMTOBJ))
    (PROG [NEWOBJ (OBJFN (IMAGEOBJPROP OBJ (SELECTQ OPERATION
                                               (COPY 'COPYFN)
                                               (MOVE 'WHENMOVEDFN)
                                               (INSERT 'WHENINSERTEDFN)
                                               (DELETE       (* ; 
                                                          "This may want to apply to the first pane?")
                                                       'WHENDELETEDFN)
                                               NIL]
          (SETQ NEWOBJ (if OBJFN
                           then (APPLY* OBJFN OBJ (fetch (TEXTOBJ STREAMHINT) of FROMTOBJ)
                                       (CL:UNLESS (EQ OPERATION 'DELETE)
                                           (fetch (TEXTOBJ STREAMHINT) of TOTOBJ)))
                         elseif (EQ OPERATION 'COPY)
                           then (COPYALL OBJ)
                         else OBJ))
          (CL:WHEN (MEMB NEWOBJ '(DON'T DONT))
              (TEDIT.PROMPTPRINT (OR PROMPTTEXTOBJ FROMTOBJ)
                     (CONCAT (L-CASE OPERATION T)
                            " of this object not allowed.")
                     T)
              (RETURN))

     (* ;; "The WHENCOPIEDFN wants the display stream, not just the text stream.  ")

          (CL:WHEN [AND (EQ OPERATION 'COPY)
                        (SETQ OBJFN (IMAGEOBJPROP OBJ 'WHENCOPIEDFN))
                        (MEMB (APPLY* OBJFN OBJ (WINDOWPROP (CAR (fetch (TEXTOBJ \WINDOW)
                                                                    of TOTOBJ))
                                                       'DSP)
                                     (fetch (TEXTOBJ STREAMHINT) of FROMTOBJ)
                                     (fetch (TEXTOBJ STREAMHINT) of TOTOBJ))
                              '(DON'T DONT]
                 (RETURN NIL))
          (RETURN (OR (IMAGEOBJP NEWOBJ)
                      OBJ])

(\TEDIT.DELETE
  [LAMBDA (TEXTOBJ SEL DONTDISPLAY)                          (* ; "Edited 15-Dec-2023 08:38 by rmk")
                                                             (* ; "Edited 12-Nov-2023 12:14 by rmk")
                                                             (* ; "Edited 29-Oct-2023 00:19 by rmk")
                                                             (* ; "Edited  6-Jun-2023 12:48 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; "Delete the DCH characters selected by SEL. Unlike insert, the initial position of the caret doesn't matter.")

    (* ;; "On return, the pieces, lines, and selection are complete and correct, and the display is correct unless DONTDISPLAY.")

    (CL:UNLESS (\TEDIT.READONLY TEXTOBJ)
        (CL:WHEN (AND (GETSEL SEL SET)
                      (IGEQ (FGETSEL SEL DCH)
                            1))
            (CL:UNLESS DONTDISPLAY (TEDIT.NORMALIZECARET TEXTOBJ SEL))
                                                             (* ; 
                                                    "Move the deletion point on-screen in every pane")
            (\TEDIT.SHOWSELS TEXTOBJ NIL)                    (* ; 
                                                             "Turn off the selection's highlighting")
            (LET ((CHNO (FGETSEL SEL CH#)))                  (* ; 
                                               "Grap the CH# before acting, to update the selection.")
                 (\TEDIT.DELETE.SELPIECES TEXTOBJ SEL)       (* ; "Delete the SELected characters")

                 (* ;; "The current lines are not aligned with the text/pieces.")

                 (\TEDIT.UPDATE.LINES TEXTOBJ 'DELETION SEL NIL DONTDISPLAY)

                 (* ;; 
       "Adjust the other selections to point to the right of the character just before the deletion ")

                 (\TEDIT.ADJUST.SELS TEXTOBJ 'DELETION SEL)
                 (TEDIT.MAKEPOINT SEL (SUB1 CHNO)
                        'RIGHT)
                 (FSETTOBJ TEXTOBJ CARETLOOKS (\TEDIT.GET.INSERT.CHARLOOKS TEXTOBJ SEL))
                 (CL:UNLESS DONTDISPLAY (\SHOWSEL SEL T))
                 T)))])

(\TEDIT.DIFFUSE.PARALOOKS
  [LAMBDA (PRIORPC SUCCEEDINGPC)                             (* ; "Edited  1-Jul-2023 19:24 by rmk")
                                                             (* ; "Edited 11-Apr-2023 00:08 by rmk")
                                                             (* ; "Edited 22-Oct-2022 22:22 by rmk")
                                                             (* ; "Edited  5-Sep-2022 14:32 by rmk")
                                                             (* ; "Edited 23-Aug-2022 08:40 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:48 by mitani")

    (* ;; "Given a discontinuity in paragraph looks, caused by an insertion or by a deletion: Diffuse the existing paragraph looks across the discontinuity, so that all the pieces in a single paragraph have consistent paragraph looks.  Give preference to diffusion toward the END of the document.  This means that if you delete an EOL between paragraphs, the second para is absorbed into the first.")

    (* ;; "PRIORPC and SUCCEEDINGPC are the pieces that bound the area of potential discontinuity: the change will occur at one boundary or the other.")

    (CL:WHEN (AND PRIORPC (NOT (PPARALAST PRIORPC)))         (* ; 
              "The discontinuity is inside a paragraph.  Must copy para looks forward into the text.")
        (for PC (PPLOOKS _ (PPARALOOKS PRIORPC)) inpieces (NEXTPIECE PRIORPC)
           until (PPARALAST PC) do                           (* ; 
                                "Copy para looks info in from the left, up the the first para break.")
                                   (replace (PIECE PPARALOOKS) of PC with PPLOOKS)))
                                                             (* ; 
                                                        "If this piece ends a paragraph, we're done.")
    (CL:WHEN SUCCEEDINGPC                                    (* ; 
                                   "Copy para looks  back from the right, up to the first para break")
        (for PC (PPLOOKS _ (PPARALOOKS SUCCEEDINGPC)) backpieces (PREVPIECE SUCCEEDINGPC)
           until (OR (EQ PC PRIORPC)
                     (PPARALAST PC)) do (replace (PIECE PPARALOOKS) of PC with PPLOOKS)))])

(\TEDIT.FOREIGN.COPY?
  [LAMBDA (SEL)                                              (* ; "Edited 10-Dec-2023 21:51 by rmk")
                                                             (* ; "Edited 22-Sep-2023 19:55 by rmk")
                                                             (* ; "Edited  6-Jun-2023 15:29 by rmk")
                                                             (* ; "Edited 18-Apr-2023 23:37 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:44 by rmk")
                                                             (* ; "Edited  7-Sep-2022 23:36 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 21-Jan-93 11:46 by jds")

    (* ;; "If the current process's window isn't a TEdit window, do a 'Copy' by BKSYSBUFing the selected text.  Then turn off all the various indicators.")

    (\DTEST SEL 'SELECTION)
    (LET ((SEL.TEXTOBJ (\DTEST (FGETSEL SEL SELTEXTOBJ)
                              'TEXTOBJ))
          (PROCW (PROCESSPROP (TTY.PROCESS)
                        'WINDOW))
          DEST.TEDIT? DEST.TEXTOBJ)
         [SETQ DEST.TEDIT? (AND PROCW (SETQ DEST.TEXTOBJ (WINDOWPROP PROCW 'TEXTOBJ))
                                (NOT (GETTEXTPROP DEST.TEXTOBJ 'COPYBYBKSYSBUF]
                                                             (* ; "Treat the destination specially if (1) the recipient process has a window, and (2) it's a TEdit window, and (3) the TEdit isn't declining special treatment by having COPYBYBKSYSBUF set in its props.")
         (COND
            ((OR (ZEROP (FGETSEL SEL DCH))
                 (IGREATERP (FGETSEL SEL CH#)
                        (FGETTOBJ SEL.TEXTOBJ TEXTLEN)))     (* ; "Nothing to copy")
             (SETQ TEDIT.COPY.PENDING NIL))
            ((OR (NOT DEST.TEDIT?)
                 (AND PROCW DEST.TEXTOBJ (NEQ SEL.TEXTOBJ DEST.TEXTOBJ)
                      (GETTOBJ DEST.TEXTOBJ EDITOPACTIVE)))  (* ; 
                                                   "OK -- receiver isn't TEdit.  Do it the hard way.")
             [COND
                [(AND (WINDOWPROP [OR PROCW (WFROMDS (PROCESS.TTY (TTY.PROCESS]
                             'COPYINSERTFN)
                      (PROGN                                 (* ; 
                                                         "This is the exit for looked-string objects")
                             (OBJECTOUTOFTEDIT SEL.TEXTOBJ SEL]
                (T                                           (* ; 
                         "Old tedit method, run if OBJECTOUTOFTEDIT is NILL (ie., not installed yet)")

                   (* ;; "Still used because COPYINSERT does (PRIN2 BKSYSBUF) if there's no insertfn, which creates undesired string quotes.")

                   (for I CH (TSTR _ (FGETTOBJ SEL.TEXTOBJ STREAMHINT)) from 1
                      to (FGETSEL SEL DCH) first (SETFILEPTR TSTR (SUB1 (FGETSEL SEL CH# SEL))) 
                                                             (* ; 
                                                             "Go to the first character to be copied")
                      do 
                         (* ;; "BKSYSBUF the individual characters, COPYINSERT the image objects.")

                         (SETQ CH (BIN TSTR))
                         (CL:IF (IMAGEOBJP CH)
                             (COPYINSERT CH)
                             (BKSYSBUF (CHARACTER CH)))]
             (\SHOWSEL SEL NIL)                              (* ; 
                                                             "Then reset the copy-pending flags.")
             (SETQ TEDIT.COPY.PENDING NIL])

(\TEDIT.QUIT
  [LAMBDA (W NOFORCE)                                        (* ; "Edited 22-Sep-2023 20:21 by rmk")
                                                             (* ; "Edited 20-Sep-2023 23:24 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "Called by the default TEDIT.DEFAULT.MENUFN to perform the QUIT command.")

    (PROG* ((TEXTOBJ (\DTEST (WINDOWPROP W 'TEXTOBJ)
                            'TEXTOBJ))
            (QUITFNS (GETTEXTPROP TEXTOBJ 'QUITFN))
            QUITFLG RESP)
           [for QUITFN inside QUITFNS until (OR (EQ QUITFLG 'DON'T)
                                                (EQ QUITFLG T))
              do (SETQ QUITFLG (COND
                                  ((EQ QUITFN T))
                                  (QUITFN (APPLY* QUITFN W (FGETTOBJ TEXTOBJ STREAMHINT)
                                                 TEXTOBJ
                                                 (FGETTOBJ TEXTOBJ EDITPROPS]
           (COND
              ((EQ QUITFLG 'DON'T)

               (* ;; "The user supplied a QUITFN, and it returned 'DON'T' , so just ignore all this Fooferaw and keep editing.")

               (RETURN))
              [(AND (FGETTOBJ TEXTOBJ \DIRTY)
                    (NOT (FGETTOBJ TEXTOBJ MENUFLG))
                    (NEQ QUITFNS T)
                    (NEQ QUITFLG T))                         (* ; 
           "If this document has changed, check with the user to make sure he really wants to do it.")
               (FSETTOBJ TEXTOBJ EDITFINISHEDFLG (MOUSECONFIRM "Not saved yet; LEFT to Quit anyway."
                                                        T (FGETTOBJ TEXTOBJ PROMPTWINDOW]
              (T                                             (* ; 
                                      "Go ahead and quit the next time we see the main command loop.")
                 (FSETTOBJ TEXTOBJ EDITFINISHEDFLG T)))
           (CL:WHEN [AND (FGETTOBJ TEXTOBJ \WINDOW)
                         (NOT NOFORCE)
                         (NEQ (\TEDIT.PRIMARYW TEXTOBJ)
                              (PROCESSPROP (TTY.PROCESS)
                                     'WINDOW]
               (TTY.PROCESS (WINDOWPROP (\TEDIT.PRIMARYW TEXTOBJ)
                                   'PROCESS)))
           (RETURN (FGETTOBJ TEXTOBJ EDITFINISHEDFLG])

(\TEDIT.WORDDELETE
  [LAMBDA (TEXTOBJ SEL)                                      (* ; "Edited 23-May-2023 16:37 by rmk")
                                                             (* ; "Edited 22-May-2023 10:52 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; "THIS FUNCTION IS FRAUGHT WITH FENCEPOST PROBLEM POTENTIAL, AND THE WHILE vs FOR LOGIC IS CONVOLUTED.  CAUTION, CAUTION.")

    (PROG ((TSTREAM (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ))
           (READSA (fetch READSA of (OR (fetch (TEXTOBJ TXTWTBL) of TEXTOBJ)
                                        TEDIT.WORDBOUND.READTABLE)))
           (INSCH# (SUB1 (TEDIT.GETPOINT SEL)))
           CH CHNO)

     (* ;; "INSCH# is the final (i.e., highest-numbered) character to be deleted.")

          (CL:UNLESS (IGREATERP INSCH# 0)                    (* ; "Don't back up at start of file.")
              (RETURN))
          (\TEXTSETFILEPTR TSTREAM (SUB1 INSCH#))
          (SETQ CH (BIN TSTREAM))

     (* ;; "Skip over any preceding separator characters")

          (for old CHNO from INSCH# to 1 by -1
             while [AND (SELECTC (COND
                                    ((CHARCODEP CH)
                                     (\SYNCODE READSA CH))
                                    (T                       (* ; "It's an object--stop")
                                       TEXT.TTC))
                            (TEXT.TTC NIL)
                            T)
                        (NOT (fetch CLPROTECTED of (PLOOKS (fetch (TEXTSTREAM PIECE) of TSTREAM]
             do (SETQ CH (\BACKBIN TSTREAM)))

     (* ;; "CH is the first non-separator character, and CHNO is the character number of the character BEFORE that one. Skip over the next group of non-separators (= a 'word')")

          (for old CHNO from CHNO to 1 by -1
             while [AND (SELECTC (COND
                                    ((CHARCODEP CH)
                                     (\SYNCODE READSA CH))
                                    (T                       (* ; "It's an object!")
                                       TEXT.TTC))
                            (TEXT.TTC T)
                            NIL)
                        (NOT (fetch CLPROTECTED of (PLOOKS (fetch (TEXTSTREAM PIECE) of TSTREAM]
             do (SETQ CH (\BACKBIN TSTREAM)))

     (* ;; "CH is now the first separator character before the word, and CHNO is the character number of the character BEFORE it, or 0 if you hit the front of the document.")

          (\SHOWSEL SEL NIL)

     (* ;; "If not at the front of the document, the first character to delete is 1 later than the separator we hit, which is 2 higher than CHNO is now")

          (\TEDIT.UPDATE.SEL SEL (CL:IF (ILESSP CHNO 1)
                                     1
                                     (IPLUS 2 CHNO))
                 (SUB1 (IDIFFERENCE INSCH# CHNO)))
          (\TEDIT.DELETE TEXTOBJ SEL])
)
(DEFINEQ

(\SELPIECES.COPY
  [LAMBDA (SELPIECES OPERATION TOTEXTOBJ FROMTEXTOBJ)        (* ; "Edited 11-Dec-2023 08:16 by rmk")
                                                             (* ; "Edited  2-Jun-2023 11:21 by rmk")
                                                             (* ; "Edited 26-May-2023 00:28 by rmk")
                                                             (* ; "Edited 21-May-2023 23:01 by rmk")
                                                             (* ; "Edited  7-May-2023 17:26 by rmk")

    (* ;; "Produces a copy of SELPIECES where the pieces from first to last are chained-together copies of the original pieces so that later inpieces can run from first to last.  OPERATION determines which imageobject functions will be invoked, if any.")

    (* ;; "FROMTEXTOBJ is optional.  Providing a FROMTEXTOBJ that is different from TOTEXTOBJ is a signal that this is a cross-copy needing to create private copies of strings and files.  ")

    (CL:UNLESS FROMTEXTOBJ (SETQ FROMTEXTOBJ TOTEXTOBJ))
    (for PC NPC PREVPC NEWFIRSTPIECE inselpieces SELPIECES
       do (SETQ NPC (\TEDIT.COPYPIECE PC FROMTEXTOBJ TOTEXTOBJ NIL OPERATION))
          (CL:UNLESS NPC                                     (* ; "Was an object-copy disallowed?")
              (RETURN)) 

          (* ;; "Linke the new pieces together")

          (if PREVPC
              then (replace (PIECE NEXTPIECE) of PREVPC with NPC)
            else (SETQ NEWFIRSTPIECE NPC))
          (replace (PIECE PREVPIECE) of NPC with PREVPC)
          (SETQ PREVPC NPC) finally (RETURN (create SELPIECES
                                               using SELPIECES SPFIRST _ NEWFIRSTPIECE SPLAST _ 
                                                     PREVPC])

(\SELPIECES.CONCAT
  [LAMBDA (SP1 SP2)                                          (* ; "Edited 11-Dec-2023 23:03 by rmk")
                                                             (* ; "Edited  3-Jun-2023 17:08 by rmk")
                                                             (* ; "Edited  2-Jun-2023 12:09 by rmk")
                                                             (* ; "Edited 21-May-2023 22:20 by rmk")

    (* ;; "The returned SELPIECE concatenates the pieces in SP1 and SP2.  Probably only sensible if those pieces are consecutive with respect to some textobj or some operation. ")

    (* ;; "NOTE:  This modifies the actual pieces to connect them together.  Caller is responsible for insuring that this is safe.")

    (if (NULL (fetch (SELPIECES SPFIRST) of SP1))
        then SP2
      elseif (NULL (fetch (SELPIECES SPFIRST) of SP2))
        then SP1
      elseif (EQ (ffetch (SELPIECES SPTEXTOBJ) of SP1)
                 (ffetch (SELPIECES SPTEXTOBJ) of SP2))
        then (freplace (PIECE NEXTPIECE) of (ffetch (SELPIECES SPLAST) of SP1)
                with (ffetch (SELPIECES SPFIRST) of SP2))
             (freplace (PIECE PREVPIECE) of (ffetch (SELPIECES SPFIRST) of SP2)
                with (ffetch (SELPIECES SPLAST) of SP1))
             (create SELPIECES
                    SPFIRST _ (ffetch (SELPIECES SPFIRST) of SP1)
                    SPLAST _ (ffetch (SELPIECES SPLAST) of SP2)
                    SPLEN _ (IPLUS (ffetch (SELPIECES SPLEN) of SP1)
                                   (ffetch (SELPIECES SPLEN) of SP2))
                    SPTEXTOBJ _ (ffetch (SELPIECES SPTEXTOBJ) of SP2)
                    SPFIRSTCHAR _ (ffetch (SELPIECES SPFIRSTCHAR) of SP1)
                    SPLASTCHAR _ (ffetch (SELPIECES SPLASTCHAR) of SP2))
      else (SHOULDNT "CONCATENATING PIECES FROM DIFFERENT TEXTOBJS"])

(\SELPIECES.CHARTRANSFORM
  [LAMBDA (SELPIECES CHARFN OBJECTSTOO TEXTOBJ)              (* ; "Edited 24-May-2023 13:04 by rmk")

    (* ;; "This transforms the characters in SELPIECES according to CHARFN, skipping image objects unless OBJECTSTOO.  The purpose is to allow for character transformations (e.g. case switching) without depending on strings (TEDIT.SELAS.STRING) and character insertion (\INSERTCH) as intermediaries.  Strings can't hold image objects.")

    (* ;; 
    "This smashes the pieces, use crosscopy \SELPIECES.COPY first to protect the document pieces.")

    (* ;; 
    "If optional TEXTOBJ is provided (unlikely), it should be the original source of the SELPIECES.")

    (for PC PCONTENTS inselpieces SELPIECES
       do (SETQ PCONTENTS (PCONTENTS PC))
          (SELECTC (PTYPE PC)
              (STRING.PTYPES (for I CH (STR _ PCONTENTS) from 1 while (SETQ CH (NTHCHARCODE STR I))
                                do (RPLCHARCODE STR I (APPLY* CHARFN CH TEXTOBJ))))
              (FILE.PTYPES (SETFILEPTR PCONTENTS (PFPOS PC))
                           [if (AND NIL (\IOMODEP PCONTENTS 'BOTH T))
                               then 

                                 (* ;; "Not clear whether \TEDIT.COPYPIECeS has set things up to allow us to actually smash the underlying stream. So for now, copy into string space.")

                                    (for I from 1 to (PLEN PC)
                                       do (\OUTCHAR PCONTENTS (APPLY* CHARFN (\PEEKCCODE PCONTENTS T)
                                                                     TEXTOBJ)))
                             else 

                                 (* ;; "This assumes that no file piece has a PLEN greater than \MaxArrayLen characters. We rely on the piece-table reader and writer to guarantee this.  If not, ALLOCSTRING will cause an error.")

                                  (LET ((FATP (NEQ THINFILE.PTYPE (PTYPE PC)))
                                        STR)
                                       (SETQ STR (ALLOCSTRING (PLEN PC)
                                                        NIL NIL FATP))
                                       (for I from 1 to (PLEN PC)
                                          do (RPLCHARCODE STR I (APPLY* CHARFN (\INCCODE PCONTENTS)
                                                                       TEXTOBJ)))
                                       (replace (PIECE PCONTENTS) of PC with STR)
                                       (replace (PIECE PTYPE) of PC with (CL:IF FATP
                                                                             FATSTRING.PTYPE
                                                                             THINSTRING.PTYPE)])
              (OBJECT.PTYPE (CL:WHEN OBJECTSTOO
                                (replace (PIECE PCONTENTS) of PC with (APPLY* CHARFN PCONTENTS 
                                                                             TEXTOBJ))))
              (SUBSTREAM.PTYPE 
                   (HELP "SUBSTREAM PIECE ?"))
              (SHOULDNT)))
    SELPIECES])

(\SELPIECES.FROM.STRING
  [LAMBDA (STRING TEXTOBJ CHECKFOREOL CHARLOOKS PARALOOKS)   (* ; "Edited 11-Dec-2023 08:12 by rmk")
                                                             (* ; "Edited 25-Nov-2023 15:22 by rmk")
                                                             (* ; "Edited 11-Nov-2023 15:49 by rmk")
                                                             (* ; "Edited  2-Jun-2023 11:59 by rmk")
                                                             (* ; "Edited 24-May-2023 15:26 by rmk")

    (* ;; "Creates SELPIECES with pieces representing STRING.  If CHECKFOREOL and the string contains a paragraph-breaking character, then the string will be coded as a sequence of pieces with EOL-terminated pieces (but not necessarily the last piece) marked as PPARALAST. ")

    (\DTEST TEXTOBJ 'TEXTOBJ)
    (CL:UNLESS CHARLOOKS
        (SETQ CHARLOOKS (FGETTOBJ TEXTOBJ DEFAULTCHARLOOKS)))
    (CL:UNLESS PARALOOKS
        (SETQ PARALOOKS (FGETTOBJ TEXTOBJ FMTSPEC)))
    (CL:WHEN (AND TEXTOBJ (FGETTOBJ TEXTOBJ FORMATTEDP))
           (SETQ CHECKFOREOL T))
    (LET (PTYPE FIRSTPIECE EOLPOS BYTESPERCHAR)
         (SETQ STRING (CONCAT STRING))
         (SETQ PTYPE (if (fetch (STRINGP FATSTRINGP) of STRING)
                         then (SETQ BYTESPERCHAR 2)
                              FATSTRING.PTYPE
                       else (SETQ BYTESPERCHAR 1)
                            THINSTRING.PTYPE))
         (if (AND CHECKFOREOL (SETQ EOLPOS (STRPOS (CONSTANT (CHARACTER (CHARCODE EOL)))
                                                  STRING)))
             then 
                  (* ;; "Break it up into PPARALAST pieces")

                  [bind PC STR PREVPC (NCHARS _ (NCHARS STRING))
                        (LASTEOLPOS _ 0)
                     collect (SETQ STR (SUBSTRING STRING (ADD1 LASTEOLPOS)
                                              (SETQ LASTEOLPOS EOLPOS)))
                           (PROG1 
                               (SETQ PC
                                (create PIECE
                                       PTYPE _ PTYPE
                                       PCONTENTS _ STR
                                       PLEN _ (NCHARS STR)
                                       PBYTELEN _ (ITIMES (NCHARS STR)
                                                         BYTESPERCHAR)
                                       PLOOKS _ CHARLOOKS
                                       PPARALOOKS _ PARALOOKS
                                       PPARALAST _ T
                                       PREVPIECE _ PC))
                               (CL:WHEN PREVPC (FSETPC PREVPC NEXTPIECE PC))
                               (SETQ PREVPC PC)
                               (SETQ EOLPOS (OR (STRPOS (CONSTANT (CHARACTER (CHARCODE EOL)))
                                                       STRING
                                                       (ADD1 LASTEOLPOS))
                                                NCHARS))) repeatuntil (IGEQ LASTEOLPOS NCHARS)
                     finally (CL:UNLESS (EQ (CHARCODE EOL)
                                            (NTHCHARCODE STR -1))
                                                             (* ; "Last piece didn't end in EOL")
                                 (FSETPC PC PPARALAST NIL))
                           (RETURN (create SELPIECES
                                          SPFIRST _ (CAR $$VAL)
                                          SPLAST _ PC
                                          SPLEN _ NCHARS
                                          SPTEXTOBJ _ TEXTOBJ
                                          SPFIRSTCHAR _ 1
                                          SPLASTCHAR _ (NCHARS STRING]
           else (SETQ FIRSTPIECE (create PIECE
                                        PTYPE _ PTYPE
                                        PCONTENTS _ STRING
                                        PLEN _ (NCHARS STRING)
                                        PBYTESPERCHAR _ (ITIMES (NCHARS STRING)
                                                               BYTESPERCHAR)
                                        PLOOKS _ CHARLOOKS
                                        PPARALOOKS _ PARALOOKS))
                (create SELPIECES
                       SPFIRST _ FIRSTPIECE
                       SPLAST _ FIRSTPIECE
                       SPLEN _ (NCHARS STRING)
                       SPTEXTOBJ _ TEXTOBJ
                       SPFIRSTCHAR _ 1
                       SPLASTCHAR _ (NCHARS STRING])

(\SELPIECES.TO.STRING
  [LAMBDA (SELPIECES OBJECTCHARCODE)                         (* ; "Edited  2-Jun-2023 12:07 by rmk")
                                                             (* ; "Edited 24-May-2023 20:00 by rmk")

    (* ;; "Produce a string representing the contents of SELPIECES.  Optional OBJECTCHARCODE is a code to be used to represent an image object.  If it is a TEXTOBJ with an OBJECTBYTE property, then that code is used.  Otherwise, arbitrarily the escape character.")

    (* ;; "Would it be better to take the chracters from the PREPRINTFN, if present?")

    (for PC PCONTENTS (TEXTOBJ _ (fetch (SELPIECES SPTEXTOBJ) of SELPIECES))
         (I _ 1)
         (RESULT _ (ALLOCSTRING (fetch (SELPIECES SPLEN) of SELPIECES))) inselpieces SELPIECES
       do (SETQ PCONTENTS (PCONTENTS PC))
          (SELECTC (PTYPE PC)
              (STRING.PTYPES (RPLSTRING RESULT I PCONTENTS)
                             (add I (PLEN PC)))
              (FILE.PTYPES (SETFILEPTR PCONTENTS (PFPOS PC))
                           (for J from 1 to (PLEN PC) do (RPLCHARCODE RESULT I (\INCCODE PCONTENTS))
                                                         (add I 1)))
              (OBJECT.PTYPE                                  (* ; 
                               "Could run the PREPRINTFN ?  But we then have to let the string grow.")
                            (RPLCHARCODE RESULT I (OR (SMALLP OBJECTCHARCODE)
                                                      [AND (SETQ OBJECTCHARCODE (GETTEXTPROP
                                                                                 TEXTOBJ
                                                                                 'OBJECTBYTE]
                                                      (CHARCODE ESCAPE)))
                            (add I 1))
              (SUBSTREAM.PTYPE 
                   (HELP "SUBSTREAM PIECE?"))
              (SHOULDNT)) finally (RETURN RESULT])
)
(DEFINEQ

(\TEDIT.PARAPIECES
  [LAMBDA (SEL/FIRSTCHAR LASTCHAR TEXTOBJ)                   (* ; "Edited 11-Dec-2023 23:03 by rmk")

    (* ;; "Produces SELPIECES that starts at the first piece of the paragraph containing FIRSTCHAR and runs to the last piece of the paragraph containing LASTCHAR.  Since paragraphs are split anyway, this does not require further splitting.")

    (LET (FIRSTCHAR FIRST LAST START-OF-PIECE)
         (DECLARE (SPECVARS START-OF-PIECE))
         (if (type? SELECTION SEL/FIRSTCHAR)
             then (SETQ TEXTOBJ (FGETSEL SEL/FIRSTCHAR SELTEXTOBJ))
                  (SETQ FIRSTCHAR (FGETSEL SEL/FIRSTCHAR CH#))
                  [SETQ LASTCHAR (CL:IF (EQ 0 (FGETSEL SEL/FIRSTCHAR DCH))
                                     FIRSTCHAR
                                     (SUB1 (FGETSEL SEL/FIRSTCHAR CHLIM)))]
           elseif (type? TEDITHISTORYEVENT SEL/FIRSTCHAR)
             then (SETQ FIRSTCHAR (GETTH SEL/FIRSTCHAR THCH#))
                  [SETQ LASTCHAR (SUB1 (IPLUS FIRSTCHAR (GETTH SEL/FIRSTCHAR THLEN]
           else (SETQ FIRSTCHAR SEL/FIRSTCHAR)
                (CL:UNLESS LASTCHAR (SETQ LASTCHAR FIRSTCHAR)))
         (SETQ FIRST (\TEDIT.PARA.FIRST TEXTOBJ FIRSTCHAR))
         (SETQ LAST (\TEDIT.PARA.LAST TEXTOBJ LASTCHAR))
         (create SELPIECES
                SPFIRST _ (CDR FIRST)
                SPLAST _ (CDR LAST)
                SPLEN _ (ADD1 (IDIFFERENCE (CAR LAST)
                                     (CAR FIRST)))
                SPTEXTOBJ _ TEXTOBJ
                SPFIRSTCHAR _ (CAR FIRST)
                SPLASTCHAR _ (CAR LAST])

(\TEDIT.PARA.FIRST
  [LAMBDA (TEXTOBJ CHNO)                                     (* ; "Edited 11-Dec-2023 21:52 by rmk")

    (* ;; "Returns (FIRSTCHAR . FIRSTPC) of the paragraph containing CHNO.  FIRSTCHAR is the firstcharacter of FIRSTPC. ")

    (if (ZEROP (TEXTLEN TEXTOBJ))
        then (CONS 0)
      else (LET (CHPIECE START-OF-PIECE START)
                (DECLARE (SPECVARS START-OF-PIECE))
                (if (type? SELPIECES CHNO)
                    then (SETQ CHPIECE (fetch (SELPIECES SPFIRST) of CHNO))
                         (SETQ START (fetch (SELPIECES SPFIRSTCHAR) of CHNO))
                  elseif (type? PIECE CHNO)
                    then (SETQ START (\PCTOCH CHNO TEXTOBJ))
                         (SETQ CHPIECE CHNO)
                  else [SETQ CHNO (CL:IF (type? SELECTION CHNO)
                                      (FGETSEL CHNO CH#)
                                      (IMAX 0 (IMIN CHNO (TEXTLEN TEXTOBJ))))]
                       (SETQ CHPIECE (\CHTOPC CHNO TEXTOBJ T))
                       (SETQ START START-OF-PIECE))

                (* ;; 
                "Start one before CHPIECE, its PARALAST doesn't matter. Assume CHPIECE is visible")

                (for PC (NEXT _ CHPIECE)
                     (PLENTOT _ 0) backpieces (AND CHPIECE (PREVPIECE CHPIECE))
                   when (VISIBLEPIECEP PC) until (PPARALAST PC) do (add PLENTOT (PLEN PC))
                                                                   (SETQ NEXT PC)
                   finally 

                         (* ;; "We overshot on PC, NEXT is the winner.")

                         (RETURN (CONS (IDIFFERENCE START PLENTOT)
                                       NEXT])

(\TEDIT.PARA.LAST
  [LAMBDA (TEXTOBJ CHNO)                                     (* ; "Edited 11-Dec-2023 23:02 by rmk")

    (* ;; "Returns the character number of the last character of the paragraph containing CHNO.  If CHNO is SELPIECES or SELECTION, CHNO is taken as its last character.")

    (if (ZEROP (TEXTLEN TEXTOBJ))
        then                                                 (* ; "Empty document")
             0
      else (LET (CHPIECE START-OF-PIECE END)
                (DECLARE (SPECVARS START-OF-PIECE))
                (if (type? SELPIECES CHNO)
                    then (SETQ CHPIECE (fetch (SELPIECES SPLAST) of CHNO))
                         [SETQ END (SUB1 (IDIFFERENCE (fetch (SELPIECES SPLASTCHAR) of CHNO)
                                                (PLEN CHPIECE]
                  elseif (type? PIECE CHNO)
                    then (SETQ CHPIECE CHNO)
                         (SETQ END (\PCTOCH CHNO TEXTOBJ))
                  else (SETQ CHPIECE (\CHTOPC (CL:IF (type? SELECTION CHNO)
                                                  (SUB1 (FGETSEL CHNO CHLIM))
                                                  CHNO)
                                            TEXTOBJ T))
                       (SETQ END START-OF-PIECE))            (* ; "Find the paragraph's last char")

                (* ;; "END is now the first character of the piece containing CHNO")

                (for PC (PLENTOT _ 0) inpieces CHPIECE when (VISIBLEPIECEP PC)
                   do (add PLENTOT (PLEN PC)) repeatuntil (PPARALAST PC)
                   finally (RETURN (CONS (IPLUS END PLENTOT -1)
                                         PC])
)

(MOVD? 'NILL 'OBJECTOUTOFTEDIT)



(* ; "HOOK for looked-string copy, etc. Used in \TEDIT.FOREIGN.COPY?.")




(* ; "Object-oriented editing")

(DEFINEQ

(TEDIT.INSERT.OBJECT
  [LAMBDA (OBJECT TSTREAM CH#)                               (* ; "Edited 11-Dec-2023 08:21 by rmk")
                                                             (* ; "Edited 12-Nov-2023 12:16 by rmk")
                                                             (* ; "Edited 19-May-2023 00:18 by rmk")
                                                             (* ; "Edited 21-Apr-93 00:52 by jds")

    (* ;; "Inserts the Image-object OBJECT into text STREAM in front of character CH.")

    (CL:UNLESS (\TEDIT.READONLY TSTREAM)
        (PROG ((TEXTOBJ (TEXTOBJ TSTREAM))
               SEL OBJPC OBJSELPIECES SUBSTREAM)

         (* ;; 
         "We construct and copy a trivial SELPIECES so that we can share the basic insertion code.")

              (SETQ OBJPC (create PIECE
                                 PTYPE _ OBJECT.PTYPE
                                 PCONTENTS _ OBJECT
                                 PLEN _ 1
                                 PLOOKS _ (FGETTOBJ TEXTOBJ CARETLOOKS)))
                                                             (* ; "The new piece we're inserting")
              (CL:WHEN (SETQ SUBSTREAM (IMAGEOBJPROP OBJECT 'SUBSTREAM))
                                                             (* ; 
                                                  "If this is computed text in bulk, fix the length.")
                  (FSETPC OBJPC PTYPE SUBSTREAM.PTYPE)
                  (FSETPC OBJPC PLEN (TEXTLEN (fetch (TEXTSTREAM TEXTOBJ) of SUBSTREAM))))
              (SETQ OBJSELPIECES
               (\SELPIECES.COPY (create SELPIECES
                                       SPLEN _ 1
                                       SPFIRST _ OBJPC
                                       SPLAST _ OBJPC
                                       SPTEXTOBJ _ TEXTOBJ
                                       SPFIRSTCHAR _ CH#
                                       SPLASTCHAR _ CH#)
                      'INSERT TEXTOBJ))
              (CL:UNLESS OBJSELPIECES                        (* ; "Copy may not be allowed")
                  (RETURN))

         (* ;; "")

         (* ;; 
         " OBJSELPIECES contains (a copy of) the object piece, and the object approved of insertion.")

              (SETQ SEL (TEXTSEL TEXTOBJ))
              (\SHOWSEL SEL NIL)
              (CL:WHEN (type? SELECTION CH#)
                  (SETQ CH# (GETSEL CH# CH#)))
              (TEDIT.DO.BLUEPENDINGDELETE SEL TEXTOBJ)       (* ; 
                                                            "Do the pending delete, if there is one.")
              (CL:WHEN CH#
                  (\TEDIT.UPDATE.SEL SEL (IMIN CH# (ADD1 (TEXTLEN TEXTOBJ)))
                         0
                         'LEFT))
              (\TEDIT.INSERT.SELPIECES OBJSELPIECES TEXTOBJ SEL)
              (TEDIT.NORMALIZECARET TEXTOBJ)
              (\SHOWSEL SEL T)
              (\COPYSEL SEL TEDIT.SELECTION)))])

(TEDIT.EDIT.OBJECT
  [LAMBDA (STREAM OBJ)                                       (* ; "Edited  2-Dec-2023 09:57 by rmk")
                                                             (* ; "Edited 19-May-2023 21:35 by rmk")
                                                             (* ; "Edited 27-Apr-2023 00:14 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:37 by rmk")
                                                             (* ; "Edited 29-May-91 18:23 by jds")
    (LET ((TEXTOBJ (TEXTOBJ STREAM))
          SEL CH# SELOBJ EDITFN)
         [COND
            [(AND OBJ (IMAGEOBJP OBJ))
             (SETQ CH# (TEDIT.FIND.OBJECT TEXTOBJ OBJ))
             (COND
                (CH# (SETQ SEL (FGETTOBJ TEXTOBJ SCRATCHSEL))
                     (\TEDIT.UPDATE.SEL SEL CH# 1)
                     (SETSEL SEL SELOBJ OBJ)
                     (SETSEL SEL SELTEXTOBJ TEXTOBJ)
                     (\FIXSEL SEL TEXTOBJ))
                (T (TEDIT.PROMPTPRINT TEXTOBJ "Can't find specified object." T]
            (T (SETQ SEL (FGETTOBJ TEXTOBJ SEL))
               (SETQ OBJ (GETSEL SEL SELOBJ]
         (COND
            [OBJ                                             (* ; 
                                                           "OK There's an object selected.  Edit it.")
                 (SETQ EDITFN (IMAGEOBJPROP OBJ 'EDITFN))
                 (COND
                    ((AND EDITFN (APPLY* EDITFN OBJ))        (* ; 
                                                   "If the editfn makes a change, update the screen.")
                     (for LINE inside (GETSEL SEL L1) do (FSETLD LINE LDIRTY T))
                     (FSETTOBJ TEXTOBJ TXTNEEDSUPDATE T)
                     (TEDIT.UPDATE.SCREEN TEXTOBJ]
            (T                                               (* ; "No object selected.")
               (TEDIT.PROMPTPRINT TEXTOBJ "Please select an editable object first." T])

(TEDIT.FIND.OBJECT
  [LAMBDA (TEXTOBJ OBJ)                                      (* ; "Edited  6-Nov-2022 11:12 by rmk")
                                                             (* ; "Edited  3-May-93 12:52 by jds")
    (for CH# from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (EQ OBJ (PCONTENTS PC)) do (RETURN CH#])

(TEDIT.OBJECT.CHANGED
  [LAMBDA (TSTREAM OBJECT)                                   (* ; "Edited 21-Oct-2023 08:59 by rmk")
                                                             (* ; "Edited 18-Apr-2023 23:57 by rmk")
                                                             (* ; "Edited 10-Apr-2023 00:02 by rmk")
                                                             (* ; "Edited  9-Sep-2022 09:32 by rmk")
                                                             (* ; "Edited  6-Aug-2022 09:37 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:51 by mitani")
                                                             (* ; 
                   "Notify TEdit that an object has changed, and the display may need to be updated.")
    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          OBJPIECE CHANGEDCH#)
         [SETQ OBJPIECE (find PC inpieces (\FIRSTPIECE TEXTOBJ) suchthat (EQ OBJECT (PCONTENTS PC]
                                                             (* ; 
                                                             "Find the piece containing this object")
         (CL:UNLESS OBJPIECE (HELP "Changed OBJECT not found!?"))
         (SETQ CHANGEDCH# (\PCTOCH OBJPIECE TEXTOBJ))        (* ; "Get the CH# of the changed object")
         (\TEDIT.MARK.LINES.DIRTY TEXTOBJ CHANGEDCH# CHANGEDCH#)
                                                             (* ; "Mark affected lines")
         (replace (TEXTOBJ \DIRTY) of TEXTOBJ with T)        (* ; "And mark the document dirty.")
         (\SHOWSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                NIL)
         (TEDIT.UPDATE.SCREEN TEXTOBJ)
         (\FIXSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                TEXTOBJ)
         (\SHOWSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                T])

(TEDIT.MAP.OBJECTS
  [LAMBDA (TEXTOBJ FN FNARG COLLECT?)                        (* ; "Edited  6-Nov-2022 12:15 by rmk")

    (* ;; "Apply FN to each of the imageobjects in TEXTOBJ.  If COLLECT? value is the list of (CH# OBJ FNVAL) pairs that satisfy the predicate")

    (* ;; "FN is a function of 3 args (OBJ   CH#-of-OBJ    FNARG)")

    (for CH# OBJ FNVAL from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (AND (EQ OBJECT.PTYPE (PTYPE PC))
                 (type? IMAGEOBJ (SETQ OBJ (PCONTENTS PC)))
                 (SETQ FNVAL (APPLY* FN CH# OBJ FNARG)))
       do (CL:WHEN COLLECT?
              (PUSH $$VAL (LIST CH# OBJ FNVAL)))
          (CL:WHEN (EQ FNVAL 'STOP)
                 (GO $$OUT)) finally (RETURN (DREVERSE $$VAL])

(TEDIT.COLLECT.OBJECTS
  [LAMBDA (TSTREAM TESTFN)                                   (* ; "Edited 26-Oct-2023 16:06 by rmk")

    (* ;; "Returns a list of the imageobjects in TSTREAM that satisfy TESTFN, paired with their character positions")

    (LET ((TEXTOBJ (TEXTOBJ TSTREAM)))
         (for PC OBJ inpieces (\FIRSTPIECE TEXTOBJ) when (AND (EQ OBJECT.PTYPE (PTYPE PC))
                                                              (IMAGEOBJP (SETQ OBJ (PCONTENTS PC)))
                                                              (OR (NULL TESTFN)
                                                                  (APPLY* TESTFN OBJ)))
            collect (LIST (\PCTOCH PC TEXTOBJ)
                          OBJ])

(TEDIT.COLLECT.OBJECT.GETFNS
  [LAMBDA (TSTREAM)                                          (* ; "Edited 21-Nov-2023 17:30 by rmk")
    (for X in (TEDIT.COLLECT.OBJECTS TSTREAM) COLLECT (LIST (CAR X)
                                                            (IMAGEOBJPROP (CADR X)
                                                                   'GETFN])
)

(FILESLOAD IMAGEOBJ)



(* ;; 
"Would be nice to just do (DOFILESLOAD (CDR TEDITFILES)).  But the order for exports.all and the order for loading have to be aligned."
)


(FILESLOAD TEDIT-FIND TEDIT-HISTORY TEDIT-FILE TEDIT-WINDOW TEDIT-SELECTION TEDIT-TFBRAVO TEDIT-HCPY
       TEDIT-PAGE TEDIT-MENU TEDIT-FNKEYS)



(* ; "TEDIT Support information")


(RPAQQ TEDITSYSTEMDATE "16-Dec-2023 12:08:10")



(* ; "LISTFILES Interface, so the system can decide if a file is a TEdit file.")


(ADDTOVAR PRINTFILETYPES (TEDIT (TEST \TEDIT.FORMATTEDP1)
                                (EXTENSION (TEDIT))))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (4396 6338 (MAKE-TEDIT-EXPORTS.ALL 4406 . 4952) (UPDATE-TEDIT 4954 . 5567) (EDIT-TEDIT 
5569 . 6336)) (7595 7888 (\CREATE.TEDIT.RESTART.MENU 7605 . 7886)) (8263 34933 (TEDIT 8273 . 10878) (
COERCETEXTOBJ 10880 . 14058) (TEDITSTRING 14060 . 14798) (TEDIT-SEE 14800 . 15359) (TEDIT.CHARWIDTH 
15361 . 17385) (TEDIT.COPY 17387 . 17895) (TEDIT.DELETE 17897 . 18870) (TEDIT.INSERT 18872 . 20831) (
TEDIT.KILL 20833 . 21535) (TEDIT.MAPPIECES 21537 . 22599) (TEDIT.QUIT 22601 . 24169) (
TEDIT.DO.BLUEPENDINGDELETE 24171 . 25017) (TEDIT.MOVE 25019 . 29611) (TEDIT.STRINGWIDTH 29613 . 30284)
 (TEXTOBJ 30286 . 32594) (TEDITMENUP 32596 . 33234) (TEXTSTREAM 33236 . 34931)) (34934 37126 (
\TEDIT.MOVE.MSG 34944 . 36822) (\TEDIT.READONLY 36824 . 37124)) (37127 44406 (TEDIT.NCHARS 37137 . 
37320) (TEDIT.RPLCHARCODE 37322 . 40643) (TEDIT.NTHCHARCODE 40645 . 41487) (\TEDIT.PIECE.NTHCHARCODE 
41489 . 44404)) (44452 85630 (\TEDIT1 44462 . 46321) (\TEDIT.INSERT 46323 . 51965) (
\TEDIT.REPLACE.SELPIECES 51967 . 53508) (\TEDIT.INSERT.SELPIECES 53510 . 55189) (\TEDIT.OBJECT.SHOWSEL
 55191 . 59255) (\TEDIT.RESTARTFN 59257 . 61395) (\TEDIT.CHARDELETE 61397 . 63606) (\TEDIT.COPYPIECE 
63608 . 68346) (\TEDIT.APPLY.OBJFN 68348 . 71421) (\TEDIT.DELETE 71423 . 73735) (
\TEDIT.DIFFUSE.PARALOOKS 73737 . 76135) (\TEDIT.FOREIGN.COPY? 76137 . 80023) (\TEDIT.QUIT 80025 . 
82460) (\TEDIT.WORDDELETE 82462 . 85628)) (85631 99528 (\SELPIECES.COPY 85641 . 87514) (
\SELPIECES.CONCAT 87516 . 89585) (\SELPIECES.CHARTRANSFORM 89587 . 92819) (\SELPIECES.FROM.STRING 
92821 . 97480) (\SELPIECES.TO.STRING 97482 . 99526)) (99529 104795 (\TEDIT.PARAPIECES 99539 . 101187) 
(\TEDIT.PARA.FIRST 101189 . 103009) (\TEDIT.PARA.LAST 103011 . 104793)) (104949 114416 (
TEDIT.INSERT.OBJECT 104959 . 108013) (TEDIT.EDIT.OBJECT 108015 . 110054) (TEDIT.FIND.OBJECT 110056 . 
110463) (TEDIT.OBJECT.CHANGED 110465 . 112432) (TEDIT.MAP.OBJECTS 112434 . 113266) (
TEDIT.COLLECT.OBJECTS 113268 . 114028) (TEDIT.COLLECT.OBJECT.GETFNS 114030 . 114414)))))
STOP
