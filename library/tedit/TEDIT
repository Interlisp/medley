(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 2-Mar-2023 14:59:10" {WMEDLEY}<library>tedit>TEDIT.;132 128985 

      :CHANGES-TO (FNS \TEDIT.OBJECT.SHOWSEL TEDIT.COPY TEDIT.MOVE \TEDIT.DELETE TEDIT.INSERT.OBJECT)

      :PREVIOUS-DATE "22-Feb-2023 21:43:17" {WMEDLEY}<library>tedit>TEDIT.;131)


(* ; "
Copyright (c) 1983-1993, 1995, 1999, 2018, 2021 by Venue & Xerox Corporation.
")

(PRETTYCOMPRINT TEDITCOMS)

(RPAQQ TEDITCOMS
       [[COMS                                                (* ; "Loadup stuff")
              (VARS TEDITFILES)
              (FNS MAKE-TEDIT-EXPORTS.ALL UPDATE-TEDIT EDIT-TEDIT)
              (DECLARE%: DONTEVAL@LOAD DONTCOPY DONTEVAL@COMPILE 

                     (* ;; "This gets EXPORTS.ALL in the TEDIT-EXPORTS.ALL")

                     (EXPORT (FILES EXPORTS.ALL]
        [DECLARE%: EVAL@COMPILE DONTCOPY 

               (* ;; "Assertions go to comments if not being checked, so we see value-warnings")

               (EXPORT (MACROS TEDIT-ASSERT)
                      (GLOBALVARS CHECK-TEDIT-ASSERTIONS)
                      (INITVARS (CHECK-TEDIT-ASSERTIONS T]
        (FILES TEDIT-PCTREE TEDIT-STREAM TEDIT-COMMAND TEDIT-SCREEN TEDIT-ABBREV TEDIT-LOOKS)
        (FNS \CREATE.TEDIT.RESTART.MENU)
        (VARS (TEDIT.TERMSA.FONTS NIL)
              (TEDIT.TENTATIVE NIL)
              (TEDIT.DEFAULT.PROPS NIL)
              (TEDIT.STARTUP.MONITORLOCK (CREATE.MONITORLOCK 'TEDIT.STARTUP))
              (TEDIT.RESTART.MENU (\CREATE.TEDIT.RESTART.MENU)))
        (GLOBALVARS TEDIT.TENTATIVE TEDIT.DEFAULT.PROPS)
        
        (* ;; "Unslashed functions.  Public?")

        (FNS TEDIT COERCETEXTOBJ TEDITSTRING TEDIT-SEE TEDIT.CHARWIDTH TEDIT.COPY TEDIT.DELETE 
             TEDIT.INSERT TEDIT.KILL TEDIT.MAPPIECES TEDIT.QUIT TEDIT.DO.BLUEPENDINGDELETE TEDIT.MOVE
             TEDIT.STRINGWIDTH TEXTOBJ TEXTSTREAM)
        
        (* ;; "Slashed functions. Private?")

        (FNS \TEDIT2 TEDIT.\INSERT \TEDIT.INCLUDE \TEDIT.INSERT.PIECES \TEDIT.MOVE.PIECEMAPFN 
             \TEDIT.OBJECT.SHOWSEL \TEDIT.RESTARTFN \TEDIT.CHARDELETE \TEDIT.COPYPIECE \TEDIT.DELETE
             \TEDIT.DIFFUSE.PARALOOKS \TEDIT.FOREIGN.COPY? \TEDIT.QUIT \TEDIT.WORDDELETE \TEDIT1)
        (P (MOVD? 'NILL 'OBJECTOUTOFTEDIT))
                                                             (* ; 
                                    "HOOK for looked-string copy, etc. Used in \TEDIT.FOREIGN.COPY?.")
        (COMS                                                (* ; "Object-oriented editing")
              (FNS TEDIT.INSERT.OBJECT TEDIT.EDIT.OBJECT TEDIT.FIND.OBJECT TEDIT.PUT.OBJECT 
                   TEDIT.GET.OBJECT TEDIT.OBJECT.CHANGED TEDIT.MAP.OBJECTS)
              (FILES IMAGEOBJ))
        
        (* ;; "Would be nice to just do (DOFILESLOAD (CDR TEDITFILES)).  But the order for exports.all and the order for loading have to be aligned.")

        (FILES TEDIT-FIND TEDIT-HISTORY TEDIT-FILE TEDIT-WINDOW TEDIT-SELECTION TEDIT-TFBRAVO 
               TEDIT-HCPY TEDIT-PAGE TEDIT-MENU TEDIT-FNKEYS)
        (COMS                                                (* ; "TEDIT Support information")
              (E (SETQ TEDITSYSTEMDATE (DATE)))
              (VARS TEDITSYSTEMDATE))
        (COMS                                                (* ; 
                           "LISTFILES Interface, so the system can decide if a file is a TEdit file.")
              (ADDVARS (PRINTFILETYPES (TEDIT (TEST \TEDIT.FORMATTEDP1)
                                              (EXTENSION (TEDIT])



(* ; "Loadup stuff")


(RPAQQ TEDITFILES (TEDIT TEDIT-PCTREE TEDIT-SELECTION TEDIT-SCREEN TEDIT-STREAM TEDIT-COMMAND 
                         TEDIT-FILE TEDIT-LOOKS TEDIT-WINDOW TEDIT-MENU TEDIT-FIND TEDIT-FNKEYS 
                         TEDIT-HCPY TEDIT-HISTORY TEDIT-PAGE TEDIT-ABBREV TEDIT-TFBRAVO))
(DEFINEQ

(MAKE-TEDIT-EXPORTS.ALL
  [LAMBDA NIL                                                (* ; "Edited 11-Sep-2022 23:43 by rmk")
    (CNDIR (MEDLEYDIR "library>tedit"))
    (GATHEREXPORTS TEDITFILES (MEDLEYDIR "library/tedit" "tedit-exports.all" T])

(UPDATE-TEDIT
  [LAMBDA (FILES)                                            (* ; "Edited 26-Oct-2022 21:10 by rmk")

    (* ;; "updates sysout with new versions of loaded files.  Keeps the extension")

    (FOR FILE DIRFILE LOADEDFILE INSIDE (OR FILES TEDITFILES)
       WHEN [AND (SETQ LOADEDFILE (FOR F IN LOADEDFILELST WHEN (EQ FILE (FILENAMEFIELD F 'NAME))
                                     DO (RETURN F)))
                 (SETQ DIRFILE (INFILEP (PACKFILENAME 'VERSION NIL 'BODY LOADEDFILE]
       UNLESS (EQ LOADEDFILE DIRFILE) COLLECT (LOAD DIRFILE T])

(EDIT-TEDIT
  [LAMBDA NIL                                                (* ; "Edited 26-Oct-2022 21:12 by rmk")
                                                             (* ; "Edited 14-Sep-2022 08:37 by rmk")
    (BKSYSBUF " ")

    (* ;; "TEDIT-TFBRAVO isn't in the main list, but we want to track it")

    (LOAD 'TEDIT-EXPORTS.ALL)
    (RESETLST
        (RESETSAVE LOADDBFLG 'YES)
        (FOR F IN TEDITFILES DO (LOADCOMP F)
                                (LOADFROM F)))
    (%. ANALYZE ON IN TEDITFILES])
)
(DECLARE%: DONTEVAL@LOAD DONTCOPY DONTEVAL@COMPILE 
(* "FOLLOWING DEFINITIONS EXPORTED")
(FILESLOAD EXPORTS.ALL)

(* "END EXPORTED DEFINITIONS")

)
(DECLARE%: EVAL@COMPILE DONTCOPY 
(* "FOLLOWING DEFINITIONS EXPORTED")(DECLARE%: EVAL@COMPILE 

(PUTPROPS TEDIT-ASSERT MACRO [ARGS (COND
                                      [CHECK-TEDIT-ASSERTIONS
                                       `(CL:UNLESS ,(CAR ARGS)
                                            [HELP "TEDIT-ASSERT FAILURE" ,(KWOTE (CAR ARGS])]
                                      (T `                   (* (TEDIT-ASSERT (\,@ ARGS)))])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS CHECK-TEDIT-ASSERTIONS)
)

(RPAQ? CHECK-TEDIT-ASSERTIONS T)

(* "END EXPORTED DEFINITIONS")

)

(FILESLOAD TEDIT-PCTREE TEDIT-STREAM TEDIT-COMMAND TEDIT-SCREEN TEDIT-ABBREV TEDIT-LOOKS)
(DEFINEQ

(\CREATE.TEDIT.RESTART.MENU
  [LAMBDA NIL                                                (* ; "Edited 28-Aug-2022 22:45 by rmk")

    (* ;; "Separate dinky function to compile for SUNLOADUP without DWIM.")

    (CREATE MENU
           ITEMS _ '(NewEditProcess])
)

(RPAQQ TEDIT.TERMSA.FONTS NIL)

(RPAQQ TEDIT.TENTATIVE NIL)

(RPAQQ TEDIT.DEFAULT.PROPS NIL)

(RPAQ TEDIT.STARTUP.MONITORLOCK (CREATE.MONITORLOCK 'TEDIT.STARTUP))

(RPAQ TEDIT.RESTART.MENU (\CREATE.TEDIT.RESTART.MENU))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.TENTATIVE TEDIT.DEFAULT.PROPS)
)



(* ;; "Unslashed functions.  Public?")

(DEFINEQ

(TEDIT
  [LAMBDA (TEXT WINDOW DONTSPAWN PROPS)

    (* ;; "Edited 10-Aug-2022 11:24 by rmk")

    (* ;; "Edited 22-Jun-2022 20:01 by rmk: Call to OPENSTREAM passes FORMAT from PROPS")

    (* ;; "Edited 22-Jun-2022 19:58 by rmk")

    (* ;; "Edited  4-Jun-2022 15:42 by rmk")

    (* ;; "Edited 31-Jan-2022 17:19 by rmk: String TEXT is a file name")

    (* ;; "Edited 24-Dec-2021 19:21 by rmk")

    (* ;; "Edited 11-Jun-99 14:14 by rmk:")

    (* ;; "Edited  3-Jun-88 14:27 by jds")

    (* ;; "User entry to the text editor.  Takes an optional window to be used for editing")

    (* ;; "DONTSPAWN => Don't try to create a new process for this edit.")

    (PROG (PROC TEDITCREATEDWINDOW)
          (CL:WHEN (AND TEXT (OR (LITATOM TEXT)
                                 (STRINGP TEXT)
                                 (CL:PATHNAMEP TEXT)))       (* ; 
                                        "Make sure the file exists before trying to open the window.")
              [SETQ TEXT (OPENSTREAM TEXT 'INPUT 'OLD `((TYPE TEXT)
                                                        (FORMAT ,(LISTGET PROPS 'FORMAT])
          (CL:WHEN (AND WINDOW (OR (LITATOM WINDOW)
                                   (REGIONP WINDOW)))        (* ; 
                                                  "Pass specified and typed regions to TEDIT.CREATEW")
              (PUSH PROPS 'REGION-TYPE WINDOW)
              (SETQ WINDOW NIL))
          (RESETLST
              [RESETSAVE NIL `(AND ,WINDOW (WINDOWPROP ,WINDOW 'TEXTOBJ NIL]
              (WITH.MONITOR TEDIT.STARTUP.MONITORLOCK
                  (CL:UNLESS WINDOW
                      (SETQ TEDITCREATEDWINDOW T)
                      (SETQ WINDOW (COND
                                      [(OR (LISTGET PROPS 'REGION-TYPE)
                                           (NOT TEDIT.DEFAULT.WINDOW)
                                           (\TEDIT.ACTIVE.WINDOWP TEDIT.DEFAULT.WINDOW))
                                       (TEDIT.CREATEW (COND
                                                         (TEXT (CONCAT 
                                                              "Please specify an editing window for "
                                                                      (FULLNAME TEXT)))
                                                         (T 
                                                    "Please specify a region for the editing window."
                                                            ))
                                              TEXT
                                              (APPEND PROPS (COPY TEDIT.DEFAULT.PROPS]
                                      (T (\TEDIT.CREATEW.FROM.REGION (WINDOWPROP TEDIT.DEFAULT.WINDOW
                                                                            'REGION)
                                                TEXT
                                                (APPEND PROPS (COPY TEDIT.DEFAULT.PROPS)))
                                                             (* ; "Replace the old title")
                                         TEDIT.DEFAULT.WINDOW)))

                      (* ;; 
                 "Mark the newly-created window reserved until the OPENTEXTSTREAM has done its work.")

                      (* ;; 
                      "mark that we created the window so that we know we can update the title, etc.")

                      (WINDOWPROP WINDOW 'TEXTOBJ T))))
          [SETQ TEXT (OPENTEXTSTREAM TEXT WINDOW NIL NIL (APPEND PROPS '(BEING-EDITED T]
                                                             (* ; "Connect the editor to the window")
          (replace (TEXTOBJ TXTEDITING) of (TEXTOBJ TEXT) with T)
                                                             (* ; "For the moment, mark the document as actively in edit. (so caret flashes when the window is first brought up.)")
          (CL:WHEN TEDITCREATEDWINDOW
              (TEXTPROP TEXT 'TEDITCREATEDWINDOW 'T))
          (COND
             (DONTSPAWN                                      (* ; 
                                     "Either no processes running, or specifically not to spawn one.")
                    (RETURN (\TEDIT2 TEXT WINDOW T)))
             (T                                              (* ; "Spawn a process to do the edit.")
                [SETQ PROC (ADD.PROCESS (LIST '\TEDIT2 (KWOTE TEXT)
                                              WINDOW NIL)
                                  'NAME
                                  'TEdit
                                  'RESTARTABLE
                                  'HARDRESET
                                  'RESTARTFORM
                                  (LIST '\TEDIT.RESTARTFN (KWOTE TEXT)
                                        WINDOW
                                        (KWOTE PROPS]
                (PROCESSPROP PROC 'WINDOW WINDOW)
                (COND
                   ((NOT (LISTGET (APPEND PROPS (COPY TEDIT.DEFAULT.PROPS))
                                'LEAVETTY))                  (* ; 
                              "Unless he asked us to leave the tty where it is, TEdit should get it.")
                    (TTY.PROCESS PROC)))
                (RETURN PROC])

(COERCETEXTOBJ
  [LAMBDA (STREAM TYPE OUTPUTSTREAM)                         (* ; "Edited  8-Sep-2022 23:54 by rmk")
                                                             (* ; "Edited 11-Jun-99 15:10 by rmk:")
                                                             (* ; "Edited 11-Jun-99 15:10 by rmk:")
                                                             (* ; "Edited 11-Jun-99 13:58 by rmk:")
                                                             (* ; "Edited 11-Jun-99 13:58 by rmk:")
                                                             (* ; "Edited 18-Apr-93 23:42 by jds")

    (* ;; "Coerce the contents of the TEXOTBJ to be of the given type.  This is for making a string from a textobj, e.g.")

    (LET ((TEXTOBJ (COND
                      ((type? STREAM STREAM)
                       (fetch (TEXTSTREAM TEXTOBJ) of STREAM))
                      (T STREAM)))
          OFILE FMTFILE)
         (CL:UNLESS (type? TEXTOBJ TEXTOBJ)                  (* ; "Must have a TEXTOBJ.")
             (\ILLEGAL.ARG TEXTOBJ))
         (SELECTQ TYPE
             ((STRINGP STRING) 
                  (CL:WHEN (ILEQ (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ)
                                 65535)
                      (bind PC PFILE (STR _ (ALLOCSTRING (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ)))
                            (CH# _ 1)
                            (DELTA _ 0) first (SETQ PC (\FIRSTPIECE TEXTOBJ))
                         while (type? PIECE PC)
                         do (if (fetch CLINVISIBLE of (fetch (PIECE PLOOKS) of PC))
                                then 

                                 (* ;; "If the characters are invisible, do nothing.  HOWEVER, we have to shrink the final string to account for the characters we ignored.")

                                     (add DELTA (fetch (PIECE PLEN) of PC))
                              else (SELECTC (ffetch (PIECE PTYPE) of PC)
                                       ((LIST THINSTRING.PTYPE FATSTRING.PTYPE) 
                                            [OR (ZEROP (fetch (PIECE PLEN) of PC))
                                                (RPLSTRING STR CH# (SUBSTRING (fetch (PIECE PCONTENTS
                                                                                            )
                                                                                 of PC)
                                                                          1
                                                                          (fetch (PIECE PLEN)
                                                                             of PC]
                                            (add CH# (fetch (PIECE PLEN) of PC)))
                                       ((LIST THINFILE.PTYPE FATFILE1.PTYPE FATFILE2.PTYPE) 
                                            (SETQ PFILE (fetch (PIECE PCONTENTS) of PC))
                                            (CL:UNLESS (OPENP PFILE)
                                                (SETQ PFILE (\TEDIT.REOPEN.STREAM STREAM PFILE)))
                                            (SETFILEPTR PFILE (fetch (PIECE PFPOS) of PC))
                                            (for C from CH# as I from 1
                                               to (fetch (PIECE PLEN) of PC)
                                               do (RPLCHARCODE STR C (BIN PFILE)))
                                            (add CH# (fetch (PIECE PLEN) of PC)))
                                       (OBJECT.PTYPE         (* ; "DO NOTHING FOR OBJECTS")
                                                     (add CH# (fetch (PIECE PLEN) of PC))
                                                     (add DELTA (fetch (PIECE PLEN) of PC)))
                                       (ERROR "CANNOT GET TEXT FROM A 'PIECE.'" PC)))
                            (SETQ PC (FETCH (PIECE NEXTPIECE) OF PC))
                         finally (CL:UNLESS (ZEROP DELTA)    (* ; 
                              "The string got shortened to account for invisible chars.  Chop it off")
                                     (SETQ STR (SUBSTRING STR 1 (IDIFFERENCE (fetch (TEXTOBJ TEXTLEN)
                                                                                of TEXTOBJ)
                                                                       DELTA))))
                               (RETURN STR))))
             (STREAM (CL:WHEN (type? STREAM (fetch (TEXTOBJ TXTFILE) of TEXTOBJ))
                         [OPENFILE (fetch (STREAM FULLNAME) of (fetch (TEXTOBJ TXTFILE) of TEXTOBJ))
                                'INPUT NIL '((TYPE TEXT]
                         (replace (STREAM ACCESSBITS) of (fetch (TEXTOBJ TXTFILE) of TEXTOBJ)
                            with ReadBit))
                     (\TEXTSETFILEPTR (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ)
                            0)
                     (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ))
             (FILE [SETQ OFILE (OR (AND OUTPUTSTREAM (OPENP OUTPUTSTREAM 'OUTPUT))
                                   (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW]
                   (TEDIT.PUT.PCTB TEXTOBJ OFILE)
                   (OR OUTPUTSTREAM (CLOSEF OFILE))
                   OFILE)
             (SPLIT 
                    (* ;; "I.e., Return 2 files, one with plain text, one with formatting info, such that concatenating them will do the right thing.")

                    (SETQ OFILE (OPENFILE '{NODIRCORE} 'BOTH 'NEW))
                    (SETQ FMTFILE (CAR (TEDIT.PUT.PCTB TEXTOBJ (\GETSTREAM OFILE 'BOTH)
                                              NIL T)))
                    (CLOSEF OFILE)
                    (CONS OFILE FMTFILE))
             NIL])

(TEDITSTRING
  [LAMBDA (TEXT WINDOW DONTSPAWN PROPS)

(* ;;; "Edited 23-May-2022 15:52 by rmk")

(* ;;; "Edited 19-May-2022 22:46 by rmk: An interface function to replace calls to TEDIT when the text argument may be the string to be edited rather than the name of a file.  This enables the transition that gets TEDIT aligned with the convention that strings, as well as litatoms, are file names")

    (TEDIT (IF (STRINGP TEXT)
               THEN (OPENSTRINGSTREAM TEXT)
             ELSE TEXT)
           WINDOW DONTSPAWN PROPS])

(TEDIT-SEE
  [LAMBDA (FILE WINDOW FORMAT TITLE)

    (* ;; "Edited 13-Sep-2022 09:21 by rmk:  Changed the default format here to the current Medley default.  This shouldn't be special.")

    (* ;; "Edited  5-May-2022 15:18 by rmk")

    (* ;; "Edited 27-Feb-2021 20:07 by rmk:")

    (* ;; "Edited  1-Feb-88 19:00 by bvm:")

    (* ;; "See FILE in a scrollable READONLY TEDIT window.  If FILE is a LISP source file, copy first to a temporary NODIRCORE image file that interpretes the fontchange characters rather than showing black boxes.")

    (* ;; "FORMAT for text files defaults to to our *DEFAULT-EXTERNALFORMAT*")

    (CL:WITH-OPEN-FILE (STREAM FILE :DIRECTION :INPUT)
           (LET ((SEESTREAM STREAM)
                 TSTREAM)

                (* ;; "No need to fiddle with a TEDIT file")

                (IF (\TEDIT.FORMATTEDP1 STREAM)
                  ELSEIF (LISPSOURCEFILEP STREAM)
                    THEN 
                         (* ;; "Lisp source file")

                         (SETQ SEESTREAM (OPENTEXTSTREAM))
                         (APPLY* (FUNCTION SEE)
                                STREAM SEESTREAM)
                  ELSE 
                       (* ;; "Not a Lisp source file and not a Tedit file.  If it is not random access, we copy it so we can scroll around.")

                       (* ;; "Maybe there is a conventional way of finding out the external format of a plain-text stream (an EMACS header?), otherwise we use our default.")

                       (SETFILEINFO STREAM 'FORMAT (OR FORMAT :DEFAULT))
                       (CL:UNLESS (RANDACCESSP STREAM)
                           (SETQ SEESTREAM (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW))
                           (COPYCHARS STREAM SEESTREAM)))
                [SETQ TSTREAM (TEXTSTREAM (TEDIT SEESTREAM WINDOW NIL
                                                 `(READONLY T LEAVETTY T FONT ,DEFAULTFONT]
                [WINDOWPROP (WFROMDS TSTREAM)
                       'TITLE
                       (OR TITLE (CONCAT "SEE window for " (FULLNAME STREAM]
                TSTREAM])

(TEDIT.CHARWIDTH
  [LAMBDA (CH FONT TERMSA)                                   (* jds "22-OCT-83 19:32")
          
          (* Returns the width of CH in FONT printed according to any special printing 
          instructions in CHARTABLE TERMSA)

    (COND
       (TERMSA                                               (* There IS a TERMTABLE to account for)
              (SELECTC (fetch CCECHO of (\SYNCODE TERMSA CH))
                  (INDICATE.CCE (IPLUS (COND
                                          ((IGREATERP CH 127)(* META character)
                                           (SETQ CH (LOGAND CH 127))
                                           (CHARWIDTH (CHARCODE %#)
                                                  FONT))
                                          (T 0))
                                       (COND
                                          ((ILESSP CH 32)    (* CONTROL character)
                                           (SETQ CH (LOGOR CH 64))
                                           (CHARWIDTH (CHARCODE ^)
                                                  FONT))
                                          (T 0))
                                       (CHARWIDTH CH FONT)))
                  (SIMULATE.CCE (SELCHARQ CH
                                     ((EOL CR LF) 
                                          (IMAX 6 (CHARWIDTH CH FONT)))
                                     (ESCAPE (CHARWIDTH (CHARCODE $)
                                                    FONT))
                                     (BELL 0)
                                     (TAB 36)
                                     (CHARWIDTH CH FONT)))
                  (REAL.CCE (CHARWIDTH CH FONT))
                  (IGNORE.CCE 0)
                  (SHOULDNT)))
       (T (* The usual case is to treat every character as a graphic.)
          (SELCHARQ CH
               (CR (IMAX 6 (CHARWIDTH CH FONT)))
               (TAB 36)
               (CHARWIDTH CH FONT])

(TEDIT.COPY
  [LAMBDA (FROM TO)                                          (* ; "Edited  2-Mar-2023 14:57 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:43 by rmk")
                                                             (* ; "Edited  9-Oct-2022 12:17 by rmk")
                                                             (* ; "Edited  6-Oct-2022 10:27 by rmk")
                                                             (* ; "Edited  9-Sep-2022 16:59 by rmk")
                                                             (* ; "Edited  7-Sep-2022 23:01 by rmk")
                                                             (* ; "Edited 21-Aug-2022 19:37 by rmk")
                                                             (* ; "Edited  6-Aug-2022 09:08 by rmk")
                                                             (* ; "Edited  4-Jun-92 11:11 by jds")
    (SETQ TEDIT.COPY.PENDING NIL)                            (* ; 
                                                  "First, Turn off the global flag that got us here.")
    (COND
       ((NOT (AND FROM (fetch (SELECTION SET) of FROM)))     (* ; 
                                                             "There MUST be a source selected first.")
        (TEDIT.PROMPTPRINT (fetch (SELECTION SELTEXTOBJ) of TO)
               "Copy source selection hasn't been set yet." T))
       ((ZEROP (fetch (SELECTION DCH) of FROM))              (* ; 
                   "The source is empty.  Just turn off the selection hilite and ignore the request.")
        (\SHOWSEL FROM NIL NIL))
       ((fetch (TEXTOBJ TXTREADONLY) of (fetch (SELECTION SELTEXTOBJ) of TO))
                                                             (* ; "The target is read-only.  Don't do anything except turn off the selection highlighting and ignore the request.")
        (\SHOWSEL FROM NIL NIL))
       (T (\SHOWSEL FROM NIL NIL)                            (* ; 
                                 "Before all else, make sure the copy source selection is turned off")
          (replace (SELECTION SET) of FROM with NIL)
          (COND
             ((AND TO (fetch (SELECTION SET) of TO))         (* ; 
                                                     "Can only do copy if there's a target selection")
              (PROG ((TOOBJ (fetch (SELECTION SELTEXTOBJ) of TO))
                     (FROMOBJ (fetch (SELECTION SELTEXTOBJ) of FROM))
                     (CROSSCOPY (NEQ (fetch (SELECTION SELTEXTOBJ) of FROM)
                                     (fetch (SELECTION SELTEXTOBJ) of TO)))
                     TOLEN LEN INSPC INSPC# PC NPC PCCH NPCCH OPLEN EVENT REPLACING INSERTCH# PCLST 
                     OBJ COPYFN UNDOCHAIN)
                    (SETQ PCLST (TEDIT.SELECTED.PIECES FROMOBJ FROM (FUNCTION \TEDIT.COPYPIECE)
                                       FROMOBJ TOOBJ))       (* ; 
                                                             "Get copies of the indicated pieces")
                    (SETQ REPLACING (TEDIT.DO.BLUEPENDINGDELETE TO TOOBJ))
                                                             (* ; "Do any blue-pending-delete")
                    (SETQ TOLEN (fetch (TEXTOBJ TEXTLEN) of TOOBJ))
                    (\SHOWSEL TO NIL NIL)                    (* ; 
                                                             "NOW turn off the target selection.")
                    [SETQ INSERTCH# (CL:IF (EQ (fetch (SELECTION POINT) of TO)
                                               'LEFT)
                                        (fetch (SELECTION CH#) of TO)
                                        (IMIN (fetch (SELECTION CHLIM) of TO)
                                              (ADD1 TOLEN)))](* ; 
                                                             "Figure out where to do the insertion.")
                    (CL:WHEN (AND (fetch (TEXTOBJ FORMATTEDP) of FROMOBJ)
                                  (NOT (fetch (TEXTOBJ FORMATTEDP) of TOOBJ)))
                                                             (* ; 
                              "The source is formatted and the target isn't.  Give the guy a choice.")
                                                             (* ; 
                                                     "For now, convert the target file to formatted.")
                        (\TEDIT.CONVERT.TO.FORMATTED TOOBJ))
                    (SETQ UNDOCHAIN (\TEDIT.INSERT.PIECES TOOBJ INSERTCH# PCLST
                                           (SETQ LEN (IDIFFERENCE (fetch (SELECTION CHLIM)
                                                                     of FROM)
                                                            (fetch (SELECTION CH#) of FROM)))
                                           NIL CROSSCOPY NIL T))
                    (bind OBJ AFTERCOPYFN for PC in PCLST
                       when [AND (EQ OBJECT.PTYPE (ffetch (PIECE PTYPE) of PC))
                                 (SETQ OBJ (fetch (PIECE PCONTENTS) of PC))
                                 (SETQ AFTERCOPYFN (IMAGEOBJPROP OBJ 'AFTERCOPYFN]
                       do (APPLY* AFTERCOPYFN OBJ))
                    (SETQ EVENT (fetch (TEXTOBJ TXTHISTORY) of TOOBJ))
                    (\TEDIT.HISTORYADD TOOBJ
                           (create TEDITHISTORYEVENT
                                  THACTION _ (COND
                                                (REPLACING 'Replace)
                                                (T 'Copy))
                                  THLEN _ LEN
                                  THCH# _ INSERTCH#
                                  THFIRSTPIECE _ UNDOCHAIN
                                  THOLDINFO _ (AND REPLACING EVENT)))
                                                             (* ; 
                                                            "Make a history-list entry for the COPY.")
                    (replace (TEXTOBJ \DIRTY) of TOOBJ with T)
                                                             (* ; "Mark the document changed")
                    (\FIXILINES TOOBJ TO INSERTCH# LEN TOLEN)(* ; "Fix LINES and SELs")
                    [COND
                       ((EQ (fetch (TEXTOBJ FORMATTEDP) of TOOBJ)
                            (fetch (TEXTOBJ FORMATTEDP) of FROMOBJ))
                                                             (* ; 
                             "Either both of the files are formatted or neither is.  This case is OK")
                        )
                       ((fetch (TEXTOBJ FORMATTEDP) of TOOBJ)(* ; 
                       "The source wasn't formatted, but the target is.  Go convert the copied text.")
                        (\TEDIT.CONVERT.TO.FORMATTED TOOBJ INSERTCH# (IPLUS INSERTCH# LEN]
                    (TEDIT.UPDATE.SCREEN TOOBJ)              (* ; "Refresh the display")
                    (replace (SELECTION CH#) of TO with INSERTCH#)
                                                             (* ; "Correct the target selection")
                    (replace (SELECTION CHLIM) of TO with (IPLUS INSERTCH# LEN))
                    (replace (SELECTION DCH) of TO with LEN)
                    (replace (SELECTION POINT) of TO with 'RIGHT)
                                                             (* ; 
                          "(replace CARETLOOKS of TOOBJ with (\TEDIT.GET.INSERT.CHARLOOKS TOOBJ TO))")
                                                             (* ; 
                                              "Make any later type-in look like what we just copied.")
                    (replace (TEXTOBJ HINTPC) of TOOBJ with NIL)
                    (\FIXSEL TO TOOBJ)
                    (\SHOWSEL TO NIL T)))
             (T                                              (* ; 
                                                           "There is no target selection -- complain")
                (TEDIT.PROMPTPRINT (fetch (SELECTION SELTEXTOBJ) of FROM)
                       "Please select a destination for the copy first." T])

(TEDIT.DELETE
  [LAMBDA (STREAM SEL LEN LEAVECARETLOOKS)                   (* ; "Edited 10-Nov-2022 22:48 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "DELETE THE CHARACTERS SPECIFIED FROM THE MAIN TEXT.")

    (* ;; "If LEAVECARETLOOKS is non-NIL, the selection will NOT be set up to do the right thing with type-in.  This can save time in inner loops.")

    (LET ((TEXTOBJ (TEXTOBJ STREAM)))
         (CL:WHEN (FIXP SEL)
             (TEDIT.SETSEL STREAM SEL LEN NIL NIL LEAVECARETLOOKS)
             (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ)))
         (\TEDIT.DELETE (OR SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                TEXTOBJ])

(TEDIT.INSERT
  [LAMBDA (TSTREAM TEXT CH#ORSEL LOOKS DONTSCROLL)           (* ; "Edited 22-Feb-2023 21:28 by rmk")
                                                             (* ; "Edited 21-Feb-2023 14:58 by rmk")
                                                             (* ; "Edited 19-Feb-2023 17:31 by rmk")
                                                             (* ; "Edited 13-Feb-2023 00:25 by rmk")
                                                             (* ; "Edited  9-Nov-2022 10:36 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Insert TEXT (character, litatom or string) at the appropriate spot in the text..  No-op if given something else--should it error?")

    (CL:WHEN (LITATOM TEXT)
        (SETQ TEXT (MKSTRING TEXT)))

    (* ;; "Can't insert an empty string sensibly.  It confuses the screen update code.")

    (CL:UNLESS [AND (STRINGP TEXT)
                    (ZEROP (NCHARS TEXT))
                    (NOT (fetch (TEXTOBJ TXTREADONLY) of (TEXTOBJ TSTREAM]
        (PROG ((TEXTOBJ (TEXTOBJ TSTREAM)
                      (fetch (TEXTSTREAM TEXTOBJ) of TSTREAM))
               CH# LINE OTEXTLEN DS LINES NCHARSADDED)
              (if (FIXP CH#ORSEL)
                  then (TEDIT.SETSEL TSTREAM CH#ORSEL 1 'LEFT) 
                                                             (* ; "He gave us a ch# to insert before")
                       (SETQ CH#ORSEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                elseif (NOT CH#ORSEL)
                  then (SETQ CH#ORSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)))
              (CL:UNLESS (AND CH#ORSEL (fetch (SELECTION SET) of CH#ORSEL))
                  (TEDIT.PROMPTPRINT TSTREAM "Please select a place for the insertion." T)
                  (RETURN))
              (BTVALIDATE 'TEDIT.INSERT 'START TEXTOBJ)
              (TEDIT.DO.BLUEPENDINGDELETE CH#ORSEL TEXTOBJ)  (* ; 
                    "If the selected text was for pending delete, delete it before doing the insert.")
              (CL:WHEN LOOKS                                 (* ; "Set up any specified looks.")
                  (TEDIT.CARETLOOKS TSTREAM LOOKS))
              (SETQ OTEXTLEN (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ))
                                                             (* ; 
                                 "The PRE-INSERT text length, for starting the screen update process")
              (CL:WHEN (fetch (TEXTOBJ \WINDOW) of TEXTOBJ)

                  (* ;; "If this text is in a pane, move it so the insertion point is on-screen, then turn off the selection highlight")

                  (CL:UNLESS DONTSCROLL                      (* ; 
                                          "If DONTSCROLL is T, then don't scroll to show the change.")
                      (TEDIT.NORMALIZECARET TEXTOBJ CH#ORSEL))
                  (\SHOWSEL CH#ORSEL NIL NIL))
              (SETQ CH# (TEDIT.GETPOINT TEXTOBJ CH#ORSEL))   (* ; 
                                                     "Insert characters one-by-one to test for  EOL.")
              (for ACHAR instring TEXT as NCH# from CH# by 1
                 do (SELCHARQ ACHAR
                         ((EOL %#EOL Meta,EOL) 
                              (\INSERTEOL ACHAR NCH# TEXTOBJ))
                         (\INSERTCH ACHAR NCH# TEXTOBJ)))
              (SETQ NCHARSADDED (NCHARS TEXT))
              (\FIXILINES TEXTOBJ CH#ORSEL CH# NCHARSADDED OTEXTLEN)
                                                             (* ; 
                                                     "Fix up the line descriptors and the Selection.")
              (TEDIT.INSERT.UPDATESCREEN CH# NCHARSADDED TEXTOBJ CH#ORSEL DONTSCROLL)
              (BTVALIDATE 'TEDIT.INSERT 'END TEXTOBJ)))])

(TEDIT.KILL
  [LAMBDA (STREAM)                                      (* ; "Edited 12-Jun-90 17:49 by mitani")
                                                             (* Force the edit session supported 
                                                           by STREAM to terminate, and to 
                                                           return VALUE)
    (COND
       ((type? STREAM STREAM)                            (* If he gave us a textofd, get the 
                                                           textobj)
        (SETQ STREAM (fetch (TEXTSTREAM TEXTOBJ) of STREAM)))
       [(WINDOWP STREAM)                                     (* Take a window, and do the obvious 
                                                           with it.)
        (SETQ STREAM (WINDOWPROP STREAM 'TEXTOBJ]
       ((type? TEXTOBJ STREAM)                           (* A Textobj is just fine)
        )
       (T                                                    (* Anything else is ungood, 
                                                           double-plus)
          (\ILLEGAL.ARG STREAM)))
    (replace (TEXTOBJ EDITFINISHEDFLG) of STREAM with T)
    (PROG (TEDW TEDPROC)
          (AND (SETQ TEDW (CAR (fetch (TEXTOBJ \WINDOW) of STREAM)))
               [PROCESSP (SETQ TEDPROC (WINDOWPROP TEDW 'PROCESS]
               (NEQ TEDPROC (THIS.PROCESS))
               (DEL.PROCESS TEDPROC)
               (TEDIT.DEACTIVATE.WINDOW TEDW])

(TEDIT.MAPPIECES
  [LAMBDA (TEXTOBJ FN FNARG)                                 (* ; "Edited  6-Nov-2022 11:12 by rmk")
                                                             (* ; "Edited  4-Nov-2022 23:11 by rmk")
                                                             (* ; "Edited  9-Sep-2022 16:08 by rmk")
                                                             (* ; "Edited 22-Aug-2022 14:28 by rmk")
                                                             (* ; "Edited 22-Jul-2022 09:19 by rmk")
                                                             (* ; "Edited 22-Apr-93 16:02 by jds")

    (* ;; "Go thru all the pieces in a document, applying a function to them serially")

    (* ;; "FN is a function of 3 args (PIECE    CH#-of-1st-char-in-piece    FNARG)")

    (for CH# from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (EQ (APPLY* FN CH# PC FNARG)
                'STOP) do (RETURN (LIST CH# PC])

(TEDIT.QUIT
  [LAMBDA (STREAM VALUE)                                (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "Force the edit session supported by STREAM to terminate, and to return VALUE")

    (COND
       ((type? STREAM STREAM)                            (* ; 
                                                         "If he gave us a textofd, get the textobj")
        (SETQ STREAM (fetch (TEXTSTREAM TEXTOBJ) of STREAM)))
       ((type? TEXTOBJ STREAM)                           (* ; "A Textobj is just fine")
        )
       (T                                                    (* ; 
                                                           "Anything else is ungood, double-plus")
          (\ILLEGAL.ARG STREAM)))
    (replace (TEXTOBJ EDITFINISHEDFLG) of STREAM with (OR VALUE T))
                                                             (* ; 
                                                  "tell the command loop to stop next time through")
    (PROG (MAINW)
          (COND
             ([AND (fetch (TEXTOBJ \WINDOW) of STREAM)
                   (NEQ (SETQ MAINW (\TEDIT.PRIMARYW STREAM))
                        (PROCESSPROP (TTY.PROCESS)
                               'WINDOW]

              (* ;; "there is a main window of the stream, and it is not the window of the tty process, so give it the tty")

              (TTY.PROCESS (WINDOWPROP MAINW 'PROCESS))
              (AND (NEQ (TTY.PROCESS)
                        (THIS.PROCESS))
                   (until [OR (NOT (WINDOWPROP MAINW 'PROCESS))
                                  (PROCESS.FINISHEDP (WINDOWPROP MAINW 'PROCESS] do 
                                                             (* ; 
                  "Wait until the Edit process has had a chance to go away before continuing here.")
                                                                                       (DISMISS])

(TEDIT.DO.BLUEPENDINGDELETE
  [LAMBDA (SEL TEXTOBJ)                                      (* ; "Edited  5-Feb-2023 20:32 by rmk")
                                                             (* ; "Edited 22-Oct-2022 14:03 by rmk")
                                                             (* ; "Edited 23-Aug-2022 11:51 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")
                                                             (* ; 
                                            "Check for blue-pending-delete, and do it if it's there.")
                                                             (* ; 
                                    "Return T if the deletion was made.  For people who need to know")
    (CL:WHEN (fetch (TEXTOBJ BLUEPENDINGDELETE) of TEXTOBJ)  (* ; 
                                      "If he's in a Blue-pending-delete state, delete the selection.")
        (if (ZEROP (fetch (SELECTION DCH) of SEL))
            then (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)     (* ; 
                                                         "Empty, just turn off the blue-pendingness.")
          else (\SHOWSEL SEL NIL NIL)                        (* ; 
                                                      "Turn off the selection, delete the characters")
               (\DELETECH (fetch (SELECTION CH#) of SEL)
                      (fetch (SELECTION CHLIM) of SEL)
                      TEXTOBJ)
               (\FIXDLINES SEL (fetch (SELECTION CH#) of SEL)
                      (fetch (SELECTION CHLIM) of SEL)
                      TEXTOBJ)                               (* ; 
                                               "Fix up any line descriptors to reflect the deletion.")
               (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)       (* ; "Make it a normal selection again.")
               (replace (SELECTION CHLIM) of SEL with (fetch (SELECTION CH#) of SEL)) 
                                                             (* ; 
                         "Fix up the selection, so that it is 0 wide, where the old text used to be.")
               (replace (SELECTION DCH) of SEL with 0)
               (replace (SELECTION POINT) of SEL with 'LEFT)
               (\FIXSEL SEL TEXTOBJ)                         (* ; 
                                               "Make its line descriptors &c reflect the new reality")
               (\SHOWSEL SEL NIL T))
        T)])

(TEDIT.MOVE
  [LAMBDA (FROM TO)                                          (* ; "Edited  2-Mar-2023 14:58 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:44 by rmk")
                                                             (* ; "Edited  6-Oct-2022 10:25 by rmk")
                                                             (* ; "Edited  7-Sep-2022 23:01 by rmk")
                                                             (* ; "Edited  5-Sep-2022 15:24 by rmk")
                                                             (* ; "Edited  2-Sep-2022 09:27 by rmk")
                                                             (* ; "Edited 21-Aug-2022 19:33 by rmk")
                                                             (* ; "Edited 13-Aug-2022 23:37 by rmk")
                                                             (* ; "Edited 29-May-91 18:21 by jds")

    (* ;; "Move the text described by the selection FROM to the place described by the selection TO")

    (SETQ TEDIT.MOVE.PENDING NIL)                            (* ; 
                                                  "First, Turn off the global flag that got us here.")
    (COND
       ((NOT (AND FROM (fetch (SELECTION SET) of FROM)))     (* ; 
                                                             "There MUST be a source selected first.")
        (TEDIT.PROMPTPRINT (fetch (SELECTION SELTEXTOBJ) of TO)
               "Move source selection hasn't been set yet." T))
       ((ZEROP (fetch (SELECTION DCH) of FROM))              (* ; 
                                                  "The source selection is empty.  Just turn it off.")
        (\SHOWSEL FROM NIL NIL))
       ((fetch (TEXTOBJ TXTREADONLY) of (fetch (SELECTION SELTEXTOBJ) of TO))
                                                             (* ; 
                                                             "The target is read-only.  Skip it..")
        (\SHOWSEL FROM NIL NIL))
       (T (\SHOWSEL FROM NIL NIL)                            (* ; 
                                 "Before all else, make sure the copy source selection is turned off")
          (COND
             ((AND TO (fetch (SELECTION SET) of TO))         (* ; 
                                                     "Can only do copy if there's a target selection")
              (PROG ((TOOBJ (fetch (SELECTION SELTEXTOBJ) of TO))
                     (FROMOBJ (fetch (SELECTION SELTEXTOBJ) of FROM))
                     (TOLEN (fetch (TEXTOBJ TEXTLEN) of (fetch (SELECTION SELTEXTOBJ) of TO)))
                     (CROSSCOPY (NEQ (fetch (SELECTION SELTEXTOBJ) of FROM)
                                     (fetch (SELECTION SELTEXTOBJ) of TO)))
                     LEN INSPC INSPC# PC NPC PCCH NPCCH OPLEN EVENT REPLACING INSERTCH# PCLST OBJ 
                     COPYFN UNDOCHAIN)                       (* ; "Find the insertion point")
                    (SETQ PCLST (TEDIT.SELECTED.PIECES FROMOBJ FROM (FUNCTION \TEDIT.MOVE.PIECEMAPFN)
                                       FROMOBJ TOOBJ))       (* ; 
                                                  "Grab the pieces that reflect the source selection")
                    (SETQ REPLACING (TEDIT.DO.BLUEPENDINGDELETE TO TOOBJ))
                                                             (* ; "Do any blue-pending-delete")
                    (SETQ EVENT (fetch (TEXTOBJ TXTHISTORY) of TOOBJ))
                    (SETQ LEN (IDIFFERENCE (fetch (SELECTION CHLIM) of FROM)
                                     (fetch (SELECTION CH#) of FROM)))

               (* ;; "Now delete the text from its old place")

                    (\DELETECH (fetch (SELECTION CH#) of FROM)
                           (fetch (SELECTION CHLIM) of FROM)
                           FROMOBJ)
                    (\FIXDLINES (fetch (TEXTOBJ LINES) of FROMOBJ)
                           FROM
                           (fetch (SELECTION CH#) of FROM)
                           (fetch (SELECTION CHLIM) of FROM)
                           FROMOBJ)
                    (SETQ TOLEN (fetch (TEXTOBJ TEXTLEN) of TOOBJ))
                    (\SHOWSEL TO NIL NIL)                    (* ; 
                                                             "NOW turn off the target selection.")
                    (replace (SELECTION SET) of FROM with NIL)
                    [SETQ INSERTCH# (COND
                                       ((EQ (fetch (SELECTION POINT) of TO)
                                            'LEFT)
                                        (fetch (SELECTION CH#) of TO))
                                       (T (fetch (SELECTION CHLIM) of TO]
                                                             (* ; 
                                                             "Figure out where to do the insertion.")
                    (\TEDIT.INSERT.PIECES TOOBJ INSERTCH# PCLST LEN CROSSCOPY)
                                                             (* ; 
                                 "Get the pieces that actually got inserted, so we can UNDO the move")

               (* ;; "Keep \DELETECH from playing clever games with the piece if it's new type-in: Don't let it be reclaimed by the deletion:")

                    (replace (TEXTOBJ HINTPC) of TOOBJ with NIL)
                    (replace (TEXTOBJ HINTPC) of FROMOBJ with NIL)
                    (\TEDIT.HISTORYADD TOOBJ
                           (create TEDITHISTORYEVENT
                                  THTEXTOBJ _ TOOBJ
                                  THACTION _ (COND
                                                (REPLACING 'ReplaceMove)
                                                (T 'Move))
                                  THLEN _ LEN
                                  THCH# _ INSERTCH#
                                  THFIRSTPIECE _ PCLST
                                  THAUXINFO _ FROMOBJ
                                  THOLDINFO _ (fetch (SELECTION CH#) of FROM)))
                                                             (* ; 
                                                            "Make a history-list entry for the COPY.")
                    (replace (TEXTOBJ \DIRTY) of TOOBJ with T)
                                                             (* ; "Mark the document changed")
                    (\FIXILINES TOOBJ TO INSERTCH# LEN TOLEN)(* ; "Fix LINES and SELs")
                    (COND
                       ((EQ (fetch (TEXTOBJ FORMATTEDP) of TOOBJ)
                            (fetch (TEXTOBJ FORMATTEDP) of FROMOBJ))
                                                             (* ; 
                             "Either both of the files are formatted or neither is.  This case is OK")
                        )
                       ((fetch (TEXTOBJ FORMATTEDP) of TOOBJ)(* ; 
                       "The source wasn't formatted, but the target is.  Go convert the copied text.")
                        (\TEDIT.CONVERT.TO.FORMATTED TOOBJ INSERTCH# (IPLUS INSERTCH# LEN)))
                       (T                                    (* ; 
                              "The source is formatted and the target isn't.  Give the guy a choice.")
                                                             (* ; 
                                                     "For now, convert the target file to formatted.")
                          (\TEDIT.CONVERT.TO.FORMATTED TOOBJ)))
                    (TEDIT.UPDATE.SCREEN FROMOBJ)
                    (TEDIT.UPDATE.SCREEN TOOBJ)              (* ; "Refresh the display")
                    (replace (SELECTION CH#) of TO with INSERTCH#)
                                                             (* ; "Correct the target selection")
                    (replace (SELECTION CHLIM) of TO with (IPLUS INSERTCH# LEN))
                    (replace (SELECTION DCH) of TO with LEN)
                    (replace (SELECTION POINT) of TO with 'RIGHT)
                    (CL:UNLESS (EQ TO FROM)
                        (\FIXSEL FROM FROMOBJ)
                        (\FIXSEL (fetch (TEXTOBJ SEL) of FROMOBJ)
                               FROMOBJ))
                    (\FIXSEL TO TOOBJ)
                    (\SHOWSEL TO NIL T)))
             (T                                              (* ; 
                                                           "There is no target selection -- complain")
                (TEDIT.PROMPTPRINT (fetch (SELECTION SELTEXTOBJ) of FROM)
                       "Please select a destination for the MOVE." T])

(TEDIT.STRINGWIDTH
  [LAMBDA (STR FONT TERMSA)                                  (* jds "19-AUG-83 14:40")
    (COND
       (TERMSA 
          
          (* We have a terminal table to take account of.
          Do so.)

              (for CH instring STR sum (TEDIT.CHARWIDTH CH FONT TERMSA)))
       (T                                                    (* Just use the native character 
                                                             widths)
          (for CH instring STR sum (SELCHARQ CH
                                        (TAB 36)
                                        (CHARWIDTH CH FONT])

(TEXTOBJ
  [LAMBDA (STREAM)                                           (* jds "11-Jul-85 12:06")
                                                             (* Convert from a text stream to the 
                                                             associated textobj)
    (COND
       ((type? TEXTOBJ STREAM)                               (* It's already a TEXTOBJ)
        STREAM)
       ((AND (type? STREAM STREAM)
             (fetch (TEXTSTREAM TEXTOBJ) of STREAM)
             (type? TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of STREAM)))
                                                             (* It's a TEXTSTREAM)
        (fetch (TEXTSTREAM TEXTOBJ) of STREAM))
       ((AND (PROCESSP STREAM)
             (PROCESS.WINDOW STREAM))                        (* It's an edit PROCESS)
        (WINDOWPROP (PROCESS.WINDOW STREAM)
               'TEXTOBJ))
       [(AND (WINDOWP STREAM)
             (WINDOWPROP STREAM 'TEXTOBJ]
       [(AND (DISPLAYSTREAMP STREAM)
             (WINDOWPROP STREAM 'TEXTOBJ]
       ((\ILLEGAL.ARG STREAM])

(TEXTSTREAM
  [LAMBDA (STREAM)                                           (* ; "Edited 21-Aug-2022 08:14 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")
                                                             (* ; 
                                                           "Force a textobj or stream to be a stream")
    (COND
       ((AND (type? STREAM STREAM)
             (fetch (TEXTSTREAM TEXTOBJ) of STREAM)
             (type? TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of STREAM)))
                                                             (* ; 
                                       "It's a stream, and is really a TEXT stream.  Just return it.")
        STREAM)
       ((type? TEXTOBJ STREAM)                               (* ; 
                                     "It's a TEXTOBJ, so grab the stream hint field and return that.")
        (fetch (TEXTOBJ STREAMHINT) of STREAM))
       ((AND (PROCESSP STREAM)
             (PROCESS.WINDOW STREAM))                        (* ; 
                                "It's an edit process, so grab the text stream from the edit window.")
        (WINDOWPROP (PROCESS.WINDOW STREAM)
               'TEXTSTREAM))
       [(AND (WINDOWP STREAM)
             (WINDOWPROP STREAM 'TEXTSTREAM]
       [(AND (DISPLAYSTREAMP STREAM)
             (WINDOWPROP STREAM 'TEXTSTREAM]
       (T                                                    (* ; 
                                               "Not a reasonable coercion to the text stream.  Punt.")
          (\ILLEGAL.ARG STREAM])
)



(* ;; "Slashed functions. Private?")

(DEFINEQ

(\TEDIT2
  [LAMBDA (TEXT WINDOW UNSPAWNED)                       (* ; "Edited 12-Jun-90 17:51 by mitani")

    (* ;; "Does the actual editing work, once TEDIT has OPENTEXTSTREAMed the thing to be edited.")

    (\TEDIT.COMMAND.LOOP (fetch (TEXTSTREAM TEXTOBJ) of TEXT))
                                                             (* ; "Run the editing engine")
    (CLOSEW WINDOW)                                          (* ; "Close the edit window")
    (\TEXTCLOSEF TEXT)                                       (* ; "Close the underlying files")
    (replace (STREAM ACCESSBITS) of TEXT with BothBits)
                                                             (* ; 
                                                           "But leave the stream itself accessible")
    (AND (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                'AFTERQUITFN)
         (APPLY* (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                        'AFTERQUITFN)
                WINDOW TEXT))                                (* ; 
                                             "Apply any post-window-close (and post-QUIT) function")
    (COND
       (UNSPAWNED                                            (* ; 
                    "We're not a distinct process: Send back the edited text in some suitable form")
              (COND
                 ((NEQ (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                   TEXTOBJ)
                                                                          of TEXT))
                       T)
                  (PROG1 (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                     TEXTOBJ)
                                                                            of TEXT))
                      (replace (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                    TEXTOBJ)
                                                                           of TEXT) with
                                                                                        NIL)))
                 ((STRINGP (fetch (TEXTOBJ TXTFILE) of (fetch (TEXTSTREAM TEXTOBJ
                                                                                     ) of TEXT)))
                  (COERCETEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                         'STRINGP))
                 (T TEXT])

(TEDIT.\INSERT
  [LAMBDA (CH SEL TEXTOBJ)                                   (* ; "Edited 21-Feb-2023 14:44 by rmk")
                                                             (* ; "Edited 19-Feb-2023 14:10 by rmk")
                                                             (* ; "Edited  9-Nov-2022 08:50 by rmk")
                                                             (* ; "Edited  4-Nov-2022 17:43 by rmk")
                                                             (* ; "Edited 20-Oct-2022 10:19 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; "Insert the single character-code CH at the appropriate spot in the text.")

    (if (AND SEL (fetch (SELECTION SET) of SEL))
        then (CL:WHEN (fetch (TEXTOBJ \WINDOW) of TEXTOBJ)

                 (* ;; "There is a window;  make sure the insert point is on-screen, and turn off any highlighted selection")

                 (TEDIT.NORMALIZECARET TEXTOBJ SEL)
                 (\SHOWSEL SEL NIL NIL))
             (LET ((CH# (TEDIT.GETPOINT TEXTOBJ SEL))
                   (OTEXTLEN (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ)))
                  (SELCHARQ CH
                       ((EOL %#EOL Meta,EOL)                 (* ; 
                                                        "This was an EOL.  Need to do para breaking.")
                            (\INSERTEOL CH CH# TEXTOBJ))
                       (\INSERTCH CH CH# TEXTOBJ))
                  (\FIXILINES TEXTOBJ SEL CH# 1 OTEXTLEN)
                  (TEDIT.INSERT.UPDATESCREEN CH# 1 TEXTOBJ SEL NIL T))
      else (TEDIT.PROMPTPRINT TEXTOBJ "Please select a place for the insertion." T])

(\TEDIT.INCLUDE
  [LAMBDA (TEXTOBJ FILE START END)                   (* ; "Edited 29-May-91 18:22 by jds")

         (* A NATIVE text includer%: Includes part of a file, without checking to see if 
       it's a bravo file, a TEdit file or whatever.)
                                                             (* (PROG ((LEN (IDIFFERENCE
                                                           (OR END (GETEOFPTR FILE))
                                                           (OR START 0))) (SEL
                                                           (fetch (TEXTOBJ SEL) of TEXTOBJ)) 
                                                           NPC) (SETQ NPC (create PIECE PFILE _
                                                           (\GETOFD FILE (QUOTE INPUT)) PFPOS _
                                                           (OR START 0) PLEN _ LEN PLOOKS _
                                                           (\TEDIT.GET.INSERT.CHARLOOKS TEXTOBJ 
                                                           SEL) PPARALOOKS _ NIL))
                                                           (* Create a PIECE to describe the 
                                                           text) (\TEDIT.INSERT.PIECES TEXTOBJ
                                                           (fetch (SELECTION CH#) of SEL) NPC 
                                                           LEN) (* Insert it in the document)
                                                           (add (fetch (TEXTOBJ TEXTLEN) of 
                                                           TEXTOBJ) LEN) (* And update the 
                                                           document's length)
                                                           (\TEDIT.MARK.LINES.DIRTY TEXTOBJ
                                                           (fetch (SELECTION CH#) of SEL)
                                                           (IPLUS (fetch (SELECTION CH#) of SEL)
  LEN)) (* Mark the screen dirty, so updating it will find something to do) (replace
                                                           (SELECTION CHLIM) of SEL with
                                                           (IPLUS (fetch (SELECTION CH#) of SEL)
  LEN)) (replace (SELECTION DCH) of SEL with LEN) (replace (SELECTION DX) of SEL with 0)
                                                           (replace (SELECTION POINT) of SEL 
                                                           with (QUOTE RIGHT))
                                                           (replace (SELECTION SELKIND) of SEL 
                                                           with (QUOTE CHAR))
                                                           (replace (SELECTION SELOBJ) of SEL 
                                                           with NIL) (COND ((fetch
                                                           (TEXTOBJ \WINDOW) of TEXTOBJ)
                                                           (\SHOWSEL SEL NIL NIL)
                                                           (TEDIT.UPDATE.SCREEN TEXTOBJ)
                                                           (\FIXSEL SEL TEXTOBJ)
                                                           (\SHOWSEL SEL NIL T)))
                                                           (* Update the screen)
                                                           (replace (TEXTOBJ \DIRTY) of TEXTOBJ 
                                                           with T) (\SETUPGETCH
                                                           (fetch (SELECTION CH#) of SEL) 
                                                           TEXTOBJ)))
    (HELP])

(\TEDIT.INSERT.PIECES
  [LAMBDA (TEXTOBJ CH# FIRSTPIECE %#CHARS CROSSCOPY DONTDIRTY COPYING)
                                                             (* ; "Edited  6-Sep-2022 10:41 by rmk")
                                                             (* ; "Edited  2-Sep-2022 10:35 by rmk")
                                                             (* ; "Edited 22-Aug-2022 13:06 by rmk")
                                                             (* ; "Edited  7-Aug-2022 13:04 by rmk")
                                                             (* ; "Edited 11-Jun-99 14:03 by rmk:")
                                                             (* ; 
                                                        "Edited 24-Apr-95 12:04 by sybalsky:mv:envos")

    (* ;; "Inserts a series of pieces into TEXTOBJ in front of character CH#.")

    (* ;; "If FIRSTPIECE is a PIECE, this will follow the next-piece pointer chain;  if FIRSTPIECE is a list, it is a list of pieces to insert.")

    (* ;; "If CROSSCOPY is non-NIL, the pieces' contents will be copied, to preserve text in case the original is deleted.")

    (* ;; "DONTDIRTY is T if this is a change not visible to the user--one that shouldn't %"dirty%" the document.  This is used tor NS-character encoding recognition durint line formatting.")

    (* ;; "COPYING is T if these pieces are being inserted by a COPY operation.  This lets us call the AFTERCOPYFN on image objects.")

    (* ;; "It is the CALLER'S RESPONSIBILITY to make sure the pieces to be inserted are 'safe' --that they are, if necessary, copies of the originals, and can safely be modified.")

    (CL:WHEN (OR DONTDIRTY (NOT (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)))

        (* ;; "Only do this if you're allowed to change the document, or it's a TEdit-intertnal fixup change, as for NS char recognition.")

        (for (PC _ (create PIECE using (CL:IF (LISTP FIRSTPIECE)
                                           (pop FIRSTPIECE)
                                           FIRSTPIECE)))
             (LEN _ 0)
             (CURCH# _ CH#)
             PCPLEN UNDOCHAIN PREINSERTPC POSTINSERTPC SRCPFILE START-OF-PIECE
           by (CL:WHEN (SETQ PC (CL:IF (LISTP FIRSTPIECE)
                                    (pop FIRSTPIECE)
                                    (NEXTPIECE PC)))
                     (create PIECE using PC)) declare (SPECVARS START-OF-PIECE)
           first (CL:WHEN (IGREATERP CH# (ffetch (TEXTOBJ TEXTLEN) of TEXTOBJ))
                     (SETQ CH# (ADD1 (ffetch (TEXTOBJ TEXTLEN) of TEXTOBJ))))
                 (CL:WHEN (SETQ PREINSERTPC (\CHTOPC (SUB1 CH#)
                                                   TEXTOBJ T))
                                                             (* ; 
                                                          "Get the piece after which we will insert.")
                     (CL:UNLESS (IEQP (PLEN PREINSERTPC)
                                      (IDIFFERENCE CH# START-OF-PIECE))
                                                             (* ; 
                                                     "Inserting INSIDE this piece.  Split it in two.")
                         (SETQ PREINSERTPC (\SPLITPIECE PREINSERTPC (- CH# START-OF-PIECE)
                                                  TEXTOBJ)))
                     (SETQ POSTINSERTPC (NEXTPIECE PREINSERTPC)))
                 (SETQ UNDOCHAIN PC) while (AND PC (OR (NOT %#CHARS)
                                                       (ILESSP LEN %#CHARS)))
           do                                                (* ; 
                                                         "Insert the copied piece into its new place")
              (SETQ PCPLEN (PLEN PC))                        (* ; 
                                                   "The length of the copied piece is already valid.")
              (SELECTC (PTYPE PC)
                  (FILE.PTYPES (CL:WHEN CROSSCOPY

                                 (* ;; "If this is a cross-document copy, and the text comes from a file, we must REALLY make a copy of the text, lest the source file be deleted. We want to preserve the external format, so that we can just copy the bytes.")

                                   (SETQ SRCPFILE (PCONTENTS PC))
                                   (CL:UNLESS (\GETSTREAM SRCPFILE 'INPUT T)
                                                             (* ; 
                                               "The source file was CLOSED -- reopen it, for our use")
                                       [SETQ SRCPFILE (OPENSTREAM SRCPFILE 'INPUT 'OLD
                                                             '((TYPE TEXT])
                                   [freplace (PIECE PCONTENTS) of PC
                                      with (OPENSTREAM '{NODIRCORE} 'BOTH 'NEW
                                                  `(:EXTERNAL-FORMAT ,(STREAMPROP SRCPFILE 
                                                                             :EXTERNAL-FORMAT]
                                   (COPYBYTES SRCPFILE (PCONTENTS PC)
                                          (ffetch (PIECE PFPOS) of PC)
                                          (IPLUS (ffetch (PIECE PFPOS) of PC)
                                                 (CL:IF (EQ FATFILE2.PTYPE (PTYPE PC))
                                                     (UNFOLD PCPLEN 2)
                                                     PCPLEN)))
                                   (freplace (PIECE PFPOS) of PC with 0)))
                  (STRING.PTYPES                             (* ; 
                                                   "Make a copy, lest the insertstring gets extended")
                                 (CHANGE (PCONTENTS PC)
                                        (CONCAT DATUM)))
                  (OBJECT.PTYPE                              (* ; 
                                                        "For objects, call the optional AFTERCOPYFN.")
                                (CL:WHEN COPYING             (* ; 
                                                         "Hope this can be done before the insertion")
                                    (LET (OBJ AFTERFN)
                                         (CL:WHEN [AND (SETQ OBJ (PCONTENTS PC))
                                                       (SETQ AFTERFN (IMAGEOBJPROP OBJ 'AFTERCOPYFN]
                                                (APPLY* AFTERFN OBJ PC CURCH#)))))
                  (HELP "COPYING A PIECE?"))
              (freplace (PIECE PLOOKS) of PC with (\TEDIT.UNIQUIFY.CHARLOOKS (ffetch (PIECE PLOOKS)
                                                                                of PC)
                                                         TEXTOBJ))
              (freplace (PIECE PPARALOOKS) of PC with (\TEDIT.UNIQUIFY.PARALOOKS (ffetch (PIECE
                                                                                          PPARALOOKS)
                                                                                    of PC)
                                                             TEXTOBJ)) 
                                                             (* ; 
                                        "Assure that the new document knows about this piece's looks")
              (\INSERTPIECE PC POSTINSERTPC TEXTOBJ)         (* ; 
                                                             "Insert the piece into the new document")
              (add CURCH# PCPLEN)
              (add LEN PCPLEN) finally (\TEDIT.DIFFUSE.PARALOOKS PREINSERTPC POSTINSERTPC)
                                     (RETURN UNDOCHAIN)))])

(\TEDIT.MOVE.PIECEMAPFN
  [LAMBDA (PC TEXTOBJ FROMOBJ TOOBJ)                         (* ; "Edited  6-Aug-2022 10:14 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "Called by TEDIT.MOVE via TEDIT.SELECTED.PIECES, to do the move-operation processing on the candidate pieces.")

    (LET (OBJ MOVEFN)
         (SETQ PC (create PIECE using PC PNEW _ T))          (* ; 
                                                             "No matter what, we need a fresh copy.")
         (SELECTC (ffetch (PIECE PTYPE) of PC)
             (OBJECT.PTYPE (SETQ OBJ (ffetch (PIECE PCONTENTS) of PC))
                           (CL:WHEN (SETQ MOVEFN (IMAGEOBJPROP OBJ 'WHENMOVEDFN))
                                                             (* ; 
                                                          "If there's an eventfn for moving, use it.")
                               (APPLY* MOVEFN OBJ (CAR (fetch (TEXTOBJ \WINDOW) of TOOBJ))
                                      (fetch (TEXTOBJ STREAMHINT) of FROMOBJ)
                                      (fetch (TEXTOBJ STREAMHINT) of TOOBJ))))
             ((LIST THINSTRING.PTYPE FATSTRING.PTYPE) 

                                                    (* ;; 
    "If the piece is a string, make our own copy of the string header, even tho we share characters.")

                  (replace (PIECE PCONTENTS) of PC with (CONCAT (fetch (PIECE PCONTENTS) of PC))))
             NIL)
         PC])

(\TEDIT.OBJECT.SHOWSEL
  [LAMBDA (TEXTOBJ SEL ON SELWINDOW)                         (* ; "Edited  2-Mar-2023 14:53 by rmk")
                                                             (* ; "Edited  4-Feb-2023 14:33 by rmk")
                                                             (* ; "Edited  6-Aug-2022 21:42 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "We are hilighting (or dehilighting) a selected object.  Let it know.")

    (LET ((X0 (fetch (SELECTION X0) of SEL))
          (Y (fetch (SELECTION Y0) of SEL))
          (L1 (CAR (fetch (SELECTION L1) of SEL)))
          (OBJ (fetch (SELECTION SELOBJ) of SEL))
          (XOFFSET (DSPXOFFSET NIL SELWINDOW))
          (YOFFSET (DSPYOFFSET NIL SELWINDOW))
          (IMAGEFN (IMAGEOBJPROP (fetch (SELECTION SELOBJ) of SEL)
                          'WHENOPERATEDONFN))
          (WWIDTH (WINDOWPROP SELWINDOW 'WIDTH))
          (WHEIGHT (WINDOWPROP SELWINDOW 'HEIGHT))
          IMAGEBOX)
         (CL:WHEN (INSIDE? (CREATEREGION 0 0 WWIDTH WHEIGHT)
                         X0 Y)                               (* ; 
                                                        "Only do this if the selection is on-screen.")
             (SETQ IMAGEBOX (OR (IMAGEOBJPROP OBJ 'BOUNDBOX)
                                (APPLY* (IMAGEOBJPROP OBJ 'IMAGEBOXFN)
                                       OBJ SELWINDOW)))
             (CL:WHEN L1

                 (* ;; "There's really a line this selection is being displayed on, so we need to use the YBASE of the line- the object's descent, rather than the YBOT, which is what Y0 is.")

                 (SETQ Y (- (fetch (LINEDESCRIPTOR YBASE) of L1)
                            (fetch (IMAGEBOX YDESC) of IMAGEBOX))))
             (RESETLST
                 [RESETSAVE (DSPXOFFSET (IDIFFERENCE (IPLUS X0 XOFFSET)
                                               (fetch XKERN of IMAGEBOX))
                                   SELWINDOW)
                        (LIST (FUNCTION DSPXOFFSET)
                              XOFFSET
                              (WINDOWPROP SELWINDOW 'DSP]
                 (RESETSAVE (DSPYOFFSET (IPLUS Y YOFFSET)
                                   SELWINDOW)
                        (LIST (FUNCTION DSPYOFFSET)
                              YOFFSET SELWINDOW))
                 (RESETSAVE (DSPCLIPPINGREGION (create REGION
                                                      LEFT _ 0
                                                      BOTTOM _ 0
                                                      WIDTH _ (IDIFFERENCE (IMIN (fetch (SELECTION
                                                                                         XLIM)
                                                                                    of SEL)
                                                                                 (fetch (TEXTOBJ
                                                                                         WRIGHT)
                                                                                    of TEXTOBJ))
                                                                     X0)
                                                      HEIGHT _ (fetch YSIZE of IMAGEBOX))
                                   SELWINDOW)
                        (LIST (FUNCTION DSPCLIPPINGREGION)
                              (DSPCLIPPINGREGION NIL SELWINDOW)
                              SELWINDOW))
                 [AND IMAGEFN (ERSETQ (APPLY* IMAGEFN OBJ SELWINDOW (COND
                                                                       (ON 'HIGHLIGHTED)
                                                                       (T 'UNHIGHLIGHTED))
                                             SEL
                                             (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ]))])

(\TEDIT.RESTARTFN
  [LAMBDA (TEXT WINDOW PROPS)                                (* ; "Edited 21-Aug-2022 08:13 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:51 by mitani")
                                                             (* ; "Restarts a TEdit session.")
    (replace (TEXTOBJ \WINDOW) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT) with NIL)
                                                             (* ; 
                                                         "Unattach the window, so we do a redisplay.")
    (LET [(ODIRTY (fetch (TEXTOBJ \DIRTY) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT]
         (SETQ TEXT (OPENTEXTSTREAM TEXT WINDOW NIL NIL PROPS))
         (replace (TEXTOBJ \DIRTY) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT) with ODIRTY))
                                                             (* ; 
                                                             "Now reconnect the world together again")
    (\TEDIT.COMMAND.LOOP (fetch (TEXTSTREAM TEXTOBJ) of TEXT))
                                                             (* ; "Run the editing engine")
    (CLOSEW WINDOW)                                          (* ; "Close the edit window")
    (\TEXTCLOSEF TEXT)                                       (* ; "Close the underlying files")
    (replace (STREAM ACCESSBITS) of TEXT with BothBits)      (* ; 
                                                             "But leave the stream itself accessible")
                                                             (* ; 
                                               "Apply any post-window-close (and post-QUIT) function")
    (CL:WHEN (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                    'AFTERQUITFN)
        (APPLY* (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                       'AFTERQUITFN)
               WINDOW TEXT))])

(\TEDIT.CHARDELETE
  [LAMBDA (TEXTOBJ SCRATCHSTRING SEL)                        (* ; "Edited 25-Sep-2022 13:42 by rmk")
                                                             (* ; "Edited 22-Aug-2022 12:54 by rmk")
                                                             (* ; "Edited 19-Apr-93 10:50 by jds")

    (* ;; "Do character-backspace deletion for TEDIT: Delete the character just before the current insertpoint.")

    (SETQ TEXTOBJ (TEXTOBJ TEXTOBJ))
    (PROG (TLEN INSCH# INSPC INSPC# TLOOKS START-OF-PIECE)
          [SETQ INSCH# (SUB1 (SELECTQ (fetch (SELECTION POINT) of SEL)
                                 (LEFT (fetch (SELECTION CH#) of SEL))
                                 (RIGHT (fetch (SELECTION CHLIM) of SEL))
                                 (SHOULDNT]
          (CL:WHEN (ILEQ INSCH# 0)                           (* ; 
                                                             "Can't backspace past start of document")
              (RETURN))
          (SETQ INSPC (\CHTOPC INSCH# TEXTOBJ T))
          (SETQ TLOOKS (\TEDIT.APPLY.STYLES (PLOOKS INSPC)
                              INSPC
                              (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ)))
          [while (AND INSPC (fetch CLINVISIBLE of TLOOKS)) do 
                                                             (* ; 
                                   "Back over any invisible text, which we're not allowed to delete.")
                                                              (SETQ INSPC (PREVPIECE INSPC))
                                                              (SETQ INSCH# (SUB1 START-OF-PIECE))
                                                              (add START-OF-PIECE (IMINUS
                                                                                   (PLEN INSPC)))
                                                              (CL:WHEN INSPC
                                                                  (SETQ TLOOKS (\TEDIT.APPLY.STYLES
                                                                                (PLOOKS INSPC)
                                                                                INSPC TEXTOBJ)))]
          (CL:UNLESS (OR (ILEQ INSCH# 0)
                         (fetch CLPROTECTED of TLOOKS))      (* ; 
                                                  "Not back to text beginning or into protected text")
              (replace (SELECTION CHLIM) of SEL with (ADD1 (replace (SELECTION CH#) of SEL
                                                              with INSCH#)))
                                                             (* ; 
                             "Set up the selection to point to the character which is to be deleted.")
              (replace (SELECTION DCH) of SEL with 1)
              (\SHOWSEL SEL NIL NIL)                         (* ; 
                                           "Turn off the underlining, if any, so there's no garbage.")
              (\FIXSEL SEL TEXTOBJ)                          (* ; 
                                        "Fix the selection up so it points to the right line and all")
              (\TEDIT.DELETE SEL TEXTOBJ T))])

(\TEDIT.COPYPIECE
  [LAMBDA (PC TEXTOBJ FROMOBJ TOOBJ UNPROTECT)               (* ; "Edited  9-Oct-2022 20:19 by rmk")
                                                             (* ; "Edited  6-Oct-2022 10:09 by rmk")
                                                             (* ; "Edited  6-Aug-2022 18:11 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "TEXTOBJ's prompt gets the message that a copy is not allowed, the FROMOBJ and TOOBJ provide the streams for the object's copy function.  The copy is disconnected from PC's original connections.")

    (* ;; "If UNPROTECT, the copies of protected pieces are unprotected")

    (* ;; "Called by TEDIT.COPY via TEDIT.SELECTED.PIECES, to produce a copy of PC. ")

    (LET (OBJ NEWOBJ COPYFN)
         (SETQ PC (create PIECE
                     using PC PNEW _ T PREVPIECE _ NIL NEXTPIECE _ NIL PTREENODE _ NIL))
                                                             (* ; 
                                                             "No matter what, we need a fresh copy.")
         (CL:WHEN (EQ OBJECT.PTYPE (PTYPE PC))               (* ; "This piece describes an object")
             (SETQ OBJ (PCONTENTS PC))
             [COND
                [(SETQ COPYFN (IMAGEOBJPROP OBJ 'COPYFN))
                 (SETQ NEWOBJ (APPLY* COPYFN OBJ (fetch (TEXTOBJ STREAMHINT) of FROMOBJ)
                                     (fetch (TEXTOBJ STREAMHINT) of TOOBJ)))
                 (COND
                    ((EQ NEWOBJ 'DON'T)                      (* ; 
                                            "He said not to copy this piece -- abort the whole copy.")
                     (TEDIT.PROMPTPRINT TEXTOBJ "COPY of this object not allowed." T)
                     (RETFROM 'TEDIT.COPY))
                    (NEWOBJ (replace (PIECE PCONTENTS) of PC with NEWOBJ))
                    (T (replace (PIECE PCONTENTS) of PC with (COPYALL OBJ]
                (OBJ                                         (* ; 
                                                     "No copy fn;  just strike off a copy of our own")
                     (replace (PIECE PCONTENTS) of PC with (COPYALL OBJ]
             (CL:WHEN (SETQ COPYFN (IMAGEOBJPROP OBJ 'WHENCOPIEDFN))
                 (APPLY* COPYFN OBJ (WINDOWPROP (CAR (fetch (TEXTOBJ \WINDOW) of TOOBJ))
                                           'DSP)
                        (fetch (TEXTOBJ STREAMHINT) of FROMOBJ)
                        (fetch (TEXTOBJ STREAMHINT) of TOOBJ))))
         (CL:WHEN (AND UNPROTECT (fetch CLPROTECTED of (PLOOKS PC)))
                                                             (* ; 
                                                "The source text was protected;  unprotect the copy.")
             (replace (PIECE PLOOKS) of PC with (\TEDIT.UNIQUIFY.CHARLOOKS (create CHARLOOKS
                                                                              using (PLOOKS PC)
                                                                                    CLPROTECTED _ NIL
                                                                                    CLSELHERE _ NIL)
                                                       TOOBJ)))
         PC])

(\TEDIT.DELETE
  [LAMBDA (SEL STREAM SELOFF)                                (* ; "Edited  2-Mar-2023 14:55 by rmk")
                                                             (* ; "Edited 22-Feb-2023 21:43 by rmk")
                                                             (* ; "Edited  6-Nov-2022 19:06 by rmk")
                                                             (* ; "Edited 22-Oct-2022 14:29 by rmk")
                                                             (* ; "Edited 23-Aug-2022 11:53 by rmk")
                                                             (* ; "Edited 21-Aug-2022 08:11 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; 
 "DELETE THE CHARACTERS SPECIFIED FROM THE MAIN TEXT. SELOFF => The selection is already turned off.")

    (LET*
     ((TEXTOBJ (TEXTOBJ STREAM))
      (CH# (fetch (SELECTION CH#) of SEL))
      (CHLIM (fetch (SELECTION CHLIM) of SEL))
      (LINES (fetch (TEXTOBJ LINES) of TEXTOBJ))
      (WINDOW (fetch (TEXTOBJ \WINDOW) of TEXTOBJ))
      LEN)

     (* ;; "Number of characters to delete.  Nothing to delete if  DCH=LEN=0")

     (SETQ LEN (fetch (SELECTION DCH) of SEL))

     (* ;; "If the selection isn't set, OR the document is read-only, OR the selection contains no characters, don't do anything.")

     (CL:UNLESS (OR (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)
                    (NOT (fetch (SELECTION SET) of SEL))
                    (ZEROP LEN))
         (CL:WHEN WINDOW (TEDIT.NORMALIZECARET TEXTOBJ SEL)) (* ; 
                                 "If the text appears in a window, move the deletion point on-screen")
         (\TEDIT.SHOWSELS TEXTOBJ NIL NIL)                   (* ; 
                                                             "Turn off the selection's highlighting")
         (\FIXDLINES SEL CH# CHLIM TEXTOBJ)                  (* ; 
                                            "Update the line descriptors to account for the deletion")
         (\DELETECH CH# CHLIM TEXTOBJ)                       (* ; 
                                                             "Do the actual deletion of characters")
         (replace THPOINT of (fetch (TEXTOBJ TXTHISTORY) of TEXTOBJ) with (fetch (SELECTION POINT)
                                                                             of SEL))
                                                             (* ; 
                           "Remember which side of the selection we were on, in case it gets undone.")
         (replace (SELECTION CH#) of SEL with (IMAX 1 CH#))
         (replace (SELECTION CHLIM) of SEL with (fetch (SELECTION CH#) of SEL))
         (replace (SELECTION POINT) of SEL with 'LEFT)
         (replace (SELECTION DCH) of SEL with 0)
         (CL:WHEN WINDOW                                     (* ; 
                                                       "If there's no window to update, don't bother")
             (for OLINE1 inside (fetch (SELECTION L1) of SEL) as OLINEN
                inside (fetch (SELECTION LN) of SEL) as TOPLINE inside (fetch (TEXTOBJ LINES)
                                                                          of TEXTOBJ) as PANE
                inside WINDOW
                do 
                   (* ;; "Remove any lines which were completely deleted.")

                   (\TEDIT.CLOSEUPLINES TEXTOBJ
                          (OR (AND OLINE1 (COND
                                             ((fetch (LINEDESCRIPTOR DELETED) of OLINE1)
                                              (fetch (LINEDESCRIPTOR PREVLINE) of OLINE1))
                                             (T OLINE1)))
                              (COND
                                 ([AND (fetch (LINEDESCRIPTOR NEXTLINE) of TOPLINE)
                                       (OR (IGEQ (fetch (LINEDESCRIPTOR LCHAR1)
                                                    of (fetch (LINEDESCRIPTOR NEXTLINE) of TOPLINE))
                                                 (fetch (SELECTION CHLIM) of SEL))
                                           (ILESSP (fetch (LINEDESCRIPTOR LCHARLIM)
                                                      of (fetch (LINEDESCRIPTOR NEXTLINE)
                                                            of TOPLINE))
                                                  (fetch (SELECTION CH#) of SEL]
                                                             (* ; 
        "The first line on the screen is already past where we're to delete.  DON'T delete any lines")
                                  NIL)
                                 (T TOPLINE)))
                          (AND OLINEN (COND
                                         ((fetch (LINEDESCRIPTOR DELETED) of OLINEN)
                                          (fetch (LINEDESCRIPTOR NEXTLINE) of OLINEN))
                                         (T OLINEN)))
                          NIL PANE))

             (* ;; "This line needs be reformatted the hard way--it isn't a left ragged line or one of the lines is off-screen.")

             (TEDIT.UPDATE.SCREEN TEXTOBJ T)                 (* ; 
                                                          "Correct the text that's displayed already")
             (\FIXSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                    TEXTOBJ)                                 (* ; 
                                                             "Then fix up the selection as needed.")
             (\TEDIT.SHOWSELS TEXTOBJ NIL T)))])

(\TEDIT.DIFFUSE.PARALOOKS
  [LAMBDA (PRIORPC SUCCEEDINGPC)                             (* ; "Edited 22-Oct-2022 22:22 by rmk")
                                                             (* ; "Edited  5-Sep-2022 14:32 by rmk")
                                                             (* ; "Edited 23-Aug-2022 08:40 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:48 by mitani")

    (* ;; "Given a discontinuity in paragraph looks, caused by an insertion or by a deletion: Diffuse the existing paragraph looks across the discontinuity, so that all the pieces in a single paragraph have consistent looks.  Give preference to diffusion toward the END of the document.  This means that if you delete an EOL between paragraphs, the second para is absorbed into the first.")

    (* ;; "PRIORPC and SUCCEEDINGPC are the pieces that bound the area of potential discontinuity: the change will occur at one boundary or the other.")

    (CL:WHEN (AND PRIORPC (NOT (PPARALAST PRIORPC)))         (* ; 
              "The discontinuity is inside a paragraph.  Must copy para looks forward into the text.")
        (for (PC _ (NEXTPIECE PRIORPC))
             (PPLOOKS _ (PPARALOOKS PRIORPC)) by (NEXTPIECE PC) while PC
           do                                                (* ; 
                                "Copy para looks info in from the left, up the the first para break.")
              (replace (PIECE PPARALOOKS) of PC with PPLOOKS) repeatuntil (PPARALAST PC)))
                                                             (* ; 
                                                        "If this piece ends a paragraph, we're done.")
    (CL:WHEN SUCCEEDINGPC                                    (* ; 
                                      "Copy para looks in from the right, up to the first para break")
        (for (PC _ (PREVPIECE SUCCEEDINGPC))
             (PPLOOKS _ (PPARALOOKS SUCCEEDINGPC)) by (PREVPIECE PC) while PC
           until (EQ PC PRIORPC) until (PPARALAST PC) do (replace (PIECE PPARALOOKS) of PC
                                                            with PPLOOKS)))])

(\TEDIT.FOREIGN.COPY?
  [LAMBDA (SEL)                                              (* ; "Edited 21-Oct-2022 18:44 by rmk")
                                                             (* ; "Edited  7-Sep-2022 23:36 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 21-Jan-93 11:46 by jds")

    (* ;; "IF the current process's window isn't a TEdit window, do a 'Copy' by BKSYSBUFing the selected text.  Then turn off all the various indicators.")

    (PROG (PROCW (SOURCE.TEXTOBJ (fetch (SELECTION SELTEXTOBJ) of SEL))
                 CH DEST.TEDIT? DEST.TEXTOBJ)
          [SETQ DEST.TEDIT? (AND (SETQ PROCW (PROCESSPROP (TTY.PROCESS)
                                                    'WINDOW))
                                 (SETQ DEST.TEXTOBJ (WINDOWPROP PROCW 'TEXTOBJ))
                                 (NOT (TEXTPROP DEST.TEXTOBJ 'COPYBYBKSYSBUF]
                                                             (* ; "Treat the destination specially if (1) the recipient process has a window, and (2) it's a TEdit window, and (3) the TEdit isn't declining special treatment by having COPYBYBKSYSBUF set in its props.")
          (COND
             ((ZEROP (fetch (SELECTION DCH) of SEL))         (* ; 
                                         "Nothing to copy (0 characters in selection); don't bother.")
              (SETQ TEDIT.COPY.PENDING NIL))
             ((IGREATERP (fetch (SELECTION CH#) of SEL)
                     (FETCH (TEXTOBJ TEXTLEN) OF SOURCE.TEXTOBJ))
                                                             (* ; 
                                   "Trying to copy from beyond the end of the document; don't bother")
              (SETQ TEDIT.COPY.PENDING NIL))
             ((OR (NOT DEST.TEDIT?)
                  (AND PROCW DEST.TEXTOBJ (NEQ SOURCE.TEXTOBJ DEST.TEXTOBJ)
                       (fetch (TEXTOBJ EDITOPACTIVE) of DEST.TEXTOBJ)))
                                                             (* ; 
                                                   "OK -- receiver isn't TEdit.  Do it the hard way.")
              [COND
                 [(AND (WINDOWPROP [OR PROCW (WFROMDS (PROCESS.TTY (TTY.PROCESS]
                              'COPYINSERTFN)
                       (PROGN                                (* ; 
                                                         "This is the exit for looked-string objects")
                              (OBJECTOUTOFTEDIT SOURCE.TEXTOBJ SEL]
                 (T                                          (* ; 
                         "Old tedit method, run if OBJECTOUTOFTEDIT is NILL (ie., not installed yet)")

                    (* ;; "Still used because COPYINSERT does (PRIN2 BKSYSBUF) if there's no insertfn, which cretes undesired string quotes.")
                                                             (* ; 
                                                             "Go to the first character to be copied")
                    (for I TSTREAM _ (fetch (TEXTOBJ STREAMHINT) of SOURCE.TEXTOBJ) from 1
                       to (fetch (SELECTION DCH) of SEL)
                       first (SETFILEPTR TSTREAM (SUB1 (fetch (SELECTION CH#) of SEL)))
                       do 
                          (* ;; "Run thru the selected text, copying only those items that really ARE characters--IMAGEOBJs don't get copied by this route.")

                          (COND
                             ((FIXP (SETQ CH (BIN TSTREAM)))
                              (BKSYSBUF (CHARACTER CH)))
                             (T (COPYINSERT CH]
              (\SHOWSEL SEL NIL NIL)                         (* ; 
                                                             "Then reset the copy-pending flags.")
              (SETQ TEDIT.COPY.PENDING NIL])

(\TEDIT.QUIT
  [LAMBDA (W NOFORCE)                                   (* ; "Edited 12-Jun-90 17:50 by mitani")
                                                             (* Called by the default 
                                                           TEDIT.DEFAULT.MENUFN to perform the 
                                                           QUIT command.)
    (PROG* ((TEXTOBJ (WINDOWPROP W 'TEXTOBJ))
            (QUITFNS (TEXTPROP TEXTOBJ 'QUITFN))
            QUITFLG RESP)
           [for QUITFN inside QUITFNS while (AND (NEQ QUITFLG 'DON'T)
                                                             (NEQ QUITFLG T))
              do (COND
                        ((EQ QUITFN T)
                         (SETQ QUITFLG T))
                        (T (AND QUITFN (NEQ QUITFN T)
                                (SETQ QUITFLG (APPLY* QUITFN W (fetch (TEXTOBJ STREAMHINT)
                                                                  of TEXTOBJ)
                                                     TEXTOBJ
                                                     (fetch (TEXTOBJ EDITPROPS) of 
                                                                                              TEXTOBJ
                                                            ]
           (COND
              ((EQ QUITFLG 'DON'T)

         (* The user supplied a QUITFN, and it returned "DON'T" %, so just ignore all 
       this Fooferaw and keep editing.)

               (RETURN))
              [(AND (fetch (TEXTOBJ \DIRTY) of TEXTOBJ)
                    (NOT (fetch (TEXTOBJ MENUFLG) of TEXTOBJ))
                    (NEQ QUITFNS T)
                    (NEQ QUITFLG T))

         (* If this document has changed, check with the user to make sure he really 
       wants to do it.)

               (replace (TEXTOBJ EDITFINISHEDFLG) of TEXTOBJ
                  with (MOUSECONFIRM "Not saved yet; LEFT to Quit anyway." T (fetch
                                                                                  (TEXTOBJ 
                                                                                         PROMPTWINDOW
                                                                                         )
                                                                                    of TEXTOBJ]
              (T                                             (* Go ahead and quit the next time 
                                                           we see the main command loop.)
                 (replace (TEXTOBJ EDITFINISHEDFLG) of TEXTOBJ with T)))
           [AND (fetch (TEXTOBJ \WINDOW) of TEXTOBJ)
                (NOT NOFORCE)
                (NEQ (\TEDIT.PRIMARYW TEXTOBJ)
                     (PROCESSPROP (TTY.PROCESS)
                            'WINDOW))
                (TTY.PROCESS (WINDOWPROP (\TEDIT.PRIMARYW TEXTOBJ)
                                    'PROCESS]
           (RETURN (fetch (TEXTOBJ EDITFINISHEDFLG) of TEXTOBJ])

(\TEDIT.WORDDELETE
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited  8-Sep-2022 17:18 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 29-May-91 18:22 by jds")

    (* ;; "Delete the word to the left of the caret.")

    (* ;; "Back word.")

    (* ;; "THIS FUNCTION IS FRAUGHT WITH FENCEPOST PROBLEM POTENTIAL, AND THE WHILE vs FOR LOGIC IS CONVOLUTED.  CAUTION, CAUTION.")

    (LET* ((SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
           (TSTREAM (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ))
           (READSA (fetch READSA of (OR (fetch (TEXTOBJ TXTWTBL) of TEXTOBJ)
                                        TEDIT.WORDBOUND.READTABLE)))
           (INSCH# (SELECTQ (fetch (SELECTION POINT) of SEL)
                       (LEFT (SUB1 (fetch (SELECTION CH#) of SEL)))
                       (RIGHT (SUB1 (fetch (SELECTION CHLIM) of SEL)))
                       NIL))
           CH CHNO)

          (* ;; "INSCH# is the final (i.e., highest-numbered) character to be deleted.")

          (COND
             ((IGREATERP INSCH# 0)                           (* ; 
                                                           "Don't try to back up past start of file.")
              (\TEXTSETFILEPTR TSTREAM (SUB1 INSCH#))
              (SETQ CH (BIN TSTREAM))
              (for old CHNO from INSCH# to 1 by -1
                 while [AND (SELECTC (COND
                                        ((FIXP CH)
                                         (\SYNCODE READSA CH))
                                        (T                   (* ; "It's an object!")
                                           TEXT.TTC))
                                (TEXT.TTC NIL)
                                T)
                            (NOT (fetch CLPROTECTED of (fetch (PIECE PLOOKS)
                                                          of (fetch (TEXTSTREAM PIECE) of TSTREAM]
                 do 
                    (* ;; "Skip over any initial separator characters")

                    (SETQ CH (\BACKBIN TSTREAM)))

              (* ;; "At this point, CH is the first non-separator character, and CHNO is the character number of the character BEFORE that one.")

              (for old CHNO from CHNO to 1 by -1
                 while [AND (SELECTC (COND
                                        ((FIXP CH)
                                         (\SYNCODE READSA CH))
                                        (T                   (* ; "It's an object!")
                                           TEXT.TTC))
                                (TEXT.TTC T)
                                NIL)
                            (NOT (fetch CLPROTECTED of (fetch (PIECE PLOOKS)
                                                          of (fetch (TEXTSTREAM PIECE) of TSTREAM]
                 do 
                    (* ;; "Skip over the next group of non-separators (= a 'word')")

                    (SETQ CH (\BACKBIN TSTREAM)))

              (* ;; "At this point, CH is the first separator character you encountered, and CHNO is the character number of the character BEFORE the separator, or 0 if you hit the front of the document.")

              (\SHOWSEL SEL NIL NIL)

              (* ;; "First character to delete:")

              [replace (SELECTION CH#) of SEL with (COND
                                                      ((ILESSP CHNO 1)
                                                             (* ; 
                                                   "Front of document, so start deleting at char # 1")
                                                       1)
                                                      (T     (* ; 
 "Otherwise, we need to start 1 later than the separator we hit, which is 2 higher than CHNO is now.")
                                                         (IPLUS 2 CHNO]
              (replace (SELECTION CHLIM) of SEL with (ADD1 INSCH#))
              (replace (SELECTION DCH) of SEL with (IDIFFERENCE INSCH# CHNO))
              (\FIXSEL SEL TEXTOBJ)
              (\SHOWSEL SEL NIL T)
              (\TEDIT.DELETE SEL TEXTOBJ])

(\TEDIT1
  [LAMBDA (TEXT WINDOW UNSPAWNED PROPS)                 (* ; "Edited 12-Jun-90 17:50 by mitani")

         (* Does the actual editing work, and re-coercion or process kill when done.
       Called by TEDIT directly, or ADD.PROCESSed by it.)

    (SETQ TEXT (OPENTEXTSTREAM TEXT WINDOW NIL NIL PROPS))   (* Open the text for editing)
    (\TEDIT.COMMAND.LOOP (fetch (TEXTSTREAM TEXTOBJ) of TEXT))
                                                             (* Run the editing engine)
    (CLOSEW WINDOW)
    (replace (TEXTOBJ \WINDOW) of (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
       with NIL)
    (AND (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                'AFTERQUITFN)
         (APPLY* (TEXTPROP (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                        'AFTERQUITFN)
                WINDOW TEXT))                                (* Apply any post-window-close
                                                           (and post-QUIT) function)
    (COND
       (UNSPAWNED                                            (* We're not a distinct process%: 
                                                           Send back the edited text in some 
                                                           suitable form)
              (COND
                 ((NEQ (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                   TEXTOBJ)
                                                                          of TEXT))
                       T)
                  (PROG1 (fetch (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                     TEXTOBJ)
                                                                            of TEXT))
                      (replace (TEXTOBJ EDITFINISHEDFLG) of (fetch (TEXTSTREAM
                                                                                    TEXTOBJ)
                                                                           of TEXT) with
                                                                                        NIL)))
                 ((STRINGP (fetch (TEXTOBJ TXTFILE) of (fetch (TEXTSTREAM TEXTOBJ
                                                                                     ) of TEXT)))
                  (COERCETEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TEXT)
                         'STRINGP))
                 (T TEXT])
)

(MOVD? 'NILL 'OBJECTOUTOFTEDIT)



(* ; "HOOK for looked-string copy, etc. Used in \TEDIT.FOREIGN.COPY?.")




(* ; "Object-oriented editing")

(DEFINEQ

(TEDIT.INSERT.OBJECT
  [LAMBDA (OBJECT TSTREAM CH#)                               (* ; "Edited  2-Mar-2023 14:58 by rmk")
                                                             (* ; "Edited  5-Nov-2022 10:49 by rmk")
                                                             (* ; "Edited  6-Sep-2022 19:45 by rmk")
                                                             (* ; "Edited 25-Aug-2022 12:58 by rmk")
                                                             (* ; "Edited 22-Aug-2022 13:18 by rmk")
                                                             (* ; "Edited 19-Aug-2022 19:20 by rmk")
                                                             (* ; "Edited 14-Aug-2022 21:22 by rmk")
                                                             (* ; "Edited  6-Aug-2022 17:57 by rmk")
                                                             (* ; "Edited 29-Jul-2022 11:14 by rmk")
                                                             (* ; "Edited 21-Apr-93 00:52 by jds")

    (* ;; "Inserts the Image-object OBJECT into text STREAM in front of character CH.")

    (LET* ((TEXTOBJ (TEXTOBJ TSTREAM))
           (SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
           SUBSTREAM START-OF-PIECE)
          (DECLARE (SPECVARS START-OF-PIECE))
          (BTVALIDATE 'TEDIT.INSERT.OBJECT 'START TEXTOBJ)
          (TEDIT.DO.BLUEPENDINGDELETE SEL TEXTOBJ)           (* ; 
                                                            "Do the pending delete, if there is one.")
          (CL:UNLESS CH#                                     (* ; 
                                                      "Omitted CH# means put it at the current spot.")
              (SETQ CH# SEL))
          (CL:WHEN (type? SELECTION CH#)

              (* ;; "If the CH# passed in was a selection (or we set it because he defaulted CH#), then compute the REAL CH#.")

              (SETQ CH# (SELECTQ (fetch (SELECTION POINT) of CH#)
                            (LEFT (fetch (SELECTION CH#) of CH#))
                            (RIGHT (fetch (SELECTION CHLIM) of CH#))
                            (SHOULDNT))))
          (PROG (TEXTLEN PC NEWPC PREVPC INSERTFN)
                (CL:WHEN (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)

                    (* ;; "If no changes are allowed to this TEdit, bail out without doing anything.")

                    (RETURN))
                (\SHOWSEL SEL NIL NIL)                       (* ; "Turn off the selection for now")
                (SETQ TEXTLEN (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ))
                (SETQ CH# (IMIN CH# (ADD1 TEXTLEN)))         (* ; 
                                                   "CH# we're to insert these characters in front of")
                (SETQ PC (\CHTOPC CH# TEXTOBJ T))            (* ; 
                                                        "Piece we're to insert in front of or inside")
                (SETQ NEWPC (create PIECE
                                   PCONTENTS _ OBJECT
                                   PLEN _ 1
                                   PTYPE _ OBJECT.PTYPE))    (* ; "The new piece we're inserting")
                (CL:WHEN (SETQ SUBSTREAM (IMAGEOBJPROP OBJECT 'SUBSTREAM))
                                                             (* ; 
                                                  "If this is computed text in bulk, fix the length.")
                    (freplace (PIECE PTYPE) of NEWPC with SUBSTREAM.PTYPE)
                    (replace (PIECE PLEN) of NEWPC with (fetch (TEXTOBJ TEXTLEN)
                                                           of (fetch (TEXTSTREAM TEXTOBJ)
                                                                 of SUBSTREAM))))
                (CL:UNLESS (OR (IGREATERP CH# TEXTLEN)
                               (IEQP CH# START-OF-PIECE))

                    (* ;; "Not on a piece boundary, split")

                    (SETQ PC (\SPLITPIECE PC (IDIFFERENCE CH# START-OF-PIECE)
                                    TEXTOBJ)))
                (\INSERTPIECE NEWPC PC TEXTOBJ)
                (CL:WHEN (SETQ INSERTFN (IMAGEOBJPROP OBJECT 'WHENINSERTEDFN))
                                                             (* ; 
                                                            "If there is a WHENINSERTEDFN, apply it.")
                    (APPLY* INSERTFN OBJECT (AND (CAR (fetch (TEXTOBJ \WINDOW) of TEXTOBJ))
                                                 (WINDOWPROP (CAR (fetch (TEXTOBJ \WINDOW)
                                                                     of TEXTOBJ))
                                                        'DSP))
                           NIL TSTREAM))                     (* ; "Fill in the para looks")
                [freplace (PIECE PPARALOOKS) of NEWPC with (COND
                                                              [(SETQ PREVPC (PREVPIECE NEWPC))
                                                               (COND
                                                                  ((AND (PPARALAST PREVPC)
                                                                        (NEXTPIECE NEWPC))
                                                                   (PPARALOOKS (NEXTPIECE NEWPC)))
                                                                  (T (PPARALOOKS PREVPC]
                                                              ((SETQ PREVPC (NEXTPIECE NEWPC))
                                                               (PPARALOOKS PREVPC))
                                                              (T (fetch (TEXTOBJ FMTSPEC)
                                                                    of TEXTOBJ]
                (replace (PIECE PLOOKS) of NEWPC with (fetch (TEXTOBJ CARETLOOKS) of TEXTOBJ))
                (\TEDIT.HISTORYADD TEXTOBJ (create TEDITHISTORYEVENT
                                                  THACTION _ 'Insert
                                                  THCH# _ CH#
                                                  THLEN _ 1
                                                  THFIRSTPIECE _ NEWPC))
                (replace (TEXTOBJ \DIRTY) of TEXTOBJ with T)
                (replace (THISLINE DESC) of (fetch (TEXTOBJ THISLINE) of TEXTOBJ) with NIL)
                (replace (SELECTION SELKIND) of SEL with 'CHAR)
                (COND
                   ((fetch (TEXTOBJ \WINDOW) of TEXTOBJ)
                    (\FIXILINES TEXTOBJ SEL CH# (PLEN NEWPC)
                           (SUB1 TEXTLEN))
                    (replace (SELECTION DCH) of SEL with 0)
                    (TEDIT.UPDATE.SCREEN TEXTOBJ)
                    (\FIXSEL SEL TEXTOBJ)
                    (\SHOWSEL SEL NIL T))
                   (T [replace (SELECTION CHLIM) of SEL with (replace (SELECTION CH#) of SEL
                                                                with (IPLUS CH# (PLEN NEWPC]
                      (replace (SELECTION DCH) of SEL with 0)
                      (replace (SELECTION POINT) of SEL with 'LEFT)
                      (replace (THISLINE DESC) of (fetch (TEXTOBJ THISLINE) of TEXTOBJ) with NIL)))
                (BTVALIDATE 'TEDIT.INSERT.OBJECT 'END TEXTOBJ)
                (\COPYSEL SEL TEDIT.SELECTION])

(TEDIT.EDIT.OBJECT
  [LAMBDA (STREAM OBJ)                                       (* ; "Edited 21-Oct-2022 18:37 by rmk")
                                                             (* ; "Edited 29-May-91 18:23 by jds")
    (PROG ([TEXTOBJ (COND
                       ((type? TEXTOBJ STREAM)
                        STREAM)
                       ((type? STREAM STREAM)
                        (fetch (TEXTSTREAM TEXTOBJ) of STREAM))
                       ((SHOULDNT]
           SEL LL CH# SELOBJ EDITFN)
          [COND
             [(AND OBJ (IMAGEOBJP OBJ))
              (SETQ CH# (TEDIT.FIND.OBJECT TEXTOBJ OBJ))
              (COND
                 (CH# (SETQ SEL (fetch (TEXTOBJ SCRATCHSEL) of TEXTOBJ))
                      (replace (SELECTION CH#) of SEL with CH#)
                      (replace (SELECTION CHLIM) of SEL with (ADD1 CH#))
                      (SETQ SELOBJ OBJ)
                      (replace (SELECTION DCH) of SEL with 1)
                      (replace (SELECTION SELTEXTOBJ) of SEL with TEXTOBJ)
                      (\FIXSEL SEL TEXTOBJ))
                 (T (TEDIT.PROMPTPRINT TEXTOBJ "Can't find specified object." T]
             (T (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                (SETQ OBJ (fetch (SELECTION SELOBJ) of SEL]
          (COND
             [OBJ                                            (* OK There's an object selected.
                                                             Edit it.)
                  (SETQ EDITFN (IMAGEOBJPROP OBJ 'EDITFN))
                  (COND
                     ((AND EDITFN (APPLY* EDITFN OBJ))       (* If the editfn makes a change, 
                                                             update the screen.)
                      (for LINE inside (fetch (SELECTION L1) of SEL)
                         do (replace (LINEDESCRIPTOR DIRTY) of LINE with T))
                      (replace (TEXTOBJ TXTNEEDSUPDATE) of TEXTOBJ with T)
                      (TEDIT.UPDATE.SCREEN TEXTOBJ]
             (T                                              (* No object selected.)
                (TEDIT.PROMPTPRINT TEXTOBJ "Please select an editable object first." T])

(TEDIT.FIND.OBJECT
  [LAMBDA (TEXTOBJ OBJ)                                      (* ; "Edited  6-Nov-2022 11:12 by rmk")
                                                             (* ; "Edited  3-May-93 12:52 by jds")
    (for CH# from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (EQ OBJ (PCONTENTS PC)) do (RETURN CH#])

(TEDIT.PUT.OBJECT
  [LAMBDA (PIECE OFILE FONTFILE CURCH#)                      (* ; "Edited  6-Aug-2022 10:02 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:49 by mitani")

    (* ;; "Given a piece which describes an object, put the object out there.")

    (LET ((OBJECT (fetch (PIECE PCONTENTS) of PIECE))
          (FONTCH# (GETFILEPTR FONTFILE))
          TOFILE LEN)
         (\DWOUT FONTFILE 0)                                 (* ; 
                                                 "Placeholder for length of the object's description")
         (\SMALLPOUT FONTFILE \PieceDescriptorOBJECT)        (* ; 
                                                             "Mark this as setting the piece's looks")
         (\ATMOUT FONTFILE (IMAGEOBJPROP OBJECT 'GETFN))     (* ; 
                                                          "The FN to apply to reconstruct the object")
         (APPLY* (IMAGEOBJPROP OBJECT 'PUTFN)
                OBJECT OFILE)
         (SETFILEPTR FONTFILE FONTCH#)                       (* ; 
                          "Now go back and fill in the length of the text description of the object.")
         [\DWOUT FONTFILE (SETQ LEN (ADD1 (IDIFFERENCE (GETEOFPTR OFILE)
                                                 CURCH#]
         (SETFILEPTR FONTFILE -1)                            (* ; 
                                                        "Make sure we're at the end of the font file")
         (AND (RANDACCESSP OFILE)
              (SETFILEPTR OFILE -1))                         (* ; "And the text part of the file")
         LEN])

(TEDIT.GET.OBJECT
  [LAMBDA (TSTREAM PIECE FILE CURFILEBYTE#)                  (* ; "Edited 12-Oct-2022 14:10 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:50 by mitani")

    (* ;; "Get an object from the file")

    (* ;; "CURFILEBYTE# = fileptr within the text section of the file where the object's text starts. On entry the file is positioned just before the object's GETFN in the looks section of the file. On exit, the fileptr points just after the GETFN in the looks section, after having been detoured to the text section for the getfn to read the object's data.")

    (PROG ((TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of TSTREAM))
           FILEPTRSAVE NAMELEN GETFN OBJ NBYTES)

     (* ;; "rrb 10-AUG-87 --- calculate the length of the image object's data.  This assumes that the file is currently pointed at the end of the data which is where the GETFN is written {I think}")

          (SETQ NBYTES (DIFFERENCE (GETFILEPTR FILE)
                              CURFILEBYTE#))
          (SETQ GETFN (\ATMIN FILE))                         (* ; 
                                                             "The GETFN for this kind of IMAGEOBJ")
          (SETQ FILEPTRSAVE (GETFILEPTR FILE))               (* ; 
                                             "Save our file location thru the building of the object")
          (SETFILEPTR FILE CURFILEBYTE#)
          (SETQ OBJ (READIMAGEOBJ FILE GETFN NIL NBYTES))
          (CL:WHEN (IMAGEOBJPROP OBJ 'UNKNOWNGETFN)          (* ; 
      "If the object has an unknown getfn property, then it's an encapsulated object.  Warn the user")
              (TEDIT.PROMPTPRINT TSTREAM "WARNING: Document contains unknown image objects." T))
          (SETFILEPTR FILE FILEPTRSAVE)
          (replace (PIECE PCONTENTS) of PIECE with OBJ)
          [replace (PIECE PLOOKS) of PIECE with (COND
                                                   ((PREVPIECE PIECE)
                                                    (PLOOKS (PREVPIECE PIECE)))
                                                   (T (OR (fetch (TEXTOBJ DEFAULTCHARLOOKS)
                                                             of TEXTOBJ)
                                                          (\TEDIT.UNIQUIFY.CHARLOOKS (
                                                                                  CHARLOOKS.FROM.FONT
                                                                                      DEFAULTFONT)
                                                                 TEXTOBJ]
          (freplace (PIECE PTYPE) of PIECE WITH (CL:IF (IMAGEOBJPROP OBJ 'SUBSTREAM)
                                                    SUBSTREAM.PTYPE
                                                    OBJECT.PTYPE))
          (RETURN OBJ])

(TEDIT.OBJECT.CHANGED
  [LAMBDA (TSTREAM OBJECT)                                   (* ; "Edited  9-Sep-2022 09:32 by rmk")
                                                             (* ; "Edited  6-Aug-2022 09:37 by rmk")
                                                            (* ; "Edited 12-Jun-90 17:51 by mitani")
                                                             (* ; 
                   "Notify TEdit that an object has changed, and the display may need to be updated.")
    (LET ((TEXTOBJ (TEXTOBJ TSTREAM))
          OBJPIECE CHANGEDCH#)
         (SETQ OBJPIECE (find (PC _ (\FIRSTPIECE TEXTOBJ)) suchthat (EQ OBJECT (PCONTENTS PC))
                           by (NEXTPIECE PC) while PC))      (* ; 
                                                             "Find the piece containing this object")
         (CL:UNLESS OBJPIECE (HELP "Changed OBJECT not found!?"))
         (SETQ CHANGEDCH# (\PCTOCH OBJPIECE))                (* ; "Get the CH# of the changed object")
         (\TEDIT.MARK.LINES.DIRTY TEXTOBJ CHANGEDCH# CHANGEDCH#)
                                                             (* ; "Mark affected lines")
         (replace (TEXTOBJ \DIRTY) of TEXTOBJ with T)        (* ; "And mark the document dirty.")
         (\SHOWSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                NIL NIL)
         (TEDIT.UPDATE.SCREEN TEXTOBJ)
         (\FIXSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                TEXTOBJ)
         (\SHOWSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
                NIL T])

(TEDIT.MAP.OBJECTS
  [LAMBDA (TEXTOBJ FN FNARG COLLECT?)                        (* ; "Edited  6-Nov-2022 12:15 by rmk")

    (* ;; "Apply FN to each of the imageobjects in TEXTOBJ.  If COLLECT? value is the list of (CH# OBJ FNVAL) pairs that satisfy the predicate")

    (* ;; "FN is a function of 3 args (OBJ   CH#-of-OBJ    FNARG)")

    (for CH# OBJ FNVAL from 1 by (PLEN PC) as PC inpieces (\FIRSTPIECE (TEXTOBJ TEXTOBJ))
       when (AND (EQ OBJECT.PTYPE (PTYPE PC))
                 (type? IMAGEOBJ (SETQ OBJ (PCONTENTS PC)))
                 (SETQ FNVAL (APPLY* FN CH# OBJ FNARG)))
       do (CL:WHEN COLLECT?
              (PUSH $$VAL (LIST CH# OBJ FNVAL)))
          (CL:WHEN (EQ FNVAL 'STOP)
                 (GO $$OUT)) finally (RETURN (DREVERSE $$VAL])
)

(FILESLOAD IMAGEOBJ)



(* ;; 
"Would be nice to just do (DOFILESLOAD (CDR TEDITFILES)).  But the order for exports.all and the order for loading have to be aligned."
)


(FILESLOAD TEDIT-FIND TEDIT-HISTORY TEDIT-FILE TEDIT-WINDOW TEDIT-SELECTION TEDIT-TFBRAVO TEDIT-HCPY
       TEDIT-PAGE TEDIT-MENU TEDIT-FNKEYS)



(* ; "TEDIT Support information")


(RPAQQ TEDITSYSTEMDATE " 2-Mar-2023 14:59:10")



(* ; "LISTFILES Interface, so the system can decide if a file is a TEdit file.")


(ADDTOVAR PRINTFILETYPES (TEDIT (TEST \TEDIT.FORMATTEDP1)
                                (EXTENSION (TEDIT))))
(PUTPROPS TEDIT COPYRIGHT ("Venue & Xerox Corporation" 1983 1984 1985 1986 1987 1988 1989 1990 1991 
1992 1993 1995 1999 2018 2021))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (3944 5381 (MAKE-TEDIT-EXPORTS.ALL 3954 . 4211) (UPDATE-TEDIT 4213 . 4826) (EDIT-TEDIT 
4828 . 5379)) (6231 6524 (\CREATE.TEDIT.RESTART.MENU 6241 . 6522)) (6899 56514 (TEDIT 6909 . 12245) (
COERCETEXTOBJ 12247 . 18375) (TEDITSTRING 18377 . 18936) (TEDIT-SEE 18938 . 21091) (TEDIT.CHARWIDTH 
21093 . 23117) (TEDIT.COPY 23119 . 31748) (TEDIT.DELETE 31750 . 32530) (TEDIT.INSERT 32532 . 36546) (
TEDIT.KILL 36548 . 38105) (TEDIT.MAPPIECES 38107 . 39169) (TEDIT.QUIT 39171 . 41171) (
TEDIT.DO.BLUEPENDINGDELETE 41173 . 43841) (TEDIT.MOVE 43843 . 53015) (TEDIT.STRINGWIDTH 53017 . 53688)
 (TEXTOBJ 53690 . 54815) (TEXTSTREAM 54817 . 56512)) (56560 110429 (\TEDIT2 56570 . 59321) (
TEDIT.\INSERT 59323 . 61115) (\TEDIT.INCLUDE 61117 . 65017) (\TEDIT.INSERT.PIECES 65019 . 73033) (
\TEDIT.MOVE.PIECEMAPFN 73035 . 74671) (\TEDIT.OBJECT.SHOWSEL 74673 . 78741) (\TEDIT.RESTARTFN 78743 . 
80816) (\TEDIT.CHARDELETE 80818 . 84184) (\TEDIT.COPYPIECE 84186 . 87657) (\TEDIT.DELETE 87659 . 93652
) (\TEDIT.DIFFUSE.PARALOOKS 93654 . 95950) (\TEDIT.FOREIGN.COPY? 95952 . 100037) (\TEDIT.QUIT 100039
 . 103185) (\TEDIT.WORDDELETE 103187 . 107729) (\TEDIT1 107731 . 110427)) (110583 128209 (
TEDIT.INSERT.OBJECT 110593 . 118328) (TEDIT.EDIT.OBJECT 118330 . 120685) (TEDIT.FIND.OBJECT 120687 . 
121094) (TEDIT.PUT.OBJECT 121096 . 122795) (TEDIT.GET.OBJECT 122797 . 125723) (TEDIT.OBJECT.CHANGED 
125725 . 127373) (TEDIT.MAP.OBJECTS 127375 . 128207)))))
STOP
