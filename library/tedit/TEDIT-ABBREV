(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "28-Mar-2025 10:13:36" {WMEDLEY}<library>tedit>TEDIT-ABBREV.;21 15982  

      :EDIT-BY rmk

      :CHANGES-TO (FNS \TEDIT.ABBREV.PARSE)

      :PREVIOUS-DATE "23-Mar-2025 17:09:00" {WMEDLEY}<library>tedit>TEDIT-ABBREV.;20)


(PRETTYCOMPRINT TEDIT-ABBREVCOMS)

(RPAQQ TEDIT-ABBREVCOMS
       [(FNS \TEDIT.ABBREV.EXPAND \TEDIT.ABBREV.PARSE \TEDIT.EXPAND.DATE \TEDIT.TRY.ABBREV)
        (GLOBALVARS TEDIT.ABBREVS)
        (INITVARS (TEDIT.ABBREVS '(("b" . "357,146")
                                   ("n" . "357,44")
                                   ("m" . "357,45")
                                   ("T" . "357,57")
                                   ("d" . "357,60")
                                   ("D" . "357,61")
                                   ("s" . "0,247")
                                   ("'" . "0,271")
                                   ("`" . "0,251")
                                   ("%"" . "0,252")
                                   ("~" . "0,272")
                                   ("1/4" . "0,274")
                                   ("1/2" . "0,275")
                                   ("3/4" . "0,276")
                                   ("1/3" . "357,375")
                                   ("2/3" . "357,376")
                                   ("c" . "0,323")
                                   ("c/o" . "357,100")
                                   ("%%" . "357,100")
                                   ("->" . "0,256")
                                   ("ra" . "0,256")
                                   ("|" . "0,257")
                                   ("da" . "0,257")
                                   ("^" . "0,255")
                                   ("ua" . "0,255")
                                   ("<-" . "0,254")
                                   ("la" . "0,254")
                                   ("_" . "0,254")
                                   ("L" . "0,243")
                                   ("o" . "0,260")
                                   ("Y" . "0,245")
                                   ("+" . "0,261")
                                   ("x" . "0,264")
                                   ("/" . "0,270")
                                   ("=" . "357,121")
                                   ("p" . "0,266")
                                   ("r" . "0,322")
                                   ("t" . "0,324")
                                   ("tm" . "0,324")
                                   ("box" . "42,42")
                                   ("cbox" . "42,61")
                                   ("-" . "357,43")
                                   ("=" . "357,42")
                                   (" " . "357,41")
                                   ("DATE" . \TEDIT.EXPAND.DATE)
                                   (">>DATE<<" . \TEDIT.EXPAND.DATE])
(DEFINEQ

(\TEDIT.ABBREV.EXPAND
  [LAMBDA (TSTREAM TEXTOBJ SEL)                              (* ; "Edited 20-Mar-2025 21:52 by rmk")
                                                             (* ; "Edited 30-May-91 19:27 by jds")
                                                             (* ; "Expand an abbvreviation")
    (LET ((CANDIDATES (\TEDIT.ABBREV.PARSE TSTREAM SEL))
          CAND EXPANSION)

         (* ;; "Candidates are ordered longest first, so D doesn't override EMDASH.")

         (* ;; "Try literal match first, then fiddle the case.")

         (* ;; "If we don't find it in abbrevs, try for a character code.")

         [SETQ CAND (OR (find C in CANDIDATES suchthat (SETQ EXPANSION (\TEDIT.TRY.ABBREV
                                                                        (CAR C)
                                                                        TSTREAM)))
                        (for C in CANDIDATES suchthat (SETQ EXPANSION (\TEDIT.TRY.ABBREV
                                                                       (U-CASE (CAR C))
                                                                       TSTREAM)))
                        (for C in CANDIDATES suchthat (SETQ EXPANSION (\TEDIT.TRY.ABBREV
                                                                       (L-CASE (CAR C))
                                                                       TSTREAM]
         (if EXPANSION
             then (\TEDIT.UPDATE.SEL SEL (CADR CAND)
                         (CADDR CAND)
                         'RIGHT
                         'NORMAL)                            (* ; "Set the target")
                  (\TEDIT.REPLACE.SELPIECES (\TEDIT.SELPIECES.FROM.STRING EXPANSION TEXTOBJ NIL
                                                   (PCHARLOOKS (\TEDIT.CHTOPC (CADR CAND)
                                                                      TEXTOBJ)))
                         TEXTOBJ SEL)
           else (TEDIT.PROMPTPRINT TSTREAM "No abbreviation to expand" T])

(\TEDIT.ABBREV.PARSE
  [LAMBDA (TSTREAM SEL)                                      (* ; "Edited 28-Mar-2025 10:11 by rmk")
                                                             (* ; "Edited 23-Mar-2025 17:08 by rmk")
                                                             (* ; "Edited 20-Mar-2025 22:21 by rmk")

    (* ;; "This produces candidate abbreviation-strings by parsing the characters around the point.  Each candidate is returned as a list (KEY STARTCH# LEN).")

    (* ;; 
    "It first backs up  over any spaces to find the anchor position.  The candidates then include")

    (* ;; "     The immediately preceding singleton character, if a point selection")

    (* ;; "     The remaining (after backing up) characters of the selection.")

    (* ;; "     The word that contains the caret (backwards and forwards)")

    (* ;; " If the character before a candidate C is a comma, then the word before W before the comma (without or without \)  is extracted, and W,C is is added to the list (a possible charname).")

    (* ;; "If the character before a candidate C is \, the \ is included in the replacement span, and \C is also added to the list (Tex style)")

    (* ;; "If one of the candidates is a character name, the abbreviation exapnds to the corresponding character.")

    (* ;; "Otherwise, the candidates are looked up in TEDIT.ABBREVS to find their expansions.")

    (PROG ((PT# (SUB1 (TEDIT.GETPOINT TSTREAM SEL)))
           FIRST# LAST# LEN CANDIDATES KEY NSPACES)

     (* ;; "The abbreviation is taken from the CH# of the current selection.  It is either the character just before a point selection, the entire selection, or the word containing the selection.")

     (* ;; "    The character at CH#, if it is a point selection")

     (* ;; "     Otherwise either the current selection up to and including CH# or the full word that includes the selection.  What works is determined by what it finds in the abbreviations list.")

     (* ;; "Back up over spaces")

          (SETQ NSPACES (for I from PT# by -1 while (EQ (CHARCODE SPACE)
                                                        (\TEDIT.NTHCHARCODE TSTREAM I)) sum 1))
          (add PT# (IMINUS NSPACES))
          (CL:WHEN (ZEROP PT#)                               (* ; "Beginning of document")
              (RETURN))

     (* ;; "Each candidate is a triple containing the key and the starting character and length of the replacement target..")

          (push CANDIDATES (LIST (MKSTRING (TEDIT.NTHCHAR TSTREAM PT#))
                                 PT# 1))
          (SETQ LEN (IMAX 0 (IDIFFERENCE (FGETSEL SEL DCH)
                                   NSPACES)))                (* ; "Last singleton predecessor")
          (CL:WHEN (IGEQ LEN 2)                              (* ; "At least one more character")
              (push CANDIDATES (LIST (TEDIT.SEL.AS.STRING TSTREAM (FGETSEL SEL CH#)
                                            LEN)
                                     (FGETSEL SEL CH#)
                                     LEN)))
          (SETQ FIRST# (\TEDIT.WORD.FIRST TSTREAM PT#))
          (SETQ LEN (ADD1 (IDIFFERENCE PT# FIRST#)))
          (CL:UNLESS (EQ LEN 1)                              (* ; "Already there")
              (push CANDIDATES (LIST (TEDIT.SEL.AS.STRING TSTREAM FIRST# LEN)
                                     FIRST# LEN)))
          (SETQ LAST# (\TEDIT.WORD.LAST TSTREAM FIRST#))
          (SETQ LEN (ADD1 (IDIFFERENCE LAST# FIRST#)))
          (CL:UNLESS (EQ LEN 1)                              (* ; "Already there")
              (push CANDIDATES (LIST (TEDIT.SEL.AS.STRING TSTREAM FIRST# LEN)
                                     FIRST# LEN)))           (* ; "Extend if a ,")
          [for C KEY END in CANDIDATES
             do 
                (* ;; "Comma for XCCS character names, - and / - for internal punctuation (3/4 EM-DASH). Adjacent character must be text")

                (if [AND (MEMB (\TEDIT.NTHCHARCODE TSTREAM (SUB1 (CADR C)))
                               (CHARCODE (%, / -)))
                         (EQ (\TEDIT.TTC TEXT)
                             (TEDIT.WORDGET (\TEDIT.NTHCHARCODE TSTREAM (IDIFFERENCE (CADR C)
                                                                               2]
                    then (SETQ END (\TEDIT.WORD.FIRST TSTREAM (IDIFFERENCE (CADR C)
                                                                     2))) 
                                                             (* ; "Comma before, maybe a charname")
                         (SETQ KEY (CONCAT (TEDIT.SEL.AS.STRING TSTREAM END (IDIFFERENCE (CADR C)
                                                                                   END))
                                          (CAR C)))
                         (push CANDIDATES (LIST KEY END (NCHARS KEY)))
                  elseif [AND (MEMB (\TEDIT.NTHCHARCODE TSTREAM (IPLUS (CADR C)
                                                                       (CADDR C)))
                                    (CHARCODE (%, / -)))
                              (EQ (\TEDIT.TTC TEXT)
                                  (TEDIT.WORDGET (\TEDIT.NTHCHARCODE TSTREAM (IPLUS 1 (CADR C)
                                                                                    (CADDR C]
                    then [SETQ END (\TEDIT.WORD.LAST TSTREAM (ADD1 (IPLUS (CADR C)
                                                                          (CADDR C] 
                                                             (* ; "Comma after")
                         [SETQ KEY (CONCAT (CAR C)
                                          (TEDIT.SEL.AS.STRING TSTREAM (IPLUS (CADR C)
                                                                              (CADDR C))
                                                 (ADD1 (IDIFFERENCE END (IPLUS (CADR C)
                                                                               (CADDR C]
                         (push CANDIDATES (LIST KEY (CADR C)
                                                (NCHARS KEY] (* ; 
           "If preceded by \, include it optionally in the key, always include it in the replacement")
          (for C in CANDIDATES when [EQ (CHARCODE \)
                                        (\TEDIT.NTHCHARCODE TSTREAM (SUB1 (CADR C]
             do                                              (* ; "Match and replace \KEY")
                [push CANDIDATES (LIST (CONCAT "\" (CAR C))
                                       (SUB1 (CADR C))
                                       (ADD1 (CADDR C]
                (change (CADR C)
                       (SUB1 DATUM))                         (* ; "Match KEY but also replace the \")
                (change (CADDR C)
                       (ADD1 DATUM)))
          [SORT CANDIDATES (FUNCTION (LAMBDA (C1 C2)
                                       (IGEQ (CADDR C1)
                                             (CADDR C2]      (* ; "Look for longest first")
          (RETURN CANDIDATES])

(\TEDIT.EXPAND.DATE
  [LAMBDA (STREAM CH)                                        (* ; "Edited 23-Feb-88 10:41 by jds")

    (* ;; "Provide the date as the expansion for an abbreviation")

    (PROG* ((DATE (\UNPACKDATE))
            (YEAR (pop DATE))
            (MONTH (pop DATE))
            (DAY (pop DATE)))
           (RETURN (CONCAT (CAR (NTH '("January" "February" "March" "April" "May" "June" "July" 
                                             "August" "September" "October" "November" "December")
                                     (ADD1 MONTH)))
                          " " DAY ", " YEAR])

(\TEDIT.TRY.ABBREV
  [LAMBDA (KEY TSTREAM)                                      (* ; "Edited 20-Mar-2025 21:52 by rmk")
                                                            (* ; "Edited  6-Aug-2020 14:41 by rmk:")
                                                             (* jds "11-Jul-85 12:46")

    (* ;; "Decode the expansion. A string may be a character name, otherwise itself.  A litatom is a function to be applied, anything else is evaled. ")

    (LET ((ABBREV (SASSOC KEY TEDIT.ABBREVS)))
         (if (NULL ABBREV)
             then (CL:WHEN (CHARCODE.DECODE KEY T)
                      (CHARACTER (CHARCODE.DECODE KEY T)))
           elseif (STRINGP (CDR ABBREV))
             then 
                  (* ;; "Could be a character code")

                  (LET ((CH (CHARCODE.DECODE (CDR ABBREV)
                                   T)))
                       (CL:IF CH
                           (CHARACTER CH)
                           (CDR ABBREV)))
           elseif (SMALLP (CDR ABBREV))
             then 
                  (* ;; "Treat a number as a character code.")

                  (CHARACTER (CDR ABBREV))
           elseif (AND (LITATOM (CDR ABBREV))
                       (GETD (CDR ABBREV)))
             then                                            (* ; "It's a function to be called.")
                  (APPLY* (CDR ABBREV)
                         TSTREAM
                         (CAR ABBREV))
           else                                              (* ; "Anything else is a form to EVAL.")
                (EVAL (CDR ABBREV])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.ABBREVS)
)

(RPAQ? TEDIT.ABBREVS
       '(("b" . "357,146")
         ("n" . "357,44")
         ("m" . "357,45")
         ("T" . "357,57")
         ("d" . "357,60")
         ("D" . "357,61")
         ("s" . "0,247")
         ("'" . "0,271")
         ("`" . "0,251")
         ("%"" . "0,252")
         ("~" . "0,272")
         ("1/4" . "0,274")
         ("1/2" . "0,275")
         ("3/4" . "0,276")
         ("1/3" . "357,375")
         ("2/3" . "357,376")
         ("c" . "0,323")
         ("c/o" . "357,100")
         ("%%" . "357,100")
         ("->" . "0,256")
         ("ra" . "0,256")
         ("|" . "0,257")
         ("da" . "0,257")
         ("^" . "0,255")
         ("ua" . "0,255")
         ("<-" . "0,254")
         ("la" . "0,254")
         ("_" . "0,254")
         ("L" . "0,243")
         ("o" . "0,260")
         ("Y" . "0,245")
         ("+" . "0,261")
         ("x" . "0,264")
         ("/" . "0,270")
         ("=" . "357,121")
         ("p" . "0,266")
         ("r" . "0,322")
         ("t" . "0,324")
         ("tm" . "0,324")
         ("box" . "42,42")
         ("cbox" . "42,61")
         ("-" . "357,43")
         ("=" . "357,42")
         (" " . "357,41")
         ("DATE" . \TEDIT.EXPAND.DATE)
         (">>DATE<<" . \TEDIT.EXPAND.DATE)))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (2933 14638 (\TEDIT.ABBREV.EXPAND 2943 . 5054) (\TEDIT.ABBREV.PARSE 5056 . 12340) (
\TEDIT.EXPAND.DATE 12342 . 12975) (\TEDIT.TRY.ABBREV 12977 . 14636)))))
STOP
