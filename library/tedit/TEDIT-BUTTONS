(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 5-Dec-2024 21:11:01" {WMEDLEY}<library>tedit>TEDIT-BUTTONS.;183 114482 

      :EDIT-BY rmk

      :CHANGES-TO (FNS MB.FIELD.BUTTONEVENTINFN MB.NWAY.BUTTONEVENTINFN)

      :PREVIOUS-DATE " 5-Dec-2024 15:12:31" {WMEDLEY}<library>tedit>TEDIT-BUTTONS.;179)


(PRETTYCOMPRINT TEDIT-BUTTONSCOMS)

(RPAQQ TEDIT-BUTTONSCOMS
       [
        (* ;; 
        "Implementation of the various kinds of menu buttons:  Action, toggle, 3state, N-way, field")

        (COMS                                                (* ; 
                                                "Generic functions for the various types of buttons.")
              (RECORDS MBARG)
              (FNS MB.ADD MB.DELETE MB.GET MB.GET.MBARG TEDITMENU.STREAM TEDIT.BACKTOMAIN))
        [COMS                                                (* ; "Simple Menu Button support")
              (FNS MB.BUTTONEVENTINFN MB.DISPLAYFN MB.SETIMAGE MB.SIZEFN MB.WHENOPERATEDONFN 
                   MB.COPYFN MB.GETFN MB.PUTFN MB.SHOWSELFN MB.CREATE MB.CHANGENAME MB.INIT 
                   MB.TRACK.UNTIL)
              (GLOBALVARS MB.IMAGEFNS)
              (DECLARE%: DONTEVAL@LOAD DOCOPY (P (MB.INIT]
        [COMS                                                (* ; "3STATE")
              
              (* ;; "ON-OFF-NEUTRAL menu buttons, for, e.g., character properties like BOLD")

              (FNS MB.3STATE.CREATE MB.3STATE.DISPLAYFN MB.3STATE.SHOWSELFN MB.3STATE.INIT 
                   MB.3STATE.SETSTATEFN MB.3STATE.BUTTONEVENTINFN)
              (GLOBALVARS MB.3STATE.IMAGEFNS)
              (DECLARE%: DONTEVAL@LOAD DOCOPY (P (MB.3STATE.INIT]
        [COMS                                                (* ; "NWAY")
              (FNS MB.NWAY.CREATE MB.NWAY.DISPLAYFN MB.NWAY.WHENOPERATEDONFN MB.NWAY.SIZEFN 
                   MB.NWAY.SELECT MB.NWAY.BUTTONEVENTINFN MB.NWAY.NEWMENUBUTTON MB.NWAY.COPYFN 
                   MB.NWAY.INIT MB.NWAY.ARRANGEBUTTONS MB.NWAY.ADDITEM MB.NWAY.FINDSUBOBJ 
                   MB.NWAY.SETSTATEFN)
              (GLOBALVARS MB.NWAY.IMAGEFNS)
              (DECLARE%: DONTEVAL@LOAD DOCOPY (P (MB.NWAY.INIT]
        [COMS                                                (* ; "TOGGLE")
              (FNS MB.TOGGLE.CREATE MB.TOGGLE.DISPLAYFN MB.TOGGLE.INIT MB.SET.TOGGLE 
                   MB.TOGGLE.SETSTATEFN MB.TOGGLE.BUTTONEVENTINFN MB.TOGGLE.WHENOPERATEDONFN)
              (GLOBALVARS MB.TOGGLE.IMAGEFNS)
              (DECLARE%: DONTEVAL@LOAD DOCOPY (P (MB.TOGGLE.INIT]
        (COMS                                                (* ; "FIELDS")
              (FNS MB.FIELD.CREATE MB.FIELD.DISPLAYFN MB.FIELD.IMAGEBOXFN MB.FIELD.PREFIXCREATE 
                   MB.FIELD.SUFFIXCREATE MB.FIELD.INIT MB.FIELD.WHENOPERATEDONFN MB.FIELD.GETSTATEFN
                   MB.FIELD.SETSTATEFN MB.FIELD.BUTTONEVENTINFN MB.FIELD.SIZEFN MB.FIELD.INSURETYPE)
              (GLOBALVARS MB.FIELD.IMAGEFNS)
              (DECLARE%: DONTEVAL@LOAD DOCOPY (P (MB.FIELD.INIT])



(* ;; "Implementation of the various kinds of menu buttons:  Action, toggle, 3state, N-way, field")




(* ; "Generic functions for the various types of buttons.")

(DECLARE%: EVAL@COMPILE

(RECORD MBARG (ARGSTATE ARGOBJ ARGSTARTPC ARGENDPC ARGIDPC))
)
(DEFINEQ

(MB.ADD
  [LAMBDA (MENUDESC MENUTSTREAM WHERE)                       (* ; "Edited 22-Oct-2024 09:16 by rmk")
                                                             (* ; "Edited 21-Oct-2024 00:26 by rmk")
                                                             (* ; "Edited 18-Oct-2024 13:49 by rmk")
                                                             (* ; "Edited  6-Oct-2024 15:25 by rmk")
                                                             (* ; "Edited 24-Aug-2024 21:08 by rmk")
    (DECLARE (SPECVARS MENUTSTREAM))
    (SETQ MENUTSTREAM (TEXTSTREAM MENUTSTREAM))              (* ; "Edited 22-Aug-2024 11:10 by rmk")

    (* ;; "MENUDESC is a Tedit menu specification, a list of items describing one or more elements to be inserted in TSTREAM after WHERE. ")

    (* ;; "This is a user entry for adding items to a Tedit menu.")

    (* ;; "If button-type is a list, it is interpreted as form to be evaluated, with MENUTSTREAM and the current CH# available as free variables.  The result of the evaluation should be the increment in CH#.")

    (* ;; "An item can be of the form (button-type . attribute-values), a number indicating how many spaces, EOL or TAB atoms, or a string to be inserted as text in the default menu font.")

    (* ;; "CH# can be used freely")

    (* ;; "Returns the textstream character number of the character just after the last inserted character/object.")

    (for DESC TYPE SPEC OBJ [EOL _ (CONCATCODES (CHARCODE (EOL]
         [TAB _ (CONCATCODES (CHARCODE (TAB]
         (CH# _ (if (NULL WHERE)
                    then (ADD1 (TEXTLEN (FGETTSTR MENUTSTREAM TEXTOBJ)))
                  elseif (FIXP WHERE)
                  else (\ILLEGAL.ARG WHERE))) in MENUDESC declare (SPECVARS CH#)
       do (SETQ DESC (MKLIST DESC))                          (* ; "MKLIST for EOL/TAB, FIXP")
          (SETQ TYPE (CAR DESC))
          (SETQ SPEC (CDR DESC))
          (SELECTQ TYPE
              (                                              (* ; ;; NIL) 
                                                             (* ; 
                                                           "Ignore comments within menu descriptions")
                   )
              (EOL (TEDIT.INSERT MENUTSTREAM EOL CH# '(PROTECTED ON))
                   (add CH# 1))
              (TAB (TEDIT.INSERT MENUTSTREAM TAB CH# '(PROTECTED ON))
                   (add CH# 1))
              (ACTION                                        (* ; "Hitting calls a function")
                      (TEDIT.INSERT.OBJECT (MB.CREATE SPEC)
                             MENUTSTREAM CH# '(PROTECTED OFF))
                      (add CH# 1))
              (3STATE                                        (* ; 
                              "3-state button;  hitting it changes state among ON, OFF, and NEUTRAL.")
                      (TEDIT.INSERT.OBJECT (MB.3STATE.CREATE SPEC)
                             MENUTSTREAM CH# '(PROTECTED OFF))
                      (add CH# 1))
              (TOGGLE                                        (* ; 
                                            "TOGGLE button;  hitting it switches between ON and OFF.")
                      (TEDIT.INSERT.OBJECT (MB.TOGGLE.CREATE SPEC)
                             MENUTSTREAM CH# '(PROTECTED OFF))
                      (add CH# 1))
              (NWAY                                          (* ; 
                                                 "N-way buttons;  choosing one turns the others off.")
                    (SETQ OBJ (MB.NWAY.CREATE SPEC))
                    (TEDIT.INSERT.OBJECT OBJ MENUTSTREAM CH# '(PROTECTED OFF))
                    (add CH# 1))
              (TEXT                                          (* ; "Arbitrary protected text.")
                    [TEDIT.INSERT MENUTSTREAM (CADR (ASSOC 'STRING SPEC))
                           CH#
                           (CL:IF (CADR (ASSOC 'FONT SPEC))
                               `(FONT ,(CADR (ASSOC 'FONT SPEC))
                                      PROTECTED ON)
                               '(PROTECTED ON))]
                    [add CH# (NCHARS (CADR (ASSOC 'STRING SPEC])
              (FIELD (SETQ CH# (MB.FIELD.CREATE SPEC MENUTSTREAM CH#)))
              (MENU                                          (* ; 
                                                             "Real menu, except the selection sticks")
                    (\TEDIT.THELP "NOT IMPLEMENTED")
                    (TEDIT.INSERT.OBJECT (MB.CREATE.FULLMENU (CADR SPEC))
                           MENUTSTREAM CH# '(PROTECTED OFF))
                    (add CH# 1))
              (if (STRINGP TYPE)
                  then (TEDIT.INSERT MENUTSTREAM TYPE CH# '(PROTECTED ON))
                       (add CH# (NCHARS TYPE))
                elseif (FIXP TYPE)
                  then                                       (* ; "TYPE spaces")
                       (TEDIT.INSERT MENUTSTREAM (ALLOCSTRING TYPE (CHARCODE SPACE))
                              CH#
                              '(PROTECTED ON))
                       (add CH# TYPE)
                elseif (LISTP TYPE)
                  then 
                       (* ;; "Form to be evaluated")

                       (add CH# (EVAL TYPE))
                else (\ILLEGAL.ARG DESC))) finally (RETURN CH#])

(MB.DELETE
  [LAMBDA (IDENTIFIERS MENUSTREAM)                           (* ; "Edited  8-Nov-2024 08:58 by rmk")
    (for ID CHNOS inside IDENTIFIERS when [SETQ CHNOS (MB.GET ID MENUSTREAM '(STARTCHNO ENDCHNO]
       do (TEDIT.DELETE MENUSTREAM (CAR CHNOS)
                 (IDIFFERENCE (ADD1 (CADR CHNOS))
                        (CAR CHNOS])

(MB.GET
  [LAMBDA (IDENTIFIERS MENUSTREAM RETURNS START BEFORE)      (* ; "Edited  2-Dec-2024 09:41 by rmk")
                                                             (* ; "Edited  7-Nov-2024 22:20 by rmk")
                                                             (* ; "Edited 22-Oct-2024 22:02 by rmk")
                                                             (* ; "Edited 20-Oct-2024 21:55 by rmk")
                                                             (* ; "Edited 18-Oct-2024 23:12 by rmk")
                                                             (* ; "Edited 29-Sep-2024 22:53 by rmk")
                                                             (* ; "Edited  2-Sep-2024 23:36 by rmk")
                                                             (* ; "Edited 28-Aug-2024 20:06 by rmk")
                                                             (* ; "Edited 24-Aug-2024 21:23 by rmk")
                                                             (* ; "Edited 16-Aug-2024 13:14 by rmk")
                                                             (* ; "Edited 12-Aug-2024 10:25 by rmk")
                                                             (* ; "Edited  9-Aug-2024 22:52 by rmk")
                                                             (* ; "Edited 29-Jul-2024 11:00 by rmk")
                                                             (* ; "Edited 27-Jul-2024 20:48 by rmk")

    (* ;; ";; Computes the arguments from other image objects as requested by the object at SEL/PC in TEXTOBJ.  START can be a piece, a selection, a character number, or NIL.  If NIL, the whole menu is scanned from the beginning or the end.")

    (* ;; "If IDENTIFIERS is a list, this returns a plist keyed by each identifier  . ")

    (* ;; "If IDENTIFIERS is a litatom, the triple for that identifier is returned. ")

    (* ;; "RETURNS specifies what information should be returned for each identifier, defaulting to the identified object.  If ALL, the value is an instance of the MBARG record. Otherwise RETURNS can be one of OBJECT, STATE, BUTTONSTART, BUTTONEND, or a list of those. If a list, the components for each identifier are returned in a list parallel to RETURNS.")

    (CL:WHEN IDENTIFIERS
        (CL:UNLESS (OR (type? PIECE START)
                       (type? SELECTION START)
                       (FIXP START)
                       (NULL START))
               (\ILLEGAL.ARG START))
        (SETQ MENUSTREAM (TEXTSTREAM MENUSTREAM))
        (LET ((MENUTEXTOBJ (TEXTOBJ MENUSTREAM))
              RESULT)
             (if (type? SELECTION START)
                 then (SETQ START (\TEDIT.CHTOPC (GETSEL START CH#)
                                         MENUTEXTOBJ))
               elseif (FIXP START)
                 then (SETQ START (\TEDIT.CHTOPC START MENUTEXTOBJ)))
             [SETQ RESULT (if BEFORE
                              then (for PC ID IDOBJ (REMAINING _ (COPY (MKLIST IDENTIFIERS)))
                                      backpieces (CL:IF START
                                                     (PREVPIECE START)
                                                     (\TEDIT.LASTPIECE MENUTEXTOBJ)) while REMAINING
                                      when [SETQ ID (AND (SETQ IDOBJ (POBJ PC))
                                                         (CAR (MEMB (IMAGEOBJPROP IDOBJ 'IDENTIFIER)
                                                                    REMAINING]
                                      join (SETQ REMAINING (DREMOVE ID REMAINING))
                                           (MB.GET.MBARG PC MENUSTREAM))
                            else (for PC ID IDOBJ (REMAINING _ (COPY (MKLIST IDENTIFIERS)))
                                    inpieces (CL:IF START
                                                 (NEXTPIECE START)
                                                 (\TEDIT.FIRSTPIECE MENUTEXTOBJ)) while REMAINING
                                    when [SETQ ID (AND (SETQ IDOBJ (POBJ PC))
                                                       (CAR (MEMB (IMAGEOBJPROP IDOBJ 'IDENTIFIER)
                                                                  REMAINING]
                                    join (SETQ REMAINING (DREMOVE ID REMAINING))
                                         (MB.GET.MBARG PC MENUSTREAM]
             (CL:UNLESS (EQ RETURNS 'ALL)
                 (CL:UNLESS RETURNS
                     (SETQ RETURNS 'OBJECT))
                 (SETQ RETURNS (MKLIST RETURNS))
                 [for ATAIL A on RESULT by (CDDR ATAIL)
                    do (SETQ A (CADR ATAIL))
                       (RPLACA (CDR ATAIL)
                              (for R in RETURNS
                                 collect (SELECTQ R
                                             ((OBJECT NIL) 
                                                  (fetch (MBARG ARGOBJ) of A))
                                             (STATE (fetch (MBARG ARGSTATE) of A))
                                             (STARTPC (fetch (MBARG ARGSTARTPC) of A))
                                             (ENDPC (fetch (MBARG ARGENDPC) of A))
                                             (STARTCHNO (\TEDIT.PCTOCH (fetch (MBARG ARGSTARTPC)
                                                                          of A)
                                                               MENUTEXTOBJ))
                                             (ENDCHNO (IPLUS -1 (PLEN (fetch (MBARG ARGENDPC)
                                                                         of A))
                                                             (\TEDIT.PCTOCH (fetch (MBARG ARGENDPC)
                                                                               of A)
                                                                    MENUTEXTOBJ)))
                                             (IDPC (fetch (MBARG ARGIDPC) of A))
                                             (ERROR R " is not a button return"))
                                 finally (CL:UNLESS (CDR RETURNS)
                                             (RETURN (CAR $$VAL)))])
             (CL:IF (LITATOM IDENTIFIERS)
                 (CADR RESULT)
                 RESULT)))])

(MB.GET.MBARG
  [LAMBDA (IDPC MENUSTREAM)                                  (* ; "Edited  4-Dec-2024 16:48 by rmk")

    (* ;; "Returns the full set of properties for the argument identified at IDPC, including (for fields) the starting piece, ending piece, and ID piece itself.")

    (LET ((IDOBJ (POBJ IDPC))
          ENDPC STATEFN STATE)
         (if (EQ 'FieldPrefixButton (IMAGEOBJPROP IDOBJ 'IMAGECLASSNAME))
             then (SETQ ENDPC (OR [for P inpieces (NEXTPIECE IDPC)
                                     suchthat (AND (EQ OBJECT.PTYPE (PTYPE P))
                                                   (IMAGEOBJPROP (POBJ P)
                                                          'FIELDSUFFIX]
                                  (\TEDIT.THELP "Missing field suffix:")))
           else (SETQ ENDPC IDPC))
         (CL:WHEN (SETQ STATEFN (IMAGEOBJPROP IDOBJ 'STATEFN))
                (APPLY* STATEFN IDPC IDOBJ MENUSTREAM))
         (LIST (IMAGEOBJPROP IDOBJ 'IDENTIFIER)
               (create MBARG
                      ARGSTATE _ (IMAGEOBJPROP IDOBJ 'STATE)
                      ARGOBJ _ IDOBJ
                      ARGSTARTPC _ IDPC
                      ARGENDPC _ ENDPC
                      ARGIDPC _ IDPC])

(TEDITMENU.STREAM
  [LAMBDA (TSTREAM)                                          (* ; "Edited 29-Sep-2024 15:29 by rmk")
                                                             (* ; "Edited 28-Aug-2024 15:48 by rmk")
                                                             (* ; "Edited 10-Apr-2023 09:53 by rmk")
                                                             (* jds "13-Aug-84 14:10")

    (* ;; "returns the textstream of the teditmenu attached to this stream if any")

    (for W in (ATTACHEDWINDOWS (\TEDIT.MAINW TSTREAM)) when (TEDITMENUP W "TEdit Menu")
       do (RETURN (TEXTSTREAM W])

(TEDIT.BACKTOMAIN
  [LAMBDA (MENUSTREAM)                                       (* ; "Edited 20-Oct-2024 10:02 by rmk")
                                                             (* ; "Edited 25-Aug-2024 09:17 by rmk")

    (* ;; "If MENUSTREAM's window is attached to a main window that is also the window of a running Tedit process, gives the TTY to that main window.  Otherwise, gives the TTY to the exec.")

    (LET ((MAINW (\TEDIT.MAINW MENUSTREAM)))
         (TTY.PROCESS (CL:IF MAINW
                          (WINDOWPROP MAINW 'PROCESS))
                T])
)



(* ; "Simple Menu Button support")

(DEFINEQ

(MB.BUTTONEVENTINFN
  [LAMBDA (OBJ MENUSTREAM SEL RELX RELY SELWINDOW HOSTSTREAM BUTTON)
                                                             (* ; "Edited 22-Aug-2024 16:26 by rmk")
                                                             (* ; "Edited 20-Aug-2024 10:04 by rmk")
                                                             (* ; "Edited 20-Jul-2024 15:26 by rmk")
                                                             (* ; "Edited  9-Apr-2023 18:22 by rmk")
                                                             (* ; "Edited 30-May-91 22:15 by jds")

    (* ;; "Called when a mouse-button is down inside the object, RELX and RELY are in the objects coordinate system.  Decline unless it is a normal left-button selection within the object.")

    (if [OR (EQ BUTTON 'RIGHT)
            (SHIFTDOWNP 'CTRL)
            (LET [(OBJBOX (IMAGEOBJPROP OBJ 'BOUNDBOX]
                 (OR (ILESSP RELX 0)
                     (ILESSP RELY 0)
                     (IGREATERP RELX (fetch XSIZE of OBJBOX))
                     (IGREATERP RELY (fetch YSIZE of OBJBOX]
        then 'DON'T
      else T])

(MB.DISPLAYFN
  [LAMBDA (OBJ IMAGESTREAM)                                  (* ; "Edited 26-Aug-2024 09:35 by rmk")
                                                             (* ; "Edited 19-Jul-2024 23:32 by rmk")
                                                             (* ; "Edited 20-Nov-2023 17:31 by rmk")
                                                             (* ; "Edited 11-Jan-89 16:58 by jds")

    (* ;; "Display the innards of a menu button.  Assumes that the stream is set to the bottom-left corner of the object in stream coordinates (so X,Y instead of 0,0).")

    (if (EQ 'DISPLAY (IMAGESTREAMTYPE IMAGESTREAM))
        then 
             (* ;; "Going to the display.  Use the cached bitmap version of the button")

             [LET ((BITMAP (MB.SETIMAGE OBJ))
                   (OBJBOX (IMAGEOBJPROP OBJ 'BOUNDBOX))
                   (X (DSPXPOSITION NIL IMAGESTREAM))
                   (Y (DSPYPOSITION NIL IMAGESTREAM)))
                  (SETQ Y (IDIFFERENCE Y (fetch YDESC of OBJBOX)))
                  (BITBLT BITMAP 0 0 IMAGESTREAM X Y)        (* ; "Display the button's image")
                  (CL:WHEN (EQ (IMAGEOBJPROP OBJ 'STATE)
                               'ON)                          (* ; "Invert if ON")
                      (BLTSHADE BLACKSHADE IMAGESTREAM X Y (fetch XSIZE of OBJBOX)
                             (fetch YSIZE of OBJBOX)
                             'INVERT))]
      else 
           (* ;; "Going to some output image stream.  Just print the text (without ON inversion?)")

           (DSPFONT (PROG1 (DSPFONT (FONTCOPY (IMAGEOBJPROP OBJ 'FONT)
                                           'DEVICE IMAGESTREAM)
                                  IMAGESTREAM)               (* ; 
                                                           "Change to the font for this menu button.")
                        (PRIN1 (IMAGEOBJPROP OBJ 'LABEL)
                               IMAGESTREAM))])

(MB.SETIMAGE
  [LAMBDA (OBJ)                                              (* ; "Edited 26-Aug-2024 09:37 by rmk")
                                                             (* ; "Edited 21-Jul-2024 16:20 by rmk")
                                                             (* ; "Edited 19-Jul-2024 23:27 by rmk")
                                                             (* jds "23-Aug-84 13:22")

    (* ;; "Create a bitmap image of the object's text. Assumes that box exists if bitmap exists.")

    (OR (IMAGEOBJPROP OBJ 'BITCACHE)
        (LET ((FONT (IMAGEOBJPROP OBJ 'FONT))
              (BOX (MB.SIZEFN OBJ))
              BITMAP DS)
             (SETQ BITMAP (BITMAPCREATE (fetch XSIZE of BOX)
                                 (fetch YSIZE of BOX)))
             (IMAGEOBJPROP OBJ 'BITCACHE BITMAP)
             (SETQ DS (DSPCREATE BITMAP))
             (DSPXOFFSET 0 DS)
             (DSPYOFFSET 0 DS)
             (DSPFONT FONT DS)
             (MOVETO 0 (FONTPROP FONT 'DESCENT)
                    DS)
             (PRIN1 (IMAGEOBJPROP OBJ 'LABEL)
                    DS)
             BITMAP])

(MB.SIZEFN
  [LAMBDA (OBJ STREAM)                                       (* ; "Edited 26-Aug-2024 09:36 by rmk")
                                                             (* ; "Edited  3-Aug-2024 13:10 by rmk")
                                                             (* ; "Edited 19-Jul-2024 23:26 by rmk")
                                                             (* ; "Edited 11-Oct-2022 22:51 by rmk")
                                                             (* ; "Edited  4-Oct-2022 11:59 by rmk")
                                                             (* jds "30-Aug-84 11:24")

    (* ;; 
    "Create the box for a menu button containing LABEL in font FONT on STREAM (NIL means display).")

    (OR (IMAGEOBJPROP OBJ 'BOUNDBOX)
        (LET ((FONT (IMAGEOBJPROP OBJ 'FONT))
              BOX)
             (CL:UNLESS (AND STREAM (NOT (DISPLAYSTREAMP STREAM)))
                 (SETQ FONT (FONTCOPY FONT 'DEVICE (IMAGESTREAMTYPE STREAM))))
             (SETQ BOX (create IMAGEBOX
                              XSIZE _ (CL:IF (IMAGEOBJPROP OBJ 'LABEL)
                                          (STRINGWIDTH (IMAGEOBJPROP OBJ 'LABEL)
                                                 FONT)
                                          0)
                              YSIZE _ (FONTPROP FONT 'HEIGHT)
                              YDESC _ (FONTPROP FONT 'DESCENT)
                              XKERN _ 0))
             (IMAGEOBJPROP OBJ 'BOUNDBOX BOX)
             BOX])

(MB.WHENOPERATEDONFN
  [LAMBDA (OBJ MENUWINDOW OPERATION MENUSEL MENUSTREAM)      (* ; "Edited 20-Oct-2024 09:51 by rmk")
                                                             (* ; "Edited 18-Oct-2024 14:22 by rmk")
                                                             (* ; "Edited  6-Oct-2024 23:29 by rmk")
                                                             (* ; "Edited 29-Sep-2024 15:44 by rmk")
                                                             (* ; "Edited 26-Jul-2024 15:24 by rmk")
                                                             (* ; "Edited 20-Jul-2024 20:57 by rmk")
                                                             (* ; "Edited 17-Jul-2024 21:27 by rmk")
                                                             (* ; "Edited 27-Mar-2024 13:49 by rmk")
                                                             (* jds " 7-Feb-84 14:20")

    (* ;; "HIGHLIGHTED is in OBJ's coordinate system, SELECTED is in PANE's coordinate system.")

    (* ;; "Here we deal only with the button hilighting itself.")

    (SELECTQ OPERATION
        (HIGHLIGHTED (MB.SHOWSELFN OBJ T MENUWINDOW)
                     (MB.TRACK.UNTIL OBJ MENUWINDOW)
                     (MB.SHOWSELFN OBJ NIL MENUWINDOW))
        (SELECTED 
                  (* ;; "Old code tested for a return of DON'T from the BUTTONFN.  That was probably a mistaken carry-over from the description of the BUTTONEVENTINFN, where DON'T meant don't allow the selection.  But if we are here, we passed that gate.")

                  (* ;; 
      "We don't update the display here:  That happens on the separate HIGHLIGHTED call from SHOWSEL")

                  (LET [(SELECTFN (IMAGEOBJPROP OBJ 'SELECTFN]
                       (CL:WHEN SELECTFN (APPLY* SELECTFN OBJ MENUSEL MENUWINDOW MENUSTREAM))))
        NIL])

(MB.COPYFN
  [LAMBDA (OBJ)                                              (* jds "23-May-84 11:32")
                                                             (* Copy a menu button object.)
    (create IMAGEOBJ
           OBJECTDATUM _ (COPY (fetch (IMAGEOBJ OBJECTDATUM) of OBJ))
           IMAGEOBJPLIST _ (COPY (fetch (IMAGEOBJ IMAGEOBJPLIST) of OBJ))
           IMAGEOBJFNS _ (fetch (IMAGEOBJ IMAGEOBJFNS) of OBJ])

(MB.GETFN
  [LAMBDA (OBJ FILE)                                         (* ; "Edited 21-Oct-2024 00:26 by rmk")
                                                             (* ; "Edited 26-Aug-2024 09:36 by rmk")
                                                             (* ; "Edited 19-Dec-2023 10:24 by rmk")
                                                             (* ; "Edited 20-Aug-87 16:17 by jds")
                                                             (* READ a menu button from a file.)
    (\TEDIT.THELP "HELP FROM JDS--NOT USED?")
    (PROG [(TEXT (IMAGEOBJPROP OBJ 'LABEL))
           (MBFN (IMAGEOBJPROP OBJ 'MBFN))
           (FONT (IMAGEOBJPROP OBJ 'FONT]
          (\STRINGOUT FILE TEXT)
          (\ATMOUT FILE MBFN)
          (\ATMOUT FILE (FONTPROP FONT 'FAMILY))
          (\WOUT FILE (FONTPROP FONT 'SIZE))
          (for ATTR in (FONTPROP FONT 'FACE) do (\ATMOUT FILE ATTR])

(MB.PUTFN
  [LAMBDA (OBJ FILE)                                         (* ; "Edited 21-Oct-2024 00:26 by rmk")
                                                             (* ; "Edited 26-Aug-2024 09:36 by rmk")
                                                             (* ; "Edited 19-Dec-2023 10:23 by rmk")
                                                             (* ; "Edited 20-Aug-87 16:17 by jds")

    (* ;; "Write a menu button from a file; suitable for re-reading using the image objects GETFN.")

    (PROG [(TEXT (IMAGEOBJPROP OBJ 'LABEL))
           (MBFN (IMAGEOBJPROP OBJ 'MBFN))
           (FONT (IMAGEOBJPROP OBJ 'FONT]
          (\TEDIT.THELP "HELP FROM JDS -- NOT USED?")
          (\STRINGOUT FILE TEXT)                             (* ; "The button's image")
          (\ATMOUT FILE MBFN)                                (* ; "The FN called when hit")
          (\ATMOUT FILE (FONTPROP FONT 'FAMILY))
          (\WOUT FILE (FONTPROP FONT 'SIZE))
          (for ATTR in (FONTPROP FONT 'FACE) do (\ATMOUT FILE ATTR])

(MB.SHOWSELFN
  [LAMBDA (OBJ ON PANE)                                      (* ; "Edited 18-Oct-2024 13:17 by rmk")
                                                             (* ; "Edited  5-Oct-2024 23:47 by rmk")
                                                             (* ; "Edited 20-Jul-2024 20:58 by rmk")
                                                             (* ; "Edited 17-Jul-2024 00:49 by rmk")
                                                             (* ; "Edited 27-Mar-2024 13:47 by rmk")
                                                             (* ; "Edited 20-Nov-2023 20:16 by rmk")
                                                             (* ; "Edited 11-Jan-89 16:35 by jds")

    (* ;; "Redisplay the bitmap (presumably the button's vanilla label), then invert it if ON.")

    (* ;; 
    "We are in the object's coordinate system for buttonevent, highlighting and unhighlighting.  ")

    (LET* [(BITMAP (MB.SETIMAGE OBJ))
           (OBJBOX (IMAGEOBJPROP OBJ 'BOUNDBOX]
          (BITBLT BITMAP 0 0 PANE 0 0 (fetch (IMAGEBOX XSIZE) of OBJBOX)
                 (fetch (IMAGEBOX YSIZE) of OBJBOX)
                 'INPUT
                 'REPLACE)
          (CL:WHEN (AND ON (NEQ ON 'OFF))
              (BLTSHADE BLACKSHADE PANE 0 0 (fetch (IMAGEBOX XSIZE) of OBJBOX)
                     (fetch (IMAGEBOX YSIZE) of OBJBOX)
                     'INVERT))])

(MB.CREATE
  [LAMBDA (SPEC IMAGEFNS)                                    (* ; "Edited 18-Oct-2024 10:27 by rmk")
                                                             (* ; "Edited  6-Oct-2024 16:59 by rmk")
                                                             (* ; "Edited  5-Oct-2024 11:51 by rmk")
                                                             (* ; "Edited 29-Sep-2024 14:51 by rmk")
                                                             (* ; "Edited 26-Aug-2024 09:36 by rmk")
                                                             (* ; "Edited 20-Aug-2024 16:16 by rmk")
                                                             (* ; "Edited 13-Aug-2024 22:16 by rmk")
                                                             (* ; "Edited  9-Aug-2024 16:00 by rmk")
                                                             (* ; "Edited 31-Jul-2024 22:00 by rmk")
                                                             (* ; "Edited 25-Jul-2024 23:42 by rmk")
                                                             (* ; "Edited 24-Jul-2024 08:30 by rmk")
                                                             (* ; "Edited 21-Jul-2024 22:58 by rmk")
                                                             (* ; "Edited 19-Jul-2024 11:00 by rmk")
                                                             (* ; "Edited 11-Jan-89 16:10 by jds")

    (* ;; "Create a MENU BUTTON image object, and fill in its image and function-hook fields.  ")

    (for S PROP VAL (OBJ _ (IMAGEOBJCREATE NIL (OR IMAGEFNS (CADR (ASSOC 'IMAGEFNS SPEC))
                                                   MB.IMAGEFNS))) in SPEC
       eachtime (SETQ PROP (MKATOM (CAR S)))
             (SETQ VAL (CADR S)) unless (EQ PROP 'IMAGEFNS)
       do (SELECTQ PROP
              (FONT [SETQ VAL (FONTCREATE (FONTCREATE VAL NIL NIL NIL 'DISPLAY])
              ((LABEL IDENTIFIER) 
                   (SETQ VAL (MKATOM VAL)))
              NIL)
          (IMAGEOBJPROP OBJ PROP VAL)
       finally (CL:UNLESS (IMAGEOBJPROP OBJ 'FONT)
                   (IMAGEOBJPROP OBJ 'FONT (FONTCREATE '(HELVETICA 8 BOLD)
                                                  NIL NIL NIL 'DISPLAY)))
             (CL:UNLESS (IMAGEOBJPROP OBJ 'IDENTIFIER)
                 (if (SETQ VAL (IMAGEOBJPROP OBJ 'LABEL))
                     then [IMAGEOBJPROP OBJ 'IDENTIFIER
                                 (U-CASE (MKATOM (CL:STRING-TRIM '(#\Space #\Tab #\Newline #\:)
                                                        VAL]
                   else (ERROR (ERROR "Missing both IDENTIFIER and LABEL" SPEC))))
             (CL:WHEN (IMAGEOBJPROP OBJ 'INITSTATE)
                 (IMAGEOBJPROP OBJ 'STATE (IMAGEOBJPROP OBJ 'INITSTATE)))
             (MB.SETIMAGE OBJ)
             (RETURN OBJ])

(MB.CHANGENAME
  [LAMBDA (TEXTOBJ OBJ NEWNAME)                              (* ; "Edited 26-Aug-2024 09:31 by rmk")
                                                             (* jds "23-Aug-84 13:26")

         (* Change the text that appears in a button, and redisplay the button if it's 
         visible)

    (PROG (BOX BITMAP DS)
          (IMAGEOBJPROP OBJ 'LABEL NEWNAME)
          (MB.SETIMAGE OBJ)
          (TEDIT.OBJECT.CHANGED TEXTOBJ OBJ])

(MB.INIT
  [LAMBDA NIL                                                (* ; "Edited 28-Aug-2024 23:34 by rmk")
                                                             (* ; "Edited 24-Aug-2024 11:00 by rmk")
                                                             (* ; "Edited 20-Aug-2024 15:23 by rmk")
                                                             (* ; "Edited 18-Feb-2024 14:15 by rmk")
                                                             (* jds "12-Feb-85 14:32")
    (SETQ MB.IMAGEFNS (IMAGEFNSCREATE (FUNCTION MB.DISPLAYFN)
                             (FUNCTION MB.SIZEFN)
                             (FUNCTION MB.PUTFN)
                             (FUNCTION MB.GETFN)
                             (FUNCTION MB.COPYFN)
                             (FUNCTION MB.BUTTONEVENTINFN)
                             'NILL
                             'NILL
                             'NILL
                             'NILL
                             'NILL
                             (FUNCTION MB.WHENOPERATEDONFN)
                             (FUNCTION NILL)
                             'TEditMenuButton])

(MB.TRACK.UNTIL
  [LAMBDA (OBJ PANE)                                         (* ; "Edited 23-Oct-2024 10:10 by rmk")
                                                             (* ; "Edited 18-Oct-2024 11:57 by rmk")

    (* ;; "Track the mouse untill either it leaves the object or the buttons come up.  Returns DON'T if it leaves, NIL if buttons are up.")

    (do (BLOCK)
        (GETMOUSESTATE)
        (CL:WHEN (EQ 'DON'T (MB.BUTTONEVENTINFN OBJ PANE NIL (LASTMOUSEX PANE)
                                   (LASTMOUSEY PANE)
                                   PANE))
            (RETURN 'DON'T))
        (CL:WHEN (ALLBUTTONSUP)
               (RETURN NIL])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS MB.IMAGEFNS)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(MB.INIT)
)



(* ; "3STATE")




(* ;; "ON-OFF-NEUTRAL menu buttons, for, e.g., character properties like BOLD")

(DEFINEQ

(MB.3STATE.CREATE
  [LAMBDA (SPEC)                                             (* ; "Edited  6-Oct-2024 17:08 by rmk")
                                                             (* ; "Edited  5-Oct-2024 17:00 by rmk")
                                                             (* ; "Edited  2-Aug-2024 23:51 by rmk")
                                                             (* ; "Edited 21-Jul-2024 00:52 by rmk")
                                                             (* ; "Edited 19-Jul-2024 10:48 by rmk")
                                                             (* jds "24-Sep-86 00:49")
    (CL:UNLESS (ASSOC 'INITSTATE SPEC)
        (push SPEC (LIST 'INITSTATE 'NEUTRAL)))
    (push SPEC (LIST 'SETSTATEFN (FUNCTION MB.3STATE.SETSTATEFN)))
    (MB.CREATE SPEC MB.3STATE.IMAGEFNS])

(MB.3STATE.DISPLAYFN
  [LAMBDA (OBJ IMAGESTREAM)                                  (* ; "Edited  5-Oct-2024 16:49 by rmk")
                                                             (* ; "Edited 25-Aug-2024 23:11 by rmk")
                                                             (* ; "Edited 24-Aug-2024 00:25 by rmk")
                                                             (* ; "Edited 26-Jul-2024 16:29 by rmk")
                                                             (* ; "Edited 20-Jul-2024 23:57 by rmk")
                                                             (* ; "Edited 20-Nov-2023 14:27 by rmk")
                                                             (* jds "30-Aug-84 13:53")

    (* ;; "IMAGEFNS function called from DISPLAYLINE")

    (MB.3STATE.SHOWSELFN OBJ IMAGESTREAM (IMAGEOBJPROP OBJ 'STATE)
           (DSPXPOSITION NIL IMAGESTREAM)
           (DSPYPOSITION NIL IMAGESTREAM])

(MB.3STATE.SHOWSELFN
  [LAMBDA (OBJ IMAGESTREAM SHOWSTATE X Y)                    (* ; "Edited  5-Oct-2024 16:33 by rmk")
                                                             (* ; "Edited 25-Aug-2024 15:01 by rmk")
                                                             (* ; "Edited 24-Aug-2024 00:44 by rmk")
                                                             (* ; "Edited 20-Jul-2024 23:52 by rmk")
                                                             (* ; "Edited 18-Jul-2024 22:41 by rmk")
                                                             (* ; "Edited 17-Jul-2024 22:09 by rmk")
                                                             (* ; "Edited 20-Nov-2023 14:31 by rmk")
                                                             (* ; "Edited 30-May-91 22:16 by jds")

    (* ;; "Shows the label of OBJ highlighted according to SHOWSTATE. X and Y are not provided if PANE is already in the object's coordinate system  (bottom-left at (0,0).")

    (LET* ((BITMAP (MB.SETIMAGE OBJ))
           (OBJBOX (MB.SIZEFN OBJ IMAGESTREAM))
           (XSIZE (fetch XSIZE of OBJBOX))
           (YSIZE (fetch YSIZE of OBJBOX)))
          (CL:UNLESS X                                       (* ; "What about kerning?")
              (SETQ X 0))
          (SETQ Y (CL:IF Y
                      (IDIFFERENCE Y (fetch YDESC of OBJBOX))
                      0))

          (* ;; "Put down the neutral label, then modify")

          (BITBLT BITMAP 0 0 IMAGESTREAM X Y XSIZE YSIZE 'INPUT 'REPLACE)
          (SELECTQ SHOWSTATE
              (ON                                            (* ; 
                                                          "Display as white text on black background")
                  (BLTSHADE BLACKSHADE IMAGESTREAM X Y XSIZE YSIZE 'INVERT))
              (OFF                                           (* ; 
                                                             " Mark with a diagonal line thru it.")
                   (DRAWLINE X Y (SUB1 (IPLUS X XSIZE))
                          (SUB1 (IPLUS Y YSIZE))
                          1
                          'PAINT IMAGESTREAM))
              NIL])

(MB.3STATE.INIT
  [LAMBDA NIL                                                (* ; "Edited 18-Oct-2024 11:40 by rmk")
                                                             (* ; "Edited 25-Aug-2024 23:11 by rmk")
                                                             (* ; "Edited 20-Aug-2024 15:36 by rmk")
                                                             (* jds " 9-Feb-86 15:17")

    (* ;; "Initialize the IMAGEFNS for 3-state menu button IMAGEOBJs")

    (SETQ MB.3STATE.IMAGEFNS (IMAGEFNSCREATE (FUNCTION MB.3STATE.DISPLAYFN)
                                    (FUNCTION MB.SIZEFN)
                                    (FUNCTION MB.PUTFN)
                                    (FUNCTION MB.GETFN)
                                    (FUNCTION MB.COPYFN)
                                    (FUNCTION MB.3STATE.BUTTONEVENTINFN)
                                    'NILL
                                    'NILL
                                    'NILL
                                    'NILL
                                    'NILL NIL 'NILL '3StateMenuButton])

(MB.3STATE.SETSTATEFN
  [LAMBDA (PC NEWVALUE TSTREAM)                              (* ; "Edited  5-Oct-2024 17:04 by rmk")
                                                             (* ; "Edited 25-Aug-2024 12:22 by rmk")
                                                             (* ; "Edited  5-Aug-2024 10:06 by rmk")
                                                             (* ; "Edited  3-Aug-2024 00:12 by rmk")
    (IMAGEOBJPROP (PCONTENTS PC)
           'STATE
           (SELECTQ NEWVALUE
               ((NIL OFF) 
                    'OFF)
               (NEUTRAL 'NEUTRAL)
               'ON))
    PC])

(MB.3STATE.BUTTONEVENTINFN
  [LAMBDA (OBJ MENUDS SEL RELX RELY MENUWINDOW MENUTSTREAM BUTTON)
                                                             (* ; "Edited 18-Oct-2024 12:00 by rmk")
                                                             (* ; "Edited  5-Oct-2024 22:42 by rmk")
                                                             (* ; "Edited 25-Aug-2024 12:50 by rmk")
                                                             (* ; "Edited  6-Aug-2024 10:55 by rmk")
                                                             (* ; "Edited 25-Jul-2024 20:13 by rmk")
                                                             (* ; "Edited 19-Jul-2024 10:43 by rmk")
                                                             (* ; "Edited 18-Jul-2024 10:11 by rmk")
                                                             (* ; "Edited 29-Apr-2024 13:30 by rmk")
                                                             (* ; "Edited 25-Feb-2024 23:40 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:45 by rmk")
                                                             (* ; "Edited 30-May-91 22:16 by jds")

    (* ;; "BUTTONEVENTINFN for 3STATE buttons. This run's in the coordinate system of the object. ")

    (* ;; "This brings up the display for the next state, tracks the mouse until either it leaves the object or the buttons come up.  If the mouse leaves, the original highlighting is restored.  Otherwise the state of the obj is advanced to its next state.  Either way, we report that the %"selection%" didn't succeed.")

    (CL:UNLESS (EQ 'DON'T (MB.BUTTONEVENTINFN OBJ MENUDS SEL RELX RELY MENUWINDOW MENUTSTREAM BUTTON)
                   )
        (LET [(NEXTSTATE (SELECTQ (IMAGEOBJPROP OBJ 'STATE)
                             (ON 'OFF)
                             (OFF 'NEUTRAL)
                             (NEUTRAL 'ON)
                             (\TEDIT.THELP "ILLEGAL 3STATE" (IMAGEOBJPROP OBJ 'STATE]
             (RESETLST

                 (* ;; "In case of an error or interrupt, make the display consistent with the state")

                 [RESETSAVE NIL `(PROGN (CL:WHEN RESETSTATE
                                            (MB.3STATE.SHOWSELFN ,OBJ ,MENUDS (IMAGEOBJPROP
                                                                               ,OBJ
                                                                               'STATE)))]
                 (MB.3STATE.SHOWSELFN OBJ MENUDS NEXTSTATE)
                 [if (EQ 'DON'T (MB.TRACK.UNTIL OBJ MENUDS))
                     then                                    (* ; "Mouse moved out of object")
                          (MB.3STATE.SHOWSELFN OBJ MENUDS (IMAGEOBJPROP OBJ 'STATE))
                   else                                      (* ; "Buttons came up:  do it")
                        (IMAGEOBJPROP OBJ 'STATE NEXTSTATE)
                        (CL:WHEN (SETQ STATECHANGEFN (IMAGEOBJPROP OBJ 'STATECHANGEFN))
                            (APPLY* STATECHANGEFN OBJ NEXTSTATE (fetch (TEXTWINDOW WTEXTSTREAM)
                                                                   of MENUDS)))])
             NIL))])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS MB.3STATE.IMAGEFNS)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(MB.3STATE.INIT)
)



(* ; "NWAY")

(DEFINEQ

(MB.NWAY.CREATE
  [LAMBDA (SPEC)                                             (* ; "Edited 22-Oct-2024 00:26 by rmk")
                                                             (* ; "Edited 29-Sep-2024 12:43 by rmk")
                                                             (* ; "Edited 31-Aug-2024 14:57 by rmk")
                                                             (* ; "Edited 26-Aug-2024 09:36 by rmk")
                                                             (* ; "Edited 20-Aug-2024 16:06 by rmk")
                                                             (* ; "Edited 13-Aug-2024 22:44 by rmk")
                                                             (* ; "Edited  9-Aug-2024 12:14 by rmk")
                                                             (* ; "Edited  2-Aug-2024 23:12 by rmk")
                                                             (* ; "Edited 23-Jul-2024 11:43 by rmk")
                                                             (* ; "Edited 22-Jul-2024 08:38 by rmk")
                                                             (* gbn "24-Sep-84 15:31")
    (LET ((IDENTIFIER (CADR (ASSOC 'IDENTIFIER SPEC)))
          (BUTTONS (CADR (ASSOC 'BUTTONS SPEC)))
          [FONT (FONTCREATE (OR (CADR (ASSOC 'FONT SPEC))
                                '(HELVETICA 8 BOLD]
          (STATECHANGEFN (CADR (ASSOC 'STATECHANGEFN SPEC)))
          (STATEFN (CADR (ASSOC 'STATEFN SPEC)))
          (INITSTATE (OR (CADR (ASSOC 'INITSTATE SPEC))
                         'OFF))
          (MAXITEMS/LINE (CADR (ASSOC 'MAXITEMS/LINE SPEC)))
          (DONTAPPLY (CADR (ASSOC 'DONTAPPLY SPEC)))
          (OBJ (IMAGEOBJCREATE NIL MB.NWAY.IMAGEFNS))
          SPACING HEIGHT SUBOBJECTS)
         (SETQ SPACING (STRINGWIDTH "   " FONT))
         [SETQ HEIGHT (IPLUS 2 (FONTPROP FONT 'HEIGHT]
         (CL:UNLESS (LISTP BUTTONS)
                (ERROR "BAD BUTTONS" BUTTONS))
         [SETQ SUBOBJECTS (for BUTTON in BUTTONS collect (MB.TOGGLE.CREATE
                                                          `((LABEL ,BUTTON)
                                                            (FONT ,FONT]
                                                             (* ; "Initially all OFF")
         (CL:UNLESS (EQ 'OFF INITSTATE)
             (for SOBJ in SUBOBJECTS when [OR (STRING.EQUAL INITSTATE (IMAGEOBJPROP SOBJ 'LABEL))
                                              (STRING.EQUAL INITSTATE (IMAGEOBJPROP SOBJ 'IDENTIFIER]
                do (IMAGEOBJPROP SOBJ 'STATE 'ON)
                   (IMAGEOBJPROP OBJ 'SELECTED SOBJ)
                   (RETURN) finally (ERROR "INITSTATE must be a button" INITSTATE)))
         (IMAGEOBJPROP OBJ 'STATE INITSTATE)
         (SETQ MAXITEMS/LINE (CL:IF MAXITEMS/LINE
                                 (MIN MAXITEMS/LINE (LENGTH BUTTONS))
                                 (LENGTH BUTTONS)))
         (IMAGEOBJPROP OBJ 'MAXITEMS/LINE MAXITEMS/LINE)
         [IMAGEOBJPROP OBJ 'MINWIDTH (fetch XSIZE
                                        of (IMAGEOBJPROP [for SOBJ in SUBOBJECTS
                                                            largest (fetch XSIZE
                                                                       of (IMAGEOBJPROP SOBJ
                                                                                 'BOUNDBOX]
                                                  'BOUNDBOX]
         (IMAGEOBJPROP OBJ 'MINHEIGHT HEIGHT)                (* ; 
                                                 "MIN: all on same line. MAX: all  on separate lines")
         (IMAGEOBJPROP OBJ 'MAXHEIGHT (ITIMES HEIGHT (LENGTH BUTTONS)))

         (* ;; "At most, we're as wide as the N widest buttons put together. COPY because we want to preserve the original order")

         [IMAGEOBJPROP OBJ 'MAXWIDTH (for SOBJ
                                        in [SORT (COPY SUBOBJECTS)
                                                 (FUNCTION (LAMBDA (A B)
                                                             (IGEQ (fetch XSIZE
                                                                      of (IMAGEOBJPROP A 'BOUNDBOX))
                                                                   (fetch XSIZE
                                                                      of (IMAGEOBJPROP B 'BOUNDBOX]
                                        as I from 1 to MAXITEMS/LINE
                                        sum (fetch XSIZE of (IMAGEOBJPROP SOBJ 'BOUNDBOX))
                                        finally (RETURN (IPLUS $$VAL (ITIMES SPACING (SUB1 
                                                                                        MAXITEMS/LINE
                                                                                           ]
         (IMAGEOBJPROP OBJ 'SUBOBJECTS SUBOBJECTS)
         (IMAGEOBJPROP OBJ 'ITEMSPACE SPACING)
         (IMAGEOBJPROP OBJ 'BUTTONHEIGHT HEIGHT)
         (IMAGEOBJPROP OBJ 'FONT FONT)
         (IMAGEOBJPROP OBJ 'IDENTIFIER IDENTIFIER)
         (IMAGEOBJPROP OBJ 'STATECHANGEFN STATECHANGEFN)
         (IMAGEOBJPROP OBJ 'STATEFN STATEFN)
         (IMAGEOBJPROP OBJ 'DONTAPPLY DONTAPPLY)
         (IMAGEOBJPROP OBJ 'SETSTATEFN (FUNCTION MB.NWAY.SETSTATEFN))
         (CL:IF (CADR (ASSOC 'IGNORE SPEC))
             (IMAGEOBJPROP OBJ 'IGNORE T))
         OBJ])

(MB.NWAY.DISPLAYFN
  [LAMBDA (OBJ STREAM)                                       (* ; "Edited 22-Jul-2024 10:31 by rmk")
                                                             (* ; "Edited 18-Jul-2024 17:02 by rmk")
                                                             (* jds "28-Aug-84 15:07")

    (* ;; "Each of the subobjects has its own positions relative to X and Y and its own displayfn. Each object also knows whether it is on or off.")

    (for SOBJ (X _ (DSPXPOSITION NIL STREAM))
         (Y _ (DSPYPOSITION NIL STREAM)) in (IMAGEOBJPROP OBJ 'SUBOBJECTS)
       do (DSPXPOSITION (IPLUS X (IMAGEOBJPROP SOBJ 'X))
                 STREAM)
          (DSPYPOSITION (IPLUS Y (IMAGEOBJPROP SOBJ 'Y))
                 STREAM)
          (APPLY* (IMAGEOBJPROP SOBJ 'DISPLAYFN)
                 SOBJ STREAM])

(MB.NWAY.WHENOPERATEDONFN
  [LAMBDA (OBJ PANE OPERATION SEL)                           (* ; "Edited 21-Oct-2024 00:26 by rmk")
                                                             (* ; "Edited 24-Aug-2024 23:38 by rmk")
                                                             (* ; "Edited 13-Aug-2024 23:43 by rmk")
                                                             (* ; "Edited  2-Aug-2024 00:36 by rmk")
                                                             (* ; "Edited 21-Jul-2024 13:17 by rmk")
                                                             (* ; "Edited 17-Jul-2024 21:51 by rmk")
                                                             (* ; "Edited  9-Apr-2023 15:57 by rmk")
                                                             (* ; "Edited 13-Sep-2022 12:09 by rmk")
                                                             (* ; "Edited 30-May-91 22:16 by jds")

    (* ;; "Perhaps the selected subobject should be stored here, as the state?")

    (* ;; "Mouse tracking and highlighting happens in the BUTTONEVENTINFN (MB.NWAYBUTTON.SELFN).  The code here applies the STATECHANGEFN on the main object")

    (NOTUSED)
    (SELECTQ OPERATION
        (SELECTED [AND NIL (\TEDIT.THELP)
                       (LET [(SELECTED (IMAGEOBJPROP OBJ 'SELECTED]
                            (if (IMAGEOBJPROP OBJ 'STATECHANGEFN)
                                then (\TEDIT.THELP)
                                     (APPLY* (IMAGEOBJPROP OBJ 'STATECHANGEFN)
                                            OBJ SELECTED SEL PANE)
                              elseif (AND NIL SELECTED (IMAGEOBJPROP SELECTED 'STATECHANGEFN))
                                then 
                                     (* ;; 
                     "This is nuked out:  the selected object may be should have done its own thing?")

                                     (APPLY* (IMAGEOBJPROP SELECTED 'STATECHANGEFN)
                                            OBJ SELECTED SEL PANE])
        ((HIGHLIGHTED UNHIGHLIGHTED DESELECTED))
        NIL])

(MB.NWAY.SIZEFN
  [LAMBDA (OBJ STREAM CURX RIGHTMARGIN)                      (* ; "Edited 20-Aug-2024 15:12 by rmk")
                                                             (* ; "Edited 22-Jul-2024 11:31 by rmk")
                                                             (* jds " 6-Sep-84 14:19")
                                                             (* ; "Tell the size of an n-way menu")
    (OR (IMAGEOBJPROP OBJ 'BOUNDBOX)
        (LET ((OLDBOX (IMAGEOBJPROP OBJ 'BOUNDBOX))
              (SUBOBJECTS (IMAGEOBJPROP OBJ 'SUBOBJECTS))
              (MAXITEMS/LINE (IMAGEOBJPROP OBJ 'MAXITEMS/LINE))
              (MAXWIDTH (IMAGEOBJPROP OBJ 'MAXWIDTH))
              (MINHEIGHT (IMAGEOBJPROP OBJ 'MINHEIGHT))
              (BUTTONHEIGHT (IMAGEOBJPROP OBJ 'BUTTONHEIGHT))
              (SPACING (IMAGEOBJPROP OBJ 'ITEMSPACE))
              (SLACK (IDIFFERENCE RIGHTMARGIN CURX))
              BOX XSIZE YSIZE LINES)
             [if (AND (IGEQ SLACK MAXWIDTH)
                      (EQ MAXITEMS/LINE (LENGTH SUBOBJECTS)))
                 then                                        (* ; 
                                                             "All the subjobjects fit on one line.")
                      (SETQ XSIZE MAXWIDTH)
                      (SETQ YSIZE MINHEIGHT)
                      (for SO (X _ 0) in SUBOBJECTS do (IMAGEOBJPROP SO 'X X)
                                                       (add X (fetch XSIZE of (IMAGEOBJPROP
                                                                               SO
                                                                               'BOUNDBOX))
                                                            SPACING)
                                                       (IMAGEOBJPROP SO 'Y 0))
               elseif (ILEQ SLACK (IMAGEOBJPROP OBJ 'MINWIDTH))
                 then                                        (* ; "Stack them vertically.")
                      (for SO (Y _ (ITIMES BUTTONHEIGHT (LENGTH SUBOBJECTS))) in SUBOBJECTS
                         do (add Y (IMINUS BUTTONHEIGHT))
                            (IMAGEOBJPROP SO 'Y Y)
                            (IMAGEOBJPROP SO 'X 0))
               else                                          (* ; "Divide them into lines")
                    (SETQ LINES (MB.NWAY.ARRANGEBUTTONS SLACK SUBOBJECTS SPACING MAXITEMS/LINE))
                    (SETQ XSIZE (for LINE LASTSO in LINES
                                   largest (SETQ LASTSO (CAR (LAST LINE)))
                                         [IPLUS (IMAGEOBJPROP LASTSO 'X)
                                                (fetch XSIZE of (IMAGEOBJPROP LASTSO 'BOUNDBOX]
                                   finally (RETURN $$EXTREME)))
                    (SETQ YSIZE (ITIMES BUTTONHEIGHT (LENGTH LINES)))
                    (for LINE (Y _ YSIZE) in LINES do (add Y (IMINUS BUTTONHEIGHT))
                                                      (for SO in LINE
                                                         do (IMAGEOBJPROP SO 'Y Y]
             (if (AND OLDBOX (IEQP XSIZE (fetch XSIZE of OLDBOX))
                      (IEQP YSIZE (fetch YSIZE of OLDBOX)))
                 then 
                      (* ;; "Nothing changed.")

                      OLDBOX
               else (SETQ BOX (create IMAGEBOX
                                     XSIZE _ XSIZE
                                     YSIZE _ YSIZE
                                     YDESC _ (fetch YDESC of (IMAGEOBJPROP (CAR SUBOBJECTS)
                                                                    'BOUNDBOX))
                                     XKERN _ 0))
                    (IMAGEOBJPROP OBJ 'BOUNDBOX BOX)
                    BOX])

(MB.NWAY.SELECT
  [LAMBDA (OBJ SELECTED MENUWINDOW SEL)                      (* ; "Edited 29-Sep-2024 12:44 by rmk")
                                                             (* ; "Edited 24-Aug-2024 15:28 by rmk")
                                                             (* ; "Edited 20-Aug-2024 15:13 by rmk")
                                                             (* ; "Edited  2-Aug-2024 00:28 by rmk")
                                                             (* ; "Edited 22-Jul-2024 23:55 by rmk")
                                                             (* ; "Edited 29-Apr-2024 13:31 by rmk")
                                                             (* ; "Edited 25-Feb-2024 23:43 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:46 by rmk")
                                                             (* ; "Edited 30-May-91 22:16 by jds")

    (* ;; "SELECTED, if any, is the new subobject that should replace the old selection. If T, just turn off the old (neutralize).")

    (LET [(OLDSELECTED (IMAGEOBJPROP OBJ 'SELECTED]
         (CL:WHEN (AND SELECTED (NEQ SELECTED T)
                       (LITATOM SELECTED))
             (SETQ SELECTED (MB.NWAY.FINDSUBOBJ SELECTED OBJ)))
         (CL:UNLESS (EQ OLDSELECTED SELECTED)                (* ; "Reclicking is a no-op. ")
             (CL:WHEN (AND OLDSELECTED SELECTED)             (* ; 
                                                             "Turn the old one off if it's changing")
                 (IMAGEOBJPROP OLDSELECTED 'STATE 'OFF)
                 (CL:WHEN MENUWINDOW
                     (BITBLT (IMAGEOBJPROP OLDSELECTED 'BITCACHE)
                            0 0 MENUWINDOW (IMAGEOBJPROP OLDSELECTED 'X)
                            (IMAGEOBJPROP OLDSELECTED 'Y)
                            NIL NIL 'INPUT 'REPLACE))
                 (IMAGEOBJPROP OBJ 'STATE NIL)
                 (IMAGEOBJPROP OBJ 'SELECTED NIL))
             (CL:WHEN (AND SELECTED (NEQ T SELECTED))        (* ; "Turn on the new one.")
                 (IMAGEOBJPROP SELECTED 'STATE 'ON)
                 (CL:WHEN MENUWINDOW
                     (BITBLT (IMAGEOBJPROP SELECTED 'BITCACHE)
                            0 0 MENUWINDOW (IMAGEOBJPROP SELECTED 'X)
                            (IMAGEOBJPROP SELECTED 'Y)
                            NIL NIL 'INVERT 'REPLACE))
                 (IMAGEOBJPROP OBJ 'SELECTED SELECTED)
                 (IMAGEOBJPROP OBJ 'STATE (IMAGEOBJPROP SELECTED 'IDENTIFIER))
                 (CL:WHEN (IMAGEOBJPROP OBJ 'STATECHANGEFN)
                     (APPLY* (IMAGEOBJPROP OBJ 'STATECHANGEFN)
                            OBJ SELECTED SEL MENUWINDOW))))])

(MB.NWAY.BUTTONEVENTINFN
  [LAMBDA (OBJ MENUDS SEL RELX RELY SELWINDOW MENUTSTREAM BUTTON)
                                                             (* ; "Edited  5-Dec-2024 21:09 by rmk")
                                                             (* ; "Edited 25-Aug-2024 11:31 by rmk")
                                                             (* ; "Edited 22-Aug-2024 16:29 by rmk")
                                                             (* ; "Edited 20-Aug-2024 16:41 by rmk")
                                                             (* ; "Edited 22-Jul-2024 11:32 by rmk")
                                                             (* ; "Edited 29-Apr-2024 13:31 by rmk")
                                                             (* ; "Edited 25-Feb-2024 23:43 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:46 by rmk")
                                                             (* ; "Edited 30-May-91 22:16 by jds")

    (* ;; "The BUTTONEVENTINFN for NWAY buttons. The mouse clicked in OBJ's box")

    (* ;; " Could be making a new selection, or maybe just throwing away an old one (all off).")

    (* ;; "The window is mapped to the object's coordinate system (the baseline-left is 0,0.  We have to figure out which of the subobjects the mouse is in, given that their coordinates are relative to the main object's coordinates.  Then make the selection.")

    (PROG1 (if (OR (MEMB BUTTON '(MIDDLE RIGHT))
                   (EQ 'DON'T (MB.BUTTONEVENTINFN OBJ MENUDS SEL RELX RELY SELWINDOW MENUTSTREAM 
                                     BUTTON)))
               then 'DON'T
             else (MB.NWAY.SELECT OBJ (find SOBJ in (IMAGEOBJPROP OBJ 'SUBOBJECTS)
                                         suchthat (INSIDE? [create REGION
                                                                  LEFT _ (IMAGEOBJPROP SOBJ
                                                                                'X)
                                                                  BOTTOM _ (IMAGEOBJPROP SOBJ
                                                                                  'Y)
                                                                  WIDTH _ (fetch XSIZE
                                                                             of (IMAGEOBJPROP
                                                                                 SOBJ
                                                                                 'BOUNDBOX))
                                                                  HEIGHT _ (fetch YSIZE
                                                                              of (IMAGEOBJPROP
                                                                                  SOBJ
                                                                                  'BOUNDBOX]
                                                         RELX RELY))
                         MENUDS SEL)
                  T)
           (TEDIT.BACKTOMAIN MENUTSTREAM])

(MB.NWAY.NEWMENUBUTTON
  [LAMBDA (TEXTOBJ CH# OLDBUTTON NEWBUTTON)                  (* ; "Edited 22-Jul-2024 10:08 by rmk")
                                                             (* jds " 8-Feb-84 19:41")

    (* ;; "Not called?")

    (* ;; "Given a hook on an existing button, and an insertion point, insert a new button")

    (PROG ((ARBITRATOR (IMAGEOBJPROP OLDBUTTON 'ARBITRATOR))
           BUTTON)
          (IMAGEOBJPROP BUTTON 'ARBITRATOR ARBITRATOR)
          (TEDIT.INSERT.OBJECT BUTTON TEXTOBJ CH#)
          (TEDIT.INSERT TEXTOBJ "  " (ADD1 CH#))
          (TEDIT.LOOKS TEXTOBJ '(PROTECTED ON)
                 (ADD1 CH#)
                 2)
          (RETURN BUTTON])

(MB.NWAY.COPYFN
  [LAMBDA (OBJ)                                              (* ; "Edited 11-Aug-2024 17:11 by rmk")
                                                             (* ; "Edited 21-Jul-2024 10:34 by rmk")
                                                             (* jds "23-May-84 11:32")
                                                             (* ; "Copy an NWAY menu button.")
    (LET [(NEWOBJ (MB.COPYFN OBJ))
          (SELECTED (IMAGEOBJPROP OBJ 'SELECTED]

         (* ;; "MB.COPYFN copies the property list.")

         (for SOTAIL SUBOBJ SCOPY on (IMAGEOBJPROP NEWOBJ 'SUBOBJECTS)
            do (SETQ SUBOBJ (CAR SOTAIL))
               (SETQ SCOPY (APPLY* (IMAGEOBJPROP SUBOBJ 'COPYFN)
                                  SUBOBJ))
               (CL:WHEN (EQ SUBOBJ SELECTED)
                   (IMAGEOBJPROP NEWOBJ 'SELECTED SCOPY))
               (RPLACA SOTAIL SCOPY))
         NEWOBJ])

(MB.NWAY.INIT
  [LAMBDA (BUTTONS FONT INITSTATE)                           (* ; "Edited 24-Aug-2024 23:11 by rmk")
                                                             (* ; "Edited 20-Aug-2024 16:41 by rmk")
                                                             (* ; "Edited 11-Aug-2024 17:13 by rmk")
                                                             (* jds " 9-Feb-86 15:17")

    (* ;; "Selection happens in the BUTTEVENTINFN, no WHENOPERATEDONFN")

    (SETQ MB.NWAY.IMAGEFNS (IMAGEFNSCREATE (FUNCTION MB.NWAY.DISPLAYFN)
                                  (FUNCTION MB.NWAY.SIZEFN)
                                  (FUNCTION MB.PUTFN)
                                  (FUNCTION MB.GETFN)
                                  (FUNCTION MB.NWAY.COPYFN)
                                  (FUNCTION MB.NWAY.BUTTONEVENTINFN)
                                  'NILL
                                  'NILL
                                  'NILL
                                  'NILL
                                  'NILL
                                  'NILL
                                  'NILL
                                  'NWayButton])

(MB.NWAY.ARRANGEBUTTONS
  [LAMBDA (WIDTH SUBOBJECTS SPACING MAXITEMS/LINE)           (* ; "Edited 21-Jul-2024 20:18 by rmk")
                                                             (* jds "24-Oct-84 17:42")

(* ;;; "Pack the subobjects, separated by SPACING, into lines WIDTH wide.  Each line is a list of subobjects, and the X  of each one is set to reflect its new position in the larger object.   ")

    (for SO XSIZE LINES LINEOBJECTS (NLINEOBJECTS _ 0)
         (X _ 0) in SUBOBJECTS do [SETQ XSIZE (fetch XSIZE of (IMAGEOBJPROP SO 'BOUNDBOX]
                                  (CL:WHEN (OR (ILESSP WIDTH (IPLUS X XSIZE))
                                               (AND MAXITEMS/LINE (IGEQ NLINEOBJECTS MAXITEMS/LINE)))
                                                             (* ; "Time for a new line")
                                      (push LINES (DREVERSE LINEOBJECTS))
                                                             (* ; 
                                                             "Add a new line, reset for next line")
                                      (SETQ X 0)
                                      (SETQ LINEOBJECTS NIL)
                                      (SETQ NLINEOBJECTS 0))
                                  (push LINEOBJECTS SO)
                                  (IMAGEOBJPROP SO 'X X)
                                  (add X XSIZE SPACING)      (* ; "Position of the next object")
                                  (add NLINEOBJECTS 1) finally (CL:WHEN LINEOBJECTS
                                                             (* ; "Add a final partial line")
                                                                   (push LINES (DREVERSE LINEOBJECTS)
                                                                         ))
                                                             (RETURN (DREVERSE LINES])

(MB.NWAY.ADDITEM
  [LAMBDA (OBJ NEWBUTTON)                                    (* ; "Edited 20-Oct-2024 00:13 by rmk")
                                                             (* ; "Edited 29-Sep-2024 12:47 by rmk")
                                                             (* ; "Edited 26-Aug-2024 09:36 by rmk")
                                                             (* ; "Edited 20-Aug-2024 15:46 by rmk")
                                                             (* ; "Edited 16-Aug-2024 00:04 by rmk")
                                                             (* ; "Edited 13-Aug-2024 19:33 by rmk")
                                                             (* ; "Edited 27-Jul-2024 23:28 by rmk")
                                                             (* ; "Edited 22-Jul-2024 13:34 by rmk")
                                                             (* jds "11-Jul-85 12:44")

    (* ;; "Given an existing n-way choice menu button, add another choice to the list.  The items are arranged in alphabetical order by their labels. MAXITEMS/LINE is goofy: it should flow with reshaping of the window.")

    (CL:WHEN NEWBUTTON
        (LET* [(SUBOBJECTS (IMAGEOBJPROP OBJ 'SUBOBJECTS))
               [NEWSOBJ (MB.TOGGLE.CREATE `((IDENTIFIER ,(U-CASE NEWBUTTON))
                                            (LABEL ,NEWBUTTON)
                                            (FONT ,(IMAGEOBJPROP OBJ 'FONT]
               (MAXITEMS/LINE (IMAGEOBJPROP OBJ 'MAXITEMS/LINE]
              [SETQ SUBOBJECTS (SORT (CONS NEWSOBJ SUBOBJECTS)
                                     (FUNCTION (LAMBDA (S1 S2)
                                                 (ALPHORDER (IMAGEOBJPROP S1 'LABEL)
                                                        (IMAGEOBJPROP S2 'LABEL]
              (IMAGEOBJPROP OBJ 'SUBOBJECTS SUBOBJECTS)
              [IMAGEOBJPROP OBJ 'MINWIDTH (IMAX (IMAGEOBJPROP OBJ 'MINWIDTH)
                                                (fetch XSIZE of (IMAGEOBJPROP NEWSOBJ 'BOUNDBOX]
              (CL:WHEN (ILESSP (LENGTH SUBOBJECTS)
                              MAXITEMS/LINE)
                  [IMAGEOBJPROP OBJ 'MAXWIDTH
                         (for SOBJ in [SORT (COPY SUBOBJECTS)
                                            (FUNCTION (LAMBDA (A B)
                                                        (IGEQ (fetch XSIZE of (IMAGEOBJPROP
                                                                               A
                                                                               'BOUNDBOX))
                                                              (fetch XSIZE of (IMAGEOBJPROP
                                                                               B
                                                                               'BOUNDBOX]
                            as I from 1 to MAXITEMS/LINE sum (fetch XSIZE of (IMAGEOBJPROP
                                                                              SOBJ
                                                                              'BOUNDBOX))
                            finally (RETURN (IPLUS $$VAL (ITIMES (IMAGEOBJPROP OBJ 'ITEMSPACE)
                                                                (SUB1 MAXITEMS/LINE])
              (IMAGEOBJPROP OBJ 'MAXHEIGHT (ITIMES (IMAGEOBJPROP OBJ 'BUTTONHEIGHT)
                                                  (LENGTH SUBOBJECTS)))
              (IMAGEOBJPROP OBJ 'BOUNDBOX NIL)               (* ; 
                                                       "OBJ's original bound box is no longer valid.")
              NEWSOBJ))])

(MB.NWAY.FINDSUBOBJ
  [LAMBDA (TEXT OBJ)                                         (* ; "Edited 26-Aug-2024 09:31 by rmk")
                                                             (* ; "Edited 22-Jul-2024 13:29 by rmk")
    (find SOBJ in (IMAGEOBJPROP OBJ 'SUBOBJECTS) suchthat (STRING.EQUAL TEXT (IMAGEOBJPROP
                                                                              SOBJ
                                                                              'LABEL])

(MB.NWAY.SETSTATEFN
  [LAMBDA (PC NEWVALUE MENUSTREAM)                           (* ; "Edited 20-Oct-2024 00:02 by rmk")
                                                             (* ; "Edited 29-Sep-2024 12:45 by rmk")
                                                             (* ; "Edited 31-Aug-2024 14:46 by rmk")
                                                             (* ; "Edited  9-Aug-2024 13:36 by rmk")
                                                             (* ; "Edited  5-Aug-2024 09:42 by rmk")
                                                             (* ; "Edited  3-Aug-2024 12:15 by rmk")

    (* ;; "If NEWVALUE is OFF, the selection is turned off.  Otherwise, the button for NEWVALUE (perhaps added if it wasn't there already) is turned on and all the others are turned off.. ")

    (CL:WHEN (type? SELECTION PC)
        (SETQ PC (\TEDIT.CHTOPC (FGETSEL PC CH#)
                        (TEXTOBJ MENUSTREAM))))
    (LET ((OBJ (PCONTENTS PC)))
         (CL:UNLESS (OR (EQ NEWVALUE 'OFF)
                        (MB.NWAY.FINDSUBOBJ NEWVALUE OBJ))
                (MB.NWAY.ADDITEM OBJ NEWVALUE))
         (MB.NWAY.SELECT OBJ NEWVALUE)
         (TEDIT.OBJECT.CHANGED MENUSTREAM OBJ PC))
    PC])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS MB.NWAY.IMAGEFNS)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(MB.NWAY.INIT)
)



(* ; "TOGGLE")

(DEFINEQ

(MB.TOGGLE.CREATE
  [LAMBDA (SPEC)                                             (* ; "Edited 19-Oct-2024 09:13 by rmk")
                                                             (* ; "Edited  6-Oct-2024 22:22 by rmk")
                                                             (* ; "Edited 28-Aug-2024 18:39 by rmk")
                                                             (* ; "Edited 25-Jul-2024 16:00 by rmk")
                                                             (* ; "Edited 22-Jul-2024 00:04 by rmk")
                                                             (* gbn "24-Sep-84 14:45")

    (* ;; "Creates a TOGGLE menu button, that turns off and on alternately")

    (CL:UNLESS (ASSOC 'INITSTATE SPEC)
        (push SPEC (LIST 'INITSTATE 'OFF)))
    (CL:UNLESS (CADR (ASSOC 'SETSTATEFN SPEC))
        (push SPEC (LIST 'SETSTATEFN (FUNCTION MB.TOGGLE.SETSTATEFN))))
    (MB.CREATE SPEC MB.TOGGLE.IMAGEFNS])

(MB.TOGGLE.DISPLAYFN
  [LAMBDA (OBJ STREAM MODE)                                  (* ; "Edited 25-Aug-2024 23:13 by rmk")
                                                             (* ; "Edited 24-Aug-2024 16:02 by rmk")
                                                             (* ; "Edited 21-Jul-2024 00:41 by rmk")
                                                             (* ; "Edited 19-Jul-2024 10:57 by rmk")
                                                             (* ; "Edited 20-Nov-2023 14:35 by rmk")
                                                             (* gbn "27-Sep-84 01:23")
                                                             (* ; "'27-Sep-84 01:11' gbn")

    (* ;; "Display the innards of a menu toggle")

    (LET ((BITMAP (MB.SETIMAGE OBJ))
          (OBJBOX (MB.SIZEFN OBJ))
          (X (DSPXPOSITION NIL STREAM))
          (Y (DSPYPOSITION NIL STREAM))
          XSIZE YSIZE)
         (SETQ Y (IDIFFERENCE Y (fetch YDESC of OBJBOX)))
         (SETQ XSIZE (fetch XSIZE of OBJBOX))
         (SETQ YSIZE (fetch YSIZE of OBJBOX))
         (BITBLT BITMAP 0 0 STREAM X Y XSIZE YSIZE 'INPUT 'REPLACE)
         (CL:WHEN (EQ 'ON (IMAGEOBJPROP OBJ 'STATE))         (* ; 
                                                             "Display white text on black background")
             (BLTSHADE BLACKSHADE STREAM X Y XSIZE YSIZE 'INVERT))])

(MB.TOGGLE.INIT
  [LAMBDA NIL                                                (* ; "Edited 19-Oct-2024 23:21 by rmk")
                                                             (* ; "Edited 18-Oct-2024 13:27 by rmk")
                                                             (* ; "Edited  6-Oct-2024 23:43 by rmk")
                                                             (* ; "Edited 25-Aug-2024 23:13 by rmk")
                                                             (* ; "Edited 24-Aug-2024 10:56 by rmk")
                                                             (* ; "Edited 20-Aug-2024 15:47 by rmk")
                                                             (* jds " 9-Feb-86 15:18")
    (SETQ MB.TOGGLE.IMAGEFNS (IMAGEFNSCREATE (FUNCTION MB.TOGGLE.DISPLAYFN)
                                    (FUNCTION MB.SIZEFN)
                                    (FUNCTION MB.PUTFN)
                                    (FUNCTION MB.GETFN)
                                    (FUNCTION MB.COPYFN)
                                    (FUNCTION MB.TOGGLE.BUTTONEVENTINFN)
                                    'NILL
                                    'NILL
                                    'NILL
                                    'NILL
                                    'NILL
                                    (FUNCTION MB.TOGGLE.WHENOPERATEDONFN)
                                    'NILL
                                    'ToggleButton])

(MB.SET.TOGGLE
  [LAMBDA (IDENTIFIER VALUE MENUSTREAM)                      (* ; "Edited 22-Oct-2024 09:17 by rmk")
                                                             (* ; "Edited 26-Aug-2024 09:35 by rmk")
                                                             (* ; "Edited 20-Aug-2024 15:26 by rmk")
                                                             (* ; "Edited 11-Aug-2024 13:13 by rmk")
                                                             (* ; "Edited 21-Jul-2024 01:03 by rmk")
                                                             (* ; "Edited  6-Jul-2024 16:57 by rmk")
                                                             (* ; "Edited  6-Aug-2022 18:18 by rmk")
                                                            (* ; "Edited 12-Jun-90 19:02 by mitani")

(* ;;; "Finds the button with IDENTIFIER in TEXTSTREAM and sets its state to VALUE")

    (LET [(OBJ (OR (MB.GET IDENTIFIER MENUSTREAM)
                   (ERROR IDENTIFIER " was not found as a button."]
         (IMAGEOBJPROP OBJ 'STATE VALUE)
         (\TEDIT.FILL.PANES MENUSTREAM)
         VALUE])

(MB.TOGGLE.SETSTATEFN
  [LAMBDA (PC NEWVALUE MENUSTREAM)                           (* ; "Edited 20-Oct-2024 18:14 by rmk")
                                                             (* ; "Edited 18-Oct-2024 23:17 by rmk")
                                                             (* ; "Edited  6-Oct-2024 22:54 by rmk")
                                                             (* ; "Edited  8-Aug-2024 14:34 by rmk")
                                                             (* ; "Edited  3-Aug-2024 00:10 by rmk")
    (CL:WHEN (type? SELECTION PC)
        (SETQ PC (\TEDIT.CHTOPC (FGETSEL PC CH#)
                        (GETTSTR MENUSTREAM TEXTOBJ))))
    (IMAGEOBJPROP (POBJ PC)
           'STATE NEWVALUE)
    (TEDIT.OBJECT.CHANGED MENUSTREAM (POBJ PC)
           PC)
    PC])

(MB.TOGGLE.BUTTONEVENTINFN
  [LAMBDA (OBJ MENUDS MENUSEL RELX RELY MENUWINDOW MENUTSTREAM BUTTON)
                                                             (* ; "Edited 19-Oct-2024 19:52 by rmk")
                                                             (* ; "Edited  5-Oct-2024 22:42 by rmk")
                                                             (* ; "Edited 25-Aug-2024 12:50 by rmk")
                                                             (* ; "Edited  6-Aug-2024 10:55 by rmk")
                                                             (* ; "Edited 25-Jul-2024 20:13 by rmk")
                                                             (* ; "Edited 19-Jul-2024 10:43 by rmk")
                                                             (* ; "Edited 18-Jul-2024 10:11 by rmk")
                                                             (* ; "Edited 29-Apr-2024 13:30 by rmk")
                                                             (* ; "Edited 25-Feb-2024 23:40 by rmk")
                                                             (* ; "Edited 21-Oct-2022 18:45 by rmk")
                                                             (* ; "Edited 30-May-91 22:16 by jds")

    (* ;; "BUTTONEVENTINFN for toggle buttons. This run's in the coordinate system of the object. ")

    (* ;; "This brings up the display for the next state, tracks the mouse until either it leaves the object or the buttons come up.  If the mouse leaves, the original highlighting is restored.  Otherwise the state of the obj is advanced to its next state.  Either way, we report that the %"selection%" didn't succeed.")

    (CL:UNLESS (EQ 'DON'T (MB.BUTTONEVENTINFN OBJ MENUDS MENUSEL RELX RELY MENUWINDOW MENUTSTREAM 
                                 BUTTON))
        [LET ([NEXTSTATE (SELECTQ (IMAGEOBJPROP OBJ 'STATE)
                             ((ON T) 
                                  'OFF)
                             ((OFF NIL) 
                                  'ON)
                             (\TEDIT.THELP "ILLEGAL TOGGLE" (IMAGEOBJPROP OBJ 'STATE]
              STATECHANGEFN)
             (RESETLST

                 (* ;; "In case of an error or interrupt, make the display consistent with the state")

                 [RESETSAVE NIL `(PROGN (CL:WHEN RESETSTATE
                                            (MB.SHOWSELFN ,OBJ (IMAGEOBJPROP ,OBJ 'STATE)
                                                   ,MENUDS))]
                 (MB.SHOWSELFN OBJ NEXTSTATE MENUDS)
                 (if (EQ 'DON'T (MB.TRACK.UNTIL OBJ MENUDS))
                     then                                    (* ; "Mouse moved out of object")
                          (MB.SHOWSELFN OBJ (IMAGEOBJPROP OBJ 'STATE)
                                 MENUDS)
                          NIL
                   else                                      (* ; "Buttons came up:  do it")
                        (SETQ STATECHANGEFN (IMAGEOBJPROP OBJ 'STATECHANGEFN))
                        (if (OR (NULL STATECHANGEFN)
                                (NEQ 'DON'T (APPLY* STATECHANGEFN OBJ NEXTSTATE (fetch (TEXTWINDOW
                                                                                        WTEXTSTREAM)
                                                                                   of MENUDS)
                                                   MENUSEL)))
                            then (IMAGEOBJPROP OBJ 'STATE NEXTSTATE) 
                                                             (* ; 
                         "SELECTFN value: WHENOPERATEDONFN will run it in window's coordinate system")
                                 (IMAGEOBJPROP OBJ 'SELECTFN)
                          else                               (* ; "NIL value:  object is ignored")
                               (MB.SHOWSELFN OBJ (IMAGEOBJPROP OBJ 'STATE)
                                      MENUDS)
                               NIL)))])])

(MB.TOGGLE.WHENOPERATEDONFN
  [LAMBDA (OBJ MENUDS OPERATION MENUSEL MENUSTREAM)          (* ; "Edited 20-Oct-2024 22:11 by rmk")
                                                             (* ; "Edited  6-Oct-2024 21:34 by rmk")
                                                             (* ; "Edited 24-Aug-2024 10:48 by rmk")
                                                             (* ; "Edited 20-Aug-2024 15:46 by rmk")
                                                             (* ; "Edited  9-Feb-2024 10:52 by rmk")
                                                             (* ; "Edited 28-Jan-2024 23:32 by rmk")
                                                             (* ; "Edited 30-May-91 22:16 by jds")

    (* ;; "Run's the SELECTFN of a toggle in the window's coordinate system, after it has been selected (mouse buttons came up).  The buttoneventfn manages the STATECHANGEFN and highlighting in the objectg's coordinate system")

    (SELECTQ OPERATION
        (SELECTED (CL:WHEN (IMAGEOBJPROP OBJ 'SELECTFN)
                      (APPLY* (IMAGEOBJPROP OBJ 'SELECTFN)
                             OBJ MENUDS MENUSEL MENUSTREAM))
                  (TEDIT.BACKTOMAIN MENUSTREAM))
        ((DESELECTED HIGHLIGHTED UNHIGHLIGHTED))
        NIL])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS MB.TOGGLE.IMAGEFNS)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(MB.TOGGLE.INIT)
)



(* ; "FIELDS")

(DEFINEQ

(MB.FIELD.CREATE
  [LAMBDA (SPEC MENUTSTREAM CH#)                             (* ; "Edited  4-Dec-2024 15:57 by rmk")
                                                             (* ; "Edited 20-Oct-2024 23:43 by rmk")
                                                             (* ; "Edited 29-Sep-2024 12:52 by rmk")
                                                             (* ; "Edited 29-Aug-2024 09:41 by rmk")
                                                             (* ; "Edited 22-Aug-2024 23:22 by rmk")
                                                             (* ; "Edited 21-Aug-2024 09:55 by rmk")
                                                             (* ; "Edited 15-Aug-2024 23:13 by rmk")
                                                             (* ; "Edited 14-Aug-2024 00:25 by rmk")
                                                             (* ; "Edited  7-Aug-2024 23:48 by rmk")
                                                             (* ; "Edited  2-Aug-2024 12:21 by rmk")
                                                             (* ; "Edited 30-Jul-2024 13:31 by rmk")
                                                             (* ; "Edited 27-Jul-2024 21:16 by rmk")
                                                             (* ; "Edited 26-Jul-2024 13:37 by rmk")
                                                             (* ; "Edited 24-Jul-2024 18:20 by rmk")

    (* ;; "Installs a FIELDPREFIX image objects with preceding text followed by %" {%" and a post-field string piece with %"} %" followed by the postlabel.")

    (LET ((INITSTATE (CADR (ASSOC 'INITSTATE SPEC)))
          (PRELABEL (CADR (ASSOC 'PRELABEL SPEC)))
          (POSTLABEL (CADR (ASSOC 'POSTLABEL SPEC)))
          (IDENTIFIER (CADR (ASSOC 'IDENTIFIER SPEC)))
          [LABELFONT (OR (CADR (ASSOC 'LABELFONT SPEC))
                         '(HELVETICA 8]
          [FIELDFONT (OR (CADR (ASSOC 'FIELDFONT SPEC))
                         '(HELVETICA 8]
          PRE POST)
         (CL:WHEN LABELFONT
             (SETQ LABELFONT (FONTCREATE LABELFONT)))
         (CL:WHEN FIELDFONT
             (SETQ FIELDFONT (FONTCREATE FIELDFONT)))

         (* ;; "DESC could specify a prelabel font different from a field font")

         (CL:UNLESS IDENTIFIER
             (if PRELABEL
                 then [push SPEC (LIST IDENTIFIER (U-CASE (MKATOM (CL:STRING-TRIM '(#\Space #\Tab 
                                                                                          #\Newline 
                                                                                          #\:)
                                                                         PRELABEL]
               else (ERROR "NO IDENTIFIER FOR FIELD")))
         (SETQ PRE (LIST (LIST FIELDFONT " {")))
         (CL:WHEN PRELABEL
             (push PRE (LIST LABELFONT PRELABEL)))
         (CL:WHEN POSTLABEL
             (SETQ POST (LIST (LIST LABELFONT POSTLABEL))))
         (push POST (LIST FIELDFONT "} "))

         (* ;; "")

         (TEDIT.INSERT.OBJECT (MB.FIELD.PREFIXCREATE SPEC PRE)
                MENUTSTREAM CH# FIELDFONT)
         (add CH# 1)
         (CL:WHEN (AND INITSTATE (NEQ INITSTATE '**EMPTY**)) (* ; "Initial entry")
             [TEDIT.INSERT MENUTSTREAM (MKSTRING INITSTATE)
                    CH#
                    `(FONT ,FIELDFONT]
             (add CH# (NCHARS INITSTATE)))
         (TEDIT.INSERT.OBJECT (MB.FIELD.SUFFIXCREATE SPEC POST)
                MENUTSTREAM CH# FIELDFONT)
         (add CH# 1])

(MB.FIELD.DISPLAYFN
  [LAMBDA (OBJ IMAGESTREAM)                                  (* ; "Edited  4-Dec-2024 16:11 by rmk")
                                                             (* ; "Edited  4-Dec-2021 08:24 by rmk")
                                                            (* ; "Edited  1-Dec-2021 14:18 by rmk:")
    (for X in (IMAGEOBJPROP OBJ 'OBJECTDATUM) do (DSPFONT (OR (FONTP (CAR X))
                                                              (FONTCREATE (CAR X)
                                                                     NIL NIL NIL IMAGESTREAM))
                                                        IMAGESTREAM)
                                                 (for I in (CDR X) do (PRIN3 I IMAGESTREAM])

(MB.FIELD.IMAGEBOXFN
  [LAMBDA (OBJ IMAGESTREAM CURRENTX RIGHTMARGIN)             (* ; "Edited  4-Dec-2024 08:36 by rmk")
                                                             (* ; "Edited  9-Dec-2021 23:02 by rmk")
                                                             (* ; "Edited  7-Dec-2021 10:50 by rmk")
                                                             (* ; "Edited  5-Dec-2021 23:52 by rmk")
                                                             (* ; "Edited  4-Dec-2021 08:24 by rmk")
                                                            (* ; "Edited  1-Dec-2021 13:27 by rmk:")

    (* ;; "Calculates the image box for a sequence of (font string/atom) items.")

    (SETQ IMAGESTREAM (GETSTREAM IMAGESTREAM 'OUTPUT))
    (for X FONT (XSIZE _ 0)
         (ASCENT _ 0)
         (DESCENT _ 0) in (IMAGEOBJPROP OBJ 'OBJECTDATUM)
       do (SETQ FONT (FONTCREATE (CAR X)
                            NIL NIL NIL IMAGESTREAM))
          [SETQ DESCENT (IMAX DESCENT (FONTPROP FONT 'DESCENT]
          [SETQ ASCENT (IMAX ASCENT (FONTPROP FONT 'ASCENT]
          (add XSIZE (for I in (CDR X) sum (STRINGWIDTH I FONT)))
       finally (RETURN (create IMAGEBOX
                              XSIZE _ XSIZE
                              YSIZE _ (IPLUS ASCENT DESCENT)
                              YDESC _ DESCENT
                              XKERN _ 0])

(MB.FIELD.PREFIXCREATE
  [LAMBDA (SPEC PRE)                                         (* ; "Edited  4-Dec-2024 17:48 by rmk")
                                                             (* ; "Edited  8-Nov-2024 08:36 by rmk")
                                                             (* ; "Edited 22-Oct-2024 12:54 by rmk")
                                                             (* ; "Edited 20-Oct-2024 17:25 by rmk")
                                                             (* ; "Edited  6-Oct-2024 17:43 by rmk")
                                                             (* ; "Edited 29-Sep-2024 21:45 by rmk")
                                                             (* ; "Edited 29-Aug-2024 09:40 by rmk")
                                                             (* ; "Edited 21-Aug-2024 09:48 by rmk")

    (* ;; "Create a FIELDPREFIX image object, and fill in its image and function-hook fields.  This displays its own text, but returns the characters of the following unprotected text field when selected")

    (CL:UNLESS (CADR (ASSOC 'SETSTATEFN SPEC))
        (push SPEC (LIST 'SETSTATEFN (FUNCTION MB.FIELD.SETSTATEFN))))
    (LET ((INITSTATE (CADR (ASSOC 'INITSTATE SPEC)))
          (EMPTYVALUE (ASSOC 'EMPTYVALUE SPEC))
          FIELDTYPE OBJ)
         (CL:WHEN EMPTYVALUE                                 (* ; 
                                                        "Put it in a list, so we can distinguish NIL")
             (SETQ SPEC (CONS (LIST 'EMPTYVALUE (CDR EMPTYVALUE))
                              (REMOVE EMPTYVALUE SPEC))))
         (CL:UNLESS (SETQ FIELDTYPE (CADR (ASSOC 'FIELDTYPE SPEC)))
             [push SPEC (LIST 'FIELDTYPE (SETQ FIELDTYPE 'STRING])
         (SETQ OBJ (IMAGEOBJCREATE PRE MB.FIELD.IMAGEFNS))
         (IMAGEOBJPROP OBJ 'STATEFN (FUNCTION MB.FIELD.GETSTATEFN))
         (CL:UNLESS (CADR (ASSOC 'SETSTATEFN SPEC))
             (IMAGEOBJPROP OBJ SPEC 'SETSTATEFN (FUNCTION MB.FIELD.SETSTATEFN)))
         (for S in SPEC unless (MEMB (CAR S)
                                     '(PRELABEL POSTLABEL LABELFONT FIELDFONT))
            do (IMAGEOBJPROP OBJ (CAR S)
                      (CADR S)))
         (CL:WHEN (AND EMPTYVALUE (EQ INITSTATE (CADR EMPTYVALUE)))
             (SETQ INITSTATE '**EMPTY**))
         (CL:WHEN (AND INITSTATE (NEQ INITSTATE '**EMPTY**)) (* ; "Can SELECTION be initialized?")
             (CL:UNLESS (SELECTQ FIELDTYPE
                            (NUMBER (NUMBERP INITSTATE))
                            (SYMBOL (LITATOM INITSTATE))
                            (POSITIVENUMBER 
                                 (AND (NUMBERP INITSTATE)
                                      (IGEQ INITSTATE 1)))
                            (CARDINAL (AND (NUMBERP INITSTATE)
                                           (IGEQ INITSTATE 0)))
                            ((TEXT STRING) 
                                 (STRINGP INITSTATE))
                            (IMAGEOBJ (IMAGEOBJP INITSTATE))
                            NIL)
                    (\ILLEGAL.ARG INITSTATE))
             (IMAGEOBJPROP OBJ 'INITSTATE INITSTATE))
         (IMAGEOBJPROP OBJ 'FIELDPREFIX T)
         OBJ])

(MB.FIELD.SUFFIXCREATE
  [LAMBDA (SPEC POST)                                        (* ; "Edited  4-Dec-2024 11:58 by rmk")
                                                             (* ; "Edited  8-Nov-2024 08:36 by rmk")
                                                             (* ; "Edited 22-Oct-2024 12:54 by rmk")
                                                             (* ; "Edited 20-Oct-2024 17:25 by rmk")
                                                             (* ; "Edited  6-Oct-2024 17:43 by rmk")
                                                             (* ; "Edited 29-Sep-2024 21:45 by rmk")
                                                             (* ; "Edited 29-Aug-2024 09:40 by rmk")
                                                             (* ; "Edited 21-Aug-2024 09:48 by rmk")

    (* ;; "Creates the FIELDSUFFIX image object.  This displays the POST strings,  but otherwise just moves the caret to its right when selected.  All the action is in the FIELDPREFIX on the other side of the field.")

    (LET (OBJ)
         (SETQ OBJ (IMAGEOBJCREATE POST MB.FIELD.IMAGEFNS))
         (IMAGEOBJPROP OBJ 'FIELDSUFFIX T)
         (IMAGEOBJPROP OBJ 'IDENTIFIER (PACK* (CADR (ASSOC 'IDENTIFIER SPEC))
                                              ".SUFFIX"))
         OBJ])

(MB.FIELD.INIT
  [LAMBDA NIL                                                (* ; "Edited  4-Dec-2024 16:09 by rmk")
                                                             (* ; "Edited 22-Aug-2024 10:07 by rmk")
                                                             (* ; "Edited 20-Aug-2024 16:03 by rmk")
                                                             (* ; "Edited 23-Jul-2024 14:49 by rmk")
                                                             (* ; "Edited 18-Feb-2024 14:15 by rmk")
                                                             (* jds "12-Feb-85 14:32")

    (* ;; "The displayfn is NILL--field prefixes don't display")

    (SETQ MB.FIELD.IMAGEFNS (IMAGEFNSCREATE (FUNCTION MB.FIELD.DISPLAYFN)
                                   (FUNCTION MB.FIELD.IMAGEBOXFN)
                                   (FUNCTION MB.PUTFN)
                                   (FUNCTION MB.GETFN)
                                   (FUNCTION MB.COPYFN)
                                   (FUNCTION MB.FIELD.BUTTONEVENTINFN)
                                   'NILL
                                   'NILL
                                   'NILL
                                   'NILL
                                   'NILL
                                   (FUNCTION MB.FIELD.WHENOPERATEDONFN)
                                   (FUNCTION NILL)
                                   'FieldPrefixButton])

(MB.FIELD.WHENOPERATEDONFN
  [LAMBDA (OBJ PANE OPERATION SEL TSTREAM)                   (* ; "Edited  5-Dec-2024 15:12 by rmk")
                                                             (* ; "Edited  8-Nov-2024 08:37 by rmk")
                                                             (* ; "Edited 26-Jul-2024 00:17 by rmk")
                                                             (* ; "Edited 24-Jul-2024 00:02 by rmk")
                                                             (* ; "Edited 20-Jul-2024 20:57 by rmk")
                                                             (* ; "Edited 17-Jul-2024 21:27 by rmk")
                                                             (* ; "Edited 27-Mar-2024 13:49 by rmk")

    (* ;; "If the buttoneventfn didn't take care of this.")

    (SELECTQ OPERATION
        (SELECTED (if (IMAGEOBJPROP OBJ 'FIELDPREFIX)
                      then (FSETSEL SEL POINT 'RIGHT)
                    else (FSETSEL SEL POINT 'LEFT))
                  (FSETSEL SEL SELOBJ NIL)
                  (FSETSEL SEL DCH 0))
        (\TEDIT.FIXSEL SEL (GETTSTR TSTREAM TEXTOBJ))
        ((DESELECTED HIGHLIGHTED UNHIGHLIGHTED) 
             NIL)
        NIL])

(MB.FIELD.GETSTATEFN
  [LAMBDA (PREFIXPC PREFIXOBJ TSTREAM)                       (* ; "Edited  4-Dec-2024 16:41 by rmk")
                                                             (* ; "Edited  8-Nov-2024 08:37 by rmk")
                                                             (* ; "Edited 22-Oct-2024 10:43 by rmk")
                                                             (* ; "Edited 29-Sep-2024 12:46 by rmk")
                                                             (* ; "Edited 29-Aug-2024 11:05 by rmk")
                                                             (* ; "Edited 27-Mar-2024 13:49 by rmk")

    (* ;; "Piece PREFIXPC contains a FIELDPREFIX image object. This extracts the field-value from the following unprotected pieces, and stores in as the STATE of OBJ. Crucially, it returns the last piece of the field, the corresponding SUFFIXPC. Higher iterations can continue with that value.")

    (* ;; "This also records the starting CHNO and length of the field--intuitively, the field is part of the object.  Can't save it at insertion time, because it might change.")

    (LET* ((TEXTOBJ (TEXTOBJ TSTREAM))
           (FIELDSTART (ADD1 (\TEDIT.PCTOCH PREFIXPC TEXTOBJ)))
           (ENDPC PREFIXPC)
           FIELDLENGTH FSEL FIELDTYPE VAL)                   (* ; "FSEL selects the field")
          (SETQ FIELDLENGTH (for PC inpieces (NEXTPIECE PREFIXPC)
                               sum (CL:WHEN (AND (EQ OBJECT.PTYPE (PTYPE PC))
                                                 (IMAGEOBJPROP (POBJ PC)
                                                        'FIELDSUFFIX))
                                       (SETQ ENDPC PC)
                                       (RETURN $$VAL))
                                   (PLEN PC)))
          (SETQ FSEL (create SELECTION
                            SET _ T))
          (\TEDIT.UPDATE.SEL FSEL FIELDSTART FIELDLENGTH 'RIGHT)
          (SETQ FIELDTYPE (IMAGEOBJPROP PREFIXOBJ 'FIELDTYPE))
          (SETQ VAL (SELECTQ FIELDTYPE
                        (IMAGEOBJ (if (EQ FIELDLENGTH 1)
                                      then (IMAGEOBJP (FGETSEL FSEL SELOBJ))
                                    elseif (EQ FIELDLENGTH 0)
                                    else (TEDIT.PROMPTPRINT TSTREAM (CONCAT
                                                                     (L-CASE (IMAGEOBJPROP
                                                                              PREFIXOBJ
                                                                              'IDENTIFIER)
                                                                            T)
                                                                     
                                                            " field does not contain an image object"
                                                                     )
                                                T T)
                                         NIL))
                        (SELECTION FSEL)
                        (MB.FIELD.INSURETYPE FIELDTYPE (TEDIT.SEL.AS.STRING TSTREAM FSEL)
                               TSTREAM)))
          (CL:WHEN (EQ VAL '**EMPTY**)
              (if (IMAGEOBJPROP PREFIXOBJ 'EMPTYVALUE)
                  then [SETQ VAL (CAR (IMAGEOBJPROP PREFIXOBJ 'EMPTYVALUE]
                else (SELECTQ FIELDTYPE
                         ((STRING TEXT) 
                              (SETQ VAL (CONCAT)))
                         (SYMBOL (SETQ VAL NIL))
                         NIL)))
          (IMAGEOBJPROP PREFIXOBJ 'STATE VAL)
          (IMAGEOBJPROP PREFIXOBJ 'FIELDSTART FIELDSTART)
          (IMAGEOBJPROP PREFIXOBJ 'FIELDLENGTH FIELDLENGTH)
          ENDPC])

(MB.FIELD.SETSTATEFN
  [LAMBDA (PREFIXPC NEWVALUE TSTREAM)                        (* ; "Edited  4-Dec-2024 20:31 by rmk")
                                                             (* ; "Edited 20-Oct-2024 17:20 by rmk")
                                                             (* ; "Edited 29-Sep-2024 12:46 by rmk")
                                                             (* ; "Edited 31-Aug-2024 11:33 by rmk")
                                                             (* ; "Edited 26-Aug-2024 09:23 by rmk")
                                                             (* ; "Edited 22-Aug-2024 10:04 by rmk")
                                                             (* ; "Edited  8-Aug-2024 22:07 by rmk")
                                                             (* ; "Edited  6-Aug-2024 12:09 by rmk")
                                                             (* ; "Edited  5-Aug-2024 09:57 by rmk")

    (* ;; "Piece PREFIXPC contains a FIELDPREFIX image object. The following (unprotected) field begins at the next character position and ends just before the following SUFFIXPC. This replaces the current contents of that field with NEWVAL.  Returns the last piece of the new value, PREFIXPC if NEWVALUE is NIL=empty value.")

    (PROG* ((TEXTOBJ (GETTSTR TSTREAM TEXTOBJ))
            (PREFIXOBJ (PCONTENTS PREFIXPC))
            (FIELDSTART (ADD1 (\TEDIT.PCTOCH PREFIXPC TEXTOBJ)))
            (FIELDTYPE (IMAGEOBJPROP PREFIXOBJ 'FIELDTYPE))
            (EMPTYVALUE (IMAGEOBJPROP PREFIXOBJ 'EMPTYVALUE))
            FIELDLENGTH FSEL)
           (CL:WHEN (AND EMPTYVALUE (EQ NEWVALUE (CAR EMPTYVALUE)))
               (SETQ NEWVALUE '**EMPTY**))
           (SELECTQ FIELDTYPE
               (IMAGEOBJ (CL:WHEN (AND NEWVALUE (NOT (IMAGEOBJP NEWVALUE)))
                                                             (* ; "must be an image object")
                             (TEDIT.PROMPTPRINT (CONCAT "Invalid value for "
                                                       (L-CASE (IMAGEOBJPROP PREFIXOBJ 'IDENTIFIER)
                                                              T)
                                                       " field")
                                    T T)
                             (RETURN NIL)))
               (SELECTION (\ILLEGAL.ARG NEWVALUE))
               (SETQ NEWVALUE (MB.FIELD.INSURETYPE FIELDTYPE NEWVALUE TSTREAM)))

     (* ;; "NEWVALUE is valid for this type of field")

           (SETQ FIELDLENGTH (for PC inpieces (NEXTPIECE PREFIXPC)
                                until (AND (EQ OBJECT.PTYPE (PTYPE PC))
                                           (IMAGEOBJPROP (POBJ PC)
                                                  'FIELDSUFFIX)) sum (PLEN PC)))
           (SETQ FSEL (create SELECTION
                             SET _ T))                       (* ; 
                                                    "FSEL selects the field to the right of PREFIXPC")
           (\TEDIT.UPDATE.SEL FSEL FIELDSTART FIELDLENGTH 'LEFT)
           (CL:UNLESS (EQ 0 FIELDLENGTH)                     (* ; "Clear the old value")
               (\TEDIT.DELETE TEXTOBJ FSEL)
               (SETQ FIELDLENGTH 0))
           (SETQ FIELDLENGTH (if (EQ NEWVALUE '**EMPTY**)
                                 then 0
                               elseif (EQ 'IMAGEOBJ FIELDTYPE)
                                 then (TEDIT.INSERT.OBJECT NEWVALUE TSTREAM FSEL)
                                      1
                               else (SETQ NEWVALUE (MKSTRING NEWVALUE))
                                    (\TEDIT.INSERT NEWVALUE FSEL TSTREAM T T)
                                    (NCHARS NEWVALUE)))
           (IMAGEOBJPROP PREFIXOBJ 'FIELDLENGTH FIELDLENGTH)
           (IMAGEOBJPROP PREFIXOBJ 'STATE NEWVALUE)

     (* ;; "Maybe the insert jiggled the pieces, scan again for the end piece")

           (RETURN (find PC inpieces (NEXTPIECE PREFIXPC) suchthat (AND (EQ OBJECT.PTYPE (PTYPE
                                                                                          PC))
                                                                        (IMAGEOBJPROP (POBJ PC)
                                                                               'FIELDSUFFIX])

(MB.FIELD.BUTTONEVENTINFN
  [LAMBDA (OBJ STREAM SEL RELX RELY SELWINDOW TEXTSTREAM BUTTON)
                                                             (* ; "Edited  5-Dec-2024 21:10 by rmk")
                                                             (* ; "Edited 20-Jul-2024 15:26 by rmk")
                                                             (* ; "Edited  9-Apr-2023 18:22 by rmk")
                                                             (* ; "Edited 30-May-91 22:15 by jds")

    (* ;; "Called when a mouse-button is down inside the object, RELX and RELY are in the objects coordinate system.  Decline the selection if the mouse isn't in the object. Otherwise, make sure that the selection is a point selection to the right. if this is a prefix, or left if a suffix.")

    (LET [(OBJBOX (IMAGEOBJPROP OBJ 'BOUNDBOX]
         (if (AND (EQ BUTTON 'LEFT)
                  (IGEQ RELX 0)
                  (IGEQ RELY 0)
                  (ILEQ RELX (fetch XSIZE of OBJBOX))
                  (ILEQ RELY (fetch YSIZE of OBJBOX)))
             then (if (IMAGEOBJPROP OBJ 'FIELDPREFIX)
                      then (FSETSEL SEL POINT 'RIGHT)
                    else (FSETSEL SEL POINT 'LEFT))
                  (FSETSEL SEL SELOBJ NIL)
                  (FSETSEL SEL DCH 0)
                  T
           else 'DON'T])

(MB.FIELD.SIZEFN
  [LAMBDA (OBJ STREAM)                                       (* ; "Edited 31-Jul-2024 21:22 by rmk")
    (create IMAGEBOX
           XSIZE _ 0
           YSIZE _ 0
           YDESC _ 0
           XKERN _ 0])

(MB.FIELD.INSURETYPE
  [LAMBDA (FIELDTYPE STR TSTREAM)                            (* ; "Edited  4-Dec-2024 20:09 by rmk")
                                                             (* ; "Edited  8-Nov-2024 08:37 by rmk")
                                                             (* ; "Edited 29-Sep-2024 21:52 by rmk")
                                                             (* ; "Edited 31-Aug-2024 12:46 by rmk")
                                                             (* ; "Edited 29-Aug-2024 10:28 by rmk")
                                                             (* ; "Edited 20-Aug-2024 23:23 by rmk")
                                                             (* ; "Edited  9-Aug-2024 11:47 by rmk")

    (* ;; "Coerce string field selections to atoms or numbers, promptprinting and returning nIL if type is wrong.  Returns **EMPTY** for atom and number cases, if the trimmed field is in fact empty.")

    (if (STRING.EQUAL STR '**EMPTY**)
        then '**EMPTY**
      else (LET ((TRIMMED (CL:IF (STRINGP STR)
                              (CL:STRING-TRIM '(#\Space #\Newline)
                                     STR)
                              STR))
                 VAL)
                (SELECTQ FIELDTYPE
                    ((TEXT STRING)                           (* ; 
                                                            "String should be a string, not NIL atom")
                         (SETQ VAL (OR STR '**EMPTY**)))
                    ((NUMBER PICAS POSITIVENUMBER SIGNEDNUMBER CARDINAL) 
                         (SETQ TRIMMED (MKATOM TRIMMED))
                         (if (OR (EQ 0 (NCHARS TRIMMED))
                                 (NULL STR))
                             then (SETQ VAL '**EMPTY**)
                           elseif (NUMBERP TRIMMED)
                             then (SETQ VAL TRIMMED)
                                  (SELECTQ FIELDTYPE
                                      (POSITIVENUMBER 
                                           (CL:UNLESS (GREATERP VAL 0)
                                               (TEDIT.PROMPTPRINT TSTREAM (CONCAT STR 
                                                                          " is not a positive number"
                                                                                 )
                                                      T T)
                                               (SETQ VAL NIL)))
                                      (SIGNEDNUMBER (SETQ VAL
                                                     (LIST [CAR (MEMB (NTHCHAR TRIMMED 1)
                                                                      '(+ -]
                                                           VAL)))
                                      (NATURALNUMBER (CL:UNLESS (IGEQ VAL 0)
                                                         (TEDIT.PROMPTPRINT TSTREAM (CONCAT STR 
                                                                           " is not a natural number"
                                                                                           )
                                                                T T)))
                                      (PICAS 
                                             (* ;; "Convert picas to points")

                                             (SETQ VAL (FIXR (TIMES PTSPERPICA VAL))))
                                      NIL)
                                  (CL:WHEN (AND (IGEQ (NCHARS VAL)
                                                      3)
                                                (EQ (CHARCODE 0)
                                                    (NTHCHARCODE VAL -1))
                                                (EQ (CHARCODE %.)
                                                    (NTHCHARCODE VAL -2)))
                                                             (* ; "xxx.0 -> xxx")
                                      (SETQ VAL (FIX VAL)))
                           else (TEDIT.PROMPTPRINT TSTREAM (CONCAT STR " is not a number")
                                       T T))
                         (CL:UNLESS VAL (ERROR!)))
                    (SYMBOL (SETQ VAL (CL:IF (OR (EQ 0 (NCHARS TRIMMED))
                                                 (NULL STR))
                                          '**EMPTY**
                                          (MKATOM TRIMMED))))
                    (\TEDIT.THELP "UNRECOGNIZED FIELD TYPE" FIELDTYPE))
                VAL])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS MB.FIELD.IMAGEFNS)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(MB.FIELD.INIT)
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (3371 18428 (MB.ADD 3381 . 8970) (MB.DELETE 8972 . 9346) (MB.GET 9348 . 15890) (
MB.GET.MBARG 15892 . 17164) (TEDITMENU.STREAM 17166 . 17833) (TEDIT.BACKTOMAIN 17835 . 18426)) (18472 
35817 (MB.BUTTONEVENTINFN 18482 . 19691) (MB.DISPLAYFN 19693 . 21752) (MB.SETIMAGE 21754 . 22922) (
MB.SIZEFN 22924 . 24472) (MB.WHENOPERATEDONFN 24474 . 26423) (MB.COPYFN 26425 . 26883) (MB.GETFN 26885
 . 27846) (MB.PUTFN 27848 . 28948) (MB.SHOWSELFN 28950 . 30459) (MB.CREATE 30461 . 33446) (
MB.CHANGENAME 33448 . 33930) (MB.INIT 33932 . 35118) (MB.TRACK.UNTIL 35120 . 35815)) (36042 45381 (
MB.3STATE.CREATE 36052 . 36916) (MB.3STATE.DISPLAYFN 36918 . 37904) (MB.3STATE.SHOWSELFN 37906 . 40217
) (MB.3STATE.INIT 40219 . 41348) (MB.3STATE.SETSTATEFN 41350 . 42008) (MB.3STATE.BUTTONEVENTINFN 42010
 . 45379)) (45530 74553 (MB.NWAY.CREATE 45540 . 51077) (MB.NWAY.DISPLAYFN 51079 . 51942) (
MB.NWAY.WHENOPERATEDONFN 51944 . 54134) (MB.NWAY.SIZEFN 54136 . 58072) (MB.NWAY.SELECT 58074 . 60884) 
(MB.NWAY.BUTTONEVENTINFN 60886 . 64098) (MB.NWAY.NEWMENUBUTTON 64100 . 64812) (MB.NWAY.COPYFN 64814 . 
65781) (MB.NWAY.INIT 65783 . 66994) (MB.NWAY.ARRANGEBUTTONS 66996 . 68967) (MB.NWAY.ADDITEM 68969 . 
72731) (MB.NWAY.FINDSUBOBJ 72733 . 73247) (MB.NWAY.SETSTATEFN 73249 . 74551)) (74700 86221 (
MB.TOGGLE.CREATE 74710 . 75705) (MB.TOGGLE.DISPLAYFN 75707 . 77190) (MB.TOGGLE.INIT 77192 . 78709) (
MB.SET.TOGGLE 78711 . 79912) (MB.TOGGLE.SETSTATEFN 79914 . 80754) (MB.TOGGLE.BUTTONEVENTINFN 80756 . 
84876) (MB.TOGGLE.WHENOPERATEDONFN 84878 . 86219)) (86372 114334 (MB.FIELD.CREATE 86382 . 90094) (
MB.FIELD.DISPLAYFN 90096 . 90887) (MB.FIELD.IMAGEBOXFN 90889 . 92371) (MB.FIELD.PREFIXCREATE 92373 . 
95656) (MB.FIELD.SUFFIXCREATE 95658 . 97049) (MB.FIELD.INIT 97051 . 98537) (MB.FIELD.WHENOPERATEDONFN 
98539 . 99810) (MB.FIELD.GETSTATEFN 99812 . 103641) (MB.FIELD.SETSTATEFN 103643 . 108059) (
MB.FIELD.BUTTONEVENTINFN 108061 . 109470) (MB.FIELD.SIZEFN 109472 . 109712) (MB.FIELD.INSURETYPE 
109714 . 114332)))))
STOP
