(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "10-Apr-2024 23:30:21" {WMEDLEY}<library>tedit>TEDIT-COMMAND.;73 46658  

      :EDIT-BY rmk

      :CHANGES-TO (MACROS \TEDIT.MOUSESTATE)

      :PREVIOUS-DATE " 2-Apr-2024 15:35:48" {WMEDLEY}<library>tedit>TEDIT-COMMAND.;72)


(PRETTYCOMPRINT TEDIT-COMMANDCOMS)

(RPAQQ TEDIT-COMMANDCOMS
       [[DECLARE%: EVAL@COMPILE DONTCOPY (CONSTANTS (\SCRATCHLEN 64))
               (CONSTANTS (MSPACE 153)
                      (NSPACE 152)
                      (THINSPACE 159)
                      (FIGSPACE 154))
               (EXPORT (CONSTANTS (NONE.TTC 0)
                              (CHARDELETE.TTC 1)
                              (WORDDELETE.TTC 2)
                              (DELETE.TTC 3)
                              (FUNCTIONCALL.TTC 4)
                              (REDO.TTC 5)
                              (UNDO.TTC 6)
                              (CMD.TTC 7)
                              (NEXT.TTC 8)
                              (EXPAND.TTC 9)
                              (CHARDELETE.FORWARD.TTC 10)
                              (WORDDELETE.FORWARD.TTC 11)
                              (PUNCT.TTC 20)
                              (TEXT.TTC 21)
                              (WHITESPACE.TTC 22))
                      (MACROS \TEDIT.MOUSESTATE \TEDIT.CHECK)
                      (RECORDS TEDITTERMCODE)
                      
                      (* ;; "Bits in the CHARTABLE that control line breaking, and what happens when a line is broken on this character  (RMK:  THESE DON'T SEEM TO BE USED)")

                      (CONSTANTS (NOTBEFORE.LB 1)
                                                             (* ; 
                                   "Must not break before this character (e.g. Japanese right-paren)")
                             (NOTAFTER.LB 2)
                                                             (* ; 
                                     "Must not break after this character (e.g. Japanese open-quote)")
                             (BEFORE.LB 4)
                                                             (* ; "OK to break before this character, provided it's OK to break after the prior char (true of most non-white-space)")
                             (AFTER.LB 8)
                                                             (* ; 
    "OK to break after this char, if it's OK to break before the next one (true of most white space)")
                             (DISAPPEAR-IF-NOT-SPLIT.LB 16)
                                                             (* ; "This character shouldn't be rendered if it isn't the last char on the line (non-breaking hyphen has this)")
                             (NEWCHAR-IF-SPLIT.LB 32)
                                                             (* ; "Look this char up in *TEDIT-SPLITCHAR-HASH* if this IS the last character on a line, and render it as the char we found.")
                             ]
        (FNS \TEDIT.INTERRUPT.SETUP \TEDIT.MARKACTIVE \TEDIT.MARKINACTIVE \TEDIT.COMMAND.LOOP 
             \TEDIT.COMMAND.RESET.SETUP)
        [INITVARS (TEDIT.INTERRUPTS '((2 BREAK)
                                      (5 ERROR)
                                      (7 HELP)
                                      (20 CONTROL-T]
        (VARS (|| NIL))
        (GLOBALVARS || TEDIT.INTERRUPTS)
        (COMS                                                (* ; "Read-table Utilities")
              (FNS \TEDIT.READTABLE \TEDIT.WORDBOUND.READTABLE TEDIT.GETSYNTAX TEDIT.SETSYNTAX 
                   TEDIT.GETFUNCTION TEDIT.SETFUNCTION TEDIT.WORDGET TEDIT.WORDSET 
                   TEDIT.ATOMBOUND.READTABLE)
              [DECLARE%: DONTEVAL@LOAD DOCOPY (VARS (TEDIT.READTABLE (\TEDIT.READTABLE))
                                                    (TEDIT.WORDBOUND.READTABLE (
                                                                           \TEDIT.WORDBOUND.READTABLE
                                                                                ]
              (GLOBALVARS TEDIT.READTABLE TEDIT.WORDBOUND.READTABLE))
        (COMS                                                (* ; "Wheelscroll")
              (FILES (SYSLOAD FROM LISPUSERS)
                     WHEELSCROLL)
              (FNS \TEDIT.WHEELSCROLL)
              (GLOBALVARS WHEELSCROLLCHARCODES)
              (VARS (WHEELSCROLLCHARCODES (\TEDIT.WHEELSCROLL])
(DECLARE%: EVAL@COMPILE DONTCOPY 
(DECLARE%: EVAL@COMPILE 

(RPAQQ \SCRATCHLEN 64)


(CONSTANTS (\SCRATCHLEN 64))
)

(DECLARE%: EVAL@COMPILE 

(RPAQQ MSPACE 153)

(RPAQQ NSPACE 152)

(RPAQQ THINSPACE 159)

(RPAQQ FIGSPACE 154)


(CONSTANTS (MSPACE 153)
       (NSPACE 152)
       (THINSPACE 159)
       (FIGSPACE 154))
)

(* "FOLLOWING DEFINITIONS EXPORTED")(DECLARE%: EVAL@COMPILE 

(RPAQQ NONE.TTC 0)

(RPAQQ CHARDELETE.TTC 1)

(RPAQQ WORDDELETE.TTC 2)

(RPAQQ DELETE.TTC 3)

(RPAQQ FUNCTIONCALL.TTC 4)

(RPAQQ REDO.TTC 5)

(RPAQQ UNDO.TTC 6)

(RPAQQ CMD.TTC 7)

(RPAQQ NEXT.TTC 8)

(RPAQQ EXPAND.TTC 9)

(RPAQQ CHARDELETE.FORWARD.TTC 10)

(RPAQQ WORDDELETE.FORWARD.TTC 11)

(RPAQQ PUNCT.TTC 20)

(RPAQQ TEXT.TTC 21)

(RPAQQ WHITESPACE.TTC 22)


(CONSTANTS (NONE.TTC 0)
       (CHARDELETE.TTC 1)
       (WORDDELETE.TTC 2)
       (DELETE.TTC 3)
       (FUNCTIONCALL.TTC 4)
       (REDO.TTC 5)
       (UNDO.TTC 6)
       (CMD.TTC 7)
       (NEXT.TTC 8)
       (EXPAND.TTC 9)
       (CHARDELETE.FORWARD.TTC 10)
       (WORDDELETE.FORWARD.TTC 11)
       (PUNCT.TTC 20)
       (TEXT.TTC 21)
       (WHITESPACE.TTC 22))
)
(DECLARE%: EVAL@COMPILE 

(PUTPROPS \TEDIT.MOUSESTATE MACRO (BUTTON 

                                 (* ;; "Test to see if only the specified mouse button is down.  DOES NOT call GETMOUSESTATE, so the mouse-button info is the same as the last time it was called.")

                                         (SELECTQ (CAR BUTTON)
                                             (LEFT '(EQ LASTMOUSEBUTTONS 4))
                                             (MIDDLE '(EQ LASTMOUSEBUTTONS 1))
                                             (RIGHT '(EQ LASTMOUSEBUTTONS 2))
                                             (SHOULDNT))))

(PUTPROPS \TEDIT.CHECK MACRO [ARGS (COND
                                      [(AND (BOUNDP 'CHECK)
                                            CHECK)
                                       (CONS 'PROGN
                                             (for I in ARGS as J on ARGS
                                                when (NOT (STRINGP I))
                                                collect (LIST 'OR I (LIST 'HELP 
                                            "TEdit consistency-check failure [RETURN to continue]:  "
                                                                          (COND
                                                                             ((STRINGP (CADR J)))
                                                                             (T (KWOTE I]
                                      (T (CONS COMMENTFLG ARGS])
)
(DECLARE%: EVAL@COMPILE

(ACCESSFNS TEDITTERMCODE ((TTCLASS (LOGAND DATUM 224))
                          (TTDECODE (LOGAND DATUM 31))))
)
(DECLARE%: EVAL@COMPILE 

(RPAQQ NOTBEFORE.LB 1)

(RPAQQ NOTAFTER.LB 2)

(RPAQQ BEFORE.LB 4)

(RPAQQ AFTER.LB 8)

(RPAQQ DISAPPEAR-IF-NOT-SPLIT.LB 16)

(RPAQQ NEWCHAR-IF-SPLIT.LB 32)


(CONSTANTS (NOTBEFORE.LB 1)
       (NOTAFTER.LB 2)
       (BEFORE.LB 4)
       (AFTER.LB 8)
       (DISAPPEAR-IF-NOT-SPLIT.LB 16)
       (NEWCHAR-IF-SPLIT.LB 32))
)

(* "END EXPORTED DEFINITIONS")

)
(DEFINEQ

(\TEDIT.INTERRUPT.SETUP
  [LAMBDA (PROC FORCEOFF)                                    (* ; "Edited 27-Mar-2024 15:27 by rmk")
                                                             (* ; "Edited 22-Sep-2023 20:45 by rmk")
                                                             (* jds "12-Sep-84 15:36")

    (* ;; "Disarm any inconvenient interrupts, and save re-arming info on the window.")

    [LET ((TEXTOBJ (TEXTOBJ PROC T)))
         (CL:WHEN TEXTOBJ
             (UNINTERRUPTABLY
                 [COND
                    ((AND FORCEOFF (PROCESSPROP PROC 'TEDIT.INTERRUPTS))
                                                             (* ; 
                                                       "There are disarmed interrupts;  re-arm them.")
                     (RESET.INTERRUPTS (PROCESSPROP PROC 'TEDIT.INTERRUPTS))
                     (PROCESSPROP PROC 'TEDIT.INTERRUPTS NIL))
                    ([AND (NOT FORCEOFF)
                          (NOT (PROCESSPROP PROC 'TEDIT.INTERRUPTS]
                                                             (* ; 
                                                   "There aren't any interrupts disarmed;  go do it.")
                     (PROCESSPROP PROC 'TEDIT.INTERRUPTS (RESET.INTERRUPTS
                                                          (OR (AND TEXTOBJ (GETTEXTPROP TEXTOBJ
                                                                                  'INTERRUPTS))
                                                              TEDIT.INTERRUPTS)
                                                          T]))]
    PROC])

(\TEDIT.MARKACTIVE
  [LAMBDA (TEXTOBJ)                                         (* ; "Edited 12-Jun-90 18:04 by mitani")
    (replace (TEXTOBJ EDITOPACTIVE) of TEXTOBJ with T)
    TEXTOBJ])

(\TEDIT.MARKINACTIVE
  [LAMBDA (TEXTOBJ)                                         (* ; "Edited 12-Jun-90 18:04 by mitani")
    (replace (TEXTOBJ EDITOPACTIVE) of TEXTOBJ with NIL)
    TEXTOBJ])

(\TEDIT.COMMAND.LOOP
  [LAMBDA (STREAM RTBL)                                      (* ; "Edited  2-Apr-2024 15:35 by rmk")
                                                             (* ; "Edited 20-Mar-2024 10:59 by rmk")
                                                             (* ; "Edited 15-Mar-2024 14:23 by rmk")
                                                             (* ; "Edited  9-Mar-2024 11:35 by rmk")
                                                             (* ; "Edited 24-Feb-2024 15:33 by rmk")
                                                             (* ; "Edited 21-Feb-2024 14:49 by rmk")
                                                             (* ; "Edited 18-Feb-2024 23:35 by rmk")
                                                             (* ; "Edited 24-Dec-2023 09:50 by rmk")
                                                             (* ; "Edited 22-Sep-2023 20:40 by rmk")
                                                             (* ; "Edited 16-Sep-2023 22:48 by rmk")
                                                             (* ; "Edited 30-May-91 19:33 by jds")

    (* ;; "Main command loop for the TEDIT editor.  Includes keyboard polling and command dispatch")

    (PROG ((TEXTOBJ (CL:IF (type? STREAM STREAM)
                        (fetch (TEXTSTREAM TEXTOBJ) of STREAM)
                        STREAM))
           SEL PANES)
          (TEXTOBJ! TEXTOBJ)
          (SETQ SEL (TEXTSEL TEXTOBJ))
          (SETQ PANES (FGETTOBJ TEXTOBJ \WINDOW))
          (SETQ RTBL (OR RTBL (FGETTOBJ TEXTOBJ TXTRTBL)
                         TEDIT.READTABLE))                   (* ; 
                                                     "Used to derive command characters from type-in")
          (for P inpanes TEXTOBJ do (WINDOWPROP P 'PROCESS (THIS.PROCESS)))
                                                             (* ; "Add the pane to this process")
          (until (TTY.PROCESSP) do                           (* ; 
                                               "Wait until we really have the TTY before proceeding.")
                                   (DISMISS 250))
          (RESETLST
              (RESETSAVE (\TEDIT.COMMAND.RESET.SETUP (LIST TEXTOBJ PANES)
                                T))
              (LET
               (CH FN TCH (READSA (fetch READSA of %#CURRENTRDTBL#))
                   (TERMSA (OR (FGETTOBJ TEXTOBJ TXTTERMSA)
                               \PRIMTERMSA))
                   (TEDITSA (fetch READSA of RTBL))
                   (TEDITFNHASH (fetch READMACRODEFS of RTBL))
                   (LOOPFN (GETTEXTPROP TEXTOBJ 'LOOPFN))
                   (CHARFN (GETTEXTPROP TEXTOBJ 'CHARFN))
                   SELOPERATION SOURCESEL SELPANE)
               (DECLARE (SPECVARS SELOPERATION SOURCESEL SELPANE))
                                                             (* ; 
                                                       "Set by \TEDIT.BUTTONEVENTFN in MOUSE process")
               (until (FGETTOBJ TEXTOBJ EDITFINISHEDFLG)
                  do
                  (ERSETQ
                   (until (FGETTOBJ TEXTOBJ EDITFINISHEDFLG)
                      do
                      (\WAITFORSYSBUFP 25)                   (* ; "Await type-in or mouse action")
                      (until (OR SELOPERATION (NOT (FGETTOBJ TEXTOBJ EDITOPACTIVE)))
                         do (\TEDIT.FLASHCARET TEXTOBJ)
                            (BLOCK))
                      (CL:UNLESS (FGETTOBJ TEXTOBJ EDITFINISHEDFLG)
                          (CL:WHEN (FGETTOBJ TEXTOBJ TXTNEEDSUPDATE)
                                                             (* ; 
                     "We got here somehow with the window not in sync with the text.  Run an update.")
                              (\TEDIT.SHOWSEL SEL NIL)
                              (\TEDIT.UPDATE.SCREEN TEXTOBJ)
                              (\TEDIT.FIXSEL SEL TEXTOBJ)
                              (\TEDIT.SHOWSEL SEL T))
                          (\TEDIT.FLASHCARET TEXTOBJ)        (* ; 
                  "Flash the caret periodically (BUT not while we're here only to cleanup and quit.)")
                          (FSETTOBJ TEXTOBJ EDITOPACTIVE T)  (* ; 
                                          "Before starting to work, note that we're doing something.")
                          (CL:WHEN LOOPFN
                              (ERSETQ (APPLY* LOOPFN (FGETTOBJ TEXTOBJ STREAMHINT))))

                          (* ;; "")

                          (* ;; 
         "Process any pending selections from \TEDIT.BUTTONEVENTFN, here instead of in MOUSE process")

                          (SELECTQ (PROG1 SELOPERATION (SETQ SELOPERATION NIL))
                              (NORMAL (CL:WHEN (FGETSEL SOURCESEL SET)
                                          (SETQ SEL (\TEDIT.COPYSEL SOURCESEL SEL))
                                                             (* ; "SOURCESEL is new SEL selection")
                                          (FSETTOBJ TEXTOBJ CARETLOOKS (\TEDIT.GET.INSERT.CHARLOOKS
                                                                        TEXTOBJ SEL))
                                          (\TEDIT.SHOWSEL SEL T)))
                              (MOVE                          (* ; "Move source to SEL")
                                    (TEDIT.MOVE SOURCESEL SEL))
                              (COPY                          (* ; "Copy source to SEL.")
                                    (TEDIT.COPY SOURCESEL SEL))
                              (COPYLOOKS                     (* ; "Copy source-looks  to SEL")
                                         (if (EQ 'PARA (GETSEL SOURCESEL SELKIND))
                                             then (TEDIT.COPY.PARALOOKS TEXTOBJ SOURCESEL SEL)
                                           else (TEDIT.COPY.LOOKS TEXTOBJ SOURCESEL SEL)))
                              (DELETE                        (* ; "Delete CTRL selection")
                                      (\TEDIT.DELETE TEXTOBJ SOURCESEL NIL SELPANE))
                              NIL)

                          (* ;; "")

                          (* ;; "Handle user type-in")

                          [while (\SYSBUFP)
                             do (SETQ CH (\GETKEY))
                                (CL:WHEN CHARFN              (* ; 
                                                "Give the OEM user control for each character typed.")
                                    (SETQ TCH (APPLY* CHARFN (FGETTOBJ TEXTOBJ STREAMHINT)
                                                     CH))

                                    (* ;; 
      "And let him return one of NIL for 'ignore this char' , T for 'leave it be' or a new charcode.")

                                    (OR (EQ TCH T)
                                        (SETQ CH TCH)))
                                (SELECTC (AND CH (\SYNCODE TEDITSA CH))
                                    (CHARDELETE.TTC          (* ; 
                                       "Backspace handler: Remove the character just before SEL:CH#.")
                                         (\TEDIT.CHARDELETE TEXTOBJ SEL)
                                         (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ))
                                    (CHARDELETE.FORWARD.TTC 
                                         (\TEDIT.CHARDELETE.FORWARD TEXTOBJ SEL)
                                         (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ))
                                    (WORDDELETE.TTC 
                                         (\TEDIT.WORDDELETE TEXTOBJ SEL)
                                         (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ))
                                    (WORDDELETE.FORWARD.TTC 
                                         (\TEDIT.WORDDELETE.FORWARD TEXTOBJ SEL)
                                         (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ))
                                    (DELETE.TTC              (* ; 
                                                    "DEL Key handler: Delete the selected characters")
                                                (\TEDIT.DELETE TEXTOBJ SEL)
                                                (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ))
                                    (UNDO.TTC                (* ; 
                                                        "He hit the CANCEL key, so go UNDO something")
                                              (TEDIT.UNDO TEXTOBJ)
                                              (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ))
                                    (REDO.TTC                (* ; 
                                                          "He hit the REDO key, so go REDO something")
                                              (TEDIT.REDO TEXTOBJ)
                                              (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ))
                                    (FUNCTIONCALL.TTC        (* ; 
                                                 "This is a special character -- it calls a function")
                                         (CL:WHEN [SETQ FN (CAR (FETCH MACROFN
                                                                   OF (GETHASH CH TEDITFNHASH]
                                                             (* ; 
                                                          "There IS a command function to be called.")
                                             (APPLY* FN (FGETTOBJ TEXTOBJ STREAMHINT)
                                                    TEXTOBJ SEL)
                                                             (* ; "do it")
                                                             (* ; 
                        "After a user function (that is not wheelscroll) no more blue-pending-delete")

                                             (* ;; "We shouldn't have to test for special characters here, there should be a more general way of marking them")

                                             (CL:UNLESS [OR (MEMB CH WHEELSCROLLCHARCODES)
                                                            (MEMB CH (CHARCODE (meta,C meta,X meta,c
                                                                                      meta,X]
                                                             (* ; 
                         "The wheelscroll FN handled the selection. should preserve the highlighting")
                                                 (\TEDIT.SHOWSEL SEL NIL)
                                                 (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL TEXTOBJ)
                                                 (\TEDIT.SHOWSEL SEL T))))
                                    (NEXT.TTC                (* ; 
                       "Move to the next blank to fill in.  For now, blanks are delimited by >>...<<")
                                              (TEDIT.NEXT TEXTOBJ))
                                    (EXPAND.TTC              (* ; "EXPAND AN ABBREVIATION")
                                                (\TEDIT.ABBREV.EXPAND (FGETTOBJ TEXTOBJ STREAMHINT)))
                                    (SELECTC (AND TERMSA CH (fetch TERMCLASS of (\SYNCODE TERMSA CH))
                                                  )
                                        (CHARDELETE.TC       (* ; 
                                       "Backspace handler: Remove the character just before SEL:CH#.")
                                                       (\TEDIT.CHARDELETE TEXTOBJ SEL)
                                                       (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL 
                                                              TEXTOBJ))
                                        (WORDDELETE.TC       (* ; "Back-WORD handler")
                                                       (\TEDIT.WORDDELETE TEXTOBJ)
                                                       (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL 
                                                              TEXTOBJ))
                                        (LINEDELETE.TC       (* ; 
                                                    "DEL Key handler: Delete the selected characters")
                                                       (\TEDIT.DELETE TEXTOBJ SEL)
                                                       (\TEDIT.RESET.EXTEND.PENDING.DELETE SEL 
                                                              TEXTOBJ))
                                        (CL:WHEN CH          (* ; 
                                                             "Any other key: insert the character.")
                                            (\TEDIT.INSERT CH SEL TEXTOBJ))])
                      (FSETTOBJ TEXTOBJ EDITOPACTIVE NIL)))
                  (FSETTOBJ TEXTOBJ EDITOPACTIVE NIL))))])

(\TEDIT.COMMAND.RESET.SETUP
  [LAMBDA (TEXT&WIND STARTING)                               (* ; "Edited 17-Mar-2024 18:54 by rmk")
                                                             (* ; "Edited 22-Feb-2024 23:14 by rmk")
                                                             (* ; "Edited  5-Oct-2023 22:41 by rmk")
                                                             (* ; "Edited 22-Sep-2023 20:41 by rmk")
                                                             (* ; "Edited 16-Sep-2023 22:30 by rmk")
                                                             (* ; "Edited  5-Nov-2022 10:41 by rmk")
                                                            (* ; "Edited 12-Jun-90 18:04 by mitani")

    (* ;; "If STARTING is T, set up the reset-driven connections and values for editing;  otherwise, break links and reset values for non-editing")

    (PROG ((TEXTOBJ (CAR TEXT&WIND))
           (PANES (CADR TEXT&WIND))
           (OTTYWINDOW (CADDR TEXT&WIND))
           (OTTYENTRYFN (CADDDR TEXT&WIND))
           (OTTYEXITFN (CAR (CDDDDR TEXT&WIND)))
           (OWINDOW (CADR (CDDDDR TEXT&WIND)))
           TTYWINDOW)
          [COND
             (STARTING                                       (* ; 
                                           "We're going INTO the command loop.  Set up all the stuff")
                    (FSETTOBJ TEXTOBJ EDITOPACTIVE T)        (* ; 
                             "Mark us busy until we're set up, so that nobody tries any funny stuff.")
                    (SETQ OWINDOW (PROCESSPROP (THIS.PROCESS)
                                         'WINDOW
                                         (CAR PANES)))       (* ; 
                                                             "Attach the process to this window.")
                    (\TEDIT.INTERRUPT.SETUP (THIS.PROCESS))  (* ; 
                                     "Disarm all interrupt chars, re-arm them when we leave the edit")
                    (SETQ OTTYEXITFN (PROCESSPROP (THIS.PROCESS)
                                            'TTYEXITFN
                                            '\TEDIT.PROCEXITFN))
                                                             (* ; 
                                        "Set up functions for getting in and out of the edit process")
                    (SETQ OTTYENTRYFN (PROCESSPROP (THIS.PROCESS)
                                             'TTYENTRYFN
                                             '\TEDIT.PROCENTRYFN))
                    (CL:UNLESS (EQ (GETTEXTPROP TEXTOBJ 'TTYWINDOW)
                                   'DON'T)                   (* ; 
                 "He can suppress the ability to copy-select things into this window if he wants....")
                        (SETQ TTYWINDOW (OR (GETTEXTPROP TEXTOBJ 'TTYWINDOW)
                                            (CREATEW DEFAULTTTYREGION "TTY Window for TEdit" NIL T)))
                        (SETQ OTTYWINDOW (TTYDISPLAYSTREAM TTYWINDOW))
                        (PROCESSPROP (THIS.PROCESS)
                               'TEDITTTYWINDOW TTYWINDOW)
                        (WINDOWPROP TTYWINDOW 'PROCESS NIL)
                        [WINDOWPROP TTYWINDOW 'CLOSEFN (FUNCTION (LAMBDA (WW)
                                                                   (WINDOWPROP WW 'PROCESS NIL]
                                                             (* ; 
                           "So that there isn't a circularity in the PROCESS -> TTYWINDOW -> PROCESS")
                        (WINDOWPROP TTYWINDOW 'COPYINSERTFN (FUNCTION \TEDIT.COPYINSERTFN))
                        (WINDOWPROP TTYWINDOW 'MAINWINDOW (CAR PANES)))
                    (FSETTOBJ TEXTOBJ TXTEDITING T)          (* ; 
                                            "Tell TEdit that this document is actively being edited.")
                                                             (* ; 
                                                             "Mark us un-busy so life can go on.")
                    (FSETTOBJ TEXTOBJ EDITOPACTIVE NIL))
             (T                                              (* ; 
                                                 "Coming OUT OF the command loop -- reset everything")
                (PROCESSPROP (THIS.PROCESS)
                       'WINDOW
                       (CAR PANES))                          (* ; 
                              "Detach the window from the edit process, to prevent circularity there")
                (WINDOWPROP (CAR PANES)
                       'PROCESS NIL)
                (\TEDIT.INTERRUPT.SETUP (THIS.PROCESS)
                       T)                                    (* ; 
                                                     "Re-arm the interrupts we turned off coming in.")
                (CL:WHEN [AND (TXTFILE TEXTOBJ)
                              (NOT (fetch (TEXTWINDOW CLOSINGFILE) of (CAR PANES]
                                                             (* ; 
         "Remember to close the file we were editing (Only if the window function isn't closing it.)")
                    (CLOSEF? (TXTFILE TEXTOBJ))              (* ; 
                                                       "Let anyone else who wants to close the file.")
                    (replace (TEXTWINDOW CLOSINGFILE) of (CAR PANES) with NIL))
                (PROCESSPROP (THIS.PROCESS)
                       'TTYEXITFN OTTYEXITFN)
                (PROCESSPROP (THIS.PROCESS)
                       'TTYENTRYFN OTTYENTRYFN)
                (FSETTOBJ TEXTOBJ TXTHISTORY NIL)            (* ; 
           "To prevent circularities arising from the need to remember textobjs in the history list.")
                (FSETTOBJ TEXTOBJ SELPANE NIL)
                (FSETTOBJ TEXTOBJ TXTEDITING NIL)            (* ; 
                                  "Tell TEdit that this document is NO LONGER actively being edited.")
                (CL:UNLESS (EQ (GETTEXTPROP TEXTOBJ 'TTYWINDOW)
                               'DON'T)                       (* ; 
                 "He can suppress the ability to copy-select things into this window if he wants....")
                    (TTYDISPLAYSTREAM OTTYWINDOW)
                    (PROCESSPROP (THIS.PROCESS)
                           'TEDITTTYWINDOW NIL))]
          (RETURN (LIST TEXTOBJ PANES OTTYWINDOW OTTYENTRYFN OTTYEXITFN OWINDOW])
)

(RPAQ? TEDIT.INTERRUPTS '((2 BREAK)
                          (5 ERROR)
                          (7 HELP)
                          (20 CONTROL-T)))

(RPAQQ || NIL)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS || TEDIT.INTERRUPTS)
)



(* ; "Read-table Utilities")

(DEFINEQ

(\TEDIT.READTABLE
  [LAMBDA NIL                                                (* ; "Edited 24-Dec-2023 09:54 by rmk")
                                                            (* ; "Edited 20-Apr-2018 07:59 by rmk:")
                                                             (* jds "12-Sep-86 13:48")

    (* ;; "Create a TEdit read-table, to control which characters have what functions and call which commands.")

    (LET [(RTBL (create READTABLEP
                       READMACRODEFS _ (HASHARRAY 50]

         (* ;; "CHARDELETE.FORWARD replaces WORDDELETE on ^W")

         (for CH in (CHARCODE (BS ^A ^W DEL %#A %#B %#C ESC)) as CL
            in (CONSTANT (LIST CHARDELETE.TTC CHARDELETE.TTC CHARDELETE.FORWARD.TTC DELETE.TTC 
                               UNDO.TTC NEXT.TTC CMD.TTC REDO.TTC))
            do                                               (* ; 
                                           "Set up the default syntax classes for command characters")
               (\SETSYNCODE (fetch READSA of RTBL)
                      CH CL))
         (for CH in (CHARCODE (^X)) as FN in '(\TEDIT.ABBREV.EXPAND)
            do                                               (* ; 
                      "Set up the default function-calling characters (^X to expand abbrevs for now)")
               (TEDIT.SETFUNCTION CH FN RTBL))
         (TEDIT.SETFUNCTION (CHARCODE ^O)
                (FUNCTION GET.OBJ.FROM.USER)
                RTBL)                                        (* ; "And for image object capture")
         RTBL])

(\TEDIT.WORDBOUND.READTABLE
  [LAMBDA NIL                                                (* ; "Edited 22-May-92 15:10 by jds")

    (* ;; "Create a readtable which will let TEdit find word boundaries.  A word boundary is any point where the SYNCODE of the adjacent characters is different")

    (PROG [(RTBL (create READTABLEP
                        READMACRODEFS _ (HARRAY 50]
          (for CH from 0 to 255 do (\SETSYNCODE (fetch READSA of RTBL)
                                          CH PUNCT.TTC))

     (* ;; "By default, every character except those noted below is a punctuation character")

          (for CH from (CHARCODE A) to (CHARCODE Z) do (\SETSYNCODE (fetch READSA of RTBL)
                                                              CH TEXT.TTC))
                                                             (* ; "Upper case alpha")
          (for CH from (CHARCODE a) to (CHARCODE z) do (\SETSYNCODE (fetch READSA of RTBL)
                                                              CH TEXT.TTC))
                                                             (* ; "Lower case alpha")
          (for CH from (CHARCODE 0) to (CHARCODE 9) do (\SETSYNCODE (fetch READSA of RTBL)
                                                              CH TEXT.TTC))
                                                             (* ; "And digits are text characters")

     (* ;; "European chars and accents are text characters:")

          (for CH from (CHARCODE "361,41") to (CHARCODE "361,376")
             do (\SETSYNCODE (fetch READSA of RTBL)
                       CH TEXT.TTC))
          (for CH from (CHARCODE "0,301") to (CHARCODE "0,317")
             do (\SETSYNCODE (fetch READSA of RTBL)
                       CH TEXT.TTC))
          (for CH from (CHARCODE "0,341") to (CHARCODE "0,376")
             do (\SETSYNCODE (fetch READSA of RTBL)
                       CH TEXT.TTC))
          (for CH in (CHARCODE (CR SPACE TAB ^L)) do (\SETSYNCODE (fetch READSA of RTBL)
                                                            CH WHITESPACE.TTC))
                                                             (* ; "And these are white space")
          (for CH in (LIST MSPACE NSPACE THINSPACE FIGSPACE)
             do (\SETSYNCODE (fetch READSA of RTBL)
                       CH TEXT.TTC))
          (RETURN RTBL])

(TEDIT.GETSYNTAX
  [LAMBDA (CH TABLE)                                         (* ; "Edited 24-Dec-2023 09:47 by rmk")
                                                             (* ; "Edited 31-Mar-87 10:01 by jds")
                                                             (* ; 
                                                   "Find TEdit's interpretation of a given character")
    (SELECTC (\SYNCODE [fetch READSA of (COND
                                           ((type? TEXTOBJ TABLE)
                                                             (* ; 
     "If given a TEXTOBJ in place of a read table, coerce it to the read table for that edit session")
                                            (OR (fetch (TEXTOBJ TXTRTBL) of TABLE)
                                                TEDIT.READTABLE))
                                           ((type? STREAM TABLE)
                                                             (* ; 
     "If given a TEXTOBJ in place of a read table, coerce it to the read table for that edit session")
                                            (OR (fetch (TEXTOBJ TXTRTBL) of (fetch (TEXTSTREAM 
                                                                                          TEXTOBJ)
                                                                               of TABLE))
                                                TEDIT.READTABLE))
                                           (T (OR TABLE TEDIT.READTABLE]
                    (COND
                       ((LITATOM CH)                         (* ; 
                                                         "Symbols are converted to numeric charcodes")
                        (APPLY* 'CHARCODE CH))
                       ((STRINGP CH)                         (* ; "As are string char-names")
                        (APPLY* 'CHARCODE CH))
                       (T CH)))
        (WORDDELETE.TTC 
             'WORDDELETE)
        (WORDDELETE.FORWARD.TTC 
             'WORDDELETE.FORWARD)
        (CHARDELETE.TTC 
             'CHARDELETE)
        (CHARDELETE.FORWARD.TTC 
             'CHARDELETE.FORWARD)
        (DELETE.TTC 'DELETE)
        (UNDO.TTC 'UNDO)
        (REDO.TTC 'REDO)
        (FUNCTIONCALL.TTC 
             'FN)
        (CMD.TTC 'CMD)
        (NEXT.TTC 'NEXT)
        (EXPAND.TTC 'EXPAND)
        NIL])

(TEDIT.SETSYNTAX
  [LAMBDA (CHAR CLASS TABLE)                                 (* ; "Edited 24-Dec-2023 09:17 by rmk")
                                                             (* ; "Edited 31-Mar-87 10:00 by jds")
                                                             (* ; 
                                                        "SETS TEDIT-STYLE SYNTAX BITS IN A TERMTABLE")
    (PROG1 (TEDIT.GETSYNTAX (SETQ CHAR (COND
                                          ((LITATOM CHAR)
                                           (APPLY* 'CHARCODE CHAR))
                                          ((STRINGP CHAR)
                                           (APPLY* 'CHARCODE CHAR))
                                          (T CHAR)))
                  TABLE)
        (\SETSYNCODE [fetch READSA of (COND
                                         ((type? TEXTOBJ TABLE)
                                                             (* ; 
     "If given a TEXTOBJ in place of a read table, coerce it to the read table for that edit session")
                                          (OR (fetch (TEXTOBJ TXTRTBL) of TABLE)
                                              TEDIT.READTABLE))
                                         ((type? STREAM TABLE)
                                                             (* ; 
     "If given a TEXTOBJ in place of a read table, coerce it to the read table for that edit session")
                                          (OR (fetch (TEXTOBJ TXTRTBL) of (fetch (TEXTSTREAM TEXTOBJ)
                                                                             of TABLE))
                                              TEDIT.READTABLE))
                                         (T (OR TABLE TEDIT.READTABLE]
               CHAR
               (SELECTQ CLASS
                   (CHARDELETE CHARDELETE.TTC)
                   (CHARDELETE.FORWARD 
                        CHARDELETE.FORWARD.TTC)
                   (WORDDELETE WORDDELETE.TTC)
                   (WORDDELETE.FORWARD 
                        WORDDELETE.FORWARD.TTC)
                   ((DELETE LINEDELETE) 
                        DELETE.TTC)
                   (UNDO UNDO.TTC)
                   (REDO REDO.TTC)
                   (CMD CMD.TTC)
                   (FN FUNCTIONCALL.TTC)
                   (NEXT NEXT.TTC)
                   (EXPAND EXPAND.TTC)
                   NONE.TTC)))])

(TEDIT.GETFUNCTION
  [LAMBDA (CHARCODE TABLE)                                   (* jds "19-Sep-85 17:06")
                                                             (* Gets the FN that is called when CH 
                                                             is hit inside TEDIT.)
    [SETQ TABLE (COND
                   ((type? TEXTOBJ TABLE)

         (* If given a TEXTOBJ in place of a read table, coerce it to the read table for 
         that edit session)

                    (fetch (TEXTOBJ TXTRTBL) of TABLE))
                   ((type? STREAM TABLE)

         (* If given a TEXTOBJ in place of a read table, coerce it to the read table for 
         that edit session)

                    (fetch (TEXTOBJ TXTRTBL) of (fetch (TEXTSTREAM TEXTOBJ) of TABLE)))
                   (T (OR TABLE TEDIT.READTABLE]
    (SETQ CHARCODE (COND
                      ((LITATOM CHARCODE)
                       (APPLY* 'CHARCODE CHARCODE))
                      (T CHARCODE)))
    (AND TABLE (type? READTABLEP TABLE)
         (IEQP FUNCTIONCALL.TTC (\SYNCODE (fetch READSA of TABLE)
                                       CHARCODE))
         (fetch READMACRODEFS of TABLE)
         (CAR (FETCH MACROFN OF (GETHASH CHARCODE (fetch READMACRODEFS of TABLE])

(TEDIT.SETFUNCTION
  [LAMBDA (CHARCODE FN RTBL)                                 (* ; "Edited 31-Mar-87 10:58 by jds")
                                                             (* ; 
                           "Set TEDITs (read) table so that FN is called whenever CHARCODE is typed.")
                                                             (* ; 
                                                  "If FN is NIL, make the character be normal again.")
    [SETQ RTBL (COND
                  ((type? TEXTOBJ RTBL)                      (* ; 
     "If given a TEXTOBJ in place of a read table, coerce it to the read table for that edit session")
                   (fetch (TEXTOBJ TXTRTBL) of RTBL))
                  ((type? STREAM RTBL)                       (* ; 
     "If given a TEXTOBJ in place of a read table, coerce it to the read table for that edit session")
                   (fetch (TEXTOBJ TXTRTBL) of (fetch (TEXTSTREAM TEXTOBJ) of RTBL)))
                  (T (OR RTBL TEDIT.READTABLE]
    (\SETSYNCODE (fetch READSA of RTBL)
           (SETQ CHARCODE (COND
                             ((LITATOM CHARCODE)
                              (APPLY* 'CHARCODE CHARCODE))
                             ((STRINGP CHARCODE)
                              (APPLY* 'CHARCODE CHARCODE))
                             (T CHARCODE)))
           (COND
              (FN                                            (* ; 
                                 "He gave us a function to call.  Set up the syntax so it IS called.")
                  FUNCTIONCALL.TTC)
              (T                                             (* ; 
      "He gave us a function of NIL, meaning 'turn it off' .  Cause this character to become normal.")
                 NONE.TTC)))                                 (* ; 
                                                          "Mark the character as invoking a function")
    (OR (fetch READMACRODEFS of RTBL)
        (replace READMACRODEFS of RTBL with (HARRAY 50)))    (* ; 
                                           "Make sure there's a hash table to store the function in.")
    (PUTHASH CHARCODE (CREATE READMACRODEF
                             MACROTYPE _ 'TEDIT
                             MACROFN _ (LIST FN))
           (fetch READMACRODEFS of RTBL])

(TEDIT.WORDGET
  [LAMBDA (CH TABLE)                                         (* jds "27-MAY-83 13:24")
    (\SYNCODE (fetch READSA of (OR TABLE TEDIT.WORDBOUND.READTABLE))
           (COND
              ((SMALLP CH))
              (T (CHCON1 CH])

(TEDIT.WORDSET
  [LAMBDA (CHARCODE CLASS TABLE)                             (* jds " 1-JUN-83 12:23")
                                                             (* SETS TEDIT-STYLE SYNTAX BITS IN A 
                                                             TERMTABLE)
    (\SETSYNCODE (fetch READSA of (OR TABLE TEDIT.WORDBOUND.READTABLE))
           (COND
              ((SMALLP CHARCODE))
              (T (CHCON1 CHARCODE)))
           (COND
              ((FIXP CLASS))
              (T (SELECTQ CLASS
                     (PUNCTUATION PUNCT.TTC)
                     (WHITESPACE WHITESPACE.TTC)
                     (TEXT TEXT.TTC)
                     TEXT.TTC])

(TEDIT.ATOMBOUND.READTABLE
  [LAMBDA (READTABLE)                                        (* ; "Edited 25-Dec-2023 13:10 by rmk")
                                                             (* ; "Edited  5-Dec-2023 23:47 by rmk")

    (* ;; "A wordbound table that approximates the unquoted OTHER characters of Lisp atoms as defined by READTABLE or the current readtable.  This is specified as the BOUNDTABLE for Lisp source code edits.  Not perfect, but not bad.")

    (* ;; "Could cache this for common readtables (interlisp, commonlisp)")

    (LET ((TABLE (\TEDIT.WORDBOUND.READTABLE)))              (* ; 
                                            "\TEDIT.WORDBOUND.READTABLE creates a new one each time.")
         (for CODE IN (GETSYNTAX 'OTHER (OR READTABLE *READTABLE*)) do (TEDIT.WORDSET CODE
                                                                              'TEXT TABLE))
         (for CODE IN (GETSYNTAX 'BREAK (OR READTABLE *READTABLE*)) do (TEDIT.WORDSET CODE
                                                                              'PUNCTUATION TABLE))
         (TEDIT.WORDSET (CHARCODE %:)
                'TEXT TABLE)
         TABLE])
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(RPAQ TEDIT.READTABLE (\TEDIT.READTABLE))

(RPAQ TEDIT.WORDBOUND.READTABLE (\TEDIT.WORDBOUND.READTABLE))
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.READTABLE TEDIT.WORDBOUND.READTABLE)
)



(* ; "Wheelscroll")


(FILESLOAD (SYSLOAD FROM LISPUSERS)
       WHEELSCROLL)
(DEFINEQ

(\TEDIT.WHEELSCROLL
  [LAMBDA NIL                                                (* ; "Edited  2-Oct-2023 23:23 by rmk")

    (* ;; "TEDIT disables interrupts, so it has to deal with wheelscroll behaviors when the caret is in the Tedit window. Each of the individual actions is conditioned on WHEELSCROLLENABLED (which may or may not have been loaded).")

    (* ;; "This localizes the behavior inside Tedit, where we also suppress Tedit from thinking that somehow these characters change the selection highlighting.")

    (for I in WHEELSCROLLINTERRUPTS collect (TEDIT.SETFUNCTION (CAR I)
                                                   `[LAMBDA NIL
                                                      (AND WHEELSCROLLENABLED ,(CADR I]
                                                   TEDIT.READTABLE)
                                          (CAR I])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS WHEELSCROLLCHARCODES)
)

(RPAQ WHEELSCROLLCHARCODES (\TEDIT.WHEELSCROLL))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (7790 29791 (\TEDIT.INTERRUPT.SETUP 7800 . 9447) (\TEDIT.MARKACTIVE 9449 . 9661) (
\TEDIT.MARKINACTIVE 9663 . 9879) (\TEDIT.COMMAND.LOOP 9881 . 23191) (\TEDIT.COMMAND.RESET.SETUP 23193
 . 29789)) (30075 45272 (\TEDIT.READTABLE 30085 . 31742) (\TEDIT.WORDBOUND.READTABLE 31744 . 34337) (
TEDIT.GETSYNTAX 34339 . 36778) (TEDIT.SETSYNTAX 36780 . 39258) (TEDIT.GETFUNCTION 39260 . 40620) (
TEDIT.SETFUNCTION 40622 . 43061) (TEDIT.WORDGET 43063 . 43324) (TEDIT.WORDSET 43326 . 44023) (
TEDIT.ATOMBOUND.READTABLE 44025 . 45270)) (45600 46509 (\TEDIT.WHEELSCROLL 45610 . 46507)))))
STOP
