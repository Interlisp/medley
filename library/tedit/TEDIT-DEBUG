(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 7-May-2023 20:48:04" 
{DSK}<Users>kaplan>Local>medley3.5>working-medley>library>tedit>TEDIT-DEBUG.;246 65523  

      :EDIT-BY rmk

      :CHANGES-TO (FNS SP SPR)

      :PREVIOUS-DATE " 7-May-2023 14:46:38" 
{DSK}<Users>kaplan>Local>medley3.5>working-medley>library>tedit>TEDIT-DEBUG.;244)


(PRETTYCOMPRINT TEDIT-DEBUGCOMS)

(RPAQQ TEDIT-DEBUGCOMS
       [(FNS ITS GTO TRY PRINTSPEC TEDITCLOSEW PARALASTWITHOUTEOL FIXPARALAST SHOWHIST)
        (FNS MTEST TRYMENU MYTEDITMENU PTMENU)
        (FNS SP SPR SPL SCL SPPRINT SPPRINT.OBJ SHOWPIECEBYTES CHECKPLENGTHS)
        (FNS NTHPIECE NPIECES NTHPIECECHAR)
        (FNS NTHCHARSLOT)
        (FNS STL ALLTL)
        (FNS PLCHAIN PRINTLINE INSPECTLINES SL CHECKLINES SELLINES COLLECTLINES NTHLINE HEIGHT 
             LINEBOTS PLINES)
        (FNS INSPECTSELS ISEL IHIST IPCTB)
        (INITVARS (LASTTS NIL))
        (VARS (OK.TO.MODIFY.FNS T))
        (FNS PFOT DFOT OTFILES DFOV COMP DFR)
        (FNS TTEST INSP)
        (INITVARS (LASTTTESTFILE))
        [P (CL:WHEN (DIRECTORYNAMEP (MEDLEYDIR "../oldtedit/"))
               (PSEUDOHOST 'OT (MEDLEYDIR "../oldtedit/")))]
        (P (LOAD? (OR (INFILEP "{WMEDLEY}<tmp>fuller.database")
                      (INFILEP "{MEDLEY}/loadups/fuller.database")
                      (INFILEP "{MEDLEY}/tmp/fuller.database")
                      "{WMEDLEY}<tmp>fuller.database")))
        (VARS RSMALL RBIG)
        (DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS
               (ADDVARS (NLAMA)
                      (NLAML DFR DFOV DFOT PFOT)
                      (LAMA])
(DEFINEQ

(ITS
  [LAMBDA (TS KEEPOPEN NPIECES)                              (* ; "Edited  9-Oct-2022 13:01 by rmk")
                                                             (* ; "Edited 14-Sep-2022 08:33 by rmk")
    (CL:UNLESS TS
        (SETQ TS (OR LASTTS (TEXTSTREAM IT)
                     (ERROR "NOT A TEXT STREAM" TS))))
    (SETQ TS (TEXTSTREAM TS))
    (SETQ LASTTS TS)
    (CL:UNLESS KEEPOPEN (CLOSEI))
    [LET (R)
         [INSPECT (FETCH PCTB OF (TEXTOBJ TS))
                NIL
                (CL:UNLESS KEEPOPEN
                    (SETQ R (CREATEREGION 5 5 240 316)))]
         [INSPECT TS 'TEXTSTREAM (CL:UNLESS KEEPOPEN
                                     (CREATEPOSITION 5 (IPLUS 5 (FETCH (REGION TOP) OF R))))]
         (INSPECT TS NIL (CL:UNLESS KEEPOPEN (CREATEREGION 300 5 360 628)))
         (INSPECT (TEXTOBJ TS)
                NIL
                (CL:UNLESS KEEPOPEN
                    (CREATEREGION (IPLUS 5 660)
                           5 315 628))]
    (SP TS (OR NPIECES 10))
    TS])

(GTO
  [LAMBDA (ARG)                                              (* ; "Edited 20-Apr-2023 19:18 by rmk")
                                                             (* ; "Edited 19-Apr-2023 08:02 by rmk")
                                                             (* ; "Edited 13-Apr-2023 21:56 by rmk")
    (if ARG
        then (TEXTOBJ ARG)
      else (OR (AND (NEQ (GETATOMVAL 'TEXTOBJ)
                         (EVALV 'TEXTOBJ))
                    (TEXTOBJ (EVALV 'TEXTOBJ)
                           T))
               (TEXTOBJ (WHICHW)
                      T)
               (TEXTOBJ (EVALV 'LASTTESTSTREAM)
                      T)
               (ERROR "NOT A TEXTOBJ"])

(TRY
  [LAMBDA (FILE VAR KEEPOPEN)                                (* ; "Edited  5-Sep-2022 18:48 by rmk")
                                                             (* ; "Edited  1-Sep-2022 22:43 by rmk")
                                                             (* ; "Edited 10-Aug-2022 13:12 by rmk")
                                                             (* ; "Edited  1-Aug-2022 21:30 by rmk")
    (CL:UNLESS VAR
        (SETQ VAR 'TSTR))
    (LET [(TSTREAM (AND (BOUNDP VAR)
                        (TEXTSTREAMP (EVAL VAR]
         (CL:WHEN (AND TSTREAM (OPENWP (WFROMDS TSTREAM)))
             (CL:UNLESS KEEPOPEN
                 (CLOSEW (WFROMDS TSTREAM))))
         (SETQ TSTREAM (OPENTEXTSTREAM (SELECTQ FILE
                                           (NIL '{LI}FEW.TXT)
                                           (T '{LI}LOTS.TXT)
                                           FILE)))
         (TEDIT TSTREAM (CREATEREGION 817 900 397 80)
                NIL
                '(LEAVETTY T))
         (SET VAR TSTREAM)
         (PROG1 (ITS TSTREAM KEEPOPEN)
                (CHECK-BTREE TSTREAM])

(PRINTSPEC
  [LAMBDA (SPEC)                                             (* ; "Edited 14-Aug-2022 22:08 by rmk")
    (FOR I FROM 1 AS S IN (OR SPEC TESTSPEC) DO (PRINTOUT T .I2 I " " .P2 S T])

(TEDITCLOSEW
  [LAMBDA NIL                                                (* ; "Edited  1-Sep-2022 22:52 by rmk")
    (LET ((W (WHICHW)))
         (CL:WHEN (MEMB 'TEDIT.DEACTIVATE.WINDOW (WINDOWPROP W 'CLOSEFN))
             [WINDOWPROP W 'CLOSEFN (REMOVE 'TEDIT.DEACTIVATE.WINDOW (WINDOWPROP W 'CLOSEFN]
             (CLOSEW W))])

(PARALASTWITHOUTEOL
  [LAMBDA (TSTREAM HELP)                                     (* ; "Edited 24-Oct-2022 21:07 by rmk")
    (for (PC _ (\FIRSTPIECE (TEXTOBJ TSTREAM))) by (NEXTPIECE PC) while PC when (PPARALAST PC)
       unless (MEMB (NTHPIECECHAR PC -1)
                    (CHARCODE (EOL CR LF))) do (SPPRINT PC)
                                               (CL:WHEN HELP
                                                   (HELP PC (\PCTOCH PC)))])

(FIXPARALAST
  [LAMBDA (TSTREAM HELP)                                     (* ; "Edited 24-Oct-2022 21:59 by rmk")
    (for (PC _ (\FIRSTPIECE (TEXTOBJ TSTREAM))) by (NEXTPIECE PC) while PC when (PPARALAST PC)
       unless (MEMB (NTHPIECECHAR PC -1)
                    (CHARCODE (EOL CR LF))) do (replace (PIECE PPARALAST) of PC with NIL])

(SHOWHIST
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited 25-Oct-2022 12:14 by rmk")
    (INSPECT [fetch (TEXTOBJ TXTHISTORY) of (TEXTOBJ (OR TEXTOBJ (WHICHW]
           'TEDITHISTORYEVENT])
)
(DEFINEQ

(MTEST
  [LAMBDA NIL                                                (* ; "Edited  9-Apr-2023 15:23 by rmk")
    (LET [(TSTR (TTEST 'JUST2]
         (SETQ TOBJ (TEXTOBJ TSTR))
         (SETQ TW (WFROMDS TSTR))
         [SETQ MW (OR (\TEDIT.EXPANDEDPARA.MENU TSTR)
                      (find W in (WINDOWPROP TW 'ATTACHEDWINDOWS)
                         suchthat (STREQUAL "Paragraph-Looks Menu" (WINDOWPROP W 'TEDITMENU]
         (SETQ MTO (TEXTOBJ MW))
         (SETQ MSEL (FETCH SEL OF MTO))
         (SETQ MTSTR (TEXTSTREAM MTO])

(TRYMENU
  [LAMBDA (SPEC)                                             (* ; "Edited 19-Aug-2022 21:56 by rmk")
                                                             (* ; "Edited 17-Aug-2022 14:46 by rmk")
    (CLOSEI)
    (MYTEDITMENU (OR SPEC TESTSPEC])

(MYTEDITMENU
  [LAMBDA (MENUDESC MENUPROPS)                               (* ; "Edited  6-Sep-2022 19:57 by rmk")
                                                             (* ; "Edited 17-Aug-2022 19:54 by rmk")
                                                             (* ; "Edited 13-Aug-2022 23:11 by rmk")
                                                             (* ; "Edited 31-Jan-2022 22:48 by rmk")
                                                            (* ; "Edited 12-Jun-90 19:00 by mitani")

    (* ;; "Create the TEXTSTREAM for a menu, given a description.  That stream is passed to \TEXTMENU.START to get the menu up on screen")

    (PROG ((CH#1 NIL)
           MENUTEXT)
          [SETQ MENUTEXT (OPENTEXTSTREAM NIL NIL NIL NIL (OR MENUPROPS '(FONT (MODERN 10]
          (BTVALIDATE 'MYTEDITMENU 'START MENUTEXT)
          (SETQ LASTTS MENUTEXT)
          (bind (CH# _ 1)
                OBJ for DESC in MENUDESC
             do (SELECTQ (CAR DESC)
                    (* 
                       (* ;; "This is a comment within a menu description -- Ignore it.")
)
                    (MB.BUTTON                               (* ; 
                                                       "A menu button -- hitting it calls a function")
                               (TEDIT.INSERT.OBJECT (MBUTTON.CREATE (MKATOM (fetch (MB.BUTTON MBLABEL
                                                                                          )
                                                                               of DESC))
                                                           (fetch (MB.BUTTON MBBUTTONEVENTFN)
                                                              of DESC)
                                                           (fetch (MB.BUTTON MBFONT) of DESC))
                                      MENUTEXT CH#)
                               (TEDIT.LOOKS MENUTEXT '(PROTECTED OFF)
                                      CH# 1)
                               (add CH# 1))
                    (MB.3STATE                               (* ; 
                              "3-state button;  hitting it changes state among ON, OFF, and NEUTRAL.")
                               (TEDIT.INSERT.OBJECT (MB.CREATE.THREESTATEBUTTON
                                                     (MKATOM (fetch (MB.3STATE MBLABEL) of DESC))
                                                     (fetch (MB.3STATE MBFONT) of DESC)
                                                     (fetch (MB.3STATE MBCHANGESTATEFN) of DESC)
                                                     (fetch (MB.3STATE MBINITSTATE) of DESC))
                                      MENUTEXT CH#)
                               (TEDIT.LOOKS MENUTEXT '(PROTECTED OFF)
                                      CH# 1)
                               (add CH# 1))
                    (MB.TOGGLE                               (* ; 
                                            "TOGGLE button;  hitting it switches between ON and OFF.")
                               (TEDIT.INSERT.OBJECT (\TEXTMENU.TOGGLE.CREATE
                                                     (MKATOM (fetch (MB.TOGGLE MBTEXT) of DESC))
                                                     (fetch (MB.TOGGLE MBFONT) of DESC)
                                                     (fetch (MB.TOGGLE MBCHANGESTATEFN) of DESC)
                                                     (fetch (MB.TOGGLE MBINITSTATE) of DESC))
                                      MENUTEXT CH#)
                               (TEDIT.LOOKS MENUTEXT '(PROTECTED OFF)
                                      CH# 1)
                               (add CH# 1))
                    (MB.NWAY                                 (* ; 
                                                 "N-way buttons;  choosing one turns the others off.")
                             (SETQ OBJ (MB.CREATE.NWAYBUTTON (fetch (MB.NWAY MBBUTTONS) of DESC)
                                              (fetch (MB.NWAY MBFONT) of DESC)
                                              (fetch (MB.NWAY MBCHANGESTATEFN) of DESC)
                                              (fetch (MB.NWAY MBINITSTATE) of DESC)
                                              (fetch (MB.NWAY MBMAXITEMSPERLINE) of DESC)))
                             (TEDIT.INSERT.OBJECT OBJ MENUTEXT CH#)
                             (TEDIT.LOOKS MENUTEXT '(PROTECTED OFF)
                                    CH# 1)
                             (add CH# 1))
                    (MENU                                    (* ; 
                                                             "Real menu, except the selection sticks")
                          (TEDIT.INSERT.OBJECT (MB.CREATE.FULLMENU (CADR DESC))
                                 MENUTEXT CH#)
                          (TEDIT.LOOKS MENUTEXT '(PROTECTED OFF)
                                 CH# 1)
                          (add CH# 1))
                    (MB.MARGINBAR                            (* ; "Margin ruler for TEdit formatting")
                                  (TEDIT.INSERT.OBJECT (MARGINBAR.CREATE -0.5 -0.5 -39.5 NIL 12)
                                         MENUTEXT CH#)
                                  (TEDIT.LOOKS MENUTEXT '(PROTECTED OFF)
                                         CH# 1)
                                  (add CH# 1))
                    (MB.TEXT                                 (* ; 
                                             "Arbitrary text, which will be protected from the user.")
                             (TEDIT.INSERT MENUTEXT (fetch (MB.TEXT MBSTRING) of DESC)
                                    CH#)
                             (CL:WHEN (fetch (MB.TEXT MBFONT) of DESC)
                                 (TEDIT.LOOKS MENUTEXT (LIST 'MBFONT (fetch (MB.TEXT MBFONT)
                                                                        of DESC))
                                        CH#
                                        (NCHARS (fetch (MB.TEXT MBSTRING) of DESC))))
                             (TEDIT.LOOKS MENUTEXT '(PROTECTED ON)
                                    CH#
                                    (NCHARS (fetch (MB.TEXT MBSTRING) of DESC)))
                             (add CH# (NCHARS (fetch (MB.TEXT MBSTRING) of DESC))))
                    (MB.INSERT                               (* ; 
                                                "An insertion point, with optional text to put there")
                               (TEDIT.INSERT MENUTEXT "  {}" CH#)
                               (CL:WHEN T
                                   (TEDIT.LOOKS MENUTEXT '(PROTECTED ON)
                                          CH# 4)
                                   (TEDIT.LOOKS (fetch (TEXTSTREAM TEXTOBJ) of MENUTEXT)
                                          '(PROTECTED ON SELECTPOINT ON)
                                          (IPLUS CH# 2)
                                          1))
                               (OR CH#1 (SETQ CH#1 (IPLUS CH# 3)))
                               [COND
                                  ((fetch (MB.INSERT MBINITENTRY) of DESC)
                                                             (* ; 
                                                     "There is an initial entry to be made.  Make it")
                                   [COND
                                      ((IMAGEOBJP (fetch (MB.INSERT MBINITENTRY) of DESC))
                                                             (* ; "It is an imageobj.")
                                       (TEDIT.INSERT.OBJECT (fetch (MB.INSERT MBINITENTRY)
                                                               of DESC)
                                              MENUTEXT
                                              (IPLUS CH# 3)))
                                      (T                     (* ; "It's regular text.")
                                         (TEDIT.INSERT MENUTEXT (MKSTRING (fetch (MB.INSERT 
                                                                                        MBINITENTRY)
                                                                             of DESC))
                                                (IPLUS CH# 3]
                                   [TEDIT.LOOKS MENUTEXT '(PROTECTED OFF SELECTPOINT OFF)
                                          (IPLUS CH# 3)
                                          (NCHARS (MKSTRING (fetch (MB.INSERT MBINITENTRY)
                                                               of DESC]
                                   (add CH# (NCHARS (fetch (MB.INSERT MBINITENTRY) of DESC]
                               (add CH# 4))
                    (\ILLEGAL.ARG DESC)))
          (replace (TEXTOBJ MENUFLG) of (fetch (TEXTSTREAM TEXTOBJ) of MENUTEXT) with T)
                                                             (* ; "Remember that this is a menu")
          (CL:WHEN CH#1                                      (* ; 
                            "We actually inserted some text, so it makes sense to put up a selection")
              (push (fetch (TEXTOBJ EDITPROPS) of (fetch (TEXTSTREAM TEXTOBJ) of MENUTEXT))
                    (LIST 'SEL CH#1)))                       (* ; 
                                                           "And where the first selection should be.")
          (BTVALIDATE 'MYTEDITMENU 'END MENUTEXT)
          (RETURN MENUTEXT])

(PTMENU
  [LAMBDA (MENUDESC)                                         (* ; "Edited 18-Aug-2022 08:28 by rmk")
    (FOR I (CH# _ 1) FROM 1 AS DESC IN MENUDESC
       DO (PRINTOUT T .I3 I " " .I4 CH# " " .P2 DESC T)
          (ADD CH# (SELECTQ (CAR DESC)
                       (MB.TEXT (NCHARS (CADR DESC)))
                       (MB.INSERT 4)
                       1])
)
(DEFINEQ

(SP
  [LAMBDA (PC NP OFILE)                                      (* ; "Edited  7-May-2023 20:48 by rmk")
                                                             (* ; "Edited 27-Apr-2023 12:00 by rmk")
                                                             (* ; "Edited 24-Mar-2023 10:36 by rmk")
                                                             (* ; "Edited  1-Mar-2023 09:47 by rmk")
                                                             (* ; "Edited  8-Nov-2022 14:13 by rmk")
                                                             (* ; "Edited 24-Oct-2022 17:15 by rmk")
                                                             (* ; "Edited 14-Aug-2022 22:10 by rmk")

    (* ;; "PC is the starting piece, NP is the number of pieces from there.")

    (CL:WHEN (FIXP PC)
        (SETQ PC (NTHPIECE (GTO)
                        PC)))
    (CL:UNLESS (SMALLP NP)
        (SETQ NP (CL:IF NP
                     20
                     MAX.SMALLP)))
    (if PC
        then (CL:UNLESS (TYPE? PIECE PC)
                 (SETQ PC (GTO PC)))
      elseif (OR (TYPE? PIECE IT)
                 (TEXTSTREAMP IT))
        then (SETQ PC IT)
      elseif (SETQ PC LASTTS)
      else (SETQ PC (GTO)))
    (CL:WHEN (TEXTOBJ PC T)
        (SETQ PC (\FIRSTPIECE (TEXTOBJ PC)))
        (CL:WHEN (AND PC (EQ 0 (PLEN PC)))
            (SETQ PC (NEXTPIECE PC))))
    (if OFILE
        then (CL:WITH-OPEN-FILE (STREAM OFILE :DIRECTION :OUTPUT :IF-EXISTS :NEW-VERSION)
                    (for P inpieces PC as I from 1 to NP do (PRINTOUT STREAM .I3 I "/")
                                                            (SPPRINT P STREAM))
                    (FULLNAME STREAM))
      else (RESETFORM (DSPFONT '(TERMINAL 8)
                             T)
                  (for P inpieces PC as I from 1 to NP do (PRINTOUT T .I3 I "/")
                                                          (SPPRINT P T)))
           PC])

(SPR
  [LAMBDA (PIECERANGE NP OFILE)                              (* ; "Edited  7-May-2023 20:47 by rmk")

    (* ;; "Prints up to NP pieces from PIECERANGE.")

    (CL:UNLESS NP (SETQ NP 50))
    (if OFILE
        then (CL:WITH-OPEN-FILE (STREAM OFILE :DIRECTION :OUTPUT :IF-EXISTS :NEW-VERSION)
                    (for PC inpiecerange PIECERANGE as I from 1 to NP
                       do (PRINTOUT STREAM .I3 I "/")
                          (SPPRINT PC STREAM))
                    (FULLNAME STREAM))
      else (RESETFORM (DSPFONT '(TERMINAL 8)
                             T)
                  (for PC inpiecerange PIECERANGE as I from 1 to NP
                     do (PRINTOUT T .I3 I "/")
                        (SPPRINT PC T)))
           PIECERANGE])

(SPL
  [LAMBDA (PC)                                               (* ; "Edited 11-Apr-2023 11:42 by rmk")
    (CL:WHEN (FIXP PC)
        (SETQ PC (NTHPIECE (GTO)
                        PC)))
    (INSPECT (PPARALOOKS PC])

(SCL
  [LAMBDA (PC)                                               (* ; "Edited 11-Apr-2023 11:42 by rmk")
    (CL:WHEN (FIXP PC)
        (SETQ PC (NTHPIECE (GTO)
                        PC)))
    (INSPECT (PLOOKS PC])

(SPPRINT
  [LAMBDA (PC OSTREAM TEXTOBJ)                               (* ; "Edited  7-May-2023 14:46 by rmk")
                                                             (* ; "Edited 24-Oct-2022 17:13 by rmk")
                                                             (* ; "Edited  8-Aug-2022 15:36 by rmk")
    (CL:WHEN (FIXP PC)
        (SETQ PC (\CHTOPC PC (TEXTOBJ TEXTOBJ))))

    (* ;; "Prints a summary of PC on OSTREAM.  If PC is acharno and TEXTOBJ is provided, maps the CHNO to its pc.")

    (if (PCONTENTS PC)
        then (LET ((PLEN (PLEN PC))
                   (PCONTENTS (PCONTENTS PC))
                   (PCHARSET (FETCH (PIECE PCHARSET) OF PC))
                   (PTYPE (PTYPE PC))
                   (CHNO (\PCTOCH PC)))
                  (CL:WHEN (AND (STREAMP PCONTENTS)
                                (NOT (GETSTREAM PCONTENTS 'INPUT T)))
                      [SETQ PCONTENTS (replace PCONTENTS of PC with (OPENSTREAM PCONTENTS
                                                                           'INPUT])
                  (PRINTOUT OSTREAM .I3 CHNO " " PC .TAB0 28 "  ")
                  (CL:WHEN (MEMB PTYPE FILE.PTYPES)
                      (SETFILEPTR PCONTENTS (FETCH PFPOS OF PC)))
                  (PRINTOUT OSTREAM (SELECTC PTYPE
                                        (THINFILE.PTYPE 
                                             'Thinfile)
                                        (FATFILE1.PTYPE 
                                             'Fatfile1)
                                        (FATFILE2.PTYPE 
                                             'Fatfile2)
                                        (THINSTRING.PTYPE 
                                             'Thinstring)
                                        (FATSTRING.PTYPE 
                                             'Fatstring)
                                        (SUBSTREAM.PTYPE 
                                             'Substream)
                                        (OBJECT.PTYPE 'Object)
                                        (LOOKS.PTYPE 'Looks)
                                        NIL)
                         .TAB 41 .I4 PLEN (CL:IF (PPARALAST PC)
                                              "* "
                                              "  "))
                  (SELECTC PTYPE
                      (STRING.PTYPES (CL:WHEN (IGREATERP PLEN 0)
                                         (PRIN1 "%"" OSTREAM)
                                         (for C INSTRING (SUBSTRING PCONTENTS 1 PLEN)
                                            DO (PRIN1 (SELCHARQ C
                                                           ((EOL CR) 
                                                                "[EOL]")
                                                           (LF "[LF]")
                                                           (FORM "[FORM]")
                                                           (TAB "[TAB]")
                                                           (Meta,TAB "[MTAB]")
                                                           (CHARACTER C))
                                                      OSTREAM))
                                         (PRIN1 "%"")))
                      (OBJECT.PTYPE (PRINTOUT OSTREAM PCONTENTS " ")
                                    (SPPRINT.OBJ PCONTENTS OSTREAM))
                      (FOR I C FROM 1 TO PLEN FIRST (PRIN1 '%" OSTREAM)
                         DO (SETQ C (SELECTC PTYPE
                                        (THINFILE.PTYPE 
                                             (\INCCODE.EOLC PCONTENTS))
                                        (FATFILE1.PTYPE 
                                             (LOGOR PCHARSET (BIN PCONTENTS)))
                                        (FATFILE2.PTYPE 
                                             (LOGOR (UNFOLD (BIN PCONTENTS)
                                                           256)
                                                    (BIN PCONTENTS)))
                                        (SHOULDNT)))
                            (PRIN1 (SELCHARQ C
                                        ((EOL CR) 
                                             "[EOL]")
                                        (LF "[LF]")
                                        (FORM "[FORM]")
                                        (TAB "[TAB]")
                                        (Meta,TAB "[MTAB]")
                                        (CHARACTER C))
                                   OSTREAM) FINALLY (PRIN1 '%" OSTREAM)))
                  (TERPRI OSTREAM))
      else (PRINTOUT OSTREAM "Piece has no CONTENTS" PC T))
    PC])

(SPPRINT.OBJ
  [LAMBDA (OBJ STREAM)                                       (* ; "Edited 28-Sep-2022 11:13 by rmk")
                                                             (* ; "Edited  7-Sep-2022 15:21 by rmk")
    (PRINTOUT STREAM (SELECTQ (IMAGEOBJPROP OBJ 'DISPLAYFN)
                         (MB.NB.DISPLAYFN 
                              (IMAGEOBJPROP OBJ 'BUTTONS))
                         ((MB.THREESTATE.DISPLAY \TEXTMENU.TOGGLE.DISPLAY MB.DISPLAY) 
                              (IMAGEOBJPROP OBJ 'MBTEXT))
                         (MB.DISPLAY (IMAGEOBJPROP OBJ 'MBTEXT))
                         (IMAGEOBJPROP OBJ 'DISPLAYFN])

(SHOWPIECEBYTES
  [LAMBDA (PC TSTREAM)                                       (* ; "Edited 11-Oct-2022 13:58 by rmk")
    (CL:WHEN (AND (FIXP PC)
                  (TEXTSTREAM TSTREAM))
        (SETQ PC (NTHPIECE (TEXTSTREAM TSTREAM)
                        PC)))
    (CL:UNLESS (TYPE? PIECE PC)
           (ERROR "NOT A PIECE" PC))
    (CL:UNLESS (MEMB (PTYPE PC)
                     FILE.PTYPES)
           (ERROR "NOT A FILE PIECE TYPE"))
    (LET ((FILE (PCONTENTS PC))
          (FAT (EQ FATFILE2.PTYPE (PTYPE PC)))
          NBYTES)
         (SPPRINT PC T)
         (SETQ NBYTES (CL:IF FAT
                          (UNFOLD (PLEN PC)
                                 2)
                          (PLEN PC)))
         (SETFILEPTR FILE (fetch (PIECE PFPOS) of PC))
         (for I from 1 to NBYTES do (PRINTOUT T (BIN FILE)
                                           " "))
         (TERPRI T)
         (SETFILEPTR FILE (fetch (PIECE PFPOS) of PC))
         [for I from 1 to (CL:IF FAT
                              (FOLDLO NBYTES 2)
                              NBYTES) do (PRINTOUT T (CHARACTER (CL:IF FAT
                                                                    (\WIN FILE)
                                                                    (BIN FILE))]
         (TERPRI T])

(CHECKPLENGTHS
  [LAMBDA (MSG TOBJ)                                         (* ; "Edited 13-Apr-2023 23:11 by rmk")
    (find P inpieces (\FIRSTPIECE (GTO TOBJ)) when (ILESSP (PLEN P)
                                                          0) do (HELP (CONCAT "negative" MSG)
                                                                      P])
)
(DEFINEQ

(NTHPIECE
  [LAMBDA (TSTREAM N)                                        (* ; "Edited  9-Apr-2023 11:36 by rmk")
                                                             (* ; "Edited  7-Apr-2023 23:07 by rmk")
                                                             (* ; "Edited 24-Mar-2023 10:36 by rmk")
                                                             (* ; "Edited 10-Oct-2022 16:20 by rmk")
                                                             (* ; "Edited  8-Aug-2022 08:52 by rmk")

    (* ;; "N=0 means the dummy first piece.")

    (LET ((TOBJ (GTO TSTREAM)))
         (if (NULL N)
             then (SETQ N 1)
           elseif (ILESSP N 0)
             then (SETQ N (IPLUS (NPIECES TOBJ)
                                 N 1)))
         (for PC inpieces (\FIRSTPIECE TOBJ) as I from 0 when (EQ I N) do (RETURN PC])

(NPIECES
  [LAMBDA (TSTREAM)                                          (* ; "Edited  6-Apr-2023 23:39 by rmk")
                                                             (* ; "Edited 24-Mar-2023 10:20 by rmk")
                                                             (* ; "Edited 21-Aug-2022 14:47 by rmk")
                                                             (* ; "Edited  8-Aug-2022 08:52 by rmk")
    (for PC inpieces (NEXTPIECE (\FIRSTPIECE (GTO TSTREAM))) count T])

(NTHPIECECHAR
  [LAMBDA (PC N)                                             (* ; "Edited 24-Oct-2022 21:10 by rmk")

    (* ;; "Gets the Nth CHAR of PC, 0 origin.  The last character is either -1 or (SUB1 PLEN)")

    (LET ((PLEN (PLEN PC))
          (PCONTENTS (PCONTENTS PC)))
         (CL:WHEN (ILESSP N 0)
                (add N PLEN))
         (CL:WHEN (AND (IGEQ N 0)
                       (ILESSP N PLEN))
             (SELECTC (PTYPE PC)
                 (STRING.PTYPES (NTHCHARCODE PCONTENTS N))
                 (THINFILE.PTYPE 
                      (SETFILEPTR PCONTENTS (IPLUS N (fetch (PIECE PFPOS) of PC)))
                      (BIN PCONTENTS))
                 (FATFILE1.PTYPE 
                      (SETFILEPTR PCONTENTS (IPLUS N (fetch (PIECE PFPOS) of PC)))
                      (LOGOR (fetch (PIECE PCHARSET) of PC)
                             (BIN PCONTENTS)))
                 (FATFILE2.PTYPE 
                      (SETFILEPTR PCONTENTS (IPLUS (UNFOLD N 2)
                                                   (fetch (PIECE PFPOS) of PC)))
                      (LOGOR (UNFOLD (BIN PCONTENTS)
                                    256)
                             (BIN PCONTENTS)))
                 (FATBLOCK.PTYPE 
                      (\GETBASEFAT PCONTENTS N))
                 (THINBLOCK.PTYPE 
                      (\GETBASEBYTE PCONTENTS N))
                 (OBJECT.PTYPE PCONTENTS)
                 (SHOULDNT)))])
)
(DEFINEQ

(NTHCHARSLOT
  [LAMBDA (THISLINE SLOTN)                                   (* ; "Edited 13-Mar-2023 15:12 by rmk")
                                                             (* ; "Edited  8-Mar-2023 13:22 by rmk")
    (CL:UNLESS (TYPE? THISLINE THISLINE)
        (SETQ THISLINE (FETCH THISLINE of (GTO THISLINE))))
    (find CHARSLOT incharslots THISLINE as I from 1 suchthat (EQ I SLOTN])
)
(DEFINEQ

(STL
  [LAMBDA (THISLINE LINE/LX1 LCHAR1)                         (* ; "Edited 23-Mar-2023 23:00 by rmk")

    (* ;; "Debugging tool while \FORMATLINE is creating THISLINE, or when it's done.  During creation the NEXTAVAILABLECHARSLOT is at the very end, so bad slots are visible.  When complete, they shouldn't appear.")

    (DECLARE (USEDFREE PREVSP))
    (CL:UNLESS (type? THISLINE THISLINE)
        (SETQ THISLINE (fetch (TEXTOBJ THISLINE) of (GTO THISLINE))))
    (\DTEST THISLINE 'THISLINE)
    (PRINTOUT T THISLINE ":" T)
    (for CSLOT EXPANDSPACES CHNO TX LENGTH LINE CHAR CHARW (SPACEFACTOR _ (FETCH TLSPACEFACTOR
                                                                             OF THISLINE))
         (FIRSTSPACESLOT _ (fetch TLFIRSTSPACE of THISLINE))
         (NSPACES _ 0)
         (NCHARS _ 0)
         (SPACETOTAL _ 0)
         (PSP _ (AND (BOUNDP 'PREVSP)
                     (NEQ PREVSP (GETATOMVAL 'PREVSP))
                     PREVSP)) incharslots THISLINE as NSLOTS from 0
       first (if (NULL LINE/LX1)
                 then (printout T "No line parameters, start at 0" T)
                      (SETQ CHNO 1)
                      (SETQ TX 0)
               elseif (type? LINEDESCRIPTOR LINE/LX1)
                 then (SETQ LINE LINE/LX1)
                      (SETQ CHNO (fetch (LINEDESCRIPTOR LCHAR1) of LINE))
                      (SETQ TX (fetch (LINEDESCRIPTOR LX1) of LINE))
               elseif (SMALLP LINE/LX1)
                 then (SETQ CHNO (OR LCHAR1 1))
                      (SETQ TX LINE/LX1))
             (SETQ LENGTH TX) eachtime (SETQ CHAR (CHAR CSLOT))
                                    (SETQ CHARW (CHARW CSLOT))
                                    (CL:UNLESS (CHARSLOTP CSLOT THISLINE)
                                           (HELP "THISLINE RUNS OFF THE EDGE" THISLINE))
       repeatuntil (OR (EQ CSLOT (LASTCHARSLOT THISLINE)))
       do (printout T .I4 NSLOTS)
          (if (IMAGEOBJP CHAR)
              then (add NCHARS 1)
                   (printout T " " .I5 CHNO ": ")
                   (add TX CHARW)
                   (printout T "Obj" .FR 27 CHARW " " .I4 TX 34 CSLOT " " CHAR " ")
                   (SPPRINT.OBJ CHAR T)
                   (add LENGTH CHARW)
                   (ADD CHNO 1)
            elseif (SMALLP CHAR)
              then (add NCHARS 1)
                   (printout T " " .I5 CHNO ": ")
                   (printout T .I3 CHAR " " (SELCHARQ CHAR
                                                 ((EOL CR LF) 
                                                      (add TX CHARW)
                                                      (add LENGTH CHARW)
                                                      "EOL")
                                                 (FORM "FORM")
                                                 (SPACE (CL:WHEN (EQ CSLOT FIRSTSPACESLOT)
                                                               (SETQ EXPANDSPACES T))
                                                        (if EXPANDSPACES
                                                            then (add LENGTH (HCSCALE SPACEFACTOR 
                                                                                    CHARW))
                                                                 (add TX (HCSCALE SPACEFACTOR CHARW))
                                                          else (add LENGTH CHARW)
                                                               (add TX CHARW))
                                                        (ADD NSPACES 1)
                                                        " ")
                                                 (TAB (add LENGTH CHARW)
                                                      (add TX CHARW)
                                                      "TAB")
                                                 (Meta,TAB (add LENGTH CHARW)
                                                           (add TX CHARW)
                                                           "MTAB")
                                                 (PROGN (add LENGTH CHARW)
                                                        (add TX CHARW)
                                                        (CHARACTER CHAR)))
                          .FR 27 CHARW " " .I4 TX 34 CSLOT)
                   (ADD CHNO 1)
            elseif [AND [OR (CHARSLOTP CHAR THISLINE)
                            (AND (NULL CHAR)
                                 (NOT (TYPE? CHARLOOKS CHARW]
                        (OR (EQ CSLOT PSP)
                            (find CS incharslots (NEXTCHARSLOT CSLOT) while (CHARSLOTP CS THISLINE)
                               suchthat (EQ CSLOT CHAR]
              then                                           (* ; "Presumably a PREVSP")
                   (ADD NSPACES 1)
                   (printout T " " .I5 CHNO ":")
                   (ADD LENGTH CHARW)
                   (ADD TX CHARW)
                   (PRINTOUT T " " (OR CHAR "[ENDSP]")
                          .FR 27 CHARW " " .I4 TX 34 CSLOT)
                   (ADD CHNO 1)
            elseif (SMALLP CHARW)
              then (if (EQ CSLOT FIRSTSPACESLOT)
                       then (PRINTOUT T "First space")
                     else (PRINTOUT T .FR 11 "Invis" .FR 27 CHARW)
                          (add CHNO CHARW))
            elseif (type? CHARLOOKS CHARW)
              then (printout T 7 CHARW 34 CSLOT)
            else (printout T " BAD CHARSLOT " 28 CSLOT " CHAR = " CHAR " CHARW = " CHARW T)
                 (CL:UNLESS (EQ 'Y (ASKUSER NIL NIL "Continue? "))
                     (TERPRI T)
                     (GO $$OUT)))
          (TERPRI T)
       finally (printout T 5 NSLOTS " slots" 5 NCHARS " characters" 5 NSPACES " spaces" 5 
                      "line length = " LENGTH 5 "right margin = " (AND LINE (fetch (LINEDESCRIPTOR
                                                                                    RIGHTMARGIN)
                                                                               of LINE))
                      5 "X limit = " (AND LINE (FETCH (LINEDESCRIPTOR LXLIM)
                                                  of (fetch (THISLINE DESC) of THISLINE)))
                      5 "first expanded space = " FIRSTSPACESLOT 5 "space factor = ")
             (CL:IF SPACEFACTOR
                 (printout T .F2.3 SPACEFACTOR T)
                 (printout T NIL T))])

(ALLTL
  [LAMBDA (THISLINE N)                                       (* ; "Edited 13-Mar-2023 15:12 by rmk")
                                                             (* ; "Edited 10-Mar-2023 11:03 by rmk")

    (* ;; "This shows the whole THISLINE, no matter what the final slot eventually might be")

    (DECLARE (USEDFREE TEXTOBJ))
    (CL:UNLESS THISLINE
        (SETQ THISLINE (fetch (TEXTOBJ THISLINE) of (GTO THISLINE))))
    (CL:UNLESS (FIXP N)
           (SETQ N MAX.SMALLP))
    (for (CHARSLOT _ (FIRSTCHARSLOT THISLINE))
         (LASTSLOT _ (LASTCHARSLOT THISLINE))
         CHAR CHARW by (NEXTCHARSLOT CHARSLOT) as I from 0 to (SUB1 N) repeatuntil (EQ CHARSLOT 
                                                                                       LASTSLOT)
       do (SETQ CHAR (CHAR CHARSLOT))
          (SETQ CHARW (CHARW CHARSLOT))
          (PRINTOUT T .I3 I " " CHARSLOT)
          (if (SMALLP CHAR)
              then (PRINTOUT T .FR 20 CHAR " " (CHARACTER CHAR)
                          " " CHARW T)
            elseif CHAR
              then (PRINTOUT T " " CHAR " " CHARW T)
            else (PRINTOUT T .FR 20 CHAR " " " " " " CHARW T])
)
(DEFINEQ

(PLCHAIN
  [LAMBDA (LN TEXTOBJ)                                       (* ; "Edited 14-Sep-2022 16:07 by rmk")
                                                             (* ; "Edited 29-May-91 18:20 by jds")
    (PRINTLINE LN TEXTOBJ)
    (COND
       ((fetch (LINEDESCRIPTOR NEXTLINE) of LN)
        (PLCHAIN (fetch (LINEDESCRIPTOR NEXTLINE) of LN)
               TEXTOBJ])

(PRINTLINE
  [LAMBDA (LN TEXTOBJ)                                       (* ; "Edited 26-Mar-2023 11:46 by rmk")
                                                             (* ; "Edited 29-Sep-2022 08:43 by rmk")
                                                             (* ; "Edited  8-Sep-2022 23:41 by rmk")
                                                             (* ; "Edited 29-May-91 18:20 by jds")
                                                             (* ; 
                                                  "Print out a line descriptor in a reasonable form.")
    (printout T "-----" T LN "  Bot: " (fetch (LINEDESCRIPTOR YBOT) of LN)
           "  Base: "
           (fetch (LINEDESCRIPTOR YBASE) of LN)
           "  Height: "
           (fetch (LINEDESCRIPTOR LHEIGHT) of LN)
           "  Ascent: "
           (fetch (LINEDESCRIPTOR ASCENT) of LN)
           "  Descent: "
           (fetch (LINEDESCRIPTOR DESCENT) of LN)
           T "Char1: " (fetch (LINEDESCRIPTOR LCHAR1) of LN)
           "  Lim: "
           (fetch (LINEDESCRIPTOR LCHARLIM) of LN))
    (COND
       ((fetch (LINEDESCRIPTOR DIRTY) of LN)
        (PRIN1 "  DIRTY" T)))
    (COND
       ((fetch (LINEDESCRIPTOR FORCED-END) of LN)
        (PRIN1 "  Forced-end" T)))
    (COND
       ((fetch (LINEDESCRIPTOR DELETED) of LN)
        (PRIN1 "  DELETED" T)))
    (COND
       ((fetch (LINEDESCRIPTOR LHASPROT) of LN)
        (PRIN1 "  [Protected text]" T)))
    (PRIN1 ".
")
    (printout T "RMar: " (fetch (LINEDESCRIPTOR RIGHTMARGIN) of LN)
           "  XLim: "
           (fetch (LINEDESCRIPTOR LXLIM) of LN)
           T "Prev:  " (fetch (LINEDESCRIPTOR PREVLINE) of LN)
           T "Next:  " (fetch (LINEDESCRIPTOR NEXTLINE) of LN)
           T)
    (COND
       ((AND (IGEQ (fetch (LINEDESCRIPTOR LCHAR1) of LN)
                   1)
             (ILEQ (fetch (LINEDESCRIPTOR LCHAR1) of LN)
                   (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ)))    (* ; "The line is real -- print it.")
        (PRIN1 "|" T)
        [bind CH (TSTREAM _ (fetch STREAMHINT of TEXTOBJ))
           first (\TEXTSETFILEPTR TSTREAM (SUB1 (fetch (LINEDESCRIPTOR LCHAR1) of LN))) for CHNO
           from (fetch (LINEDESCRIPTOR LCHAR1) of LN) to (IMIN (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ)
                                                               (fetch (LINEDESCRIPTOR LCHARLIM)
                                                                  of LN))
           do (SETQ CH (BIN TSTREAM))
              (COND
                 ((SMALLP CH)
                  (PRIN1 (CHARACTER CH)
                         T))
                 (T (PRINT CH T]
        (PRINTOUT T "|" T])

(INSPECTLINES
  [LAMBDA (LINES WHERE TAG)                                  (* ; "Edited 28-Mar-2023 22:02 by rmk")
                                                             (* ; "Edited 25-Mar-2023 15:26 by rmk")
                                                             (* ; "Edited 22-Feb-2023 11:08 by rmk")
                                                             (* ; "Edited 21-Feb-2023 00:11 by rmk")
                                                             (* ; "Edited  9-Oct-2022 08:36 by rmk")
    (DECLARE (USEDFREE TEXTOBJ))                             (* ; "Edited 17-Sep-2022 11:50 by rmk")
    (if (type? SELECTION LINES)
        then [LET (WINDOW)
                  (CL:WHEN (type? LINEDESCRIPTOR (CAR (fetch L1 of LINES)))
                      (SETQ WINDOW (INSPECTLINES (fetch L1 of LINES)
                                          NIL
                                          'L2)))
                  (CL:WHEN (type? LINEDESCRIPTOR (CAR (fetch LN of LINES)))
                      (if WINDOW
                          then (ATTACHWINDOW (INSPECTLINES (fetch LN of LINES)
                                                    NIL
                                                    'LN)
                                      WINDOW
                                      'RIGHT
                                      'TOP)
                        else (INSPECTLINES (fetch LN of LINES)
                                    NIL
                                    'LN)))]
      else [SETQ LINES (if (type? LINEDESCRIPTOR LINES)
                           then LINES
                         elseif (type? LINEDESCRIPTOR (CAR (LISTP LINES)))
                           then (CAR LINES)
                         elseif LINES
                           then (CAR (FETCH LINES OF (TEXTOBJ LINES)))
                         else (CAR (fetch LINES of (GTO]
           (INSPECT/TOP/LEVEL/LIST (COLLECTLINES LINES)
                  WHERE TAG])

(SL
  [LAMBDA (LINE TSTREAM NLINES FILE)                         (* ; "Edited  5-May-2023 15:21 by rmk")
                                                             (* ; "Edited 27-Apr-2023 12:10 by rmk")
                                                             (* ; "Edited 25-Apr-2023 00:26 by rmk")
                                                             (* ; "Edited 20-Apr-2023 14:49 by rmk")
                                                             (* ; "Edited  8-Apr-2023 17:28 by rmk")

    (* ;; "Prints NLINES lines in TSTREAM starting at LINE.")
                                                             (* ; "Edited  9-Oct-2022 08:50 by rmk")
    (CL:UNLESS NLINES (SETQ NLINES 100))
    [if (FIXP LINE)
        then (SETQ NLINES LINE)
             (SETQ LINE NIL)
      elseif (WINDOWP LINE)
        then (SETQ TSTREAM LINE)
             (SETQ LINE NIL)
      elseif (OR (NULL LINE)
                 (type? TEXTOBJ LINE))
        then (SETQ LINE (fetch PLINES of (CAR (fetch \WINDOW of (GTO]
    (CL:UNLESS (TEXTSTREAMP TSTREAM)
        (SETQ TSTREAM (TEXTSTREAM (GTO TSTREAM))))
    (CL:WHEN (EQ LINE T)
        [SETQ LINE (SELLINES (fetch SEL of (TEXTOBJ TSTREAM]
        (PRINTOUT T "From " (fetch SEL of (TEXTOBJ TSTREAM))
               T)
        (CL:UNLESS NLINES
            [SETQ NLINES (for L inlines (CAR LINE) count T repeatuntil (EQ L (CADR LINE])
        (SETQ LINE (CAR LINE)))
    (CL:UNLESS NLINES (SETQ NLINES 100))
    (CL:WHEN (TYPE? LINEDESCRIPTOR (CAR (LISTP LINE)))
        (SETQ LINE (CAR LINE)))
    (RESETLST
        [RESETSAVE (DSPFONT NIL FILE)
               '(PROGN (DSPFONT OLDVALUE FILE]
        [for L (TEXTLEN _ (TEXTLEN (TEXTOBJ TSTREAM))) inlines LINE as I from 1 to NLINES
           first (PRINTOUT T .FONT '(TERMINAL 8)
                        "TEXTLEN = " TEXTLEN T)
           do (PRINTOUT FILE .FONT '(TERMINAL 8)
                     (SUBSTRING L (ADD1 (STRPOS "}" L)))
                     ":"
                     (CL:IF (GETLD L DIRTY)
                         "D"
                         " ")
                     15 .I2 (GETLD L LHEIGHT)
                     " " %# (CL:IF (GETLD L YBOT)
                                (PRINTOUT NIL .I3 (GETLD L YBOT))
                                (PRINTOUT T "---"))
                     " " .I5 (GETLD L LCHAR1)
                     " -> " .I5 (GETLD L LCHARLIM)
                     " " .I3 (ADD1 (IDIFFERENCE (GETLD L LCHARLIM)
                                          (GETLD L LCHAR1)))
                     .FONT
                     '(TERMINAL 6)
                     " ")
              (if (OR (ILESSP (GETLD L LCHAR1)
                             1)
                      (AND NIL (IGREATERP (GETLD L LCHARLIM)
                                      TEXTLEN)))
                  then (PRINTOUT FILE -8 "dummy" T)
                else (SETFILEPTR TSTREAM (SUB1 (GETLD L LCHAR1)))
                     (PRINTOUT FILE " %"")
                     (for CNO C LASTC from (GETLD L LCHAR1) to (GETLD L LCHARLIM)
                        until (EOFP TSTREAM) do (SETQ C (BIN TSTREAM))
                                                (if (SMALLP C)
                                                    then (SETQ LASTC C)
                                                         (SELCHARQ C
                                                              (TAB (PRIN3 "[TAB]" FILE))
                                                              (EOL (PRIN3 "[EOL]" FILE))
                                                              (LF (PRIN3 "[LF]" FILE))
                                                              (FORM (PRIN3 "[FORM]" FILE))
                                                              (PRINTCCODE C FILE))
                                                  elseif (IMAGEOBJP C)
                                                    then (printout FILE " " C " "))
                        finally (PRINTOUT FILE "%"" T)
                              (CL:WHEN (GETLD L FORCED-END)
                                     (TERPRI FILE]
        (TERPRI FILE))
    LINE])

(CHECKLINES
  [LAMBDA (LINE1 LINEN MSG)                                  (* ; "Edited 11-Mar-2023 17:38 by rmk")
    (CL:WHEN LINE1
        (CL:WHEN (EQ 0 (fetch (LINEDESCRIPTOR LCHAR1) of LINE1))
                                                             (* ; "Dummy")
            (SETQ LINE1 (fetch (LINEDESCRIPTOR NEXTLINE) of LINE1)))
        (for L NEXT inlines LINE1 while (SETQ NEXT (fetch (LINEDESCRIPTOR NEXTLINE) of L))
           do (CL:UNLESS (IEQP (ADD1 (fetch (LINEDESCRIPTOR LCHARLIM) of L))
                               (fetch (LINEDESCRIPTOR LCHAR1) of NEXT))
                  (CL:WHEN MSG (PRINTOUT T "Line sequence error: " MSG T))
                  (HELP L NEXT))
              (CL:WHEN (AND LINEN (EQ L LINEN))
                     (RETURN))))])

(SELLINES
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited 13-Mar-2023 15:12 by rmk")
                                                             (* ; "Edited  9-Mar-2023 14:21 by rmk")
                                                             (* ; "Edited 26-Feb-2023 23:08 by rmk")
    (LET [(SEL (CL:IF (type? SELECTION TEXTOBJ)
                   TEXTOBJ
                   (fetch SEL of (GTO TEXTOBJ)))]
         (LIST (CAR (fetch (SELECTION L1) of SEL))
               (CAR (fetch (SELECTION LN) of SEL])

(COLLECTLINES
  [LAMBDA (LINE)                                             (* ; "Edited 25-Mar-2023 15:27 by rmk")
    (for L inlines (CL:IF (LISTP LINE)
                       (CAR LINE)
                       LINE) collect L])

(NTHLINE
  [LAMBDA (LINE N)                                           (* ; "Edited  1-Apr-2023 21:15 by rmk")
    (LET (TOBJ)
         (if (TYPE? LINEDESCRIPTOR LINE)
           else (SETQ TOBJ (GTO LINE))
                (SETQ LINE (LDGET (FETCH PLINES OF (CAR (fetch \WINDOW of TOBJ)))
                                  NEXTLINE)))
         (for I from 1 as L in (COLLECTLINES LINE) when (EQ I N) do (RETURN L])

(HEIGHT
  [LAMBDA (LINE)                                             (* ; "Edited  1-Apr-2023 12:47 by rmk")
    (for L inlines LINE SUM (LDGET L LHEIGHT])

(LINEBOTS
  [LAMBDA (LINE)                                             (* ; "Edited 19-Apr-2023 20:50 by rmk")
                                                             (* ; "Edited  1-Apr-2023 21:24 by rmk")
    (CL:UNLESS (type? LINEDESCRIPTOR LINE)
        [SETQ LINE (fetch PLINES of (CAR (fetch \WINDOW of (GTO])
    (for L inlines (CAR (MKLIST LINE)) collect (GETLD L YBOT])

(PLINES
  [LAMBDA (PANE)                                             (* ; "Edited  8-Apr-2023 17:22 by rmk")
                                                             (* ; "Edited  6-Apr-2023 14:19 by rmk")
    (CL:UNLESS (WINDOWP PANE)
        (SETQ PANE (GTO PANE)))
    (SL [FETCH PLINES OF (CAR (fetch \WINDOW OF (GTO PANE]
        PANE])
)
(DEFINEQ

(INSPECTSELS
  [LAMBDA (ARG)                                              (* ; "Edited 23-Mar-2023 21:19 by rmk")
                                                             (* ; "Edited 19-Mar-2023 22:07 by rmk")
    (LET ((TEXTOBJ (GTO ARG))
          W PARENT CHILDREN)
         (SETQ W (INSPECT (fetch SEL of TEXTOBJ)
                        NIL NIL 'SEL))
         (SETQ PARENT W)
         (CL:WHEN (fetch (SELECTION ONFLG) of (fetch SCRATCHSEL of TEXTOBJ))
             [PUSH CHILDREN (SETQ W (INSPECT (fetch SCRATCHSEL of TEXTOBJ)
                                           NIL
                                           (RELCREATEPOSITION (LIST W 'RIGHT)
                                                  (LIST W 'BOTTOM))
                                           'SCRATCH])
         (CL:WHEN (fetch (SELECTION ONFLG) of (fetch MOVESEL of TEXTOBJ))
             [PUSH CHILDREN (SETQ W (INSPECT (fetch MOVESEL of TEXTOBJ)
                                           NIL
                                           (RELCREATEPOSITION (LIST W 'RIGHT)
                                                  (LIST W 'BOTTOM))
                                           'MOVE])
         (CL:WHEN (fetch (SELECTION ONFLG) of (fetch SHIFTEDSEL of TEXTOBJ))
             [PUSH CHILDREN (SETQ W (INSPECT (fetch SHIFTEDSEL of TEXTOBJ)
                                           NIL
                                           (RELCREATEPOSITION (LIST W 'RIGHT)
                                                  (LIST W 'BOTTOM))
                                           'SHIFT])
         (CL:WHEN (fetch (SELECTION ONFLG) of (fetch DELETESEL of TEXTOBJ))
             (PUSH CHILDREN (INSPECT (fetch DELETESEL of TEXTOBJ)
                                   NIL
                                   (RELCREATEPOSITION (LIST W 'RIGHT)
                                          (LIST W 'BOTTOM))
                                   'DELETE)))
         (CLOSEWITH CHILDREN PARENT)
         (MOVEWITH CHILDREN PARENT)
         PARENT])

(ISEL
  [LAMBDA (ARG)                                              (* ; "Edited 27-Apr-2023 10:29 by rmk")
    (INSPECT (FETCH SEL OF (GTO ARG])

(IHIST
  [LAMBDA (ARG)                                              (* ; "Edited  4-May-2023 20:25 by rmk")
    (INSPECT (fetch (TEXTOBJ TXTHISTORY) of (GTO ARG])

(IPCTB
  [LAMBDA (ARG)                                              (* ; "Edited  4-May-2023 20:28 by rmk")
    (INSPECT (FETCH (TEXTOBJ PCTB) of (GTO ARG])
)

(RPAQ? LASTTS NIL)

(RPAQQ OK.TO.MODIFY.FNS T)
(DEFINEQ

(PFOT
  [NLAMBDA (FN)                                              (* ; "Edited 10-Sep-2022 16:13 by rmk")
                                                             (* ; "Edited  9-Aug-2022 22:36 by rmk")
                                                             (* ; "Edited  6-Aug-2022 13:13 by rmk")
    (APPLY (FUNCTION PF)
           (LIST FN (OTFILES FN])

(DFOT
  [NLAMBDA (FN FILE)                                         (* ; "Edited 10-Sep-2022 16:15 by rmk")
                                                             (* ; "Edited  6-Sep-2022 23:35 by rmk")
                                                             (* ; "Edited  4-Sep-2022 20:57 by rmk")
                                                             (* ; "Edited  9-Aug-2022 22:37 by rmk")
                                                             (* ; "Edited  8-Aug-2022 16:17 by rmk")
                                                             (* ; "Edited  7-Aug-2022 00:08 by rmk")
    (LET [FILEPKGFLG (FNOT (PACK* FN '-OT]
         (COPYDEF FN FNOT 'FNS (OTFILES FN FILE))
         (EDITDEF.FNS FNOT NIL '(:DONTWAIT])

(OTFILES
  [LAMBDA (FN FILE)                                          (* ; "Edited 10-Sep-2022 16:57 by rmk")
    (FOR F INSIDE (OR FILE (WHEREIS FN 'FNS T))
       COLLECT (SETQ F (SELECTQ F
                           ((TEDIT-STREAM TEDIT-TEXTOFD) 
                                'TEXTOFD)
                           (TEDIT 'TEDIT)
                           (TEDIT-PCTREE 'PCTREE)
                           (IF (STRPOS "TEDIT-" F 1 NIL T)
                               THEN (PACK* 'TEDIT (SUBSTRING F 7))
                             ELSEIF (STRPOS "TEDIT" F 1 NIL T)
                               THEN (PACK* 'TEDIT- (SUBSTRING F 6))
                             ELSE F)))
             (PACKFILENAME 'HOST '{OT} 'NAME F])

(DFOV
  [NLAMBDA (FN FILE)                                         (* ; "Edited  8-Mar-2023 09:55 by rmk")
                                                             (* ; "Edited 25-Feb-2023 14:19 by rmk")
                                                             (* ; "Edited 18-Feb-2023 00:09 by rmk")
                                                             (* ; "Edited  4-Feb-2023 16:34 by rmk")
                                                             (* ; "Edited  2-Feb-2023 10:42 by rmk")

    (* ;; "Brings in a function from an earlier version, for comparison. FILE can be a version number, it uses WHEREIS")

    (LET (FILEPKGFLG FNOV VERSION)
         (if (FIXP FILE)
             then (SETQ VERSION FILE)
                  (SETQ FILE NIL)
           elseif (EQ FILE T)
             then (SETQ VERSION (AND (BOUNDP 'DEFAULTOVVERSION)
                                     (FIXP DEFAULTOVVERSION)))
                  (SETQ FILE NIL))
         (CL:UNLESS FILE
             (SETQ FILE (CAR (WHEREIS FN 'FNS T))))
         (CL:UNLESS (AND FILE (SETQ FILE (FINDFILE FILE)))
             (ERROR (CONCAT "Can't find old version of " FN)))
         [if VERSION
             then (if (IGREATERP VERSION 0)
                      then [SETQ FILE (OR (INFILEP (PACKFILENAME 'VERSION VERSION 'BODY FILE))
                                          (ERROR (CONCAT "Can't find version " VERSION " of "
                                                        (PACKFILENAME 'VERSION NIL 'BODY FILE]
                    elseif (ILESSP VERSION 0)
                      then 
                           (* ;; "The Nth existing version counting backwards")

                           (SETQ FILE (OR (CAR (NTH (CDR (FILDIR (PACKFILENAME 'VERSION '*
                                                                        'BODY FILE)))
                                                    (IMINUS VERSION)))
                                          (ERROR (CONCAT "Can't find version " VERSION " of "
                                                        (PACKFILENAME 'VERSION NIL 'BODY FILE]
         [SETQ FNOV (PACK* FN ";" (FILENAMEFIELD FILE 'VERSION]
         (COPYDEF FN FNOV 'FNS FILE)
         (ADDTOFILE FNOV 'FNS NIL)
         (EDITDEF FNOV 'FNS NIL NIL '(:DONTWAIT])

(COMP
  [LAMBDA (FN)                                               (* ; "Edited  5-Feb-2023 20:14 by rmk")
    (COMPAREDEFS FN 'FNS (LIST 'SAVE (CAR (REMOVE 'SAVE (WHEREIS FN 'FNS T])

(DFR
  [NLAMBDA (FN FILE)                                         (* ; "Edited 12-Mar-2023 13:18 by rmk")
                                                             (* ; "Edited 10-Sep-2022 16:15 by rmk")
                                                             (* ; "Edited  6-Sep-2022 23:35 by rmk")
                                                             (* ; "Edited  4-Sep-2022 20:57 by rmk")
                                                             (* ; "Edited  9-Aug-2022 22:37 by rmk")
                                                             (* ; "Edited  8-Aug-2022 16:17 by rmk")
                                                             (* ; "Edited  7-Aug-2022 00:08 by rmk")

    (* ;; "Gets the definition from the release")

    (CL:UNLESS FILE
        (SETQ FILE (CAR (WHEREIS FN 'FNS T))))
    (CL:UNLESS FILE (ERROR FN " not found"))
    (SETQ FILE (FINDFILE FILE T))
    (CL:UNLESS FILE (ERROR FN " not found"))
    (LET [FILEPKGFLG (FNR (PACK* FN '-R]
         (COPYDEF FN FNR 'FNS (PACKFILENAME 'HOST '{RMEDLEY} 'VERSION NIL 'BODY FILE))
         (EDITDEF.FNS FNR NIL '(:DONTWAIT])
)
(DEFINEQ

(TTEST
  [LAMBDA (FILE REGION OPENONLY FORMS)                       (* ; "Edited  4-May-2023 11:10 by rmk")
                                                             (* ; "Edited 20-Apr-2023 07:22 by rmk")
                                                             (* ; "Edited 10-Apr-2023 08:41 by rmk")
                                                             (* ; "Edited  8-Apr-2023 22:53 by rmk")
                                                             (* ; "Edited  6-Feb-2023 23:23 by rmk")

    (* ;; "FILE NIL gets the last file.")

    (* ;; "Region NIL defaults to last region, T always gets a new one.  If we are reusing the region, we also close the previous file and kill its process.")

    (* ;; "OPENONLY creates the text stream, doesn't create the window or process")

    (IF FILE
        THEN (CL:UNLESS (STRINGP FILE)
                 (SETQ FILE (OR (FINDFILE-WITH-EXTENSIONS FILE (CONS '{WMEDLEY}/library/tedit/tests/
                                                                     DIRECTORIES)
                                       '(TEDIT TXT NIL))
                                (ERROR "FILE NOT FOUND" FILE))))
             (SETQ LASTTESTFILE FILE)
      elseif (AND (BOUNDP 'LASTTESTFILE)
                  LASTTESTFILE)
        then (SETQ FILE (OR (STRINGP LASTTESTFILE)
                            (PACKFILENAME 'VERSION NIL 'BODY LASTTESTFILE)))
      else (ERROR "NO FILE SPECIFIED"))
    (CL:WHEN (AND REGION (LITATOM REGION))
        (SETQ REGION (EVAL REGION)))
    (LET (TEXTSTREAM TEXTOBJ WINDOW)
         (DECLARE (SPECVARS TEXTSTREAM TEXTOBJ))
         (CL:UNLESS REGION
             (CL:WHEN (AND (BOUNDP 'LASTTESTSTREAM)
                           (TEXTSTREAMP LASTTESTSTREAM))
                    (TEDIT.QUIT LASTTESTSTREAM)))
         (SETQ REGION (COPY REGION))
         (SETQ TEXTSTREAM (OPENTEXTSTREAM (CL:IF (STRINGP FILE)
                                              (OPENSTRINGSTREAM FILE)
                                              FILE)))
         (CL:UNLESS OPENONLY
             (SETQ WINDOW (CREATEW (if (EQ REGION T)
                                       then NIL
                                     elseif (REGIONP REGION)
                                     else (AND (BOUNDP 'LASTTESTREGION)
                                               (REGIONP LASTTESTREGION)))
                                 FILE))
             (SETQ LASTTESTREGION (WINDOWPROP WINDOW 'REGION))
             (TEDIT TEXTSTREAM WINDOW NIL '(LEAVETTY T))
             (SETQ LASTTESTSTREAM TEXTSTREAM))
         (SETQ TEXTOBJ (TEXTOBJ TEXTSTREAM))
         (CL:WHEN FORMS
             (if (NLISTP FORMS)
                 then (APPLY* FORMS)
               elseif (NLISTP (CAR (LISTP FORMS)))
                 then (EVAL FORMS)
               elseif (LISTP (CAR FORMS))
                 then (EVAL (CONS (FUNCTION PROGN)
                                  FORMS))))
         TEXTSTREAM])

(INSP
  [LAMBDA (DONTCLOSE TOBJ)                                   (* ; "Edited 20-Apr-2023 08:10 by rmk")
                                                             (* ; "Edited 19-Apr-2023 08:00 by rmk")
                                                             (* ; "Edited 13-Apr-2023 09:44 by rmk")
    (SETQ TOBJ (GTO TOBJ))
    (CL:UNLESS DONTCLOSE (CLOSEI))
    (SP TOBJ)
    (AND NIL (INSPECT (FETCH PCTB OF TOBJ)))
    (INSPECT (FETCH SEL OF TOBJ])
)

(RPAQ? LASTTTESTFILE )

(CL:WHEN (DIRECTORYNAMEP (MEDLEYDIR "../oldtedit/"))
    (PSEUDOHOST 'OT (MEDLEYDIR "../oldtedit/")))

(LOAD? (OR (INFILEP "{WMEDLEY}<tmp>fuller.database")
           (INFILEP "{MEDLEY}/loadups/fuller.database")
           (INFILEP "{MEDLEY}/tmp/fuller.database")
           "{WMEDLEY}<tmp>fuller.database"))

(RPAQQ RSMALL (859 829 462 81))

(RPAQQ RBIG (900 400 600 500))
(DECLARE%: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 

(ADDTOVAR NLAMA )

(ADDTOVAR NLAML DFR DFOV DFOT PFOT)

(ADDTOVAR LAMA )
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (1682 6334 (ITS 1692 . 2749) (GTO 2751 . 3475) (TRY 3477 . 4630) (PRINTSPEC 4632 . 4855)
 (TEDITCLOSEW 4857 . 5200) (PARALASTWITHOUTEOL 5202 . 5700) (FIXPARALAST 5702 . 6094) (SHOWHIST 6096
 . 6332)) (6335 17544 (MTEST 6345 . 6914) (TRYMENU 6916 . 7200) (MYTEDITMENU 7202 . 17135) (PTMENU 
17137 . 17542)) (17545 28245 (SP 17555 . 19680) (SPR 19682 . 20529) (SPL 20531 . 20772) (SCL 20774 . 
21011) (SPPRINT 21013 . 25827) (SPPRINT.OBJ 25829 . 26491) (SHOWPIECEBYTES 26493 . 27858) (
CHECKPLENGTHS 27860 . 28243)) (28246 31242 (NTHPIECE 28256 . 29203) (NPIECES 29205 . 29740) (
NTHPIECECHAR 29742 . 31240)) (31243 31701 (NTHCHARSLOT 31253 . 31699)) (31702 39765 (STL 31712 . 38508
) (ALLTL 38510 . 39763)) (39766 52816 (PLCHAIN 39776 . 40195) (PRINTLINE 40197 . 43110) (INSPECTLINES 
43112 . 45281) (SL 45283 . 49610) (CHECKLINES 49612 . 50455) (SELLINES 50457 . 51056) (COLLECTLINES 
51058 . 51310) (NTHLINE 51312 . 51797) (HEIGHT 51799 . 51978) (LINEBOTS 51980 . 52419) (PLINES 52421
 . 52814)) (52817 55533 (INSPECTSELS 52827 . 54991) (ISEL 54993 . 55161) (IHIST 55163 . 55349) (IPCTB 
55351 . 55531)) (55590 61348 (PFOT 55600 . 55999) (DFOT 56001 . 56806) (OTFILES 56808 . 57580) (DFOV 
57582 . 59957) (COMP 59959 . 60154) (DFR 60156 . 61346)) (61349 64938 (TTEST 61359 . 64419) (INSP 
64421 . 64936)))))
STOP
