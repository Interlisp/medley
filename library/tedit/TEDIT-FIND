(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 8-May-2023 09:48:30" {WMEDLEY}<library>tedit>TEDIT-FIND.;37 35033  

      :EDIT-BY rmk

      :CHANGES-TO (FNS TEDIT.SUBSTITUTE)

      :PREVIOUS-DATE " 7-May-2023 13:14:27" {WMEDLEY}<library>tedit>TEDIT-FIND.;35)


(PRETTYCOMPRINT TEDIT-FINDCOMS)

(RPAQQ TEDIT-FINDCOMS
       ((DECLARE%: EVAL@COMPILE DONTCOPY (CONSTANTS (\AlphaNumericFlag 256)
                                                (\AlphaFlag 512)
                                                (\OneCharPattern 1024)
                                                (\AnyStringPattern 1025)
                                                (\OneAlphaPattern 1026)
                                                (\AnyAlphaPattern 1027)
                                                (\OneNonAlphaPattern 1028)
                                                (\AnyNonAlphaPattern 1029)
                                                (\LeftBracketPattern 1030)
                                                (\RightBracketPattern 1031)
                                                (\SpecialPattern 1024)))
        [DECLARE%: DONTEVAL@LOAD DOCOPY (VARS (TEDIT.SEARCH.CODETABLE (\TEDIT.SEARCH.CODETABLE]
        (COMS (* Read-table Utilities)
              (FNS \TEDIT.SEARCH.CODETABLE)
              (GLOBALVARS TEDIT.SEARCH.CODETABLE))
        (FNS \TEDIT.BASICFIND TEDIT.FIND TEDIT.NEW.FIND TEDIT.NEXT \TEDIT.FIND.WC \TEDIT.FIND.WC1 
             \TEDIT.PACK.TARGETLIST \TEDIT.PARSE.SEARCHSTRING \TEDIT.SUBST.FN1 \TEDIT.SUBST.FN2 
             TEDIT.SUBSTITUTE)))
(DECLARE%: EVAL@COMPILE DONTCOPY 
(DECLARE%: EVAL@COMPILE 

(RPAQQ \AlphaNumericFlag 256)

(RPAQQ \AlphaFlag 512)

(RPAQQ \OneCharPattern 1024)

(RPAQQ \AnyStringPattern 1025)

(RPAQQ \OneAlphaPattern 1026)

(RPAQQ \AnyAlphaPattern 1027)

(RPAQQ \OneNonAlphaPattern 1028)

(RPAQQ \AnyNonAlphaPattern 1029)

(RPAQQ \LeftBracketPattern 1030)

(RPAQQ \RightBracketPattern 1031)

(RPAQQ \SpecialPattern 1024)


(CONSTANTS (\AlphaNumericFlag 256)
       (\AlphaFlag 512)
       (\OneCharPattern 1024)
       (\AnyStringPattern 1025)
       (\OneAlphaPattern 1026)
       (\AnyAlphaPattern 1027)
       (\OneNonAlphaPattern 1028)
       (\AnyNonAlphaPattern 1029)
       (\LeftBracketPattern 1030)
       (\RightBracketPattern 1031)
       (\SpecialPattern 1024))
)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(RPAQ TEDIT.SEARCH.CODETABLE (\TEDIT.SEARCH.CODETABLE))
)



(* Read-table Utilities)

(DEFINEQ

(\TEDIT.SEARCH.CODETABLE
  [LAMBDA NIL                                                (* jds "23-OCT-83 00:58")
                                                             (* Build the 16-bit-item "syntax class"
    table for searching)
    (PROG ((CODETBL (ARRAY 256 'SMALLP 0 0)))
          (for I from 0 to 255 do (SETA CODETBL I I))        (* Default is that a char maps to 
                                                             itself, and is punctuation.)
          (for CH
             in (CHARCODE (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k
                             l m n o p q r s t u v w x y z))
             do (SETA CODETBL CH (IPLUS \AlphaNumericFlag \AlphaFlag CH)))
          (for CH in (CHARCODE (0 1 2 3 4 5 6 7 8 9)) do (SETA CODETBL CH (IPLUS \AlphaNumericFlag CH
                                                                                 )))
          (for CH in (CHARCODE (%# * @ ! & ~ { })) as CODE
             in (LIST \OneCharPattern \AnyStringPattern \OneAlphaPattern \OneNonAlphaPattern 
                      \AnyAlphaPattern \AnyNonAlphaPattern \LeftBracketPattern \RightBracketPattern)
             do (SETA CODETBL CH CODE))
          (RETURN CODETBL])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.SEARCH.CODETABLE)
)
(DEFINEQ

(\TEDIT.BASICFIND
  [LAMBDA (TEXTOBJ STRING CH# CHLIM)                         (* ; "Edited 23-Apr-2023 12:42 by rmk")
                                                             (* ; "Edited  8-Apr-2023 23:04 by rmk")
                                                             (* ; "Edited 30-May-91 20:56 by jds")
    (CL:UNLESS CHLIM
        (SETQ CHLIM (TEXTLEN TEXTOBJ)))

    (* ;; "Search thru TEXTOBJ, starting where the caret is, for the string STRING, exact match only for now.  (Optionally, start the search at character ch#.)")

    (LET ((TSTREAM (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ))
          (NCHARS (NCHARS STRING))
          LASTANCHOR)

         (* ;; "Find the starting point for the search")

         (CL:UNLESS CH#
             (SETQ CH# (TEDIT.GETPOINT TEXTOBJ)))
         (CL:WHEN CH#
             (SETQ LASTANCHOR (ADD1 (IDIFFERENCE CHLIM NCHARS)))
             (CL:WHEN (AND CH# (ILEQ CH# LASTANCHOR))        (* ; "Punt if CH1 is past the limit")
                 (bind (CHAR1 _ (NTHCHARCODE STRING 1))
                       (ANCHOR _ (SUB1 CH#)) eachtime (\TEXTSETFILEPTR TSTREAM ANCHOR) 
                                                             (* ; "Match failed, bump the start")
                    while [SETQ ANCHOR (find A from (ADD1 ANCHOR) to LASTANCHOR
                                          suchthat (EQ CHAR1 (BIN TSTREAM]
                    when [OR (EQ NCHARS 1)
                             (for I from 2 to NCHARS always (EQ (NTHCHARCODE STRING I)
                                                                (BIN TSTREAM]
                    do (RETURN ANCHOR)
                       NIL)))])

(TEDIT.FIND
  [LAMBDA (TEXTOBJ TARGETSTRING START# END# WILDCARDS?)      (* ; "Edited 23-Apr-2023 12:44 by rmk")
                                                             (* ; "Edited  9-Sep-2022 00:02 by rmk")
                                                            (* ; "Edited  6-May-2018 17:34 by rmk:")
                                                             (* ; "Edited 30-May-91 20:56 by jds")

    (* ;; "If WILDCARDS?  is NIL then TEDIT.FIND is the old TEDIT.FIND.  Else, it returns a list of (SEL.START# SEL.END#) which is the start and end char positions of the selection")

    (LET* [(TEXTOBJ (TEXTOBJ TEXTOBJ))
           (TEDIT.WILDCARD.CHARACTERS '("#" "*"))
           (REAL-END# (OR END# (TEXTLEN TEXTOBJ]
          (AND TARGETSTRING (NOT (STRINGP TARGETSTRING))
               (SETQ TARGETSTRING (MKSTRING TARGETSTRING)))

          (* ;; "RMK:  FIND isn't undoable, FIND-AGAIN is armed on meta-g.  No point in hiding a previous actual edit by adding the find event (given that the history is not a list, just a single event (TEDITHISTORY)")

          (AND NIL (\TEDIT.HISTORYADD TEXTOBJ (create TEDITHISTORYEVENT
                                                     THACTION _ 'Find
                                                     THAUXINFO _ TARGETSTRING)))
          (COND
             [WILDCARDS?                                     (* ; 
                               "will return a list of start and end of selection or nil if not found")
                    (LET (TARGETLIST SEL RESULT RESULT1)
                         (COND
                            ((OR START# (AND (GETSEL (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                                                    SET)
                                             (LEQ (SETQ START# (TEDIT.GETPOINT NIL SEL))
                                                  REAL-END#)))
                                                             (* ; "START# better be >= to END#")
                             (COND
                                ((AND (for X in [SETQ TARGETLIST
                                                 (\TEDIT.PARSE.SEARCHSTRING
                                                  (for X in (CHCON TARGETSTRING)
                                                     collect (MKSTRING (CHARACTER X] collect X
                                         when (LITATOM X))
                                      (SETQ RESULT1 (\TEDIT.SUBST.FN1 TEXTOBJ TARGETLIST START# 
                                                           REAL-END#)))
                                                             (* ; 
                                                  "If there are atoms, they are tedit wildcard chars")
                                 (\TEDIT.FIND.WC TEXTOBJ TARGETLIST RESULT1 REAL-END#))
                                (T                           (* ; "no wildcards but bounded search")
                                   (COND
                                      ((SETQ RESULT (TEDIT.FIND TEXTOBJ (CAR TARGETLIST)
                                                           START# REAL-END# NIL))
                                       (LIST RESULT (SUB1 (IPLUS RESULT (NCHARS (CAR TARGETLIST]
             (T                                              (* ; 
                                  "will return just the number of the start char or nil if not found")
                (LET ((RESULT (\TEDIT.BASICFIND TEXTOBJ TARGETSTRING START# REAL-END#)))
                     (COND
                        ((NULL REAL-END#)
                         RESULT)
                        ((OR (NULL RESULT)
                             (GREATERP (IPLUS RESULT (SUB1 (NCHARS TARGETSTRING)))
                                    REAL-END#))
                         NIL)
                        (T RESULT])

(TEDIT.NEW.FIND
  [LAMBDA (TEXTOBJ TARGETSTRING START# END# WILDCARDS?)      (* ; "Edited 23-Feb-88 11:13 by jds")

    (* ;; "If WILDCARDS?  is NIL then TEDIT.NEW.FIND is the old TEDIT.FIND.  Else, it returns a list of (SEL.START# SEL.END#) which is the start and end char positions of the selection")

    (* ;; "(PROG ((TEXTSTREAM (fetch STREAMHINT of TEXTOBJ)) PATTERN FIRSTPAT PATTERNSTACK POSNSTACK FIRSTCHAR1 FIRSTCHAR2 FIRSTPATNORMAL PATTERNLEN FOUND PATTERNPOS TEXTPOS) (AND TARGETSTRING (NOT (STRINGP TARGETSTRING)) (SETQ TARGETSTRING (MKSTRING TARGETSTRING))) (SETQ PATTERN (\TEDIT.NEW.PARSE.SEARCHSTRING TARGETSTRING)) (OR PATTERN (RETURN)) (SETQ PATTERNLEN (FLENGTH PATTERN)) (\TEDIT.HISTORYADD TEXTOBJ (create TEDITHISTORYEVENT THACTION _ (QUOTE Find) THAUXINFO _ TARGETSTRING)) (COND ((ZEROP (LOGAND \SpecialPattern (SETQ FIRSTPAT (CAR PATTERN)))) (* The pattern starts with an easy first character) (SETQ FIRSTPATNORMAL T) (SETQ FIRSTCHAR1 (LOGAND \CHARMASK FIRSTPAT)) (COND ((ZEROP (LOGAND \AlphaFlag FIRSTPAT)) (* Not alphabetic) (SETQ FIRSTCHAR2 FIRSTCHAR1)) (T (* Is alphabetic) (SETQ FIRSTCHAR2 (LOGAND FIRSTCHAR1 223)))))) (bind (CH# _ START#) while (ILEQ CH# END#) first (\SETUPGETCH START# TEXTOBJ) do (COND (FIRSTPATNORMAL (* The pattern starts with an easy first character) (COND ((AND (NEQ (SETQ CH (\BIN TEXTSTREAM)) FIRSTCHAR1) (NEW CH FIRSTCHAR2)) (GO $$ITERATE))) (SETQ PATTERNPOS 1) (SETQ CH (\BIN TEXTSTREAM))) (T (SETQ PATTERNPOS 0))) (SETQ TEXTPOS (\TEXTMARK TEXTOBJ)) (COND ((IGEQ PATTERNPOS PATTERNLEN) (SETQ FOUND T) (RETURN)))))")

    (HELP])

(TEDIT.NEXT
  [LAMBDA (STREAM)                                           (* ; "Edited  3-May-2023 23:47 by rmk")
                                                             (* ; "Edited 18-Apr-2023 23:46 by rmk")
                                                             (* ; "Edited 30-May-91 20:57 by jds")
    (LET ((TEXTOBJ (TEXTOBJ STREAM))
          TARGET SEL OPTION FIELDSEL)
         (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
         (SETQ TARGET (TEDIT.FIND TEXTOBJ ">>*<<" NIL NIL T))(* ; 
                                                             "find the first >>delimited<< field")
         (SETQ FIELDSEL (MBUTTON.FIND.NEXT.FIELD TEXTOBJ (GETSEL SEL CH#)))
                                                             (* ; 
                                "find the first menu-type insertion field, usually delimited with {}")
         [SETQ OPTION (COND
                         [(AND TARGET FIELDSEL)              (* ; "take the first one")
                          (COND
                             ((IGREATERP (CAR TARGET)
                                     (GETSEL FIELDSEL CH#))  (* ; "use the {} selection")
                              'FIELD)
                             (T 'TARGET]
                         (TARGET 'TARGET)
                         (FIELDSEL 'FIELD)
                         (T 'NEITHER]
         (SELECTQ OPTION
             (TARGET                                         (* ; "Found another fill-in")
                     (\SHOWSEL SEL NIL)
                     (SETSEL SEL CH# (CAR TARGET))           (* ; 
                                                             "Set up SELECTION to be the found text")
                     (SETSEL SEL CHLIM (ADD1 (CADR TARGET)))
                     (SETSEL SEL DCH (IDIFFERENCE (ADD1 (CADR TARGET))
                                            (CAR TARGET)))
                     (SETSEL SEL POINT 'RIGHT)
                     (\TEDIT.SET.SEL.LOOKS SEL 'PENDINGDEL)  (* ; "Always selected normally")
                     (replace (TEXTOBJ BLUEPENDINGDELETE) of TEXTOBJ with T)
                                                             (* ; "And never pending a deletion.")
                     (\FIXSEL SEL TEXTOBJ)
                     (TEDIT.NORMALIZECARET TEXTOBJ)          (* ; "And get it into the window")
                     (\SHOWSEL SEL T))
             (FIELD                                          (* ; 
  "Replace the selection for this textobj with the scratch sel returned from MBUTTON.FIND.NEXT.FIELD")
                    (\SHOWSEL SEL NIL)
                    (SETSEL SEL CH# (GETSEL FIELDSEL CH#))   (* ; 
                                                             "Set SELECTION to be the found text")
                    (SETSEL SEL CHLIM (GETSEL FIELDSEL CHLIM))
                    (SETSEL SEL DCH (GETSEL FIELDSEL DCH))
                    (SETSEL SEL POINT 'LEFT)
                    (\TEDIT.SET.SEL.LOOKS SEL 'PENDINGDEL)
                    (replace (TEXTOBJ BLUEPENDINGDELETE) of TEXTOBJ with T)
                    (\FIXSEL SEL TEXTOBJ)
                    (TEDIT.NORMALIZECARET TEXTOBJ)           (* ; "And get it into the window")
                    (\SHOWSEL SEL T))
             (NEITHER (TEDIT.PROMPTPRINT TEXTOBJ "No more blanks to fill in." T)
                      (SETQ SEL NIL))
             (SHOULDNT "No legal value found in selectq in TEDIT.NEXT"))
         (CL:WHEN SEL                                        (* ; 
                    "There really IS a selection made here, so set up the charlooks for it properly.")
             (replace (TEXTOBJ CARETLOOKS) of TEXTOBJ with (\TEDIT.GET.INSERT.CHARLOOKS TEXTOBJ SEL)))
         ])

(\TEDIT.FIND.WC
  [LAMBDA (TEXTOBJ TARGETLIST START# END#)                   (* ; "Edited  9-Dec-88 09:56 by jds")
                                                             (* ; 
                "\TEDIT.FIND.WC returns the end char # of the TARGETLIST which may contain wildcards")
    (PROG (RESULT RESULT1)
          (RETURN (COND
                     ((SETQ RESULT (\TEDIT.FIND.WC1 TEXTOBJ TARGETLIST START# END#))

                      (* ;; "SUB1 because NEWFIND.WC2 takes that arg as the Lastchar of the selection so far and so will start on the next char after this")
                                                             (* ; "DONE!")
                      (LIST START# (IMAX START# RESULT)))
                     (T (AND (SETQ RESULT1 (\TEDIT.SUBST.FN1 TEXTOBJ TARGETLIST (ADD1 START#)
                                                  END#))
                             (\TEDIT.FIND.WC TEXTOBJ TARGETLIST RESULT1 END#])

(\TEDIT.FIND.WC1
  [LAMBDA (TEXTOBJ TARGETLIST TRIALEND# END#)                (* ; "Edited  9-Dec-88 09:52 by jds")
                                                             (* ; 
                                                  "TRIALEND# is where the next char string should go")
                                                             (* ; 
                                           "\TEDIT.FIND.WC1 should return the lastchar# of selection")
    (PROG (RESULT RESULT1)
          (RETURN (COND
                     ((NULL TARGETLIST)                      (* ; "DONE!")
                      (SUB1 TRIALEND#))
                     [(STRINGP (CAR TARGETLIST))
                      (COND
                         ((SETQ RESULT (TEDIT.FIND TEXTOBJ (CAR TARGETLIST)
                                              TRIALEND# END# NIL))
                                                             (* ; "NOT null")
                          (\TEDIT.FIND.WC1 TEXTOBJ (CDR TARGETLIST)
                                 (IPLUS RESULT (NCHARS (CAR TARGETLIST)))
                                 END#]
                     ((LITATOM (CAR TARGETLIST))
                      (COND
                         [(MEMBER (CAR TARGETLIST)
                                 '(%#))                      (* ; "fixed width wildcard")
                          (COND
                             ((OR (NULL (CDR TARGETLIST))
                                  (EQUAL (CAR (TEDIT.FIND TEXTOBJ (CONCATLIST (\TEDIT.PACK.TARGETLIST
                                                                               (CDR TARGETLIST)))
                                                     (ADD1 TRIALEND#)
                                                     END# T))
                                         (ADD1 TRIALEND#)))  (* ; 
                    "If the next start after a fixed char is the char after it, OK.  else return nil")
                              (\TEDIT.FIND.WC1 TEXTOBJ (CDR TARGETLIST)
                                     (ADD1 TRIALEND#)
                                     END#]
                         (T                                  (* ; "variable width wildcard")
                            (COND
                               ((CDR TARGETLIST)
                                (SETQ RESULT1 (TEDIT.FIND TEXTOBJ (CONCATLIST (\TEDIT.PACK.TARGETLIST
                                                                               (CDR TARGETLIST)))
                                                     TRIALEND# END# T))
                                (AND RESULT1 (CADR RESULT1)))
                               (T                            (* ; "last element of search")
                                  (SUB1 TRIALEND#])

(\TEDIT.PACK.TARGETLIST
  [LAMBDA (TARGETLIST)                                       (* ; "Edited 24-Sep-87 09:54 by jds")
    (COND
       ((NULL TARGETLIST)
        NIL)
       [(MEMBER (CAR TARGETLIST)
               '("#" "*"))
        (CONS (CONCAT (CAR TARGETLIST)
                     (CAR TARGETLIST))
              (\TEDIT.PACK.TARGETLIST (CDR TARGETLIST]
       [(STRINGP (CAR TARGETLIST))
        (CONS (CAR TARGETLIST)
              (\TEDIT.PACK.TARGETLIST (CDR TARGETLIST]
       (T                                                    (* ; "wildcard")
          (CONS (MKSTRING (CAR TARGETLIST))
                (\TEDIT.PACK.TARGETLIST (CDR TARGETLIST])

(\TEDIT.PARSE.SEARCHSTRING
  [LAMBDA (LST RESULT)                                       (* jds "31-Jan-84 13:26")
    (PROG [(TEDIT.WILDCARD.CHARACTERS '("#" "*"]
          (RETURN (COND
                     [(NULL LST)
                      (COND
                         (RESULT (LIST RESULT]
                     [(MEMBER (CAR LST)
                             TEDIT.WILDCARD.CHARACTERS)
                      (COND
                         [(NULL RESULT)
                          (CONS (MKATOM (CAR LST))
                                (\TEDIT.PARSE.SEARCHSTRING (CDR LST]
                         (T (APPEND (LIST RESULT (MKATOM (CAR LST)))
                                   (\TEDIT.PARSE.SEARCHSTRING (CDR LST]
                     [(AND (EQUAL (CAR LST)
                                  "'")
                           (LISTP (CDR LST))
                           (MEMBER (CADR LST)
                                  TEDIT.WILDCARD.CHARACTERS))(* quoting something a wildcard char)
                      (\TEDIT.PARSE.SEARCHSTRING (CDDR LST)
                             (COND
                                ((NULL RESULT)
                                 (MKSTRING (CADR LST)))
                                (T (CONCAT RESULT (MKSTRING (CADR LST]
                     (T (\TEDIT.PARSE.SEARCHSTRING (CDR LST)
                               (COND
                                  ((NULL RESULT)
                                   (CAR LST))
                                  (T (CONCAT RESULT (CAR LST])

(\TEDIT.SUBST.FN1
  [LAMBDA (TEXTOBJ TARGETLIST START# END#)                   (* ; "Edited  3-Sep-87 11:38 by jds")
                                                             (* ; 
                   "returns the char location that would match the beginning element of a targetlist")
    (PROG (RESULT)
          (SETQ RESULT (\TEDIT.SUBST.FN2 TEXTOBJ TARGETLIST START# END#))
          (RETURN (AND RESULT (IGEQ RESULT START#)
                       RESULT])

(\TEDIT.SUBST.FN2
  [LAMBDA (TEXTOBJ TARGETLIST TRIALSTART# END#)              (* ; "Edited  9-Dec-88 09:54 by jds")

    (* ;; 
   "will return the start char of a wildcarded selection.  returns NIL if selection is beyond bounds")

    (* ;; "TARGETLIST is (what)?")

    (LET (SUB-FIND-RESULT)
         (COND
            ((NULL TARGETLIST)
             TRIALSTART#)
            ((IGREATERP TRIALSTART# END#)
             NIL)
            [(LITATOM (CAR TARGETLIST))
             (COND
                ((EQ (CAR TARGETLIST)
                     '%#)                                    (* ; "fixed width wildcard")
                 (AND (SETQ SUB-FIND-RESULT (\TEDIT.SUBST.FN1 TEXTOBJ (CDR TARGETLIST)
                                                   (ADD1 TRIALSTART#)
                                                   END#))
                      (SUB1 SUB-FIND-RESULT)))
                (T                                           (* ; 
                                                            "variable width wildcard, so forget them")
                   (\TEDIT.SUBST.FN2 TEXTOBJ (CDR TARGETLIST)
                          TRIALSTART# END#]
            (T                                               (* ; "it's a string")
               (TEDIT.FIND TEXTOBJ (CAR TARGETLIST)
                      TRIALSTART# END# NIL])

(TEDIT.SUBSTITUTE
  [LAMBDA (TEXTSTREAM PATTERN REPLACEMENT CONFIRM?)          (* ; "Edited  8-May-2023 09:34 by rmk")
                                                             (* ; "Edited 30-Mar-94 16:04 by jds")

    (* ;; "Replace all instances of PATTERN with REPLACEMENT.  If CONFIRM?  is non-NIL, ask before each replacement.")

    (PROG ((TEXTOBJ (TEXTOBJ TEXTSTREAM))
           (NREPLACEMENTS 0)
           (YESLIST '("Y" "y" "yes" "YES" "T" "Yes"))
           SEARCHSTRING ABORTFLG ENDCHAR# STARTCHAR# RANGE CONFIRMFLG SEL EOLSEEN REPLACE-LEN 
           ACTIONSTRING)
          (CL:WHEN (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)
              (TEDIT.PROMPTPRINT TEXTOBJ "Text is read-only--aborted" T)
              (RETURN))
          (CL:UNLESS [SETQ SEARCHSTRING (OR PATTERN (TEDIT.GETINPUT TEXTOBJ "Search string:"
                                                           (TEXTPROP TEXTOBJ 
                                                                  'TEDIT.LAST.SUBSTITUTE.STRING)
                                                           (CHARCODE (EOL LF ESC]
                                                             (* ; 
                                                          "If the search pattern is empty, bail out.")
              (TEDIT.PROMPTPRINT TEXTOBJ "[Aborted]")
              (RETURN))
          (if (NULL REPLACEMENT)
              then [SETQ REPLACEMENT (TEDIT.GETINPUT TEXTOBJ "Replace string:" (TEXTPROP TEXTOBJ
                                                                                      
                                                                                      '
                                                                        TEDIT.LAST.REPLACEMENT.STRING
                                                                                      )
                                            (CHARCODE (EOL LF ESC]
            elseif (type? PIECERANGE REPLACEMENT)
            elseif (LISTP REPLACEMENT)
              then (HELP "LISTP REPLACEMENT"))

     (* ;; "Could be NIL or empty string, meaning just delete all occurrences.")

          (SETQ REPLACE-LEN (COND
                               ((STRINGP REPLACEMENT)
                                (SETQ EOLSEEN (STRPOS (CHARACTER (CHARCODE EOL))
                                                     REPLACEMENT))
                                (NCHARS REPLACEMENT))
                               ((type? PIECERANGE REPLACEMENT)
                                (fetch (PIECERANGE PCRLEN) of REPLACEMENT))
                               ((LISTP REPLACEMENT)          (* ; 
                                                "A list of pieces to be inserted as the replacement.")
                                (for PC in REPLACEMENT sum (PLEN PC)))
                               (T 0)))
          (SETQ ACTIONSTRING (CL:IF (ZEROP REPLACE-LEN)
                                 "delet"
                                 "substitut"))

     (* ;; "If a pattern is specd in the call, use the caller's confirm flag, otherwise ask for one.")

          (SETQ CONFIRMFLG (CL:IF PATTERN
                               CONFIRM?
                               (MEMBER (TEDIT.GETINPUT TEXTOBJ (CONCAT "Ask before each " 
                                                                      ACTIONSTRING "ion?")
                                              ""
                                              (CHARCODE (EOL SPACE ESCAPE LF TAB)))
                                      YESLIST)))
          (TEDIT.PROMPTPRINT TEXTOBJ (CONCAT (L-CASE ACTIONSTRING T)
                                            "ing...")
                 T)
          (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
          (\SHOWSEL SEL NIL)
          (TEDIT.RESET.EXTEND.PENDING.DELETE SEL)            (* ; "Turn off any blue pending delete")

     (* ;; "STARTCHAR# and ENDCHAR# bound each search. ENDCHAR# has to be reduced as STARTCHAR# increases, so the search stays within the selection.")

          (SETQ STARTCHAR# (GETSEL SEL CH#))
          [SETQ ENDCHAR# (IPLUS STARTCHAR# (SUB1 (GETSEL SEL DCH]
          (if CONFIRMFLG
              then 
                   (* ;; "In this case the selection moves along, ending up at the last hit.")

                   [bind PENDING.SEL CHOICE while (SETQ RANGE (TEDIT.FIND TEXTOBJ SEARCHSTRING 
                                                                     STARTCHAR# ENDCHAR# T))
                      do                                     (* ; 
                                                 "Show each substitution site and ask for permission")
                         (SETQ PENDING.SEL (TEDIT.SETSEL TEXTOBJ (CAR RANGE)
                                                  (IDIFFERENCE (CADR RANGE)
                                                         (SUB1 (CAR RANGE)))
                                                  'RIGHT T))
                         (\SHOWSEL PENDING.SEL NIL)
                         (TEDIT.NORMALIZECARET TEXTOBJ PENDING.SEL)
                         (SELECTQ (U-CASE (NTHCHAR (TEDIT.GETINPUT TEXTOBJ 
                                                          "OK to replace? ['q' quits]" "Yes"
                                                          (CHARCODE (EOL SPACE ESCAPE LF TAB)))
                                                 1))
                             (Q (RETURN))
                             (Y                              (* ; "Do this one")
                                (\TEDIT.DELETE PENDING.SEL TEXTOBJ (NOT (ZEROP REPLACE-LEN)))
                                                             (* ; 
                                                            "Delete the old, defer display to insert")
                                (CL:UNLESS (ZEROP REPLACE-LEN)
                                                             (* ; "Non-empty insertion")
                                    [COND
                                       ((type? PIECERANGE REPLACEMENT)
                                                             (* ; "A run of pieces")
                                        (\TEDIT.INSERT.PIECERANGE REPLACEMENT TEXTOBJ (CAR RANGE)
                                               'COPY)
                                        (\TEDIT.UPDATE.LINES TEXTOBJ (CAR RANGE)
                                               REPLACE-LEN)
                                        (\TEDIT.UPDATE.SEL SEL (CAR RANGE)
                                               REPLACE-LEN))
                                       (T (TEDIT.INSERT TEXTOBJ REPLACEMENT (CAR RANGE])
                                (add NREPLACEMENTS 1)
                                (SETQ STARTCHAR# (IPLUS (CAR RANGE)
                                                        REPLACE-LEN))
                                                             (* ; "Next start, compensate for end")
                                [add ENDCHAR# (IDIFFERENCE REPLACE-LEN (IDIFFERENCE
                                                                        (CADR RANGE)
                                                                        (SUB1 (CAR RANGE])
                             (PROGN 
                                    (* ;; 
   "Turn off rejected selection, search for next starting one character later. ENDCHAR# is still OK.")

                                    (TEDIT.SHOWSEL TEXTOBJ NIL PENDING.SEL)
                                    (SETQ STARTCHAR# (ADD1 (CAR RANGE]
            else 
                 (* ;; "No confirmation required.  Do the substitutions without showing intermediate work, no need to update the selection each time.")

                 (bind FIRSTHIT LASTHIT while (SETQ RANGE (TEDIT.FIND TEXTOBJ SEARCHSTRING STARTCHAR#
                                                                 ENDCHAR# T))
                    do (replace (TEXTOBJ CARETLOOKS) of TEXTOBJ with (PLOOKS (\CHTOPC (CAR RANGE)
                                                                                    TEXTOBJ)))
                       (CL:UNLESS FIRSTHIT                   (* ; 
                                                     "The first changed character, for line updating")
                           (SETQ FIRSTHIT (CAR RANGE)))
                       (SETQ LASTHIT (CADR RANGE))
                       (\DELETECH (CAR RANGE)
                              (ADD1 LASTHIT)
                              TEXTOBJ)                       (* ; 
                                                 "Delete the old without fixing or display the lines")
                       (CL:UNLESS (ZEROP REPLACE-LEN)        (* ; "Something to insert")
                           (COND
                              ((type? PIECERANGE REPLACEMENT)(* ; "Insert a run of pieces")
                               (\TEDIT.INSERT.PIECERANGE REPLACEMENT TEXTOBJ (CAR RANGE)
                                      'COPY))
                              [EOLSEEN (for ACHAR instring REPLACEMENT as NCH#
                                          from (CAR RANGE) by 1
                                          do (SELCHARQ ACHAR
                                                  (EOL (\INSERTEOL ACHAR NCH# TEXTOBJ))
                                                  (\INSERTCH ACHAR NCH# TEXTOBJ]
                              (T (\INSERTCH REPLACEMENT (CAR RANGE)
                                        TEXTOBJ))))
                       (add NREPLACEMENTS 1)
                       (SETQ STARTCHAR# (IPLUS (CAR RANGE)
                                               REPLACE-LEN))
                       [add ENDCHAR# (IDIFFERENCE REPLACE-LEN (IDIFFERENCE (CADR RANGE)
                                                                     (SUB1 (CAR RANGE]
                    finally (CL:WHEN FIRSTHIT

                                (* ;; 
         "At least one replacement and we were not confirming.  Update the lines that have changed..")

                                (\TEDIT.UPDATE.LINES TEXTOBJ FIRSTHIT (IDIFFERENCE (IPLUS LASTHIT 
                                                                                          REPLACE-LEN
                                                                                          )
                                                                             FIRSTHIT))

                                (* ;; "We want the new selection to begin at the beginning of the original selection, somehwere before the first hit.  But the length has to aim for where the original selection ended, given that the text grew or shrank with each hit.")

                                [\TEDIT.UPDATE.SEL SEL (GETSEL SEL CH#)
                                       (IPLUS (GETSEL SEL DCH)
                                              (ITIMES NREPLACEMENTS (IDIFFERENCE REPLACE-LEN
                                                                           (NCHARS SEARCHSTRING])
                          (\SHOWSEL SEL T)))

     (* ;; "Save the search & replacement strings to offer for next time:")

          (TEXTPROP TEXTOBJ 'TEDIT.LAST.SUBSTITUTE.STRING SEARCHSTRING)
          (TEXTPROP TEXTOBJ 'TEDIT.LAST.REPLACEMENT.STRING REPLACEMENT)
          (TEDIT.PROMPTPRINT TEXTOBJ (SELECTQ NREPLACEMENTS
                                         (0 (CONCAT " No " ACTIONSTRING "ions made"))
                                         (1 (CONCAT " 1 " ACTIONSTRING "ion made"))
                                         (CONCAT " " (MKSTRING NREPLACEMENTS)
                                                " " ACTIONSTRING "ions made"))
                 T)
          (RETURN NREPLACEMENTS])
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (2567 3900 (\TEDIT.SEARCH.CODETABLE 2577 . 3898)) (3975 35010 (\TEDIT.BASICFIND 3985 . 
5744) (TEDIT.FIND 5746 . 9705) (TEDIT.NEW.FIND 9707 . 11309) (TEDIT.NEXT 11311 . 15150) (
\TEDIT.FIND.WC 15152 . 16133) (\TEDIT.FIND.WC1 16135 . 18952) (\TEDIT.PACK.TARGETLIST 18954 . 19647) (
\TEDIT.PARSE.SEARCHSTRING 19649 . 21194) (\TEDIT.SUBST.FN1 21196 . 21682) (\TEDIT.SUBST.FN2 21684 . 
23068) (TEDIT.SUBSTITUTE 23070 . 35008)))))
STOP
