(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "19-Mar-2023 12:27:08" {WMEDLEY}<library>tedit>TEDIT-HISTORY.;24 36527  

      :CHANGES-TO (FNS TEDIT.UNDO.MOVE TEDIT.REDO.REPLACE)

      :PREVIOUS-DATE "22-Oct-2022 16:02:10" {WMEDLEY}<library>tedit>TEDIT-HISTORY.;23)


(PRETTYCOMPRINT TEDIT-HISTORYCOMS)

(RPAQQ TEDIT-HISTORYCOMS
       ((DECLARE%: EVAL@COMPILE DONTCOPY (EXPORT (RECORDS TEDITHISTORYEVENT)))
        (GLOBALVARS TEDIT.HISTORY.TYPELST TEDIT.HISTORYLST)
        (INITVARS (TEDIT.HISTORY.TYPELST NIL)
               (TEDIT.HISTORYLST NIL))
        (COMS 
              (* ;; "History-list maintenance functions")

              (FNS \TEDIT.HISTORYADD \TEDIT.CUMULATE.EVENTS))
        (COMS 
              (* ;; "Specialized UNDO & REDO functions.")

              (FNS TEDIT.UNDO TEDIT.UNDO.INSERTION TEDIT.UNDO.DELETION TEDIT.REDO 
                   TEDIT.REDO.INSERTION TEDIT.UNDO.MOVE TEDIT.UNDO.REPLACE TEDIT.REDO.REPLACE 
                   TEDIT.REDO.MOVE))))
(DECLARE%: EVAL@COMPILE DONTCOPY 
(* "FOLLOWING DEFINITIONS EXPORTED")(DECLARE%: EVAL@COMPILE

(RECORD TEDITHISTORYEVENT (
                           (* ;; "Describes one event on the TEdit edit history list.")

                           THACTION                          (* ; 
                                                           "A LITATOM, specifying what the event was")
                           THPOINT                           (* ; 
                                                            "Was the selection to the left or right?")
                           THLEN                             (* ; "The # of chars involved")
                           THCH#                             (* ; "The starting ch#")
                           THFIRSTPIECE                      (* ; "First piece involved")
                           THOLDINFO                         (* ; "Old info, for undo")
                           THAUXINFO                         (* ; 
                                                 "Auxiliary info about the event, primarily for redo")
                           THTEXTOBJ

                           (* ;; "Place to remember a second textobj, for those like MOVE who need to remember both a source and a destination.")

                           )
                          THPOINT _ 'LEFT)
)

(* "END EXPORTED DEFINITIONS")

)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS TEDIT.HISTORY.TYPELST TEDIT.HISTORYLST)
)

(RPAQ? TEDIT.HISTORY.TYPELST NIL)

(RPAQ? TEDIT.HISTORYLST NIL)



(* ;; "History-list maintenance functions")

(DEFINEQ

(\TEDIT.HISTORYADD
  [LAMBDA (TEXTOBJ EVENT)                                    (* ; "Edited  3-Sep-87 10:36 by jds")

    (* ;; "Add a new event to the history list.  For now, this just re-sets the whole list to be the one event...")

    (* ;; "This function also takes care of cumulating cumulative events, like successive deletions.")

    (LET* ((OLDEVENT (fetch (TEXTOBJ TXTHISTORY) of TEXTOBJ))
           (ETYPE (fetch (TEDITHISTORYEVENT THACTION) of EVENT))
           (OETYPE (fetch (TEDITHISTORYEVENT THACTION) of OLDEVENT))
           (REALEVENT EVENT))
          [COND
             ((AND OLDEVENT (EQ OETYPE ETYPE)
                   (EQ ETYPE 'Delete))                       (* ; 
                                        "Repeated successive deletions.  See if we can combine them.")
              (LET* [(OSTART (fetch (TEDITHISTORYEVENT THCH#) of OLDEVENT))
                     (NSTART (fetch (TEDITHISTORYEVENT THCH#) of EVENT))
                     (OLDEND (+ OSTART (fetch (TEDITHISTORYEVENT THLEN) of OLDEVENT)))
                     (NEWEND (+ NSTART (fetch (TEDITHISTORYEVENT THLEN) of EVENT]
                    (COND
                       ((IEQP OLDEND NSTART)                 (* ; 
                              "The old deletion was just in front of the current one; cumulate them.")
                        (SETQ REALEVENT (\TEDIT.CUMULATE.EVENTS OLDEVENT EVENT T)))
                       ((IEQP NEWEND OSTART)                 (* ; 
                                  "The new deletion was just in front of the old one; cumulate them.")
                        (SETQ REALEVENT (\TEDIT.CUMULATE.EVENTS EVENT OLDEVENT T]
          (replace (TEXTOBJ TXTHISTORY) of TEXTOBJ with REALEVENT])

(\TEDIT.CUMULATE.EVENTS
  [LAMBDA (EVENT1 EVENT2 PIECES-TO-SAVE?)                    (* ; "Edited  3-Sep-87 10:42 by jds")

    (* ;; "Accumulate history events that should really be combined into a single event.")

    (* ;; "For now, this assumes they're events of the same type.  Actually, this should be able to cumulate a delete/insert pair into a replacement, etc.")

    (LET* [(OLDLEN (fetch (TEDITHISTORYEVENT THLEN) of EVENT1))
           (NEWPC1 (fetch (TEDITHISTORYEVENT THFIRSTPIECE) of EVENT2))
           (REALEVENT (create TEDITHISTORYEVENT using EVENT1 THLEN _ (+ OLDLEN (fetch (
                                                                                    TEDITHISTORYEVENT
                                                                                       THLEN)
                                                                                  of EVENT2]
          (bind (PC _ (fetch (TEDITHISTORYEVENT THFIRSTPIECE) of EVENT1))
                (CHCOUNT _ 0) while (< (SETQ CHCOUNT (+ CHCOUNT (fetch (PIECE PLEN) of PC)))
                                       OLDLEN) do (SETQ PC (fetch (PIECE NEXTPIECE) of PC))
             finally (replace (PIECE NEXTPIECE) of PC with NEWPC1)
                   (replace (PIECE PREVPIECE) of NEWPC1 with PC)
                   (RETURN))
          REALEVENT])
)



(* ;; "Specialized UNDO & REDO functions.")

(DEFINEQ

(TEDIT.UNDO
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited  7-Sep-2022 18:45 by rmk")
                                                             (* ; "Edited  5-Sep-2022 15:30 by rmk")
                                                            (* ; "Edited 12-Jun-90 18:41 by mitani")

    (* ;; "Undo the last thing this guy did.")

    (CL:UNLESS (FETCH (TEXTOBJ TXTREADONLY) OF TEXTOBJ)

        (* ;; "Only undo things if the document is allowed to change.")

        (PROG ((SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
               EVENT CH# LEN FIRSTPIECE)
              (CL:UNLESS (SETQ EVENT (fetch (TEXTOBJ TXTHISTORY) of TEXTOBJ))
                  (TEDIT.PROMPTPRINT TEXTOBJ "Nothing to UNDO." T)
                  (RETURN))

         (* ;; "There really is something to UNDO.  Decide what, & fix it.")

              (SETQ LEN (fetch THLEN of EVENT))              (* ; 
                                               "Length of the text that was inserted/deleted/changed")
              (SETQ CH# (fetch THCH# of EVENT))              (* ; "Starting CH# of the change")
              (SETQ FIRSTPIECE (fetch THFIRSTPIECE of EVENT))(* ; 
                                                             "First piece affected by the change")
              (RESETLST
                  (RESETSAVE (CURSOR WAITINGCURSOR))
                  (\SHOWSEL SEL NIL NIL)
                  [SELECTQ (fetch THACTION of EVENT)
                      ((Insert Copy Include)                 (* ; "It was an insertion")
                           (TEDIT.UNDO.INSERTION TEXTOBJ EVENT LEN CH#))
                      (Delete                                (* ; "It was a deletion")
                              (TEDIT.UNDO.DELETION TEXTOBJ EVENT LEN CH# FIRSTPIECE))
                      (Looks                                 (* ; "It was a character-looks change")
                             (TEDIT.UNDO.LOOKS TEXTOBJ EVENT LEN CH#))
                      (ParaLooks                             (* ; "It was a PARA looks change")
                                 (TEDIT.UNDO.PARALOOKS TEXTOBJ EVENT LEN CH# FIRSTPIECE))
                      (Move (TEDIT.UNDO.MOVE TEXTOBJ EVENT LEN CH# FIRSTPIECE)
                                                             (* ; "He moved some text")
                            )
                      ((Replace LowerCase UpperCase) 

                                                 (* ;; "He replaced one piece of text with another ; Lower-casing and upper-casing have the same undo event.")

                           (TEDIT.UNDO.REPLACE TEXTOBJ EVENT LEN CH# FIRSTPIECE))
                      (Get                                   (* ; "He did a GET -- not undoable.")
                           (TEDIT.PROMPTPRINT TEXTOBJ "You can't UNDO a GET." T))
                      (Put                                   (* ; "He did a PUT -- not undoable.")
                           (TEDIT.PROMPTPRINT TEXTOBJ "You can't UNDO a Put." T))
                      (COND
                         ((AND (SETQ UNDOFN (ASSOC (fetch THACTION of EVENT)
                                                   TEDIT.HISTORY.TYPELST))
                               (SETQ UNDOFN (CADDR UNDOFN))) (* ; 
                                      "TEDIT.HISTORY.TYPELST is an ALST of form (type redofn undofn)")
                          (APPLY* UNDOFN TEXTOBJ EVENT LEN CH# FIRSTPIECE))
                         (T (TEDIT.PROMPTPRINT TEXTOBJ (CONCAT "UNDO not implemented for "
                                                              (fetch THACTION of EVENT))
                                   T]
                  (\SHOWSEL SEL NIL T))))])

(TEDIT.UNDO.INSERTION
  [LAMBDA (TEXTOBJ EVENT LEN CH#)                            (* ; "Edited 22-Oct-2022 16:01 by rmk")
                                                             (* ; "Edited  7-Sep-2022 19:01 by rmk")
                                                             (* ; "Edited 21-Apr-93 01:33 by jds")

    (* ;; "UNDO a prior Insert, Copy, or Include.")

    (\DELETECH CH# (IPLUS CH# LEN)
           TEXTOBJ)
    (\FIXDLINES (fetch (TEXTOBJ SEL) of TEXTOBJ)
           CH#
           (IPLUS CH# LEN)
           TEXTOBJ)                                          (* ; 
                                                             "Fix the line descriptors & selection")
    (TEDIT.UPDATE.SCREEN TEXTOBJ)                            (* ; 
                                                           "Fix up the display for all this foofaraw")
    (replace (SELECTION POINT) of (fetch (TEXTOBJ SEL) of TEXTOBJ) with 'LEFT)
    (\FIXSEL (fetch (TEXTOBJ SEL) of TEXTOBJ)
           TEXTOBJ)                                          (* ; "Really fix the selection")

    (* ;; "Make the UNDO be UNDOable, by changing the event to a deletion.")

    (replace THACTION of EVENT with 'Delete])

(TEDIT.UNDO.DELETION
  [LAMBDA (TEXTOBJ EVENT LEN CH# FIRSTPIECE)                 (* ; "Edited  5-Oct-2022 23:37 by rmk")
                                                             (* ; "Edited  7-Sep-2022 18:50 by rmk")
                                                             (* ; "Edited 22-Aug-2022 13:10 by rmk")
                                                             (* ; "Edited  6-Aug-2022 09:19 by rmk")
                                                             (* ; "Edited 21-Apr-93 12:01 by jds")

    (* ;; "UNDO a prior Deletion of text.")

    (CL:UNLESS (fetch (TEXTOBJ TXTREADONLY) of TEXTOBJ)
        (PROG ((NPC (NEXTPIECE FIRSTPIECE))
               (SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
               (OTEXTLEN (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ))
               NEWPIECE INSPC OBJECT INSERTFN START-OF-PIECE)
              (SETQ INSPC (\CHTOPC CH# TEXTOBJ T))
              (replace (TEXTOBJ HINTPC) of TEXTOBJ with NIL) (* ; 
    "Keep future people from stepping on the current cache piece, which is probably no longer valid.")
              (CL:WHEN (IGREATERP CH# START-OF-PIECE)
                  (SETQ INSPC (\SPLITPIECE INSPC (- CH# START-OF-PIECE)
                                     TEXTOBJ)))
              (SETQ NEWPIECE (create PIECE using FIRSTPIECE))
              (replace THFIRSTPIECE of EVENT with NEWPIECE)
              (bind (TL _ 0) while (ILESSP TL LEN) do (\INSERTPIECE NEWPIECE INSPC TEXTOBJ) 
                                                             (* ; "Insert the piece back in")
                                                      (CL:WHEN [AND (EQ OBJECT.PTYPE (PTYPE NEWPIECE)
                                                                        )
                                                                    (SETQ OBJECT (PCONTENTS NEWPIECE)
                                                                     )
                                                                    (SETQ INSERTFN
                                                                     (IMAGEOBJPROP OBJECT
                                                                            'WHENINSERTEDFN]
                                                             (* ; 
                                        "If this is an imageobject, and it has an insertfn, call it.")
                                                          (APPLY* INSERTFN OBJECT (\TEDIT.PRIMARYW
                                                                                   TEXTOBJ)
                                                                 NIL
                                                                 (TEXTSTREAM TEXTOBJ)))
                                                      (add TL (PLEN FIRSTPIECE)) 
                                                             (* ; 
                                                           "Keep track of how much we've re-inserted")
                                                      (SETQ FIRSTPIECE NPC) 
                                                             (* ; "Move to the next piece to insert")
                                                      (AND NPC (SETQ NPC (NEXTPIECE NPC)))
                                                      (SETQ NEWPIECE (create PIECE using FIRSTPIECE))
                    )                                        (* ; 
                                         "Done here because \INSERTPIECE creams the NEXTPIECE field.")
              (\FIXILINES TEXTOBJ SEL CH# LEN OTEXTLEN)      (* ; 
                                                             "Fix the line descriptors & selection")
              (TEDIT.UPDATE.SCREEN TEXTOBJ)                  (* ; 
                                                           "Fix up the display for all this foofaraw")
              (replace (SELECTION CH#) of SEL with CH#)      (* ; 
                                                   "Make the selection point at the re-inserted text")
              (replace (SELECTION CHLIM) of SEL with (IPLUS CH# LEN))
              (replace (SELECTION DCH) of SEL with LEN)
              (replace (SELECTION POINT) of SEL with (fetch THPOINT of EVENT))
              (\TEDIT.SET.SEL.LOOKS SEL 'NORMAL)
              (\FIXSEL SEL TEXTOBJ)                          (* ; "Really fix the selection")
              (replace THACTION of EVENT with 'Insert)       (* ; 
                                   "Make the UNDO be UNDOable, by changing the event to a insertion.")
          ))])

(TEDIT.REDO
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited  9-Sep-2022 17:00 by rmk")
                                                             (* ; "Edited 30-May-91 21:27 by jds")

    (* ;; "REDO the last thing this guy did.")

    (PROG ((SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
           EVENT CH)
          (COND
             ((FETCH (TEXTOBJ TXTREADONLY) OF TEXTOBJ)

              (* ;; "The document is read-only; don't make any changes.")

              NIL)
             ((SETQ EVENT (fetch (TEXTOBJ TXTHISTORY) of TEXTOBJ))
                                                             (* ; 
                                            "There really is something to REDO Decide what, & do it.")
              (RESETLST
                  (RESETSAVE (CURSOR WAITINGCURSOR))
                  (\SHOWSEL SEL NIL NIL)
                  (SELECTQ (fetch THACTION of EVENT)
                      ((Insert Copy Include)                 (* ; "It was an insertion")
                           (TEDIT.REDO.INSERTION TEXTOBJ EVENT
                                  (IMAX 1 (SELECTQ (fetch (SELECTION POINT) of SEL)
                                              (LEFT (fetch (SELECTION CH#) of SEL))
                                              (RIGHT (fetch (SELECTION CHLIM) of SEL))
                                              NIL))))
                      (Delete                                (* ; "It was a deletion")
                              (\TEDIT.DELETE SEL TEXTOBJ))
                      (Replace                               (* ; 
                                                          "It was a replacement (a del/insert combo)")
                               (TEDIT.REDO.REPLACE TEXTOBJ EVENT))
                      (LowerCase                             (* ; "He lower-cased something")
                                 (\TEDIT.LCASE.SEL TEXTOBJ TEXTOBJ SEL))
                      (UpperCase                             (* ; "He upper-cased something")
                                 (\TEDIT.LCASE.SEL TEXTOBJ TEXTOBJ SEL))
                      (Looks                                 (* ; "It was a looks change")
                             (TEDIT.REDO.LOOKS TEXTOBJ EVENT (IMAX 1
                                                                   (SELECTQ (fetch (SELECTION POINT)
                                                                               of SEL)
                                                                       (LEFT (fetch (SELECTION CH#)
                                                                                of SEL))
                                                                       (RIGHT (fetch (SELECTION
                                                                                      CHLIM)
                                                                                 of SEL))
                                                                       NIL))))
                      (ParaLooks                             (* ; "It was a Paragraph looks change")
                                 (TEDIT.REDO.PARALOOKS TEXTOBJ EVENT
                                        (IMAX 1 (SELECTQ (fetch (SELECTION POINT) of SEL)
                                                    (LEFT (fetch (SELECTION CH#) of SEL))
                                                    (RIGHT (fetch (SELECTION CHLIM) of SEL))
                                                    NIL))))
                      (Find                                  (* ; "EXACT-MATCH SEARCH COMMAND")
                            (RESETLST
                                (RESETSAVE (CURSOR WAITINGCURSOR))
                                (TEDIT.PROMPTPRINT TEXTOBJ "Searching..." T)
                                (SETQ SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                                (\SHOWSEL SEL NIL NIL)
                                (SETQ CH (TEDIT.FIND TEXTOBJ (fetch THAUXINFO of EVENT)))
                                (COND
                                   (CH (TEDIT.PROMPTPRINT TEXTOBJ "done.")
                                       (replace (SELECTION CH#) of SEL with CH)
                                       [replace (SELECTION CHLIM) of SEL
                                          with (IPLUS CH (NCHARS (fetch THAUXINFO of EVENT]
                                       (replace (SELECTION DCH) of SEL
                                          with (NCHARS (fetch THAUXINFO of EVENT)))
                                       (replace (SELECTION POINT) of SEL with 'RIGHT)
                                       (\FIXSEL SEL TEXTOBJ)
                                       (TEDIT.NORMALIZECARET TEXTOBJ)
                                       (\SHOWSEL SEL NIL T))
                                   (T (TEDIT.PROMPTPRINT TEXTOBJ "[Not found]"))))
                            (replace (TEXTOBJ HINTPC) of TEXTOBJ with NIL)
                                                             (* ; "Drop the cached piece.  WHY??")
                            )
                      ((Move ReplaceMove)                    (* ; "He moved some text")
                           (TEDIT.REDO.MOVE TEXTOBJ EVENT (fetch THLEN of EVENT)
                                  (IMAX 1 (SELECTQ (fetch (SELECTION POINT) of SEL)
                                              (LEFT (fetch (SELECTION CH#) of SEL))
                                              (RIGHT (fetch (SELECTION CHLIM) of SEL))
                                              NIL))
                                  (fetch THFIRSTPIECE of EVENT)))
                      (Get                                   (* ; "He did a GET -- not undoable.")
                           (TEDIT.PROMPTPRINT TEXTOBJ "You can't REDO a GET." T))
                      (Put                                   (* ; "He did a PUT -- not undoable.")
                           (TEDIT.PROMPTPRINT TEXTOBJ "You can't REDO a PUT." T))
                      (TEDIT.PROMPTPRINT TEXTOBJ (CONCAT "REDO of the action " (fetch THACTION
                                                                                  of EVENT)
                                                        " isn't implemented.")
                             T))
                  (\SHOWSEL SEL NIL T)))
             (T (TEDIT.PROMPTPRINT TEXTOBJ "Nothing to REDO." T])

(TEDIT.REDO.INSERTION
  [LAMBDA (TEXTOBJ EVENT CH#)                                (* ; "Edited  6-Oct-2022 10:15 by rmk")
                                                             (* ; "Edited  9-Sep-2022 17:00 by rmk")
                                                             (* ; "Edited  8-Sep-2022 10:53 by rmk")
                                                             (* ; "Edited 22-Aug-2022 12:55 by rmk")
                                                             (* ; "Edited  6-Aug-2022 10:27 by rmk")
                                                             (* ; "Edited 21-Apr-93 01:06 by jds")
                                                             (* ; 
                                                          "REDO a prior Insert/Copy/Include of text.")
    (BTVALIDATE 'TEDIT.REDO.INSERTION 'START TEXTOBJ)
    (PROG (INSPC INSPC# NPC (SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
                 (LEN (fetch THLEN of EVENT))
                 (FIRSTPIECE (create PIECE using (fetch THFIRSTPIECE of EVENT)
                                                 PNEW _ T))
                 (OTEXTLEN (fetch (TEXTOBJ TEXTLEN) of TEXTOBJ))
                 OBJ COPYFN ORIGFIRSTPC START-OF-PIECE)
          (SETQ ORIGFIRSTPC FIRSTPIECE)
          (replace THFIRSTPIECE of EVENT with FIRSTPIECE)    (* ; 
                                           "So we can UNDO this, and remove the right set of pieces.")
          (replace (TEXTOBJ HINTPC) of TEXTOBJ with NIL)     (* ; 
                                                   "Force any further insertions to make new pieces.")
          (SETQ NPC (NEXTPIECE FIRSTPIECE))
          (SETQ INSPC (\CHTOPC CH# TEXTOBJ T))
          [SETQ INSPC (COND
                         ((IEQP CH# START-OF-PIECE)          (* ; 
                                                      "We're inserting just before an existing piece")
                          INSPC)
                         (T                                  (* ; 
                                       "We must split this piece, and insert before the second part.")
                            (\SPLITPIECE INSPC (- CH# START-OF-PIECE)
                                   TEXTOBJ]
          [bind (TL _ 0) while (ILESSP TL LEN)
             do 
                (* ;; "Loop thru the pieces of the prior insertion, inserting copies of enough of them to cover the length of the insertion.")

                (CL:WHEN (EQ OBJECT.PTYPE (PTYPE FIRSTPIECE))(* ; "This piece describes an object")
                    (SETQ OBJ (PCONTENTS FIRSTPIECE))
                    [COND
                       [(SETQ COPYFN (IMAGEOBJPROP OBJ 'COPYFN))
                        (SETQ OBJ (APPLY* COPYFN OBJ (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ)
                                         (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ)))
                        (COND
                           ((EQ OBJ 'DON'T)
                            (TEDIT.PROMPTPRINT TEXTOBJ "COPY of this object not allowed." T)
                            (RETFROM 'TEDIT.COPY))
                           (T (replace (PIECE PCONTENTS) of FIRSTPIECE with OBJ]
                       (OBJ (replace (PIECE PCONTENTS) of FIRSTPIECE with (COPY OBJ]
                    (CL:WHEN (SETQ COPYFN (IMAGEOBJPROP OBJ 'WHENCOPIEDFN))
                                                             (* ; 
                                                         "If there's an eventfn for copying, use it.")
                        (APPLY* COPYFN OBJ (WINDOWPROP (CAR (fetch (TEXTOBJ \WINDOW) of TEXTOBJ))
                                                  'DSP)
                               (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ)
                               (fetch (TEXTOBJ STREAMHINT) of TEXTOBJ))))
                (\INSERTPIECE FIRSTPIECE INSPC TEXTOBJ)      (* ; "Insert the piece back in")
                (add TL (PLEN FIRSTPIECE))                   (* ; 
                                                           "Keep track of how much we've re-inserted")
                (SETQ FIRSTPIECE (create PIECE using NPC PNEW _ T))
                (CL:WHEN NPC                                 (* ; 
                                         "Done here because \INSERTPIECE creams the NEXTPIECE field.")
                    (SETQ NPC (NEXTPIECE NPC)))]
          (\TEDIT.DIFFUSE.PARALOOKS (PREVPIECE ORIGFIRSTPC)
                 INSPC)                                      (* ; 
                                              "propagate paragraph formatting into the new insertion")
          (\FIXILINES TEXTOBJ SEL CH# LEN OTEXTLEN)          (* ; 
                                                             "Fix the line descriptors & selection")
          (TEDIT.UPDATE.SCREEN TEXTOBJ)                      (* ; 
                                                           "Fix up the display for all this foofaraw")
          (replace (SELECTION CH#) of SEL with CH#)          (* ; 
                                                   "Make the selection point at the re-inserted text")
          (replace (SELECTION CHLIM) of SEL with (IPLUS CH# LEN))
          (replace (SELECTION DCH) of SEL with LEN)
          (\TEDIT.SET.SEL.LOOKS SEL 'NORMAL)
          (\FIXSEL SEL TEXTOBJ)                              (* ; "Really fix the selection")

     (* ;; "Make the UNDO be UNDOable, by changing the event to a insertion.")

          (BTVALIDATE 'TEDIT.REDO.INSERTION 'END TEXTOBJ)
          (replace THACTION of EVENT with 'Insert])

(TEDIT.UNDO.MOVE
  [LAMBDA (TEXTOBJ EVENT LEN CH# FIRSTPIECE)                 (* ; "Edited 19-Mar-2023 12:24 by rmk")
                                                             (* ; "Edited 22-Oct-2022 14:01 by rmk")
                                                             (* ; "Edited  6-Oct-2022 10:26 by rmk")
                                                             (* ; "Edited 30-May-91 21:27 by jds")
                                                             (* ; "UNDO a MOVE command")
    (PROG ((TOOBJ (fetch THAUXINFO of EVENT))
           (FROMOBJ (fetch THTEXTOBJ of EVENT))
           (SOURCECH# (fetch THOLDINFO of EVENT))
           (CH# (fetch THCH# of EVENT))
           TOSEL TOTEXTLEN)
          (\SHOWSEL (fetch (TEXTOBJ SEL) of TOOBJ)
                 NIL NIL)                                    (* ; 
                                     "Turn off the selections in the old source and target documents")
          (\SHOWSEL (fetch (TEXTOBJ SEL) of FROMOBJ)
                 NIL NIL)
          (\DELETECH CH# (IPLUS CH# LEN)
                 FROMOBJ)                                    (* ; 
                                    "Delete the characters we moved, from the place we moved them to")
          (\FIXDLINES (fetch (TEXTOBJ SEL) of TOOBJ)
                 CH#
                 (IPLUS CH# LEN)
                 FROMOBJ)
          (replace (SELECTION CH#) of (fetch (TEXTOBJ SEL) of FROMOBJ)
             with (replace (SELECTION CHLIM) of (fetch (TEXTOBJ SEL) of FROMOBJ) with CH#))
                                                             (* ; 
                    "Make this document's selection be a point sel at the place the text used to be.")
          (replace (SELECTION DCH) of (fetch (TEXTOBJ SEL) of FROMOBJ) with 0)
          (replace (SELECTION POINT) of (fetch (TEXTOBJ SEL) of FROMOBJ) with 'LEFT)
                                                             (* ; 
                                                       "Mark lines for update, and fix the selection")
          (SETQ TOTEXTLEN (fetch (TEXTOBJ TEXTLEN) of TOOBJ))(* ; 
            "The pre-insertion len of the place the text is returning to, for the line udpater below")
          (\TEDIT.INSERT.PIECES TOOBJ SOURCECH# (fetch THFIRSTPIECE of EVENT)
                 LEN)

     (* ;; "Put the pieces we moved back where they came from (no need to copy them, since we did that on the original move.)")

          (\FIXILINES TOOBJ (fetch (TEXTOBJ SEL) of TOOBJ)
                 SOURCECH# LEN TOTEXTLEN)                    (* ; 
                                            "Mark lines that need updating, and fix up the selection")
          (TEDIT.UPDATE.SCREEN FROMOBJ)                      (* ; 
                                                        "Update the erstwhile text location's image.")
          (COND
             ((NEQ FROMOBJ TOOBJ)                            (* ; 
              "If they aren't the same document, we need to update the other document image as well.")
              (TEDIT.UPDATE.SCREEN TOOBJ)))
          (\FIXSEL (fetch (TEXTOBJ SEL) of TOOBJ)
                 TOOBJ)                                      (* ; 
                                                   "Fix up the selections so their images will be OK")
          (\FIXSEL (fetch (TEXTOBJ SEL) of FROMOBJ)
                 FROMOBJ)
          (\COPYSEL (fetch (TEXTOBJ SEL) of FROMOBJ)
                 TEDIT.SELECTION)                            (* ; 
                                      "It's handy to think of this as the last selection made, also.")
          (replace THACTION of EVENT with 'Move)
          (replace THTEXTOBJ of EVENT with TOOBJ)
          (replace THAUXINFO of EVENT with FROMOBJ)
          (replace THOLDINFO of EVENT with CH#)
          (replace THCH# of EVENT with SOURCECH#)
          (\SHOWSEL (fetch (TEXTOBJ SEL) of TOOBJ)
                 NIL T)
          (\SHOWSEL (fetch (TEXTOBJ SEL) of FROMOBJ)
                 NIL T])

(TEDIT.UNDO.REPLACE
  [LAMBDA (TEXTOBJ EVENT LEN CH# FIRSTPIECE)                 (* ; "Edited 30-May-91 21:27 by jds")
    (PROG ((OLDEVENT (fetch THOLDINFO of EVENT))
           (CH# (fetch THCH# of EVENT))
           (SEL (fetch (TEXTOBJ SEL) of TEXTOBJ)))
          (\SHOWSEL SEL NIL NIL)
          (TEDIT.UNDO.INSERTION TEXTOBJ EVENT LEN CH# FIRSTPIECE)
          (\SHOWSEL SEL NIL NIL)
          (TEDIT.UNDO.DELETION TEXTOBJ OLDEVENT (fetch THLEN of OLDEVENT)
                 CH#
                 (fetch THFIRSTPIECE of OLDEVENT))
          (replace THOLDINFO of OLDEVENT with EVENT)
          (replace THACTION of OLDEVENT with 'Replace)
          (replace THOLDINFO of EVENT with NIL)
          (\TEDIT.HISTORYADD TEXTOBJ OLDEVENT)
          (replace (SELECTION CH#) of SEL with CH#)
          (replace (SELECTION CHLIM) of SEL with (IPLUS CH# (fetch THLEN of OLDEVENT)))
          (replace (SELECTION DCH) of SEL with (fetch THLEN of OLDEVENT))
          (replace (SELECTION POINT) of SEL with (fetch THPOINT of EVENT))
          (replace THPOINT of OLDEVENT with (fetch THPOINT of EVENT))
          (\FIXSEL SEL TEXTOBJ)
          (\SHOWSEL SEL NIL T])

(TEDIT.REDO.REPLACE
  [LAMBDA (TEXTOBJ EVENT)                                    (* ; "Edited 19-Mar-2023 12:26 by rmk")
                                                             (* ; "Edited 22-Oct-2022 14:09 by rmk")
                                                             (* ; "Edited 30-May-91 21:28 by jds")
    (PROG ((OLDEVENT (fetch THOLDINFO of EVENT))
           (CH# (fetch (SELECTION CH#) of (fetch (TEXTOBJ SEL) of TEXTOBJ)))
           (SEL (fetch (TEXTOBJ SEL) of TEXTOBJ)))
          (\SHOWSEL SEL NIL NIL)
          (\DELETECH (fetch (SELECTION CH#) of SEL)
                 (fetch (SELECTION CHLIM) of SEL)
                 TEXTOBJ)
          (\FIXDLINES SEL (fetch (SELECTION CH#) of SEL)
                 (fetch (SELECTION CHLIM) of SEL)
                 TEXTOBJ)
          (replace (SELECTION POINT) of SEL with 'LEFT)
          (TEDIT.REDO.INSERTION TEXTOBJ EVENT CH#)
          (replace THOLDINFO of EVENT with (SETQ OLDEVENT (fetch (TEXTOBJ TXTHISTORY) of TEXTOBJ)))
          (replace THACTION of OLDEVENT with 'Replace)
          (replace THACTION of EVENT with 'Replace)
          (replace THCH# of EVENT with CH#)
          (\TEDIT.HISTORYADD TEXTOBJ EVENT])

(TEDIT.REDO.MOVE
  [LAMBDA (TEXTOBJ EVENT LEN CH# FIRSTPIECE)                 (* ; "Edited 30-May-91 21:28 by jds")
    (PROG ((FROMOBJ TEXTOBJ)
           (SOURCECH# (fetch THOLDINFO of EVENT))
           (OLDCH# (fetch THCH# of EVENT))
           (SEL (fetch (TEXTOBJ SEL) of TEXTOBJ))
           (MOVESEL (fetch (TEXTOBJ MOVESEL) of TEXTOBJ))
           OLDCHLIM)
          (replace (SELECTION CH#) of MOVESEL with OLDCH#)
          (replace (SELECTION CHLIM) of MOVESEL with (IPLUS OLDCH# LEN))
          (replace (SELECTION DCH) of MOVESEL with LEN)
          (replace (SELECTION SET) of MOVESEL with T)
          (\FIXSEL MOVESEL TEXTOBJ)
          (\TEDIT.SET.SEL.LOOKS MOVESEL 'MOVE)
          (TEDIT.MOVE MOVESEL SEL])
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (2679 5971 (\TEDIT.HISTORYADD 2689 . 4524) (\TEDIT.CUMULATE.EVENTS 4526 . 5969)) (6024 
36504 (TEDIT.UNDO 6034 . 9902) (TEDIT.UNDO.INSERTION 9904 . 11212) (TEDIT.UNDO.DELETION 11214 . 16006)
 (TEDIT.REDO 16008 . 22720) (TEDIT.REDO.INSERTION 22722 . 28593) (TEDIT.UNDO.MOVE 28595 . 32961) (
TEDIT.UNDO.REPLACE 32963 . 34317) (TEDIT.REDO.REPLACE 34319 . 35681) (TEDIT.REDO.MOVE 35683 . 36502)))
))
STOP
