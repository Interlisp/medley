(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "13-Jan-2024 12:10:05" {WMEDLEY}<library>tedit>TEDIT-OLDFILE.;2 70300  

      :EDIT-BY rmk

      :CHANGES-TO (FNS \TEDIT.GET.PCTB2)
                  (VARS TEDIT-OLDFILECOMS)

      :PREVIOUS-DATE "13-Jan-2024 12:04:12" {WMEDLEY}<library>tedit>TEDIT-OLDFILE.;1)


(PRETTYCOMPRINT TEDIT-OLDFILECOMS)

(RPAQQ TEDIT-OLDFILECOMS
       (
        (* ;; "Code for reading old-format TEDIT-FILES (1985)")

        (COMS 
              (* ;; 
        "For converting old incoming format.  Cutover 5/22/85 to permit looks changes in the future.")

              (FNS \TEDIT.GET.PCTB2 \TEDIT.GET.PARALOOKS2 \TEDIT.GET.CHARLOOKS2 
                   \TEDIT.PARSE.PAGEFRAMES2 \TEDIT.GET.CHARLOOKS.LIST2 \TEDIT.GET.SINGLE.CHARLOOKS2 
                   \TEDIT.PUT.SINGLE.PARALOOKS2 \TEDIT.PUT.SINGLE.CHARLOOKS2 
                   \TEDIT.GET.PARALOOKS.LIST2 \TEDIT.GET.SINGLE.PARALOOKS2 \TEDIT.PUT.CHARLOOKS.LIST2
                   \TEDIT.PUT.PARALOOKS.LIST2))
        (COMS 
              (* ;; "For converting incoming old-format files (1/27/85 cutover)")

              (FNS \TEDIT.GET.PCTB1 \TEDIT.GET.PAGEFRAMES1 \TEDIT.PARSE.PAGEFRAMES1 
                   \TEDIT.GET.CHARLOOKS1 \TEDIT.GET.PARALOOKS1 TEDIT.GET.OBJECT1))
        (COMS 
              (* ;; "VERSION 0 Compatibility reading functions")

              (FNS TEDIT.GET.PCTB0 TEDIT.GET.CHARLOOKS0 TEDIT.GET.OBJECT0 TEDIT.GET.PARALOOKS0))))



(* ;; "Code for reading old-format TEDIT-FILES (1985)")




(* ;; "For converting old incoming format.  Cutover 5/22/85 to permit looks changes in the future.")

(DEFINEQ

(\TEDIT.GET.PCTB2
  [LAMBDA (TEXT TEXTOBJ PCCOUNT START END)                   (* ; "Edited 13-Jan-2024 12:09 by rmk")
                                                             (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited 25-Nov-2023 23:18 by rmk")
                                                             (* ; "Edited  8-Nov-2023 13:48 by rmk")
                                                             (* ; "Edited  4-Oct-2022 16:58 by rmk")
                                                             (* ; "Edited  8-Sep-2022 23:06 by rmk")
                                                             (* ; "Edited  5-Sep-2022 21:33 by rmk")
                                                             (* ; "Edited  4-May-93 16:27 by jds")

    (* ;; "READ OBSOLETE FORMATS OF TEDIT FILE")

    (* ;; "START = 1st char of file to read from, if specified")

    (* ;; "END = use this as eofptr of file.  For use in reading files within files.")

    (\DTEST TEXTOBJ 'TEXTOBJ)
    (LET (PIECEINFOCH# (CURFILECH# (OR START 0))
                LOOKSHASH PARAHASH)
         (SETFILEPTR TEXT (IDIFFERENCE (OR END (GETEOFPTR TEXT))
                                 8))
         (SETQ PIECEINFOCH# (\DWIN TEXT))
         (SETFILEPTR TEXT PIECEINFOCH#)
         (bind PC TYPECODE PCLEN OLDPC (DEFAULTCHARLOOKS _ (FGETTOBJ TEXTOBJ DEFAULTCHARLOOKS))
               (OLDPARALOOKS _ (FGETTOBJ TEXTOBJ FMTSPEC)) for I from 1 to PCCOUNT
            do (SETQ PC NIL)                                 (* ; 
                        "This loop may not really read a piece, so we have to distinguish that case.")
               (SETQ PCLEN (\DWIN TEXT))
               (SETQ TYPECODE (\WIN TEXT))                   (* ; "What kind of piece is it?")
               (SELECTC TYPECODE
                   (\PieceDescriptorPAGEFRAME                (* ; 
                                                             "This is page layout info for the file")
                        (FSETTOBJ TEXTOBJ TXTPAGEFRAMES (\TEDIT.PARSE.PAGEFRAMES2 (READ TEXT))))
                   (\PieceDescriptorCHARLOOKSLIST            (* ; 
                                              "This is the list of CHARLOOKSs used in this document.")
                        (FSETTOBJ TEXTOBJ TXTCHARLOOKSLIST (\TEDIT.GET.CHARLOOKS.LIST2 TEXT))
                                                             (* ; 
                                                      "Read the list of looks used in this document.")
                        [SETQ LOOKSHASH (ARRAY (FLENGTH (FGETTOBJ TEXTOBJ TXTCHARLOOKSLIST]
                                                             (* ; 
                                         "Build an array of the looks, so the reader can index them.")
                        (for I from 1 as LOOKS in (FGETTOBJ TEXTOBJ TXTCHARLOOKSLIST)
                           do (SETA LOOKSHASH I LOOKS))
                        (add I -1))
                   (\PieceDescriptorPARALOOKSLIST            (* ; 
                                              "This is the list of PARALOOKSs used in this document.")
                        (FSETTOBJ TEXTOBJ TXTPARALOOKSLIST (\TEDIT.GET.PARALOOKS.LIST2 TEXT))
                                                             (* ; 
                                                      "Read the list of looks used in this document.")
                        [SETQ PARAHASH (ARRAY (FLENGTH (FGETTOBJ TEXTOBJ TXTPARALOOKSLIST]
                                                             (* ; 
                                         "Build an array of the looks, so the reader can index them.")
                        (for I from 1 as LOOKS in (FGETTOBJ TEXTOBJ TXTPARALOOKSLIST)
                           do (SETA PARAHASH I LOOKS))
                        (add I -1))
                   (\PieceDescriptorPARA                     (* ; 
                                                             "Reading a new set of paragraph looks.")
                        (CL:WHEN OLDPC (FSETPC OLDPC PPARALAST T))
                                                             (* ; 
                                                           "Mark the end of the preceding paragraph.")
                        (SETQ OLDPARALOOKS (\TEDIT.GET.PARALOOKS2 TEXT PARAHASH))
                                                             (* ; 
                                                 "Get the new set of looks, for use by later pieces.")
                                                             (* ; 
                                          "Mark the document as containing paragraph formatting info")
                        (FSETTOBJ TEXTOBJ FORMATTEDP T))
                   (\PieceDescriptorLOOKS 
                                          (* ;; 
       "New character looks.  Build a piece to describe those characters, assuming THINFILE to begin")

                        (SETQ PC
                         (create PIECE
                                PCONTENTS _ TEXT
                                PFPOS _ CURFILECH#
                                PBYTELEN _ PCLEN
                                PLEN _ PCLEN
                                PPARALOOKS _ OLDPARALOOKS
                                PTYPE _ THINFILE.PTYPE
                                PBYTESPERCHAR _ 1
                                PBINABLE _ 1))               (* ; "Build the new piece")
                        (\TEDIT.GET.CHARLOOKS2 PC TEXT LOOKSHASH)
                                                             (* ; 
                                                             "Read the character looks for this guy.")
                        (COND
                           [OLDPC                            (* ; 
                                              "If there's a prior piece, hook this one on the chain.")
                                  (COND
                                     ([AND (EQ FATFILE2.PTYPE (PTYPE PC))
                                           (NOT (EQ FATFILE2.PTYPE (PTYPE OLDPC]
                                                             (* ; 
                                      "Switching from not-fat to fat.  Add 3 bytes for the 255-255-0")
                                      (add (PFPOS PC)
                                           3)
                                      (add CURFILECH# -3))
                                     ([AND (EQ FATFILE2.PTYPE (PTYPE OLDPC))
                                           (NOT (EQ FATFILE2.PTYPE (PTYPE PC]
                                                             (* ; 
                                          "Switching from fat to not-fat.  Add 3 bytes for the 255-0")
                                      (add (PFPOS PC)
                                           2]
                           ((EQ FATFILE2.PTYPE (PTYPE PC))   (* ; 
                                      "Switching from not-fat to fat.  Add 3 bytes for the 255-255-0")
                            (add (PFPOS PC)
                                 3)
                            (add CURFILECH# -3)))            (* ; 
                                                             "And note the passing of characters.")
                        (add CURFILECH# PCLEN))
                   (\PieceDescriptorOBJECT                   (* ; 
   "It describes an object.  Read that, and perhaps some description of the charlooks to go with it.")
                        (SETQ PC
                         (create PIECE
                                PCONTENTS _ TEXT
                                PFPOS _ CURFILECH#
                                PLEN _ 1
                                PPARALOOKS _ OLDPARALOOKS
                                PTYPE _ OBJECT.PTYPE
                                PBYTESPERCHAR _ PCLEN))
                        (TEDIT.GET.OBJECT (FGETTOBJ TEXTOBJ STREAMHINT)
                               PC TEXT CURFILECH# PCLEN)
                        (add CURFILECH# PCLEN)
                        (FSETPC PC PLOOKS (if (ZEROP (BIN TEXT))
                                              then 
                                                   (* ;; 
                                                   "No new looks;  steal them from the prior piece.")

                                                   (OR (AND OLDPC (PLOOKS OLDPC))
                                                       DEFAULTCHARLOOKS)
                                            else 
                                                 (* ;; 
                                      "There are new character looks for this object.  Read them in.")

                                                 (\TEDIT.GET.SINGLE.CHARLOOKS2 TEXT))))
                   (SHOULDNT "Impossible piece-type code in BUILD.PCTB"))
               (CL:WHEN PC                                   (* ; 
                                                       "If we created a piece, save it in the table.")
                   (\INSERTPIECE PC NIL TEXTOBJ)
                   (SETQ OLDPC PC))])

(\TEDIT.GET.PARALOOKS2
  [LAMBDA (FILE PARAHASH)                                    (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited 18-Dec-88 17:47 by jds")

    (* ;; "Read a paragraph format spec from the FILE, and return it for later use.")

    (* ;; "Paragraph format # of 0 indicates an end-of-file dummy, used to preserve the paralooks of EOF para break.")

    (LET ((LOOKS# (\WIN FILE)))
         (COND
            ((ZEROP LOOKS#)
             NIL)
            (T (ELT PARAHASH LOOKS#])

(\TEDIT.GET.CHARLOOKS2
  [LAMBDA (PC FILE LOOKSARRAY)                               (* ; "Edited 13-Jan-2024 00:01 by rmk")
                                                             (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited  3-Sep-2023 23:31 by rmk")
                                                             (* ; "Edited 28-Aug-2023 22:19 by rmk")
                                                             (* ; "Edited 26-Aug-2023 23:22 by rmk")
                                                             (* ; "Edited 30-May-91 21:43 by jds")

    (* ;; "Set the PLOOKS for the current piece, PC, according to what the file says")

    (* ;; "We also ")

    (LET ((FLAGS (BIN FILE)))
         (FSETPC PC PLOOKS (ELT LOOKSARRAY (\WIN FILE)))
         (CL:UNLESS (ZEROP (LOGAND FLAGS 1))
                (FSETPC PC PNEW T))
         (CL:UNLESS (ZEROP (LOGAND FLAGS 2))                 (* ; 
                                         "XCSS FAT. It may be a continuation of a previous fat piece")
             (FSETPC PC PLEN (IQUOTIENT (FGETPC PC PLEN)
                                    2))
             (FSETPC PC PTYPE FATFILE2.PTYPE)
             (FSETPC PC PBYTESPERCHAR 2))])

(\TEDIT.PARSE.PAGEFRAMES2
  [LAMBDA (PAGELIST PARENT)                                  (* ; "Edited 13-Nov-2023 00:21 by rmk")
                                                             (* ; "Edited  7-Nov-2023 13:24 by rmk")
                                                             (* ; "Edited  4-Oct-2022 16:57 by rmk")
                                                             (* jds "31-Jul-84 15:30")

    (* ;; "Internalize an external pageframe.")

    (* ;; "Exactly like \TEDIT.PARSE.PAGEFRAMES1, except this doesn't scale the region specs.  Except that if it looks like a PAGE region appears to be the result of mistakenly treating points as micas and scaling them down, we scale them back up.")

    (LET (FRAMETYPE PAGEFRAME)
         (COND
            ((type? PAGEREGION PAGELIST)
             PAGELIST)
            ((NEQ 'LIST (SETQ FRAMETYPE (pop PAGELIST)))
             [SETQ PAGEFRAME (create PAGEREGION
                                    REGIONFILLMETHOD _ FRAMETYPE
                                    REGIONTYPE _ (pop PAGELIST)
                                    REGIONLOCALINFO _ (pop PAGELIST)
                                    REGIONSPEC _ (OR (pop PAGELIST)
                                                     (LIST 0 0 0 0]
             (CL:WHEN (AND (EQ 'PAGE (fetch (PAGEREGION REGIONFILLMETHOD) of PAGEFRAME))
                           (LESSP (fetch (REGION WIDTH) of (fetch (PAGEREGION REGIONSPEC)
                                                              of PAGEFRAME))
                                  18))
                 (change (fetch (PAGEREGION REGIONSPEC) of PAGEFRAME)
                        (SELECTQ (fetch (REGION HEIGHT) of DATUM)
                            (22                              (* ; "Letter")
                                (CREATEREGION 0 0 612 792))
                            (29                              (* ; "Legal")
                                (CREATEREGION 0 0 612 1008))
                            (24                              (* ; "A4")
                                (CREATEREGION 0 0 595 842))
                            (fetch (PAGEREGION REGIONSPEC) of DATUM))))
             (replace REGIONSUBBOXES of PAGEFRAME with (for ALIST in (pop PAGELIST)
                                                          collect (\TEDIT.PARSE.PAGEFRAMES2 ALIST 
                                                                         PAGEFRAME)))
             PAGEFRAME)
            (T (for FRAMESPEC in (CAR PAGELIST) collect (\TEDIT.PARSE.PAGEFRAMES2 FRAMESPEC NIL])

(\TEDIT.GET.CHARLOOKS.LIST2
  [LAMBDA (FILE)                                             (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* jds "22-May-85 14:28")
                                                             (* Read the list of CHARLOOKSs from 
                                                             the file.)
    (for I from 1 to (\WIN FILE) collect (\TEDIT.GET.SINGLE.CHARLOOKS2 FILE])

(\TEDIT.GET.SINGLE.CHARLOOKS2
  [LAMBDA (FILE)                                             (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited 25-Nov-2023 23:22 by rmk")
                                                             (* ; "Edited  7-Nov-2023 22:00 by rmk")
                                                             (* ; "Edited 30-May-91 20:26 by jds")
                                                             (* ; "Read a set of CHARLOOKS from FILE")
    (PROG* ((LOOKS (create CHARLOOKS))
            FONT STR NAME NAMELEN SIZE SUPER SUB PROPS STYLESTR USERSTR)
           (SETQ NAME (\ARBIN FILE))                         (* ; "The font name")
           (SETQ SIZE (\WIN FILE))                           (* ; "Size of the type, in points")
           (SETQ SUPER (\WIN FILE))                          (* ; "Superscripting distance")
           (replace (CHARLOOKS CLSTYLE) of LOOKS with (OR (\ARBIN FILE)
                                                          0))
           (replace (CHARLOOKS CLUSERINFO) of LOOKS with (\ARBIN FILE))
           (SETQ PROPS (\WIN FILE))
           (with CHARLOOKS LOOKS [SETQ CLLEADER (NOT (ZEROP (LOGAND 2048 PROPS]
                 [SETQ CLINVERTED (NOT (ZEROP (LOGAND 1024 PROPS]
                 [SETQ CLBOLD (NOT (ZEROP (LOGAND 512 PROPS]
                 [SETQ CLITAL (NOT (ZEROP (LOGAND 256 PROPS]
                 [SETQ CLULINE (NOT (ZEROP (LOGAND 128 PROPS]
                 [SETQ CLOLINE (NOT (ZEROP (LOGAND 64 PROPS]
                 [SETQ CLSTRIKE (NOT (ZEROP (LOGAND 32 PROPS]
                 [SETQ CLSMALLCAP (NOT (ZEROP (LOGAND 16 PROPS]
                 [SETQ CLPROTECTED (NOT (ZEROP (LOGAND 8 PROPS]
                 [SETQ CLINVISIBLE (NOT (ZEROP (LOGAND 4 PROPS]
                 [SETQ CLSELHERE (NOT (ZEROP (LOGAND 2 PROPS]
                 [SETQ CLCANCOPY (NOT (ZEROP (LOGAND 1 PROPS]
                 (SETQ CLSIZE SIZE)
                 (SETQ CLOFFSET SUPER))
           [SETQ FONT (COND
                         ((LISTP NAME)                       (* ; 
                                                             "This was a font class.  Restore it.")
                          (FONTCLASS (pop NAME)
                                 NAME))
                         ((AND NAME (NOT (ZEROP SIZE)))
                          (FONTCREATE NAME SIZE (COND
                                                   ((AND (fetch (CHARLOOKS CLBOLD) of LOOKS)
                                                         (fetch (CHARLOOKS CLITAL) of LOOKS))
                                                    'BOLDITALIC)
                                                   ((fetch (CHARLOOKS CLBOLD) of LOOKS)
                                                    'BOLD)
                                                   ((fetch (CHARLOOKS CLITAL) of LOOKS)
                                                    'ITALIC]
           (replace (CHARLOOKS CLNAME) of LOOKS
              with (if (type? FONTCLASS FONT)
                       then 
                            (* ;; "Put the display family in the CLNAME spot.  Better than NIL.")

                            (CL:WHEN [SETQ NAME (FONTCOPY FONT '(DEVICE DISPLAY NOERROR T]
                                (FONTPROP NAME 'FAMILY))
                     else NAME))
           (replace (CHARLOOKS CLFONT) of LOOKS with FONT)
           (RETURN LOOKS])

(\TEDIT.PUT.SINGLE.PARALOOKS2
  [LAMBDA (FILE LOOKS)                                       (* ; "Edited 19-Dec-2023 10:14 by rmk")
                                                             (* ; "Edited  3-Mar-2023 23:23 by rmk")
                                                             (* ; "Edited 30-May-91 20:33 by jds")
                                                             (* ; 
                  "Put a description of LOOKS into FILE.  LOOKS apply to characters CH1 thru CHLIM-1")
    (PROG (DEFTAB TABSPECS OUTPUTFORMAT LEN)
          (\WOUT FILE (fetch (FMTSPEC 1STLEFTMAR) of LOOKS)) (* ; 
                                                    "Left margin for the first line of the paragraph")
          (\WOUT FILE (fetch (FMTSPEC LEFTMAR) of LOOKS))    (* ; 
                                                          "Left margin for the rest of the paragraph")
          (\WOUT FILE (fetch (FMTSPEC RIGHTMAR) of LOOKS))   (* ; "Right margin for the paragraph")
          (\WOUT FILE (fetch (FMTSPEC LEADBEFORE) of LOOKS)) (* ; "Leading before the paragraph")
          (\WOUT FILE (fetch (FMTSPEC LEADAFTER) of LOOKS))  (* ; "Lead after the paragraph")
          (\WOUT FILE (fetch (FMTSPEC LINELEAD) of LOOKS))   (* ; "inter-line leading")
          (SETQ DEFTAB (CAR (fetch (FMTSPEC TABSPEC) of LOOKS)))
          (SETQ TABSPECS (CDR (fetch (FMTSPEC TABSPEC) of LOOKS)))
          (COND
             ((AND (fetch (FMTSPEC TABSPEC) of LOOKS)
                   (OR DEFTAB TABSPECS))                     (* ; 
                             "There are tab specs to save, or there is a default tab setting to save")
              (\BOUT FILE 3))
             (T                                              (* ; 
                                                          "There are no tab looks.  Just let him go.")
                (\BOUT FILE 2)))
          (\BOUT FILE (SELECTQ (fetch (FMTSPEC QUAD) of LOOKS)
                          (LEFT 1)
                          (RIGHT 2)
                          ((CENTER CENTERED) 
                               3)
                          ((JUST JUSTIFIED) 
                               4)
                          (SHOULDNT)))
          [COND
             ((OR TABSPECS DEFTAB)                           (* ; "There are tab specs to save.")
              (COND
                 (DEFTAB (\WOUT FILE DEFTAB))
                 (T (\WOUT FILE 0)))
              (\BOUT FILE (LENGTH TABSPECS))
              (COND
                 (TABSPECS                                   (* ; "# of tab settings <256!")
                        (for TAB in TABSPECS do (\WOUT FILE (fetch TABX of TAB)) 
                                                             (* ; "And setting.")
                                                (\BOUT FILE (SELECTQ (fetch TABKIND of TAB)
                                                                (LEFT 0)
                                                                (RIGHT 1)
                                                                (CENTERED 2)
                                                                (DECIMAL 3)
                                                                (SHOULDNT))) 
                                                             (* ; "Tab type")]
          (\WOUT FILE (OR (fetch (FMTSPEC FMTSPECIALX) of LOOKS)
                          0))
          (\WOUT FILE (OR (fetch (FMTSPEC FMTSPECIALY) of LOOKS)
                          0))
          (\ARBOUT FILE (fetch (FMTSPEC FMTUSERINFO) of LOOKS))
          (\ATMOUT FILE (fetch (FMTSPEC FMTPARATYPE) of LOOKS))
          (\ATMOUT FILE (fetch (FMTSPEC FMTPARASUBTYPE) of LOOKS))
          (\ARBOUT FILE (fetch (FMTSPEC FMTSTYLE) of LOOKS))
          (\ARBOUT FILE (fetch (FMTSPEC FMTCHARSTYLES) of LOOKS))
          (\ARBOUT FILE (fetch (FMTSPEC FMTNEWPAGEBEFORE) of LOOKS))
          (\ARBOUT FILE (fetch (FMTSPEC FMTNEWPAGEAFTER) of LOOKS])

(\TEDIT.PUT.SINGLE.CHARLOOKS2
  [LAMBDA (FILE LOOKS)                                       (* ; "Edited 19-Dec-2023 10:14 by rmk")
                                                             (* ; "Edited 30-May-91 20:26 by jds")
                                                             (* Put out a single CHARLOOKS 
                                                             description.)
    (PROG ((FONT (fetch (CHARLOOKS CLFONT) of LOOKS))
           STR LEN)
          [COND
             ((type? FONTCLASS FONT)                         (* For font classes, we need to save a 
                                                             list of device-FD sets)
              (\ARBOUT FILE (FONTCLASSUNPARSE FONT)))
             (T                                              (* For FONTDESCRIPTORs, do it the easy 
                                                             way)
                (\ATMOUT FILE (FONTPROP FONT 'FAMILY]        (* The font family)
          (\WOUT FILE (OR (FONTPROP FONT 'SIZE)
                          0))                                (* Size of the type, in points)
          (\WOUT FILE (OR (fetch (CHARLOOKS CLOFFSET) of LOOKS)
                          0))                                (* Super/subscripting distance)
          (COND
             ([AND (fetch (CHARLOOKS CLSTYLE) of LOOKS)
                   (NOT (ZEROP (fetch (CHARLOOKS CLSTYLE) of LOOKS]
              (\ARBOUT FILE (fetch (CHARLOOKS CLSTYLE) of LOOKS)))
             (T (\WOUT FILE 0)))
          (COND
             ((fetch (CHARLOOKS CLUSERINFO) of LOOKS)
              (\ARBOUT FILE (fetch (CHARLOOKS CLUSERINFO) of LOOKS)))
             (T (\WOUT FILE 0)))
          (\WOUT FILE (LOGOR (COND
                                ((fetch (CHARLOOKS CLLEADER) of LOOKS)
                                                             (* Dotted-leader; relevant only to 
                                                             TABs)
                                 2048)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLINVERTED) of LOOKS)
                                                             (* Inverse-video)
                                 1024)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLBOLD) of LOOKS)
                                 512)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLITAL) of LOOKS)
                                 256)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLULINE) of LOOKS)
                                 128)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLOLINE) of LOOKS)
                                 64)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLSTRIKE) of LOOKS)
                                 32)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLSMALLCAP) of LOOKS)
                                 16)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLPROTECTED) of LOOKS)
                                 8)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLINVISIBLE) of LOOKS)
                                 NIL 4)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLSELHERE) of LOOKS)
                                 2)
                                (T 0))
                             (COND
                                ((fetch (CHARLOOKS CLCANCOPY) of LOOKS)
                                 1)
                                (T 0])

(\TEDIT.GET.PARALOOKS.LIST2
  [LAMBDA (FILE)                                             (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* jds "22-May-85 14:28")
                                                             (* Read the list of CHARLOOKSs from 
                                                             the file.)
    (for I from 1 to (\WIN FILE) collect (\TEDIT.GET.SINGLE.PARALOOKS2 FILE])

(\TEDIT.GET.SINGLE.PARALOOKS2
  [LAMBDA (FILE)                                             (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited  3-Mar-2023 23:18 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 30-May-91 20:33 by jds")
                                                             (* ; 
                           "Read a paragraph format spec from the FILE, and return it for later use.")
    (PROG ((LOOKS (create FMTSPEC))
           TABFLG DEFTAB TABCOUNT TABS TABSPEC)
          (replace (FMTSPEC 1STLEFTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                    "Left margin for the first line of the paragraph")
          (replace (FMTSPEC LEFTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                          "Left margin for the rest of the paragraph")
          (replace (FMTSPEC RIGHTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; "Right margin for the paragraph")
          (replace (FMTSPEC LEADBEFORE) of LOOKS with (\WIN FILE))
                                                             (* ; "Leading before the paragraph")
          (replace (FMTSPEC LEADAFTER) of LOOKS with (\WIN FILE))
                                                             (* ; "Lead after the paragraph")
          (replace (FMTSPEC LINELEAD) of LOOKS with (\WIN FILE))
                                                             (* ; "inter-line leading")
          (replace (FMTSPEC TABSPEC) of LOOKS with (SETQ TABSPEC (CONS DEFAULTTAB NIL)))
                                                             (* ; "Will be tab specs")
          (SETQ TABFLG (BIN FILE))
          (replace (FMTSPEC QUAD) of LOOKS with (SELECTC (BIN FILE)
                                                    (1 'LEFT)
                                                    (2 'RIGHT)
                                                    (3 'CENTERED)
                                                    (4 'JUSTIFIED)
                                                    (SHOULDNT)))
          (COND
             ((NOT (ZEROP (LOGAND TABFLG 1)))                (* ; "There are tabs to read")
              (SETQ DEFTAB (\WIN FILE))
              (SETQ TABCOUNT (BIN FILE))
              [SETQ TABS (for TAB# from 1 to TABCOUNT collect (create TAB
                                                                     TABX _ (\WIN FILE)
                                                                     TABKIND _
                                                                     (SELECTQ (BIN FILE)
                                                                         (0 'LEFT)
                                                                         (1 'RIGHT)
                                                                         (2 'CENTERED)
                                                                         (3 'DECIMAL)
                                                                         (SHOULDNT]
              (CL:UNLESS (ZEROP DEFTAB)
                     (RPLACA TABSPEC DEFTAB))
              (RPLACD TABSPEC TABS)))
          [COND
             ((NOT (ZEROP (LOGAND TABFLG 2)))                (* ; 
                                                   "There are other paragraph parameters to be read.")
              (replace (FMTSPEC FMTSPECIALX) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                      "Special X location on page for this paragraph")
              (replace (FMTSPEC FMTSPECIALY) of LOOKS with (\WIN FILE))
              (replace (FMTSPEC FMTUSERINFO) of LOOKS with (\ARBIN FILE))
              (replace (FMTSPEC FMTPARATYPE) of LOOKS with (\ATMIN FILE))
              (replace (FMTSPEC FMTPARASUBTYPE) of LOOKS with (\ATMIN FILE))
              (replace (FMTSPEC FMTSTYLE) of LOOKS with (\ARBIN FILE))
              (replace (FMTSPEC FMTCHARSTYLES) of LOOKS with (\ARBIN FILE))
              (replace (FMTSPEC FMTNEWPAGEBEFORE) of LOOKS with (\ARBIN FILE))
              (replace (FMTSPEC FMTNEWPAGEAFTER) of LOOKS with (\ARBIN FILE]
          (RETURN LOOKS])

(\TEDIT.PUT.CHARLOOKS.LIST2
  [LAMBDA (FILE LOOKSLIST)                                   (* ; "Edited 19-Dec-2023 10:14 by rmk")
                                                             (* jds "22-May-85 15:12")
                                                             (* Write the list of CHARLOOKSs into 
                                                             the font file.)

         (* Returns a hasharray that will map from a given CHARLOOKS to that CHARLOOKS' 
         position in the list we wrote on the file.
         Those position numbers are then written in the individual looks descriptions, and 
         are used to reconstruct the piece looks when the file is read back in.)

    (PROG ((LOOKSHASH (HASHARRAY 50)))
          (\DWOUT FILE 0)                                    (* No characters are described by this 
                                                             pseudo-piece entry.)
          (\WOUT FILE \PieceDescriptorCHARLOOKSLIST)         (* Mark it as containing the list of 
                                                             CHARLOOKSs)
          (\WOUT FILE (FLENGTH LOOKSLIST))                   (* How many CHARLOOKSs there are in 
                                                             the list)
          (for I from 1 as LOOKS in LOOKSLIST do             (* Write each charlooks, in the order 
                                                             they appear in the list.)
                                                 (\TEDIT.PUT.SINGLE.CHARLOOKS2 FILE LOOKS) 
                                                             (* Write out the description)
                                                 (PUTHASH LOOKS I LOOKSHASH) 
                                                             (* And save it in the hash table so 
                                                             people can find its index.))
          (RETURN LOOKSHASH])

(\TEDIT.PUT.PARALOOKS.LIST2
  [LAMBDA (FILE LOOKSLIST)                                   (* ; "Edited 19-Dec-2023 10:14 by rmk")
                                                             (* jds "22-May-85 15:09")
                                                             (* Write the list of FMTSPECs into the 
                                                             font file.)
    (PROG ((LOOKSHASH (HASHARRAY 50)))
          (\DWOUT FILE 0)
          (\WOUT FILE \PieceDescriptorPARALOOKSLIST)
          (\WOUT FILE (FLENGTH LOOKSLIST))
          (for I from 1 as LOOKS in LOOKSLIST do (\TEDIT.PUT.SINGLE.PARALOOKS2 FILE LOOKS) 
                                                             (* Write out the description)
                                                 (PUTHASH LOOKS I LOOKSHASH) 
                                                             (* And save it in the hash table so 
                                                             people can find its index.))
          (RETURN LOOKSHASH])
)



(* ;; "For converting incoming old-format files (1/27/85 cutover)")

(DEFINEQ

(\TEDIT.GET.PCTB1
  [LAMBDA (TEXT TEXTOBJ PCCOUNT START END)                   (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited  8-Nov-2023 13:48 by rmk")
                                                             (* ; "Edited  7-Nov-2023 13:17 by rmk")
                                                             (* ; "Edited  6-Nov-2023 08:43 by rmk")
                                                             (* ; "Edited 27-Oct-2023 13:54 by rmk")
                                                             (* ; "Edited  3-Aug-2023 22:08 by rmk")
                                                             (* ; "Edited 26-Apr-2023 14:18 by rmk")
                                                             (* ; "Edited  5-Sep-2022 23:06 by rmk")
                                                             (* ; "Edited 22-May-92 18:00 by jds")

(* ;;; "READ OBSOLETE FORMATS OF TEDIT FILE")

    (* ;; "START = 1st char of file to read from, if specified")

    (* ;; "END = use this as eofptr of file.  For use in reading files within files.")

    (\DTEST TEXTOBJ 'TEXTOBJ)
    (LET (PIECEINFOCH# TSTREAM (CURFILECH# (OR START 0)))
         (SETFILEPTR TEXT (IDIFFERENCE (OR END (GETEOFPTR TEXT))
                                 8))
         (SETQ PIECEINFOCH# (\DWIN TEXT))
         (SETFILEPTR TEXT PIECEINFOCH#)
         (bind PC TYPECODE PCLEN OLDPC (DEFAULTCHARLOOKS _ (FGETTOBJ TEXTOBJ DEFAULTCHARLOOKS))
               (OLDPARALOOKS _ (FGETTOBJ TEXTOBJ FMTSPEC)) for I from 1 to PCCOUNT
            do (SETQ PC NIL)                                 (* ; 
                        "This loop may not really read a piece, so we have to distinguish that case.")
               (SETQ PCLEN (\DWIN TEXT))
               (SETQ TYPECODE (\WIN TEXT))                   (* ; "What kind of piece is it?")
               (SELECTC TYPECODE
                   (\PieceDescriptorPAGEFRAME                (* ; 
                                                             "This is page layout info for the file")
                        (FSETTOBJ TEXTOBJ TXTPAGEFRAMES (\TEDIT.GET.PAGEFRAMES1 TEXT)))
                   (\PieceDescriptorPARA                     (* ; 
                                                             "Reading a new set of paragraph looks.")
                        (CL:WHEN OLDPC                       (* ; 
                                                           "Mark the end of the preceding paragraph.")
                            (FSETPC OLDPC PPARALAST T))
                        (SETQ OLDPARALOOKS (\TEDIT.GET.PARALOOKS1 TEXT))
                                                             (* ; 
                                                 "Get the new set of looks, for use by later pieces.")
                                                             (* ; 
                                                    "The document contains paragraph formatting info")
                        (FSETTOBJ TEXTOBJ FORMATTEDP T))
                   (\PieceDescriptorLOOKS 
                                          (* ;; "New character looks.  Build a piece to describe those characters.  This format doesn't have fat characters.")

                        (SETQ PC
                         (create PIECE
                                PCONTENTS _ TEXT
                                PFPOS _ CURFILECH#
                                PBYTELEN _ PCLEN
                                PLEN _ PCLEN
                                PPARALOOKS _ OLDPARALOOKS
                                PTYPE _ THINFILE.PTYPE
                                PBYTESPERCHAR _ 1))
                        (\TEDIT.GET.CHARLOOKS1 PC TEXT)      (* ; 
                                                             "Read the character looks for this guy.")
                        (add CURFILECH# (PLEN PC))           (* ; 
                                                             "And note the passing of characters.")
                        )
                   (\PieceDescriptorOBJECT                   (* ; 
   "It describes an object.  Read that, and perhaps some description of the charlooks to go with it.")
                        (SETQ PC
                         (create PIECE
                                PCONTENTS _ TEXT
                                PFPOS _ CURFILECH#
                                PLEN _ 1
                                PPARALOOKS _ OLDPARALOOKS
                                PTYPE _ THINFILE.PTYPE
                                PBYTESPERCHAR _ PCLEN))
                        (TEDIT.GET.OBJECT1 (FGETTOBJ TEXTOBJ STREAMHINT)
                               PC TEXT CURFILECH#)
                        (add CURFILECH# PCLEN)
                        [COND
                           ((NOT (ZEROP (BIN TEXT)))         (* ; 
                                      "There are new character looks for this object.  Read them in.")
                            (\DWIN TEXT)
                            (\WIN TEXT)                      (* ; 
                                              "Skip over the piece-type code we know has to be here.")
                            (\TEDIT.GET.CHARLOOKS1 PC TEXT))
                           (T                                (* ; 
                                                    "No new looks;  steal them from the prior piece.")
                              (FSETPC PC PLOOKS (OR (AND OLDPC (PLOOKS OLDPC))
                                                    DEFAULTCHARLOOKS])
                   (SHOULDNT "Impossible piece-type code"))
               (CL:WHEN PC
                   (\INSERTPIECE PC NIL TEXTOBJ)
                   (SETQ OLDPC PC))])

(\TEDIT.GET.PAGEFRAMES1
  [LAMBDA (FILE)                                             (* ; "Edited  7-Nov-2023 12:35 by rmk")
                                                             (* jds " 1-Feb-85 14:55")
                                                             (* ; 
                                          "Read a bunch of page frames from the file, and return it.")
    (\TEDIT.PARSE.PAGEFRAMES1 (READ FILE])

(\TEDIT.PARSE.PAGEFRAMES1
  [LAMBDA (PAGELIST PARENT)                                  (* ; "Edited  7-Nov-2023 13:27 by rmk")
                                                             (* ; "Edited  8-Mar-2023 18:14 by rmk")
                                                             (* ; "Edited  4-Oct-2022 16:57 by rmk")
                                                             (* ; "Edited  1-Oct-2022 16:02 by rmk")

    (* ;; "Internalize an external pageframe.")

    (* ;; "Exactly like \TEDIT.PARSE.PAGEFRAMES, except this scales the region specs from Micas to points.  However, that scaling is suppress if it looks like the PAGE regions are already in points")

    (LET (FRAMETYPE PAGEFRAME RSPEC)
         (COND
            ((type? PAGEREGION PAGELIST)
             PAGELIST)
            ((NEQ 'LIST (SETQ FRAMETYPE (pop PAGELIST)))
             [SETQ PAGEFRAME (create PAGEREGION
                                    REGIONFILLMETHOD _ FRAMETYPE
                                    REGIONTYPE _ (pop PAGELIST)
                                    REGIONLOCALINFO _ (pop PAGELIST)
                                    REGIONSPEC _
                                    (if (AND (SETQ RSPEC (OR (pop PAGELIST)
                                                             (CREATEREGION 0 0 0 0)))
                                             (EQ FRAMETYPE 'PAGE)
                                             (IGEQ (fetch (REGION WIDTH) of RSPEC)
                                                   595))
                                        then 
                                             (* ;; 
                       "595 is A4, US letter and legal are greater, 612. RSPEC is already in points.")

                                             RSPEC
                                      else (HCUNSCALE MICASPERPT RSPEC]
             (replace REGIONSUBBOXES of PAGEFRAME with (for ALIST in (pop PAGELIST)
                                                          collect (\TEDIT.PARSE.PAGEFRAMES1 ALIST 
                                                                         PAGEFRAME)))
             PAGEFRAME)
            (T (for FRAMESPEC in (CAR PAGELIST) collect (\TEDIT.PARSE.PAGEFRAMES1 FRAMESPEC NIL])

(\TEDIT.GET.CHARLOOKS1
  [LAMBDA (PC FILE)                                          (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited 25-Nov-2023 23:21 by rmk")
                                                             (* ; "Edited  7-Nov-2023 22:02 by rmk")
                                                             (* ; "Edited 27-Oct-2023 13:04 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 30-May-91 20:26 by jds")

    (* ;; "Read a description of PC's CHARLOOKS from FILE. The looks are here stored in PC, not in the TEXTOBJ (uniquify later?)")

    (LET (FONT STR NAME NAMELEN SIZE SUPER SUB PROPS STYLESTR USERSTR (LOOKS (create CHARLOOKS)))
         (FSETPC PC PLOOKS LOOKS)
         (SETQ NAME (\ARBIN FILE))                           (* ; "The font name")
         (SETQ SIZE (\WIN FILE))                             (* ; "Size of the type, in points")
         (SETQ SUPER (\WIN FILE))                            (* ; "Superscripting distance")
         (SETQ SUB (\WIN FILE))                              (* ; "former Subscripting distance")
         (OR (ZEROP SUB)
             (SETQ SUPER (IMINUS SUB)))

         (* ;; "If this is an old file, it'll have a subscript value not zero.  Let those past and do the right thing.")

         (CL:UNLESS (ZEROP (BIN FILE))                       (* ; "This text is NEW.  Mark it so.")
             (FSETPC PC PNEW T))
         (CL:UNLESS (ZEROP (BIN FILE))                       (* ; 
                                                      "There is style or user information to be read")
             (replace (CHARLOOKS CLSTYLE) of LOOKS with (OR (\ARBIN FILE)
                                                            0))
             (replace (CHARLOOKS CLUSERINFO) of LOOKS with (\ARBIN FILE)))
         (SETQ PROPS (\WIN FILE))
         (with CHARLOOKS LOOKS [SETQ CLBOLD (NOT (ZEROP (LOGAND 512 PROPS]
               [SETQ CLITAL (NOT (ZEROP (LOGAND 256 PROPS]
               [SETQ CLULINE (NOT (ZEROP (LOGAND 128 PROPS]
               [SETQ CLOLINE (NOT (ZEROP (LOGAND 64 PROPS]
               [SETQ CLSTRIKE (NOT (ZEROP (LOGAND 32 PROPS]
               [SETQ CLSMALLCAP (NOT (ZEROP (LOGAND 16 PROPS]
               [SETQ CLPROTECTED (NOT (ZEROP (LOGAND 8 PROPS]
               [SETQ CLINVISIBLE (NOT (ZEROP (LOGAND 4 PROPS]
               [SETQ CLSELHERE (NOT (ZEROP (LOGAND 2 PROPS]
               [SETQ CLCANCOPY (NOT (ZEROP (LOGAND 1 PROPS]
               (SETQ CLSIZE SIZE)
               (SETQ CLOFFSET SUPER))
         [SETQ FONT (COND
                       ((LISTP NAME)                         (* ; 
                                                             "This was a font class.  Restore it.")
                        (FONTCLASS (pop NAME)
                               NAME))
                       ((AND NAME (NOT (ZEROP SIZE)))
                        (FONTCREATE NAME SIZE (COND
                                                 ((AND (fetch (CHARLOOKS CLBOLD) of LOOKS)
                                                       (fetch (CHARLOOKS CLITAL) of LOOKS))
                                                  'BOLDITALIC)
                                                 ((fetch (CHARLOOKS CLBOLD) of LOOKS)
                                                  'BOLD)
                                                 ((fetch (CHARLOOKS CLITAL) of LOOKS)
                                                  'ITALIC]
         (replace (CHARLOOKS CLNAME) of LOOKS
            with (if (type? FONTCLASS FONT)
                     then 
                          (* ;; "Put the display family in the CLNAME spot.  Better than NIL.")

                          (CL:WHEN [SETQ NAME (FONTCOPY FONT '(DEVICE DISPLAY NOERROR T]
                              (FONTPROP NAME 'FAMILY))
                   else NAME))
         (replace (CHARLOOKS CLFONT) of LOOKS with FONT])

(\TEDIT.GET.PARALOOKS1
  [LAMBDA (FILE)                                             (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited 27-Oct-2023 13:00 by rmk")
                                                             (* ; "Edited  3-Mar-2023 23:20 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 30-May-91 20:34 by jds")
                                                             (* ; 
                           "Read a paragraph format spec from the FILE, and return it for later use.")
    (LET ((LOOKS (create FMTSPEC))
          TABFLG DEFTAB TABCOUNT TABS TABSPEC)
         (replace (FMTSPEC 1STLEFTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                    "Left margin for the first line of the paragraph")
         (replace (FMTSPEC LEFTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                          "Left margin for the rest of the paragraph")
         (replace (FMTSPEC RIGHTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; "Right margin for the paragraph")
         (replace (FMTSPEC LEADBEFORE) of LOOKS with (\WIN FILE))
                                                             (* ; "Leading before the paragraph")
         (replace (FMTSPEC LEADAFTER) of LOOKS with (\WIN FILE))
                                                             (* ; "Lead after the paragraph")
         (replace (FMTSPEC LINELEAD) of LOOKS with (\WIN FILE))
                                                             (* ; "inter-line leading")
         (replace (FMTSPEC TABSPEC) of LOOKS with (SETQ TABSPEC (CONS DEFAULTTAB NIL)))
                                                             (* ; "Will be tab specs")
         (SETQ TABFLG (BIN FILE))
         (replace (FMTSPEC QUAD) of LOOKS with (SELECTC (BIN FILE)
                                                   (1 'LEFT)
                                                   (2 'RIGHT)
                                                   (3 'CENTERED)
                                                   (4 'JUSTIFIED)
                                                   (SHOULDNT)))
         (CL:UNLESS (ZEROP (LOGAND TABFLG 1))                (* ; "There are tabs to read")
             (SETQ DEFTAB (\WIN FILE))
             (SETQ TABCOUNT (BIN FILE))
             [SETQ TABS (for TAB# from 1 to TABCOUNT collect (create TAB
                                                                    TABX _ (\WIN FILE)
                                                                    TABKIND _
                                                                    (SELECTQ (BIN FILE)
                                                                        (0 'LEFT)
                                                                        (1 'RIGHT)
                                                                        (2 'CENTERED)
                                                                        (3 'DECIMAL)
                                                                        (SHOULDNT]
             (CL:UNLESS (ZEROP DEFTAB)
                    (RPLACA TABSPEC DEFTAB))
             (RPLACD TABSPEC TABS))
         (CL:UNLESS (ZEROP (LOGAND TABFLG 2))                (* ; 
                                                   "There are other paragraph parameters to be read.")
             (replace (FMTSPEC FMTSPECIALX) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                      "Special X location on page for this paragraph")
             (replace (FMTSPEC FMTSPECIALY) of LOOKS with (\WIN FILE))
             (replace (FMTSPEC FMTUSERINFO) of LOOKS with (\ARBIN FILE))
             (replace (FMTSPEC FMTPARATYPE) of LOOKS with (\ATMIN FILE))
             (replace (FMTSPEC FMTPARASUBTYPE) of LOOKS with (\ATMIN FILE))
             (replace (FMTSPEC FMTSTYLE) of LOOKS with (\ARBIN FILE))
             (replace (FMTSPEC FMTCHARSTYLES) of LOOKS with (\ARBIN FILE))
             (replace (FMTSPEC FMTNEWPAGEBEFORE) of LOOKS with (\ARBIN FILE))
             (replace (FMTSPEC FMTNEWPAGEAFTER) of LOOKS with (\ARBIN FILE)))
         LOOKS])

(TEDIT.GET.OBJECT1
  [LAMBDA (STREAM PIECE FILE CURCH#)                         (* ; "Edited 27-Oct-2023 12:58 by rmk")
                                                             (* ; "Edited  6-Aug-2022 09:11 by rmk")
                                                            (* ; "Edited 12-Jun-90 18:17 by mitani")

    (* ;; "Get an object from the file")

    (* ;; "CURCH# = fileptr within the text section of the file where the object's text starts.")

    (LET ((TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of STREAM))
          FILEPTRSAVE GETFN OBJ)
         (SETQ GETFN (\ATMIN FILE))                          (* ; 
                                                             "The GETFN for this kind of IMAGEOBJ")
         (SETQ FILEPTRSAVE (GETFILEPTR FILE))                (* ; 
                                             "Save our file location thru the building of the object")
         (SETFILEPTR FILE CURCH#)
         (SETQ OBJ (READIMAGEOBJ FILE GETFN))
         (SETFILEPTR FILE FILEPTRSAVE)
         (FSETPC PIECE PCONTENTS OBJ)
         (FSETPC PIECE PTYPE OBJECT.PTYPE)
         (FSETPC PIECE PLOOKS (if (PREVPIECE PIECE)
                                  then (PLOOKS (PREVPIECE PIECE))
                                elseif (FGETTOBJ TEXTOBJ DEFAULTCHARLOOKS)
                                else (\TEDIT.UNIQUIFY.CHARLOOKS (CHARLOOKS.FROM.FONT DEFAULTFONT)
                                            TEXTOBJ)))
         (PCONTENTS PIECE])
)



(* ;; "VERSION 0 Compatibility reading functions")

(DEFINEQ

(TEDIT.GET.PCTB0
  [LAMBDA (TEXT TEXTOBJ PCCOUNT START END)                   (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited 27-Oct-2023 13:47 by rmk")
                                                             (* ; "Edited  3-Aug-2023 22:09 by rmk")
                                                             (* ; "Edited 26-Apr-2023 14:21 by rmk")
                                                             (* ; "Edited  5-Sep-2022 23:06 by rmk")
                                                             (* ; "Edited 22-May-92 18:01 by jds")

(* ;;; "READ OBSOLETE FORMATS OF TEDIT FILE")

    (LET (OLDPC TYPECODE PCLEN PIECEINFOCH# TSTREAM USERFILEFORMAT USERTEMP (CURFILECH# (OR START 0))
                )
         (SETFILEPTR TEXT (IDIFFERENCE (OR END (GETEOFPTR TEXT))
                                 8))
         (SETQ PIECEINFOCH# (\DWIN TEXT))
         (SETFILEPTR TEXT PIECEINFOCH#)
         (bind PC TYPECODE PCLEN OLDPC (DEFAULTPARALOOKS _ (FGETTOBJ TEXTOBJ FMTSPEC)) for I
            from 1 to PCCOUNT
            do (SETQ PCLEN (\DWIN TEXT))
               (SETQ PC
                (create PIECE
                       PCONTENTS _ TEXT
                       PFPOS _ CURFILECH#
                       PLEN _ PCLEN
                       PREVPIECE _ OLDPC
                       PPARALOOKS _ DEFAULTPARALOOKS
                       PTYPE _ THINFILE.PTYPE
                       PBYTESPERCHAR _ 1))
               [COND
                  (OLDPC (FSETPC OLDPC NEXTPIECE PC)
                         (FSETPC PC PPARALOOKS (PPARALOOKS OLDPC]
               (SETQ TYPECODE (\WIN TEXT))
               (SELECTC TYPECODE
                   (\PieceDescriptorLOOKS 
                        (TEDIT.GET.CHARLOOKS0 PC TEXT)
                        (add CURFILECH# (PLEN PC)))
                   (\PieceDescriptorOBJECT 
                        (TEDIT.GET.OBJECT0 (AND TEXTOBJ (FGETTOBJ TEXTOBJ STREAMHINT))
                               PC TEXT CURFILECH#)
                        (add CURFILECH# (PLEN PC))           (* ; 
                                            "Only object--can't be followed by either of the others.")
                        (FSETPC PC PLEN 1))
                   (\PieceDescriptorPARA 
                        (AND OLDPC (FSETPC OLDPC PPARALAST T))
                        (TEDIT.GET.PARALOOKS0 PC TEXT)
                        (FSETPC PC PLEN (\DWIN TEXT))        (* ; 
                                                  "Set this piece's length from the character looks.")
                        (\WIN TEXT)                          (* ; 
                                                "Skip the piece-type code, since we know what's next")
                        (TEDIT.GET.CHARLOOKS0 PC TEXT)       (* ; "This document is 'formatted' .")
                        (add CURFILECH# (PLEN PC))
                        (AND TEXTOBJ (FSETTOBJ TEXTOBJ FORMATTEDP T)))
                   (SHOULDNT "Impossible piece-type code in BUILD.PCTB"))
               (SETQ OLDPC PC)
               (\INSERTPIECE PC NIL TEXTOBJ])

(TEDIT.GET.CHARLOOKS0
  [LAMBDA (PC FILE)                                          (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 30-May-91 20:26 by jds")
                                                             (* Put a description of LOOKS into 
                                                             FILE. LOOKS apply to characters CH1 
                                                             thru CHLIM-1)
    (PROG (FONT STR NAME NAMELEN SIZE SUPER SUB PROPS STYLESTR USERSTR (LOOKS (create CHARLOOKS)))
          (replace (PIECE PLOOKS) of PC with LOOKS)
          (SETQ NAMELEN (\WIN FILE))                         (* The length of the description which 
                                                             follows)
          [SETQ NAME (PACK (for I from 1 to NAMELEN collect (CHARACTER (BIN FILE]
                                                             (* The font name)
          (SETQ SIZE (\WIN FILE))                            (* Size of the type, in points)
          (SETQ SUPER (\WIN FILE))                           (* Superscripting distance)
          (SETQ SUB (\WIN FILE))                             (* former Subscripting distance)
          (OR (ZEROP SUB)
              (SETQ SUPER (IMINUS SUB)))

         (* If this is an old file, it'll have a subscript value not zero.
         Let those past and do the right thing.)

          (COND
             ((NOT (ZEROP (BIN FILE)))                       (* This text is NEW.
                                                             Mark it so.)
              (replace (PIECE PNEW) of PC with T)))
          [COND
             ((NOT (ZEROP (BIN FILE)))                       (* There is style or user information 
                                                             to be read)
              (SETQ STYLESTR (\STRINGIN FILE))
              (SETQ USERSTR (\STRINGIN FILE))
              (COND
                 ((NOT (ZEROP (NCHARS STYLESTR)))            (* There IS style info)
                  (replace (CHARLOOKS CLSTYLE) of LOOKS with (READ STYLESTR)))
                 (T (replace (CHARLOOKS CLSTYLE) of LOOKS with 0)))
              (COND
                 ((NOT (ZEROP (NCHARS USERSTR)))             (* There IS user info)
                  (replace (CHARLOOKS CLUSERINFO) of LOOKS with (READ USERSTR]
          (SETQ PROPS (\WIN FILE))
          (with CHARLOOKS LOOKS [SETQ CLBOLD (NOT (ZEROP (LOGAND 512 PROPS]
                [SETQ CLITAL (NOT (ZEROP (LOGAND 256 PROPS]
                [SETQ CLULINE (NOT (ZEROP (LOGAND 128 PROPS]
                [SETQ CLOLINE (NOT (ZEROP (LOGAND 64 PROPS]
                [SETQ CLSTRIKE (NOT (ZEROP (LOGAND 32 PROPS]
                [SETQ CLSMALLCAP (NOT (ZEROP (LOGAND 16 PROPS]
                [SETQ CLPROTECTED (NOT (ZEROP (LOGAND 8 PROPS]
                [SETQ CLINVISIBLE (NOT (ZEROP (LOGAND 4 PROPS]
                [SETQ CLSELHERE (NOT (ZEROP (LOGAND 2 PROPS]
                [SETQ CLCANCOPY (NOT (ZEROP (LOGAND 1 PROPS]
                (SETQ CLSIZE SIZE)
                (SETQ CLOFFSET SUPER))
          (replace (CHARLOOKS CLFONT) of LOOKS with (AND NAME (NOT (ZEROP SIZE))
                                                         (FONTCREATE NAME SIZE
                                                                (COND
                                                                   ((AND (fetch (CHARLOOKS CLBOLD)
                                                                            of LOOKS)
                                                                         (fetch (CHARLOOKS CLITAL)
                                                                            of LOOKS))
                                                                    'BOLDITALIC)
                                                                   ((fetch (CHARLOOKS CLBOLD)
                                                                       of LOOKS)
                                                                    'BOLD)
                                                                   ((fetch (CHARLOOKS CLITAL)
                                                                       of LOOKS)
                                                                    'ITALIC])

(TEDIT.GET.OBJECT0
  [LAMBDA (STREAM PIECE FILE CURCH#)                         (* ; "Edited  6-Aug-2022 15:57 by rmk")
                                                            (* ; "Edited 12-Jun-90 18:17 by mitani")

    (* ;; "Get an object from the file")

    (* ;; "CURCH# = fileptr within the text section of the file where the object's text starts.")

    (LET ((TEXTOBJ (fetch (TEXTSTREAM TEXTOBJ) of STREAM))
          FILEPTRSAVE NAMELEN GETFN OBJ)
         (SETQ GETFN (\ATMIN FILE))                          (* ; 
                                                             "The GETFN for this kind of IMAGEOBJ")
         (SETQ FILEPTRSAVE (GETFILEPTR FILE))                (* ; 
                                             "Save our file location thru the building of the object")
         (SETFILEPTR FILE CURCH#)
         (SETQ OBJ (READIMAGEOBJ FILE GETFN))
         (SETFILEPTR FILE FILEPTRSAVE)
         (replace (PIECE PCONTENTS) of PIECE with OBJ)
         [replace (PIECE PLOOKS) of PIECE with (COND
                                                  ((fetch (PIECE PREVPIECE) of PIECE)
                                                   (fetch (PIECE PLOOKS) of (fetch (PIECE PREVPIECE)
                                                                               of PIECE)))
                                                  (T (OR (fetch (TEXTOBJ DEFAULTCHARLOOKS)
                                                            of TEXTOBJ)
                                                         (\TEDIT.UNIQUIFY.CHARLOOKS (
                                                                                  CHARLOOKS.FROM.FONT
                                                                                     DEFAULTFONT)
                                                                TEXTOBJ]
         OBJ])

(TEDIT.GET.PARALOOKS0
  [LAMBDA (PC FILE)                                          (* ; "Edited 19-Dec-2023 10:13 by rmk")
                                                             (* ; "Edited  3-Mar-2023 23:14 by rmk")
                                                             (* ; "Edited  1-Aug-2022 12:04 by rmk")
                                                             (* ; "Edited 30-May-91 20:34 by jds")
                                                             (* ; 
                  "Put a description of LOOKS into FILE.  LOOKS apply to characters CH1 thru CHLIM-1")
    (PROG ((LOOKS (create FMTSPEC))
           TABFLG DEFTAB TABCOUNT TABS TABSPEC)
          (replace (PIECE PPARALOOKS) of PC with LOOKS)
          (replace (FMTSPEC 1STLEFTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                    "Left margin for the first line of the paragraph")
          (replace (FMTSPEC LEFTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; 
                                                          "Left margin for the rest of the paragraph")
          (replace (FMTSPEC RIGHTMAR) of LOOKS with (\WIN FILE))
                                                             (* ; "Right margin for the paragraph")
          (replace (FMTSPEC LEADBEFORE) of LOOKS with (\WIN FILE))
                                                             (* ; "Leading before the paragraph")
          (replace (FMTSPEC LEADAFTER) of LOOKS with (\WIN FILE))
                                                             (* ; "Lead after the paragraph")
          (replace (FMTSPEC LINELEAD) of LOOKS with (\WIN FILE))
                                                             (* ; "inter-line leading")
          (replace (FMTSPEC TABSPEC) of LOOKS with (SETQ TABSPEC (CONS DEFAULTTAB NIL)))
                                                             (* ; "Will be tab specs")
          (SETQ TABFLG (BIN FILE))
          (replace (FMTSPEC QUAD) of LOOKS with (SELECTC (BIN FILE)
                                                    (1 'LEFT)
                                                    (2 'RIGHT)
                                                    (3 'CENTERED)
                                                    (4 'JUSTIFIED)
                                                    (SHOULDNT)))
          (COND
             ((NOT (ZEROP TABFLG))                           (* ; "There are tabs to read")
              (SETQ DEFTAB (\WIN FILE))
              (SETQ TABCOUNT (BIN FILE))
              [SETQ TABS (for TAB# from 1 to TABCOUNT collect (create TAB
                                                                     TABX _ (\WIN FILE)
                                                                     TABKIND _
                                                                     (SELECTQ (BIN FILE)
                                                                         (0 'LEFT)
                                                                         (1 'RIGHT)
                                                                         (2 'CENTERED)
                                                                         (3 'DECIMAL)
                                                                         (SHOULDNT]
              (OR (ZEROP DEFTAB)
                  (RPLACA TABSPEC DEFTAB))
              (RPLACD TABSPEC TABS])
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (1686 37058 (\TEDIT.GET.PCTB2 1696 . 11202) (\TEDIT.GET.PARALOOKS2 11204 . 11793) (
\TEDIT.GET.CHARLOOKS2 11795 . 13126) (\TEDIT.PARSE.PAGEFRAMES2 13128 . 15867) (
\TEDIT.GET.CHARLOOKS.LIST2 15869 . 16376) (\TEDIT.GET.SINGLE.CHARLOOKS2 16378 . 19986) (
\TEDIT.PUT.SINGLE.PARALOOKS2 19988 . 24207) (\TEDIT.PUT.SINGLE.CHARLOOKS2 24209 . 28558) (
\TEDIT.GET.PARALOOKS.LIST2 28560 . 29067) (\TEDIT.GET.SINGLE.PARALOOKS2 29069 . 33919) (
\TEDIT.PUT.CHARLOOKS.LIST2 33921 . 35965) (\TEDIT.PUT.PARALOOKS.LIST2 35967 . 37056)) (37135 56635 (
\TEDIT.GET.PCTB1 37145 . 43117) (\TEDIT.GET.PAGEFRAMES1 43119 . 43571) (\TEDIT.PARSE.PAGEFRAMES1 43573
 . 45949) (\TEDIT.GET.CHARLOOKS1 45951 . 50214) (\TEDIT.GET.PARALOOKS1 50216 . 55089) (
TEDIT.GET.OBJECT1 55091 . 56633)) (56695 70277 (TEDIT.GET.PCTB0 56705 . 59967) (TEDIT.GET.CHARLOOKS0 
59969 . 64601) (TEDIT.GET.OBJECT0 64603 . 66552) (TEDIT.GET.PARALOOKS0 66554 . 70275)))))
STOP
