(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "14-Aug-2023 12:16:39" {WMEDLEY}<library>TEDIT>TEDIT-TFBRAVO.;113 80789  

      :EDIT-BY rmk

      :CHANGES-TO (FNS \TFBRAVO.XCCSCONVERT \TFBRAVO.PARSE.PARA TEDITFROMBRAVO \TFBRAVO.WRITE.RUN 
                       \TFBRAVO.READ.PARALOOKS \TFBRAVO.ADD.NAMEDTAB \TFBRAVO.WRITE.PARAGRAPH 
                       \TFBRAVO.INIT.PARALOOKS \TFBRAVO.READ.CHARLOOKS)
                  (VARS MATHTOXCCS TEDIT-TFBRAVOCOMS HIPPOTOXCCS)
                  (RECORDS RUN PARA)

      :PREVIOUS-DATE "12-Aug-2023 14:08:49" {WMEDLEY}<library>TEDIT>TEDIT-TFBRAVO.;100)


(PRETTYCOMPRINT TEDIT-TFBRAVOCOMS)

(RPAQQ TEDIT-TFBRAVOCOMS
       [[DECLARE%: EVAL@COMPILE DONTCOPY                     (* ; "Compile-time needs")
               (FILES TEDIT-EXPORTS.ALL)
               (RECORDS BRAVOFONT PARA RUN)
               (MACROS \TFBRAVO.GETFONT \TOPOINTS)
               (CONSTANTS (BRAVO.TRAILER.CHARS '(l d z x e y k j c q %( %) %, s S u U b B i I g G v V
                                                   w W t f o %  \ 0 1 2 3 4 5 6 7 8 9]
        (FNS TEDIT.BRAVOFILE? TEDITFROMBRAVO)
        (ADDVARS (TEDIT.INPUT.FORMATS (TEDIT.BRAVOFILE? TEDITFROMBRAVO)))
        
        (* ;; "Initial looks, USER.CM")

        (FNS \TFBRAVO.USER.CM.LOOKS \TFBRAVO.READ.USER.CM \TFBRAVO.INIT.PARALOOKS 
             \TFBRAVO.INIT.PAGEFORMAT \TFBRAVO.GETPARAMS)
        (FNS \TFBRAVO.FIND.LAST.TRAILER \TFBRAVO.HANDLE.HEADING \TFBRAVO.INSTALL.PAGEFORMAT 
             \TFBRAVO.PARSE.PROFILE.PARA \TFBRAVO.WRITE.RUN)
        (FNS \TFBRAVO.WRITE.PARAGRAPH \TFBRAVO.PARSE.PARA \TFBRAVO.READ.PARALOOKS 
             \TFBRAVO.INSTALL.PARATABS \TFBRAVO.READ.CHARLOOKS \TFBRAVO.FONT.FROM.CHARLOOKS)
        (FNS \TFBRAVO.READNUM?)
        (FNS \TFBRAVO.ASSERT \TEST.CHARACTER.LOOKS \TEST.PARAGRAPH.LOOKS)
        (INITVARS (DEFAULT-USER.CM NIL)
               (USER.CM.RDTBL (COPYREADTABLE))
               (PROFILE.PARA.RDTBL (COPYREADTABLE)))
        (FNS \TFBRAVO.XCCSCONVERT)
        (VARS HIPPOTOXCCS MATHTOXCCS HELVTIMESTOXCCS)
        (P (SETBRK (CHARCODE (%, %: = CR))
                  NIL USER.CM.RDTBL)
           (SETSEPR '(% )
                  NIL USER.CM.RDTBL)
           (SETSYNTAX (CHARCODE %:)
                  'SEPRCHAR PROFILE.PARA.RDTBL)
           (SETSYNTAX (CHARCODE CR)
                  'BREAKCHAR PROFILE.PARA.RDTBL)
           (SETSYNTAX (CHARCODE ^Z)
                  'BREAKCHAR PROFILE.PARA.RDTBL))
        (COMS                                                (* ; "Named tabs")
              (FNS \TFBRAVO.COPY.NAMEDTAB \TFBRAVO.PUT.NAMEDTAB \TFBRAVO.GET.NAMEDTAB 
                   \TFBRAVO.ADD.NAMEDTAB \NAMEDTABNYET \NAMEDTABSIZE \NAMEDTABPREPRINT \NAMEDTAB.INIT
                   )
              (GLOBALVARS \NAMEDTAB.IMAGEFNS)
              (DECLARE%: DONTEVAL@LOAD DOCOPY (P (\NAMEDTAB.INIT])
(DECLARE%: EVAL@COMPILE DONTCOPY 

(FILESLOAD TEDIT-EXPORTS.ALL)

(DECLARE%: EVAL@COMPILE

(RECORD BRAVOFONT (BFFONTNUM BRFAMILY BRSIZE BRWEIGHT BRSLOPE))

(RECORD PARA (PARAFMTSPEC RUNS FORMATCHARS TABPTRS))

(RECORD RUN (RUNLENGTH RUNLOOKS RUNSTART RUNTABOFFSETS RUNXCCSTRANSLATION? RUNPARALAST))
)

(DECLARE%: EVAL@COMPILE 

(PUTPROPS \TFBRAVO.GETFONT MACRO [(FONTNUM FIELD)
                                  (fetch (BRAVOFONT FIELD) of (FASSOC FONTNUM (FASSOC 'Font 
                                                                                     USER.CM.ALIST])

(PUTPROPS \TOPOINTS MACRO ((DIMENSION)

                           (* ;; "Assumes that the next token in LINE is a number to be converted to points, according to the conventions specified in the Bravo user manual.  Negative distances are relative to an 8.5 x 11 US Letter page. ")

                           (* ;; "This positions LINE at the token after the unit, if any.")

                           (LET ((NUM (pop LINE))
                                 (UNIT (CAR LINE)))
                                [SETQ UNIT (SELECTQ (U-CASE UNIT)
                                               ((IN INCH INCHES %") 
                                                    (pop LINE)
                                                    'INCH)
                                               ((CM CMS) 
                                                    (pop LINE)
                                                    'CM)
                                               ((POINT POINTS PT PTS) 
                                                    (pop LINE)
                                                    'POINT)
                                               (CL:IF (FLOATP NUM)
                                                   'INCH
                                                   'POINT)]
                                (SETQ NUM (SELECTQ UNIT
                                              (INCH (FIXR (TIMES NUM 72)))
                                              (CM (FIXR (FQUOTIENT (TIMES NUM 2.54 72))))
                                              NUM))
                                (CL:WHEN (ILESSP NUM 0)
                                    (SETQ NUM (SELECTQ DIMENSION
                                                  (HEIGHT (IPLUS (CONSTANT (ITIMES 11 72))
                                                                 NUM))
                                                  (WIDTH (IPLUS (CONSTANT (FIX (FTIMES 8.5 72)))
                                                                NUM))
                                                  (NIL NUM)
                                                  (HELP "UNKNOWN DIMENSION" DIMENSION))))
                                NUM)))
)

(DECLARE%: EVAL@COMPILE 

(RPAQQ BRAVO.TRAILER.CHARS
       (l d z x e y k j c q %( %) %, s S u U b B i I g G v V w W t f o %  \ 0 1 2 3 4 5 6 7 8 9))


[CONSTANTS (BRAVO.TRAILER.CHARS '(l d z x e y k j c q %( %) %, s S u U b B i I g G v V w W t f o %  \
                                    0 1 2 3 4 5 6 7 8 9]
)
)
(DEFINEQ

(TEDIT.BRAVOFILE?
  [LAMBDA (STREAM TEXTOBJ)                                   (* ; "Edited 11-Aug-2023 22:59 by rmk")
                                                             (* ; "Edited  5-Aug-2023 23:05 by rmk")
                                                             (* ; "Edited  1-Aug-2023 08:15 by rmk")
                                                             (* gbn " 3-Jun-85 21:06")

    (* ;; "Test an open stream to see if it is a BRAVO file, asking if it is to be converted")

    (* ;; "Returns the name of the user.cm file to be used in the conversion of this stream")

    (PROG (PLOOKS ENDCONDITION (ORIGINAL.FILE.POSITION (GETFILEPTR STREAM))
                 NAME DIRS USER.CM)                          (* ; 
                                                "first look for a ^z, (beginning of a Bravo trailer)")
          (CL:UNLESS (\TFBRAVO.FIND.LAST.TRAILER STREAM)
              (SETFILEPTR STREAM ORIGINAL.FILE.POSITION)
              (RETURN NIL))                                  (* ; "BIN past the ^z")
          (BIN STREAM)
          (SETQ PLOOKS (\TEST.PARAGRAPH.LOOKS STREAM))       (* ; 
                          "if the next symbol is a slash then check if the character looks are valid")
          [SETQ ENDCONDITION (CL:WHEN (EQ (CAR PLOOKS)
                                          '\)
                                 (repeatuntil (\TEST.CHARACTER.LOOKS STREAM)))]
          (CL:WHEN (EQ ENDCONDITION 'BADLOOKS)
              (SETFILEPTR STREAM ORIGINAL.FILE.POSITION)
              (RETURN NIL))
          (SETFILEPTR STREAM ORIGINAL.FILE.POSITION)

     (* ;; "If the previous file isn't desired, look for user.cm files in the following order:  the directory the file came from, the connected directory, the login dir, {dsk} device")

          (SETQ NAME (FULLNAME STREAM))
          (SETQ DIRS '(T NIL))
          (CL:UNLESS (STREAMP NAME)
              (push DIRS (PACKFILENAME 'NAME NIL 'EXTENSION NIL 'VERSION NIL 'BODY NAME)))
          (SETQ USER.CM (OR (AND DEFAULT-USER.CM (FINDFILE DEFAULT-USER.CM T DIRS))
                            (FINDFILE 'USER.CM T DIRS)))
          (if (AND USER.CM (SELECTQ [MKATOM (U-CASE (TEDIT.GETINPUT TEXTOBJ (CONCAT "Use " USER.CM 
                                                                                   " as USER.CM? "]
                               (NIL (TEDIT.PROMPTPRINT TEXTOBJ "Yes")
                                    T)
                               ((Y YES T) 
                                    T)
                               NIL))
            elseif (SETQ USER.CM (TEDIT.GETINPUT TEXTOBJ 
                                        "USER.CM file: (NIL suppresses BRAVO conversion) ")))
          (CL:WHEN USER.CM
              (SETQ DEFAULT-USER.CM (PACKFILENAME 'VERSION NIL 'BODY USER.CM)))
          (RETURN USER.CM])

(TEDITFROMBRAVO
  [LAMBDA (BFILE USER.CM TEXTSTREAM)                         (* ; "Edited 13-Aug-2023 20:09 by rmk")
                                                             (* ; "Edited 12-Aug-2023 13:59 by rmk")
                                                             (* ; "Edited  6-Aug-2023 23:53 by rmk")
                                                             (* ; "Edited  5-Aug-2023 17:15 by rmk")
                                                             (* ; "Edited  3-Aug-2023 08:59 by rmk")
                                                            (* ; "Edited 13-Jun-90 01:00 by mitani")

(* ;;; "Top level entry for conversion from a Bravo file to a textstream.  The textstream is returned,  %"Writing%" here means sticking it in the textstream, not saving to a Tedit file.  Assumes that a stream BFILE is positioned at the first byte to be included.")

    (RESETLST
        (CL:UNLESS TEXTSTREAM
            (SETQ TEXTSTREAM (OPENTEXTSTREAM NIL)))          (* ; 
                                                     " Produce the USER.CM's alist of default values")
        (bind PARAGRAPH NEXTFMTSPEC USER.CM.CHARLOOKS USER.CM.FMTSPEC USER.CM.ALIST START
              (BSTREAM _ BFILE)
              (TEXTOBJ _ (TEXTOBJ TEXTSTREAM)) declare (SPECVARS USER.CM.FMTSPEC USER.CM.CHARLOOKS 
                                                              USER.CM.ALIST)
           first (SETTOBJ TEXTOBJ FORMATTEDP T)
                 (\TFBRAVO.USER.CM.LOOKS USER.CM TEXTOBJ)    (* ; "Set up the USER.CM look defaults")
                 (CL:UNLESS (GETSTREAM BSTREAM 'INPUT T)     (* ; 
                                                             "We keep it open, since we point to it")
                     (SETQ BSTREAM (OPENSTREAM BFILE 'INPUT)))
                 [RESETSAVE (STREAMPROP BSTREAM 'ENDOFSTREAMOP (FUNCTION NILL))
                        `(PROGN (STREAMPROP ,BSTREAM 'ENDOFSTREAMOP OLDVALUE]
                 (SETQ NEXTFMTSPEC USER.CM.FMTSPEC) eachtime (SETQ START (GETFILEPTR BSTREAM)) 
                                                             (* ; 
                                                             "Profiles and headings have to back up")
                                                          (SETQ PARAGRAPH (\TFBRAVO.PARSE.PARA 
                                                                                 NEXTFMTSPEC BSTREAM
                                                                                 TEXTOBJ)) 

                                                          (* ;; "No runs signals the very end")
 while (fetch (PARA RUNS) of PARAGRAPH) do (SETQ NEXTFMTSPEC (fetch (PARA PARAFMTSPEC) of PARAGRAPH))
                                           (AND NIL (HELP START PARAGRAPH)) 

                                           (* ;; "Valid profile paragraphs have a special interpretation, invalid ones must be mismarked ordinary text")

                                           (CL:UNLESS (AND (EQ 'PROFILE (fetch (FMTSPEC FMTPARATYPE)
                                                                           of NEXTFMTSPEC))
                                                           (\TFBRAVO.PARSE.PROFILE.PARA BSTREAM 
                                                                  PARAGRAPH TEXTOBJ START))
                                                  (\TFBRAVO.WRITE.PARAGRAPH PARAGRAPH BSTREAM TEXTOBJ
                                                         ))
           finally (\TFBRAVO.INSTALL.PAGEFORMAT TEXTOBJ)
                 (for PC inpieces (\FIRSTPIECE TEXTOBJ) do 
                                                           (* ;; 
                                                           "Clean out the temporary tab information")

                                                           (replace (CHARLOOKS CLUSERINFO)
                                                              of (PLOOKS PC) with NIL)
                                                           (replace (FMTSPEC FMTUSERINFO)
                                                              of (PPARALOOKS PC) with NIL)))
        (TEDIT.SETSEL TEXTOBJ 1 0 'LEFT)
        TEXTSTREAM)])
)

(ADDTOVAR TEDIT.INPUT.FORMATS (TEDIT.BRAVOFILE? TEDITFROMBRAVO))



(* ;; "Initial looks, USER.CM")

(DEFINEQ

(\TFBRAVO.USER.CM.LOOKS
  [LAMBDA (USER.CM TEXTOBJ)                                  (* ; "Edited  5-Aug-2023 17:15 by rmk")
    (DECLARE (USEDFREE USER.CM.CHARLOOKS USER.CM.FMTSPEC USER.CM.ALIST))
    (SETQ USER.CM.ALIST (\TFBRAVO.READ.USER.CM USER.CM))
    (SETQ USER.CM.CHARLOOKS (create CHARLOOKS
                                   CLNAME _ (\TFBRAVO.GETFONT 0 BRFAMILY)
                                   CLSIZE _ (\TFBRAVO.GETFONT 0 BRSIZE)
                                   CLOFFSET _ 0))
    (\TFBRAVO.FONT.FROM.CHARLOOKS USER.CM.CHARLOOKS)
    (\TFBRAVO.INIT.PAGEFORMAT TEXTOBJ)
    (SETQ USER.CM.FMTSPEC (\TFBRAVO.INIT.PARALOOKS USER.CM.ALIST])

(\TFBRAVO.READ.USER.CM
  [LAMBDA (USER.CM)                                          (* ; "Edited 10-Aug-2023 13:02 by rmk")
                                                             (* ; "Edited  7-Aug-2023 12:52 by rmk")
                                                             (* ; "Edited  1-Aug-2023 22:11 by rmk")
                                                             (* ; "Edited 30-Jul-2023 18:57 by rmk")
                                                             (* gbn "17-Sep-84 18:53")
    (CL:UNLESS USER.CM
        (SETQ USER.CM 'USER.CM))

    (* ;; "digests a user.cm file returning an alist of contents.  Returns ((Font)) if no bravo section of user.cm file")

    (PROG (ALIST LINE)
          (CL:UNLESS (GETSTREAM USER.CM 'INPUT T)
              [RESETSAVE (SETQ USER.CM (OPENSTREAM USER.CM 'INPUT 'OLD))
                     `(PROGN (CLOSEF? OLDVALUE])
          (SETFILEINFO USER.CM 'EOL 'ANY)
          (CL:UNLESS (AND (FILEPOS "[BRAVO]" USER.CM NIL NIL NIL T)
                          (EQ (CHARCODE EOL)
                              (READCCODE USER.CM)))
                 (RETURN NIL))

     (* ;; "Read lines of the user.cm file until getting the empty line caused by eof (and the errortypelst entry) or until a line starts with '[' .")

      LLP (CL:UNLESS (NLSETQ (SETQ LINE (RATOMS (CONSTANT (CHARACTER (CHARCODE EOL)))
                                               USER.CM USER.CM.RDTBL)))
                 (RETURN ALIST))                             (* ; 
                                                           "If the '[BRAVO]' section is the last one")
          (COND
             ((NULL LINE)                                    (* ; "ignore blank lines")
              (GO LLP))
             ((EQ (CAR LINE)
                  'END.OF.FILE)
              (RETURN ALIST))
             ((EQ (NTHCHAR (CAR LINE)
                         1)
                  '%[)

              (* ;; "if '[' is the first character of the line, return the alist so far, because this is the beginning of the next section of the user.cm")

              (RETURN ALIST))
             ((NEQ (CADR LINE)
                   '%:)
              (GO LLP)))

     (* ;; "CDDR to skip the :")

          (SELECTQ (PROG1 (CAR LINE)
                       (SETQ LINE (CDDR LINE)))
              (FONT (CL:WHEN (FIXP (CAR LINE))
                        (NCONC1 [OR (FASSOC 'Font ALIST)
                                    (CAR (PUSH ALIST (CONS 'Font]
                               (create BRAVOFONT
                                      BFFONTNUM _ (POP LINE)
                                      BRFAMILY _ (POP LINE)
                                      BRSIZE _ (POP LINE)))))
              (TABS (SETQ ALIST (NCONC (\TFBRAVO.GETPARAMS LINE '((DefaultTab standard tab width))
                                              'MICATOPOINTS)
                                       ALIST)))
              (MARGINS (SETQ ALIST (NCONC (\TFBRAVO.GETPARAMS LINE '((FirstLineLeftMargin paragraph 
                                                                            margin)
                                                                     (LeftMargin left margin)
                                                                     (RightMargin right margin))
                                                 'MICATOHALFPICAPOINTS)
                                          ALIST)))
              (LEAD (SETQ ALIST (NCONC [\TFBRAVO.GETPARAMS LINE '((ParagraphLeading paragraph leading
                                                                         )
                                                                  (LineLeading line leading]
                                       ALIST)))
              NIL)
          (GO LLP])

(\TFBRAVO.INIT.PARALOOKS
  [LAMBDA (ALIST)                                            (* ; "Edited 13-Aug-2023 11:27 by rmk")
                                                             (* ; "Edited  8-Aug-2023 23:51 by rmk")
                                                             (* ; "Edited  7-Aug-2023 14:59 by rmk")
                                                             (* ; "Edited 31-May-91 15:26 by jds")

    (* ;; "creates the default paragraph looks from the USER.CM.  The numeric values are Bravo defaults as specfied in the Bravo documentation. This assumes that all mica values in the USER.CM have already been converted to points.  ")

    (LET ((INITFMTSPEC (create FMTSPEC using TEDIT.DEFAULT.FMTSPEC)))

         (* ;; "Bravo User Manual says that default tab is 36, the Bravo file format document says 60.  I'm going with 36.")

         (with FMTSPEC INITFMTSPEC (SETQ LEFTMAR (OR (CADR (ASSOC 'LeftMargin ALIST))
                                                     85))
               (SETQ 1STLEFTMAR (OR (CADR (ASSOC 'FirstLineLeftMargin ALIST))
                                    LEFTMAR))
               (SETQ RIGHTMAR (OR (CADR (ASSOC 'RightMargin ALIST))
                                  527))
               (SETQ LINELEAD (OR (CADR (ASSOC 'LineLeading ALIST))
                                  1))
               (SETQ LEADBEFORE (OR (CADR (ASSOC 'ParagraphLeading ALIST))
                                    0))
               (SETQ LEADAFTER 0)
               (SETQ TABSPEC (LIST (OR (CADR (ASSOC 'DefaultTab ALIST))
                                       36)))
               (SETQ FMTSPECIALX 0)
               (SETQ FMTSPECIALY 0))
         INITFMTSPEC])

(\TFBRAVO.INIT.PAGEFORMAT
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited 10-Aug-2023 10:02 by rmk")
                                                             (* gbn "31-May-85 17:13")

    (* ;; 
    "Page numbers centered and 1/2 inch from top of US Letter page.  One inch top/bottom margins")

    (TEXTPROP TEXTOBJ 'PAGENUMBERS T)
    (TEXTPROP TEXTOBJ 'PAGENUMBERX (FIXR (FQUOTIENT (TIMES 8.5 72)
                                                2)))
    (TEXTPROP TEXTOBJ 'PAGENUMBERY (IDIFFERENCE (ITIMES 11 72)
                                          36))
    (TEXTPROP TEXTOBJ 'TOPMARGIN 72)
    (TEXTPROP TEXTOBJ 'BOTTOMMARGIN 72)
    (TEXTPROP TEXTOBJ 'PAGENUMBER.NOTONFIRSTPAGE T])

(\TFBRAVO.GETPARAMS
  [LAMBDA (LINE NAMES SCALE)                                 (* ; "Edited 10-Aug-2023 13:19 by rmk")
                                                             (* ; "Edited  7-Aug-2023 12:34 by rmk")
                                                             (* jds "27-Aug-84 09:37")

    (* ;; "If SCALE is provided, the values after = are numbers that will be scaled by SCALE.")

    (* ;; "LINE is a list of tokens  for a particular line in the USER.CM.  It may contain several parameters separated by commas, where each parameter is heading by a list of identifying names (CDR of the corresponding entry in NAMES)  ending in =.   (CAR N) for each N in NAMES is the tag that identifies that parameter in the resulting alist.")

    (LET (SEGMENTS VALUE ALIST)

         (* ;; "To simplify, first chop LINE into its comma-separated segments")

         (for LTAIL PREV (START _ LINE) on LINE do (if (NULL (CDR LTAIL))
                                                       then (push SEGMENTS START) 
                                                             (* ; "last one")
                                                     elseif (EQ '%, (CAR LTAIL))
                                                       then (CL:WHEN PREV
                                                             (* ; "Cut off the comma")
                                                                (RPLACD PREV NIL))
                                                            (push SEGMENTS START)
                                                            (SETQ START (CDR LTAIL))
                                                            (SETQ PREV START)
                                                     else (SETQ PREV LTAIL)))
         (SETQ SEGMENTS (DREVERSE SEGMENTS))                 (* ; "Now aligned with NAMES")
         [for N SEG in NAMES
            when [SETQ SEG (find S in SEGMENTS
                              suchthat (for NTAIL on (CDR N) as SS in S
                                          always (OR (AND (EQ '= SS)
                                                          (NULL (CDR NTAIL)))
                                                     (STRING.EQUAL SS (CAR NTAIL]
            do (CL:WHEN (SETQ VALUE (CADR (MEMB '= SEG)))
                   (PUSH ALIST (LIST (CAR N)
                                     (SELECTQ SCALE
                                         (MICATOPOINTS (FIXR (FQUOTIENT VALUE MICASPERPT)))
                                         (MICATOHALFPICAPOINTS 
                                              [ITIMES 6 (FIXR (FQUOTIENT VALUE (FTIMES MICASPERPT 6])
                                         VALUE))))]
         (DREVERSE ALIST])
)
(DEFINEQ

(\TFBRAVO.FIND.LAST.TRAILER
  [LAMBDA (BSTREAM)                                          (* ; "Edited  1-Aug-2023 23:35 by rmk")
                                                             (* ; "Edited  8-Sep-2022 17:15 by rmk")
                                                             (* jds "27-Dec-84 19:13")

    (* ;; "scans backwards from the end of the file trying to find the beginning of the last Bravo trailer.  Returns NIL if not found, otherwise T")

    (LET [(STREAM (GETSTREAM BSTREAM 'INPUT]
         (SETFILEPTR STREAM -1)
         (CL:WHEN (AND (IGREATERP (GETFILEPTR STREAM)
                              0)
                       (EQ (\BACKBIN STREAM)
                           (CHARCODE CR)))                   (* ; 
                                                    "empty files are not Bravo files.  It says here!")
             (bind C while (AND (SETQ C (\BACKBIN STREAM))
                                (FMEMB (CHARACTER C)
                                       BRAVO.TRAILER.CHARS)) do NIL)
             (EQ (\PEEKBIN STREAM)
                 (CHARCODE ^Z)))])

(\TFBRAVO.HANDLE.HEADING
  [LAMBDA (BSTREAM TEXTOBJ HEADINGSTART)                     (* ; "Edited 12-Aug-2023 12:25 by rmk")
                                                             (* ; "Edited  9-Aug-2023 23:37 by rmk")
                                                             (* ; "Edited  4-Aug-2023 10:39 by rmk")
                                                             (* ; "Edited  1-Aug-2023 22:24 by rmk")
                                                             (* ; "Edited 31-May-91 15:26 by jds")

    (* ;; "Called from  \TFBRAVO.PARSE.PROFILE.PARA. The heading is a paragraph beginning at the current position, presumably just a line with a looks trailer. Its paralooks have to be marked with special heading properties--heading type and special X and Y locations.")

    (DECLARE (USEDFREE USER.CM.FMTSPEC))
    (LET (HEADINGDESC HEADINGPARA HEADINGFMTSPEC)            (* ; 
                                                          "skip over the trailer of the profile para")
         (SETFILEPTR BSTREAM HEADINGSTART)
         (SETQ HEADINGPARA (\TFBRAVO.PARSE.PARA USER.CM.FMTSPEC BSTREAM TEXTOBJ))
         (SETQ HEADINGFMTSPEC (fetch (PARA PARAFMTSPEC) of HEADINGPARA))
         (replace (FMTSPEC FMTPARATYPE) of HEADINGFMTSPEC with 'PAGEHEADING)

         (* ;; "This is where the vertical tab info is placed for the heading, remove the special x and y and use them as the position for the descriptor")

         (SETQ HEADINGDESC (LIST (GENSYM 'PageHeading)
                                 (OR (fetch (FMTSPEC FMTSPECIALX) of HEADINGFMTSPEC)
                                     0)
                                 (OR (fetch (FMTSPEC FMTSPECIALY) of HEADINGFMTSPEC)
                                     0)))
         (replace (FMTSPEC FMTPARASUBTYPE) of HEADINGFMTSPEC with (CAR HEADINGDESC))
         (replace (FMTSPEC FMTSPECIALX) of HEADINGFMTSPEC with (CADR HEADINGDESC))
         (replace (FMTSPEC FMTSPECIALY) of HEADINGFMTSPEC with (CADDR HEADINGDESC))
                                                             (* ; 
                                                             "now write out the heading paragraph")
         (\TFBRAVO.WRITE.PARAGRAPH HEADINGPARA BSTREAM TEXTOBJ MAX.FIXP)
         HEADINGDESC])

(\TFBRAVO.INSTALL.PAGEFORMAT
  [LAMBDA (TEXTOBJ)                                          (* ; "Edited  8-Aug-2023 00:14 by rmk")
                                                             (* ; "Edited  6-Aug-2023 09:55 by rmk")
                                                             (* ; "Edited  1-Aug-2023 08:44 by rmk")
                                                            (* ; "Edited 13-Jun-90 01:00 by mitani")

    (* ;; "using the information from the profile paragraphs, this function installs the pageframes")

    (LET (PAGENUMBERS PAGENUMBERX PAGENUMBERY TOPMARGIN BOTTOMMARGIN NUMBEROFCOLUMNS BETWEENCOLUMNS 
                COLUMNWIDTH ODDHEADINGDESC HEADINGDESC EVENHEADINGDESC HEADING.NOTONFIRSTPAGE 
                PAGENUMBER.NOTONFIRSTPAGE EVENHEADING.NOTONFIRSTPAGE ODDHEADING.NOTONFIRSTPAGE FIRST
                VERSO RECTO PAGEPROPS ROMAN)
         (for VAR
            in '(PAGENUMBERS PAGENUMBERX PAGENUMBERY TOPMARGIN BOTTOMMARGIN NUMBEROFCOLUMNS 
                       COLUMNWIDTH BETWEENCOLUMNS ODDHEADINGDESC HEADINGDESC EVENHEADINGDESC 
                       HEADING.NOTONFIRSTPAGE PAGENUMBER.NOTONFIRSTPAGE EVENHEADING.NOTONFIRSTPAGE 
                       ODDHEADING.NOTONFIRSTPAGE) do (SET VAR (TEXTPROP TEXTOBJ VAR)))

         (* ;; "this assumes that TEdit does not build a default page spec.  If it ever does, then this logic must change.")

         (* ;; "the default page frame is always built.  It is sometimes built as the only page frame when there is no headings specified.  However, if heading is specified with the not-on-first-page specified, then we must build the default page frame simply for that reason")

         (CL:WHEN NUMBEROFCOLUMNS

             (* ;; "if this is to be printed multicolumn then determine the column width from the numberofcolumns and the space between them. 72 is points per inch, US Letter width.")

             (SETQ COLUMNWIDTH (IQUOTIENT (IDIFFERENCE [IDIFFERENCE (CONSTANT (TIMES 8.5 72))
                                                              (ITIMES 2 (TEXTPROP TEXTOBJ
                                                                               'EDGEMARGIN]
                                                 (ITIMES (SUB1 NUMBEROFCOLUMNS)
                                                        BETWEENCOLUMNS))
                                      NUMBEROFCOLUMNS)))
         (CL:WHEN ROMAN
             [SETQ PAGEPROPS `(FOLIOINFO (FOLIOFORMAT ,(CL:IF (EQ ROMAN 'x)
                                                           'LOWERROMAN
                                                           'UPPERROMAN)])
         (SETQ FIRST (TEDIT.SINGLE.PAGEFORMAT (AND PAGENUMBERS (NOT PAGENUMBER.NOTONFIRSTPAGE))
                            PAGENUMBERX PAGENUMBERY NIL NIL 0 0 TOPMARGIN BOTTOMMARGIN 
                            NUMBEROFCOLUMNS COLUMNWIDTH BETWEENCOLUMNS [COND
                                                                          (HEADINGDESC
                                                                           (CL:UNLESS 
                                                                               HEADING.NOTONFIRSTPAGE
                                                                                  (LIST HEADINGDESC))
                                                                           )
                                                                          (ODDHEADINGDESC
                                                                           (CL:UNLESS 
                                                                            ODDHEADING.NOTONFIRSTPAGE
                                                                                  (LIST HEADINGDESC))
                                                                           )
                                                                          (EVENHEADINGDESC
                                                                           (CL:UNLESS 
                                                                           EVENHEADING.NOTONFIRSTPAGE
                                                                                  (LIST 
                                                                                      EVENHEADINGDESC
                                                                                        ]
                            'POINTS PAGEPROPS))
         (CL:WHEN (OR ODDHEADINGDESC HEADING.NOTONFIRSTPAGE PAGENUMBER.NOTONFIRSTPAGE)
             (SETQ VERSO (TEDIT.SINGLE.PAGEFORMAT PAGENUMBERS PAGENUMBERX PAGENUMBERY NIL NIL 0 0 
                                TOPMARGIN BOTTOMMARGIN NUMBEROFCOLUMNS COLUMNWIDTH BETWEENCOLUMNS
                                (COND
                                   (ODDHEADINGDESC (LIST ODDHEADINGDESC))
                                   (HEADINGDESC (LIST HEADINGDESC)))
                                'POINTS PAGEPROPS)))
         (CL:WHEN (OR EVENHEADINGDESC HEADING.NOTONFIRSTPAGE PAGENUMBER.NOTONFIRSTPAGE)
             (SETQ RECTO (TEDIT.SINGLE.PAGEFORMAT PAGENUMBERS PAGENUMBERX PAGENUMBERY NIL NIL 0 0 
                                TOPMARGIN BOTTOMMARGIN NUMBEROFCOLUMNS COLUMNWIDTH BETWEENCOLUMNS
                                (COND
                                   (EVENHEADINGDESC (LIST EVENHEADINGDESC))
                                   (HEADINGDESC (LIST HEADINGDESC)))
                                'POINTS PAGEPROPS)))
         (TEDIT.PAGEFORMAT TEXTOBJ (TEDIT.COMPOUND.PAGEFORMAT FIRST VERSO RECTO])

(\TFBRAVO.PARSE.PROFILE.PARA
  [LAMBDA (BSTREAM PARAGRAPH TEXTOBJ START)                  (* ; "Edited 10-Aug-2023 10:37 by rmk")
                                                             (* ; "Edited  1-Aug-2023 13:29 by rmk")
                                                             (* gbn " 3-Jun-85 17:23")

    (* ;; "Parse a Bravo profile paragraph, and set up the corresponding TEdit page looks, headings, page numbers.")

    (* ;; "START is the beginning of the profile lines, current fileptr (END) is the end of its looks information (which is kind of odd, since %"Margins: %" has no looks.  At best it sets carryover tabs.")

    (* ;; "This code processes the profile settings, storing them away as TEXTOBJ properties for later installation.  Presumably, if there are multiple valid profile paragraphs in the same file, then the settings of the last one will override earlier ones.")

    (* ;; "Heading lines are followed by separate paragraphs containing the formatted text of the heading. The parameters are saved in the HEADINGDESC")

    (* ;; "Returns T if this is truly a profile paragraph, beginning with one of the profile keywords, otherwise NIL.  Either way, BSTREAM is positioned at the beginning of the next  unprocessed paragraph")

    (* ;; "START")

    (bind LINE (END _ (GETFILEPTR BSTREAM)) first (SETFILEPTR BSTREAM START)
       while (ILESSP (GETFILEPTR BSTREAM)
                    END)
       do [
           (* ;; "Each RATOMS reads a line, the last line including the trailer characters.  ^Z is a break so processing on the last line can stop at that token.  Presumably the RATOMS will have reached END (and not gone past it), but we set the fileptr back to that position just in case, to set up for the next paragraph. Semi-colon is a sepr in the readtable, we don't have to worry about those.")

           (SETQ LINE (U-CASE (RATOMS (CHARACTER (CHARCODE CR))
                                     BSTREAM PROFILE.PARA.RDTBL)))

           (* ;; "Now we have to parse, checking and skipping the irrelevant keywords. Each keyword starts a line, each while runs until its end-token (CR?)")

           (SELECTQ (pop LINE)
               (PAGE                                         (* ; "parse the page numbers stuff")
                     (\TFBRAVO.ASSERT 'NUMBERS (pop LINE))
                     (while LINE do (SELECTQ (pop LINE)
                                        (NO (TEXTPROP TEXTOBJ 'PAGENUMBERS 'NO))
                                        (YES                 (* ; "this is default ")
                                             (TEXTPROP TEXTOBJ 'PAGENUMBERS NIL))
                                        (FIRST (\TFBRAVO.ASSERT 'PAGE (pop LINE))
                                               (TEXTPROP TEXTOBJ 'FIRSTPAGENO (pop LINE)))
                                        (NOT-ON-FIRST-PAGE 
                                             (TEXTPROP TEXTOBJ 'PAGENUMBER.NOTONFIRSTPAGE T))
                                        (X (TEXTPROP TEXTOBJ 'PAGENUMBERX (\TOPOINTS 'WIDTH)))
                                        (Y (TEXTPROP TEXTOBJ 'PAGENUMBERY (\TOPOINTS 'HEIGHT)))
                                        (ROMAN               (* ; "Should be X or x")
                                               (TEXTPROP TEXTOBJ 'ROMANS (pop LINE)))
                                        NIL)))
               (COLUMNS                                      (* ; "parse the columns numbers stuff")
                        (TEXTPROP TEXTOBJ 'NUMBEROFCOLUMNS (pop LINE))
                        (while LINE do (SELECTQ (pop LINE)
                                           (EDGE (\TFBRAVO.ASSERT 'MARGIN (pop LINE))
                                                 (TEXTPROP TEXTOBJ 'EDGEMARGIN (\TOPOINTS
                                                                                'WIDTH)))
                                           (BETWEEN (\TFBRAVO.ASSERT 'COLUMNS (pop LINE))
                                                    (TEXTPROP TEXTOBJ 'BETWEENCOLUMNS
                                                           (\TOPOINTS 'WIDTH)))
                                           NIL)))
               (MARGINS                                      (* ; "parse the margins stuff")
                        (while LINE do (SELECTQ (pop LINE)
                                           (TOP (TEXTPROP TEXTOBJ 'TOPMARGIN (\TOPOINTS 'HEIGHT)))
                                           (BOTTOM (TEXTPROP TEXTOBJ 'BOTTOMMARGIN
                                                          (\TOPOINTS 'HEIGHT)))
                                           (BINDING (TEXTPROP TEXTOBJ 'BINDING (\TOPOINTS)))
                                           NIL)))
               (ODD (\TFBRAVO.ASSERT 'HEADING (pop LINE))
                    (CL:WHEN (EQ (CAR LINE)
                                 'NOT-ON-FIRST-PAGE)
                        (pop LINE)
                        (TEXTPROP TEXTOBJ 'ODDHEADING.NOTONFIRSTPAGE T))
                                                             (* ; "Heading is on the next line")
                    (TEXTPROP TEXTOBJ 'ODDHEADINGDESC (\TFBRAVO.HANDLE.HEADING BSTREAM TEXTOBJ END))

                    (* ;; "We advance past the heading paragraph, presumably we are done.")

                    (SETQ END (GETFILEPTR BSTREAM)))
               (EVEN (\TFBRAVO.ASSERT (pop LINE)
                            'HEADING)
                     (CL:WHEN (EQ (CAR LINE)
                                  'NOT-ON-FIRST-PAGE)
                         (pop LINE)
                         (TEXTPROP TEXTOBJ 'EVENHEADING.NOTONFIRSTPAGE T))
                     (TEXTPROP TEXTOBJ 'EVENHEADINGDESC (\TFBRAVO.HANDLE.HEADING BSTREAM TEXTOBJ END)
                            )
                     (SETQ END (GETFILEPTR BSTREAM)))
               (HEADING (CL:WHEN (EQ (CAR LINE)
                                     'NOT-ON-FIRST-PAGE)
                            (pop LINE)
                            (TEXTPROP TEXTOBJ 'HEADING.NOTONFIRSTPAGE T))
                        (TEXTPROP TEXTOBJ 'HEADINGDESC (\TFBRAVO.HANDLE.HEADING BSTREAM TEXTOBJ END))
                        (SETQ END (GETFILEPTR BSTREAM)))
               ((LINE PRIVATE)                               (* ; 
                                                           "Line numbers, private data not supported")
                    NIL)
               (PROGN                                        (* ; 
                                                       "Not a profile line, presumably a mistaken q.")
                      (SETFILEPTR BSTREAM END)
                      (RETURN NIL] repeatuntil [EQ (CAR LINE)
                                                   (CONSTANT (CHARACTER (CHARCODE ^Z]
       finally 

             (* ;; "Set the file to the beginning of the next paragraph")

             (SETFILEPTR BSTREAM END)
             (RETURN T])

(\TFBRAVO.WRITE.RUN
  [LAMBDA (RUN BSTREAM PARAFMTSPEC TEXTOBJ PRIORFONTNAME PARA)
                                                             (* ; "Edited 13-Aug-2023 19:56 by rmk")
                                                            (* ; "Edited 13-Jun-2021 09:44 by rmk:")

    (* ;; "A Bravo run can include many CR's each of which should end a separate TEDIT paragraph.  Unless we want to think of those as paragraph internal meta-CRs ?")

    (* ;; "At exit, BSTREAM's starting fileptr is guaranteed to be restored, even if the INCLUDE moves things around.")

    (CL:WHEN (IGREATERP (fetch (RUN RUNLENGTH) of RUN)
                    0)
        (LET [START TABNAME ORIGCHNO (RUNORIGPTR (GETFILEPTR BSTREAM))
                    (ORIGCHNO (ADD1 (TEXTLEN TEXTOBJ]        (* ; "Convert to XCCS strings if needed")
             (CL:UNLESS (\TFBRAVO.XCCSCONVERT BSTREAM RUN TEXTOBJ PRIORFONTNAME)
                 (SETQ START (fetch (RUN RUNSTART) of RUN))
                 (SETQ PARAFMTSPEC (\TFBRAVO.ADD.NAMEDTAB RUN PARAFMTSPEC))
                 (TEDIT.INCLUDE TEXTOBJ BSTREAM START (IPLUS START (fetch (RUN RUNLENGTH)
                                                                      of RUN))
                        T T)
                 (\TEDIT.UPDATE.SEL TEXTOBJ ORIGCHNO (fetch (RUN RUNLENGTH) of RUN)
                        'RIGHT NIL T)
                 (TEDIT.LOOKS TEXTOBJ (fetch (RUN RUNLOOKS) of RUN)))
             (AND NIL (TEDIT.PARALOOKS TEXTOBJ PARAFMTSPEC ORIGCHNO (fetch (RUN RUNLENGTH)
                                                                       of RUN)))
             (SETFILEPTR BSTREAM RUNORIGPTR)))
    PARAFMTSPEC])
)
(DEFINEQ

(\TFBRAVO.WRITE.PARAGRAPH
  [LAMBDA (PARA BSTREAM TEXTOBJ)                             (* ; "Edited 13-Aug-2023 18:57 by rmk")
                                                             (* ; "Edited 12-Aug-2023 12:06 by rmk")
                                                             (* ; "Edited 31-May-91 15:26 by jds")

    (* ;; "outputs the character runs, writes an EOL, then apply paragraph looks.  Returns the smallest left margin seen to date")

    (LET ((PARAFMTSPEC (fetch (PARA PARAFMTSPEC) of PARA))
          (ORIGCHNO (ADD1 (TEXTLEN TEXTOBJ)))
          (PARORIGPTR (GETFILEPTR BSTREAM))
          LEN)
         (\TEDIT.UPDATE.SEL TEXTOBJ ORIGCHNO 0 'LEFT NIL T)

         (* ;; "PRIORCHARLOOKS needed in case of HIPPO conversion")

         (SETQ LEN (for RUN (PRIORFONTNAME _ (fetch (CHARLOOKS CLNAME) of USER.CM.CHARLOOKS))
                      in (fetch (PARA RUNS) of PARA)
                      sum (SETQ PARAFMTSPEC (\TFBRAVO.WRITE.RUN RUN BSTREAM PARAFMTSPEC TEXTOBJ 
                                                   PRIORFONTNAME PARA))
                          (SETQ PRIORFONTNAME (fetch (CHARLOOKS CLNAME) of (fetch (RUN RUNLOOKS)
                                                                              of RUN)))
                          (fetch (RUN RUNLENGTH) of RUN)))

         (* ;; "EOL to end the paragraph.  We might not want this if the last character was FORM")

         (\INSERTEOL (CHARCODE EOL)
                (IPLUS ORIGCHNO LEN)
                TEXTOBJ)
         (TEDIT.PARALOOKS TEXTOBJ PARAFMTSPEC ORIGCHNO (ADD1 LEN))
         (\TEDIT.UPDATE.SEL TEXTOBJ (IPLUS ORIGCHNO LEN)
                0
                'RIGHT NIL T)
         (SETFILEPTR BSTREAM PARORIGPTR])

(\TFBRAVO.PARSE.PARA
  [LAMBDA (OLDFMTSPEC BSTREAM TEXTOBJ)                       (* ; "Edited 14-Aug-2023 09:26 by rmk")
                                                             (* ; "Edited  9-Aug-2023 23:36 by rmk")
                                                             (* ; "Edited  5-Aug-2023 21:18 by rmk")
                                                             (* ; "Edited  1-Aug-2023 23:17 by rmk")
                                                            (* ; "Edited 13-Jun-2021 09:46 by rmk:")

    (* ;; "OLDFMTSPEC are the paragraph looks of the previous paragraph, and RUNi are the character runs in the form returned by READCHARACTERLOOKS, except that the character count for the last run has been filled in correctly.  Leaves the input file pointer at the end of the trailer, after the CR.")

    (* ;; "^Z marks the end of a Bravo-looks paragraph which may have internal CR's that mark the end of Tedit paragraphs.  The Bravo runs with different charlooks want to end up in different pieces all within the same paragraph.")

    (* ;; 
    "The carriage return that ends the trailer is its own final run, the trailer itself is skipped.")

    (DECLARE (USEDFREE USER.CM.CHARLOOKS USER.CM.FMTSPEC))
    (LET (BYTE PLEN FORMATPTR ENDCHAR FMTSPEC RUNS FORMATCHARS PARAGRAPH TABPTRS XCCSTRANSLATIONPTRS?
               (ORIGPTR (GETFILEPTR BSTREAM))
               (FMTSPEC USER.CM.FMTSPEC))

         (* ;; "BYTE=NIL at EOF, no terminating ^Z")

         (until (SELCHARQ (SETQ BYTE (BIN BSTREAM))
                     (^Z                                     (* ; 
                                                           "End of Bravo paragraph, maybe some looks")
                         (SETQ FORMATPTR (SUB1 (GETFILEPTR BSTREAM)))
                                                             (* ; "Exclude the ^Z")
                         (SETQ PLEN (IDIFFERENCE FORMATPTR ORIGPTR))
                                                             (* ; 
                                                       "Length of the Bravo paragraph without the ^Z")
                         (SETQ FORMATCHARS (DREVERSE FORMATCHARS))
                         (SETQ TABPTRS (DREVERSE TABPTRS))
                         (SETQ XCCSTRANSLATIONPTRS? (DREVERSE XCCSTRANSLATIONPTRS?))
                         T)
                     ((CR FORM LF) 
                                   (* ;; 
                                   "Remember the position just after an internal formatting char")

                          (PUSH FORMATCHARS (CONS BYTE (GETFILEPTR BSTREAM)))
                          NIL)
                     (TAB                                    (* ; "Collect tab byte positions")
                          (PUSH TABPTRS (SUB1 (GETFILEPTR BSTREAM)))
                          NIL)
                     (NIL T)
                     (CL:WHEN (ILEQ BYTE (CHARCODE ^Y))      (* ; 
                                               "Could be timesroman/helvetica that needs translation")
                         (PUSH XCCSTRANSLATIONPTRS? (SUB1 (GETFILEPTR BSTREAM)))
                         NIL)))
         (SELCHARQ BYTE
              (^Z (SETQ FMTSPEC (\TFBRAVO.READ.PARALOOKS OLDFMTSPEC BSTREAM))
                  [SETQ RUNS (COND
                                [(POP FMTSPEC)               (* ; 
                                                      "T if there are charlooks for at least one run")
                                 (bind RUN RLEN (RUNSTART _ ORIGPTR)
                                       (OLDCHARLOOKS _ USER.CM.CHARLOOKS)
                                    do (SETQ RUN (\TFBRAVO.READ.CHARLOOKS BSTREAM OLDCHARLOOKS))
                                       (push RUNS RUN)
                                       (replace (RUN RUNSTART) of RUN with RUNSTART)
                                       (SETQ RLEN (fetch (RUN RUNLENGTH) of RUN))
                                       (if RLEN
                                           then (ADD RUNSTART RLEN) 
                                                             (* ; "Set up for next run")
                                                (ADD PLEN (IMINUS RLEN))
                                                (SETQ OLDCHARLOOKS (fetch (RUN RUNLOOKS) of RUN))
                                         else 
                                              (* ;; 
                                              "RLEN is NIL on the last run, it gets what's left.")

                                              (replace (RUN RUNLENGTH) of RUN with PLEN)
                                              (RETURN (DREVERSE RUNS]
                                (T                           (* ; "One run, no charlooks")
                                   (LIST (create RUN
                                                RUNLENGTH _ PLEN
                                                RUNLOOKS _ USER.CM.CHARLOOKS
                                                RUNSTART _ ORIGPTR]

                  (* ;; "Calculate the offsets of tabs within each run, maybe for fancy table configurations. Also mark runs that might need Alto-to-XCCS character-code translation")

                  [for RUNTAIL RUN RSTART NEXTRSTART (TPTRS _ TABPTRS)
                       (TRANSPTRS _ XCCSTRANSLATIONPTRS?) on RUNS
                     eachtime (SETQ RUN (CAR RUNTAIL))
                           (SETQ RSTART (fetch (RUN RUNSTART) of RUN))
                           (SETQ NEXTRSTART (OR (AND (CADR RUNTAIL)
                                                     (fetch (RUN RUNSTART) of (CADR RUNTAIL)))
                                                MAX.FIXP))
                     do (replace (RUN RUNTABOFFSETS) of RUN with (for TABPTR in old TPTRS
                                                                    while (ILESSP TABPTR NEXTRSTART)
                                                                    when (IGEQ TABPTR RSTART)
                                                                    collect (IDIFFERENCE TABPTR 
                                                                                   RSTART)))
                        (replace (RUN RUNXCCSTRANSLATION?) of RUN
                           with (find TRANSPTR in old TRANSPTRS while (ILESSP TRANSPTR NEXTRSTART)
                                   suchthat (IGEQ TRANSPTR RSTART])
              (NIL)
              (SHOULDNT "Bravo paragraph not ending in ^Z, CR, EOF"))
         (create PARA
                PARAFMTSPEC _ FMTSPEC
                RUNS _ RUNS
                FORMATCHARS _ FORMATCHARS
                TABPTRS _ TABPTRS])

(\TFBRAVO.READ.PARALOOKS
  [LAMBDA (OLDFMTSPEC BSTREAM)                               (* ; "Edited 13-Aug-2023 19:58 by rmk")
                                                             (* ; "Edited  3-Aug-2023 00:20 by rmk")
                                                             (* ; "Edited 31-May-91 15:26 by jds")
    (DECLARE (USEDFREE USER.CM.FMTSPEC))

    (* ;; 
    "Decodes bravo paragraph looks into a TEDIT FMTSPEC.  OLDFMTSPEC is used just for its tabs.")

    (bind LMFLAG 1LMFLAG COMMAND TABX TABNAME TABDEFAULT NAMEDTABS (NEWFMTSPEC _
                                                                          (create FMTSPEC
                                                                             using USER.CM.FMTSPEC))
       first (CL:UNLESS (EQ 'PROFILE (fetch (FMTSPEC FMTPARATYPE) of OLDFMTSPEC))

                 (* ;; "It appears that heading-tabs don't carry over to other paragraphs")

                 (SETQ TABDEFAULT (CAR (fetch (FMTSPEC TABSPEC) of OLDFMTSPEC)))
                 (SETQ NAMEDTABS (COPY (fetch (FMTSPEC FMTUSERINFO) of OLDFMTSPEC))))
       do (SELCHARQ (SETQ COMMAND (BIN BSTREAM))
               (l (SETQ LMFLAG T)
                  (replace (FMTSPEC LEFTMAR) of NEWFMTSPEC with (\TFBRAVO.READNUM? BSTREAM T
                                                                       'MICATOHALFPICAPOINTS)))
               (d (SETQ 1LMFLAG T)
                  (replace (FMTSPEC 1STLEFTMAR) of NEWFMTSPEC with (\TFBRAVO.READNUM? BSTREAM T
                                                                          'MICATOHALFPICAPOINTS)))
               (z (replace (FMTSPEC RIGHTMAR) of NEWFMTSPEC with (\TFBRAVO.READNUM? BSTREAM T
                                                                        'MICATOHALFPICAPOINTS)))
               (x (replace (FMTSPEC LINELEAD) of NEWFMTSPEC with (\TFBRAVO.READNUM? BSTREAM T)))
               (e (replace (FMTSPEC LEADAFTER) of NEWFMTSPEC with 0)
                  (replace (FMTSPEC LEADBEFORE) of NEWFMTSPEC with (\TFBRAVO.READNUM? BSTREAM T)))
               (y                                            (* ; "vertical tabs are supported")
                  (replace (FMTSPEC FMTSPECIALX) of NEWFMTSPEC with 0)
                  (replace (FMTSPEC FMTSPECIALY) of NEWFMTSPEC with (\TFBRAVO.READNUM? BSTREAM T)))
               (k (replace (FMTSPEC FMTHEADINGKEEP) of NEWFMTSPEC with (\TFBRAVO.READNUM? BSTREAM T)))
               (w 'HardcopyMode)
               (j (replace (FMTSPEC QUAD) of NEWFMTSPEC with 'JUSTIFIED))
               (c (replace (FMTSPEC QUAD) of NEWFMTSPEC with 'CENTERED))
               (q 
                  (* ;; "Profiles are marked here but then interpreted at the top")

                  (replace (FMTSPEC FMTPARATYPE) of NEWFMTSPEC with 'PROFILE))
               (%(                                           (* ; "Collect the named tabs")
                   (SETQ TABX (\TFBRAVO.READNUM? BSTREAM T)) (* ; "Name or X position")
                   (SELCHARQ (SETQ COMMAND (BIN BSTREAM))
                        (%) (SETQ TABDEFAULT (FIXR (FQUOTIENT TABX MICASPERPT))))
                        (%, (CL:WHEN (IGREATERP TABX 14)
                                   (HELP TABX " is not a legal tab-name"))
                            (SETQ TABNAME TABX)
                            (SETQ TABX (\TFBRAVO.READNUM? BSTREAM T))
                            (CL:UNLESS (EQ (CHARCODE %))
                                           (BIN BSTREAM))
                                   (HELP "MISSING CLOSING ) IN TABSPEC"))

                            (* ;; "Here we collect the tabs declared in this paragraph or inherited from before. 65535 means delete  that the named tab (possibly inherited) is removed, otherwise the name is given a new TABX for all runs of this paragraph.")

                            [if (EQ TABX 65535)
                                then (SETQ NAMEDTABS (DREMOVE (ASSOC TABNAME NAMEDTABS)
                                                            NAMEDTABS))
                              else (RPLACD [OR (ASSOC TABNAME NAMEDTABS)
                                               (CAR (push NAMEDTABS (CONS TABNAME]
                                          (create TAB
                                                 TABX _ (FIXR (FQUOTIENT TABX MICASPERPT))
                                                 TABKIND _ 'LEFT])
                        (HELP "ILLFORMED BRAVO TAB SPEC")))
               (SPACE)
               ((CR \) 
                    (CL:WHEN (AND LMFLAG (NOT 1LMFLAG))      (* ; 
                                   "If there was a Left margin but no firstline left then default it")
                        (replace (FMTSPEC 1STLEFTMAR) of NEWFMTSPEC with (fetch (FMTSPEC LEFTMAR)
                                                                            of NEWFMTSPEC)))
                    (replace TABSPEC of NEWFMTSPEC with (CONS TABDEFAULT))

                    (* ;; "If specified, a particular named tab will be chosen by the run-writer. Sort them in increasing TABX")

                    [replace (FMTSPEC FMTUSERINFO) of NEWFMTSPEC
                       with (SORT NAMEDTABS (FUNCTION (LAMBDA (T1 T2)
                                                        (ILEQ (fetch (TAB TABX) of (CDR T1))
                                                              (fetch (TAB TABX) of (CDR T2]

                    (* ;; "Tell caller whether charlooks follow")

                    (RETURN (CONS (EQ COMMAND (CHARCODE \))
                                  NEWFMTSPEC)))
               (HELP (CHARACTER COMMAND)
                     '" is not a legal paragraph look"])

(\TFBRAVO.INSTALL.PARATABS
  [LAMBDA (NEWFMTSPEC TABDEFAULT NAMEDTABS)                  (* ; "Edited 12-Aug-2023 11:59 by rmk")

    (* ;; "Not sure about the comment below.  If we have a named-tab run (a length-1 run with just a tab character), then the piece written for that run should have a TABSPEC with just that tab.  Here we should verify tha length-1/tab, other wise this is an unsupported color specification and should be discarded.")

    [AND NIL (SETQ NAMEDTABS (SORT NAMEDTABS (FUNCTION (LAMBDA (T1 T2)
                                                         (ILEQ (fetch (TAB TABX) of (CDR T1))
                                                               (fetch (TAB TABX) of (CDR T2]
    (replace TABSPEC of NEWFMTSPEC with (CONS TABDEFAULT))
    (replace (FMTSPEC FMTUSERINFO) of NEWFMTSPEC with NAMEDTABS])

(\TFBRAVO.READ.CHARLOOKS
  [LAMBDA (BSTREAM OLDCHARLOOKS)                             (* ; "Edited 13-Aug-2023 14:12 by rmk")
                                                             (* ; "Edited 10-Aug-2023 07:25 by rmk")
                                                             (* ; "Edited  8-Aug-2023 17:29 by rmk")
                                                             (* ; "Edited  5-Aug-2023 21:18 by rmk")
                                                             (* ; "Edited  1-Aug-2023 23:18 by rmk")
                                                             (* ; "Edited 31-May-91 15:25 by jds")

    (* ;; "Read the character looks trailer building a TEDIT charlooks record.  Most fields are immediately valid, however, the tabcolor is stored in the cluserinfo field of the looks, and the font is still in numeric form")

    (* ;; "The charlooks trailer (from \ to CR) consists of a sequence of run-looks.  Each run-look is a sequence of commands followed by the length of the run.  If the first run has no commands (i.e. the \ is followed immediately by a length-number), than the first run gets the USER.CM default looks.")

    (bind COMMAND LEN VALUE TABNAMES (NEWCHARLOOKS _ (create CHARLOOKS using OLDCHARLOOKS))
       do (CL:WHEN (OR (SETQ LEN (\TFBRAVO.READNUM? BSTREAM))
                       (AND (EQ (CHARCODE CR)
                                (\PEEKBIN BSTREAM T))
                            (BIN BSTREAM)))

              (* ;; "Wait til end to do font, so we have the bold/italic looks for sure.  Last run may not have an explicit length")

              (replace (CHARLOOKS CLUSERINFO) of NEWCHARLOOKS with (DREVERSE TABNAMES))
              (RETURN (create RUN
                             RUNLENGTH _ LEN
                             RUNLOOKS _ (\TFBRAVO.FONT.FROM.CHARLOOKS NEWCHARLOOKS)))) 

          (* ;; "Some command letters are followed by numeric arguments (f1 vs b). Any spaces around command letters are skipped.  BIN is used here for one-byte arguments, but perhaps a version that skips initial spaces would be safter?")

          (SELCHARQ (SETQ COMMAND (BIN BSTREAM))
               (s (replace (CHARLOOKS CLSTRIKE) of NEWCHARLOOKS with T))
               (S (replace (CHARLOOKS CLSTRIKE) of NEWCHARLOOKS with NIL))
               (u (replace (CHARLOOKS CLULINE) of NEWCHARLOOKS with T))
               (U (replace (CHARLOOKS CLULINE) of NEWCHARLOOKS with NIL))
               (b (replace (CHARLOOKS CLBOLD) of NEWCHARLOOKS with T))
               (B (replace (CHARLOOKS CLBOLD) of NEWCHARLOOKS with NIL))
               (i (replace (CHARLOOKS CLITAL) of NEWCHARLOOKS with T))
               (I (replace (CHARLOOKS CLITAL) of NEWCHARLOOKS with NIL))
               (g "Graphic T --unsupported")
               (G "Graphic NIL")
               (v (replace (CHARLOOKS CLINVISIBLE) of NEWCHARLOOKS with NIL))
               (V (AND NIL (replace (CHARLOOKS CLINVISIBLE) of NEWCHARLOOKS with T)))
               (t 
                  (* ;; "Collect the named tabs for writerun")

                  (PUSH TABNAMES (CHARACTER (BIN BSTREAM))))
               (f                                            (* ; "Save the fontface until the end")
                  (SETQ VALUE (CHARACTER (BIN BSTREAM)))
                  (replace (CHARLOOKS CLSIZE) of NEWCHARLOOKS with (\TFBRAVO.GETFONT VALUE BRSIZE))
                  (replace (CHARLOOKS CLNAME) of NEWCHARLOOKS with (\TFBRAVO.GETFONT VALUE BRFAMILY)))
               (o (SETQ VALUE (\TFBRAVO.READNUM? BSTREAM T)) (* ; "Superscript")
                  (replace (CHARLOOKS CLOFFSET) of NEWCHARLOOKS with (CL:IF (IGREATERP VALUE 127)
                                                                         (IDIFFERENCE VALUE 256)
                                                                         VALUE)))
               (SPACE)
               (HELP (CHARACTER COMMAND)
                     " is not a legal character look"])

(\TFBRAVO.FONT.FROM.CHARLOOKS
  [LAMBDA (CHARLOOKS)                                        (* ; "Edited  1-Aug-2023 13:21 by rmk")
                                                             (* ; "Edited 31-May-91 15:26 by jds")

    (* ;; "Takes a TEDIT CHARLOOKS with fields filled in (CLNAME = family name) and creates the font to fill it.")

    [replace (CHARLOOKS CLFONT) of CHARLOOKS with (FONTCREATE (fetch (CHARLOOKS CLNAME) of CHARLOOKS)
                                                         (fetch (CHARLOOKS CLSIZE) of CHARLOOKS)
                                                         (LIST (CL:IF (fetch (CHARLOOKS CLBOLD)
                                                                         of CHARLOOKS)
                                                                   'BOLD
                                                                   'MEDIUM)
                                                               (CL:IF (fetch (CHARLOOKS CLITAL)
                                                                         of CHARLOOKS)
                                                                   'ITALIC
                                                                   'REGULAR)
                                                               'REGULAR]
    CHARLOOKS])
)
(DEFINEQ

(\TFBRAVO.READNUM?
  [LAMBDA (BSTREAM REQUIRED SCALE)                           (* ; "Edited 10-Aug-2023 13:06 by rmk")
                                                             (* ; "Edited  9-Aug-2023 07:53 by rmk")
                                                             (* ; "Edited  5-Aug-2023 20:31 by rmk")

    (* ;; "If a digit appears as the first non-space character from the current stream position, the integer starting at that digit is returned.  If MICAS, it is assumed that NUM is in micas and should be scaled to a multiple of 6 points (= 1/2 pica so that Tedit's margins aren't displayed as goofy decimals.  The stream is left positioned before the first nondigit nonspace character.")

    (bind C (NUM _ 0) first (while (EQ (CHARCODE SPACE)
                                       (SETQ C (\PEEKCCODE BSTREAM T))) do (BIN BSTREAM))
                            (CL:UNLESS (DIGITCHARP C)
                                (CL:WHEN REQUIRED
                                    (ERROR "Bravo command without a numeric argument at position "
                                           (GETFILEPTR BSTREAM)))
                                (RETURN NIL)) do [SETQ NUM (IPLUS (ITIMES NUM 10)
                                                                  (IDIFFERENCE (BIN BSTREAM)
                                                                         (CHARCODE 0]
       repeatwhile (DIGITCHARP (\PEEKCCODE BSTREAM T))
       finally (while (EQ (CHARCODE SPACE)
                          (\PEEKCCODE BSTREAM T)) do (BIN BSTREAM))
             (RETURN (SELECTQ SCALE
                         (MICATOHALFPICAPOINTS 
                              [ITIMES 6 (FIXR (FQUOTIENT NUM (FTIMES MICASPERPT 6])
                         (MICATOPOINTS (FIXR (FQUOTIENT NUM MICASPERPT)))
                         NUM])
)
(DEFINEQ

(\TFBRAVO.ASSERT
  [LAMBDA (X Y)                                              (* ; "Edited  9-Aug-2023 10:32 by rmk")
                                                             (* gbn "19-Sep-84 21:39")
    (CL:UNLESS (EQ X Y)
        (HELP "While parsing profile paragraph, " (CONCAT X " was expected, but " Y " was found.")))])

(\TEST.CHARACTER.LOOKS
  [LAMBDA (BSTREAM)                                          (* ; "Edited  2-Aug-2023 07:48 by rmk")
                                                             (* ; "Edited 29-Jul-2023 20:25 by rmk")
                                                             (* gbn " 6-Feb-84 19:11")

    (* ;; "returns nil until done when it returns BADLOOKS or T")

    (PROG (PROPERTY VALFLAG TEM (VALUE 0)
                 CHAR)
      LP  (while [FIXP (SETQ CHAR (FCHARACTER (BIN BSTREAM] do (SETQ VALUE CHAR)
                                                               (SETQ VALFLAG T))
          (COND
             (PROPERTY (CL:UNLESS VALFLAG
                           (RETURN 'BADLOOKS))
                    (SETQ PROPERTY NIL))
             (VALFLAG [SETFILEPTR BSTREAM (IDIFFERENCE (GETFILEPTR BSTREAM)
                                                 (COND
                                                    ([EQ CHAR (CONSTANT (CHARACTER (CHARCODE EOL]
                                                     2)
                                                    (T 1]
                    (RETURN NIL)))
          [COND
             ((SETQ TEM (SELECTQ CHAR
                            ((s u b i g v S U B I G V) 
                                 T)
                            NIL))
              T
              (SETQ PROPERTY T))
             ((SETQ TEM (SELECTQ CHAR
                            ((t f o) 
                                 T)
                            NIL))
              T)
             ([EQ CHAR (CONSTANT (CHARACTER (CHARCODE EOL]
              (RETURN T))
             ((NEQ CHAR '% )
              (RETURN 'BADLOOKS]
          (SETQ VALUE 0)
          (SETQ VALFLAG NIL)
          (GO LP])

(\TEST.PARAGRAPH.LOOKS
  [LAMBDA (BSTREAM)                                          (* ; "Edited  5-Aug-2023 10:58 by rmk")
                                                             (* ; "Edited  2-Aug-2023 07:46 by rmk")
                                                             (* gbn " 6-Feb-84 18:30")

    (* ;; "test if the sequence form valid paragraph looks, do not allow empty paragraph looks")

    (PROG ((VALUE 0)
           CHAR PROPERTY TABS NONEMPTY)
      LP  (while [FIXP (SETQ CHAR (FCHARACTER (BIN BSTREAM] do (SETQ VALUE CHAR))
          [COND
             ((SELECTQ PROPERTY
                  ((l d z x e y k j c q) 
                       (SETQ NONEMPTY T))
                  NIL)                                       (* ; "keep going, these are all ok")
              NIL)
             (T (SELECTQ PROPERTY
                    (%( (SELECTQ CHAR
                            (%) (SETQ NONEMPTY T))
                            (%, (COND
                                   ((IGREATERP VALUE 14)     (* ; "not a legal tab no")
                                    (RETURN NIL))
                                   (T (SETQ NONEMPTY T)))
                                T)
                            (RETURN NIL)))
                    (%, (SETQ NONEMPTY T))
                    ((%) (SETQ NONEMPTY T)))
                    (RETURN NIL]                             (* ; "not a legal paragraph look")
          (COND
             ((AND [NEQ CHAR (CONSTANT (CHARACTER (CHARCODE EOL]
                   (NEQ CHAR '\))
              (SETQ PROPERTY CHAR)
              (SETQ VALUE 0)
              (GO LP)))
          (RETURN (AND NONEMPTY CHAR])
)

(RPAQ? DEFAULT-USER.CM NIL)

(RPAQ? USER.CM.RDTBL (COPYREADTABLE))

(RPAQ? PROFILE.PARA.RDTBL (COPYREADTABLE))
(DEFINEQ

(\TFBRAVO.XCCSCONVERT
  [LAMBDA (BSTREAM RUN TEXTOBJ PRIORFONTNAME)                (* ; "Edited 14-Aug-2023 12:16 by rmk")
                                                             (* ; "Edited 11-Aug-2023 20:08 by rmk")

    (* ;; "Converts a run of Alto character codes to an XCCS string.  Need to know the prior font.")

    (* ;; "For Hippo and Math, all the characters in a run are translated and inserted one by one.  \INSERTCH will reassemble them into a single string if possible.")

    (* ;; "For TIMESROMAN and HELVETICA very few characters (em quads, figure spaces, minus signs) will be translated, most runs could simply point to BSTREAM.   These are all control characters, and the flag RUNXCCSTRANSLATION? is set if possible offenders are seen during the paragraph-scanning phase. That's an upper-bound filter--it isn't worth checking at that point to see whether the run is in the right font.")

    (LET (CODEMAP ORIGPTR NEWFONT (CHARLOOKS (fetch (RUN RUNLOOKS) of RUN)))
         (SETQ CODEMAP (SELECTQ (fetch (CHARLOOKS CLNAME) of CHARLOOKS)
                           ((TIMESROMAN HELVETICA MODERN CLASSIC TERMINAL) 
                                                             (* ; "Keep the name")
                                (CL:WHEN (fetch (RUN RUNXCCSTRANSLATION?) of RUN)
                                    (SETQ PRIORFONTNAME (fetch (CHARLOOKS CLNAME) of CHARLOOKS))
                                    HELVTIMESTOXCCS))
                           (HIPPO (SETQ NEWFONT T)
                                  HIPPOTOXCCS)
                           (MATH (SETQ NEWFONT T)
                                 MATHTOXCCS)
                           NIL))
         (CL:WHEN CODEMAP
             (SETQ ORIGPTR (GETFILEPTR BSTREAM))
             (SETFILEPTR BSTREAM (fetch (RUN RUNSTART) of RUN))
             (for I C ORIGCHNO (CHNO _ (ADD1 (TEXTLEN TEXTOBJ))) from 1
                to (fetch (RUN RUNLENGTH) of RUN) first (SETQ ORIGCHNO CHNO)
                do (SETQ C (BIN BSTREAM))
                   (SETQ C (OR (CADR (ASSOC C CODEMAP))
                               C))
                   (CL:IF (EQ C (CHARCODE CR))
                       (\INSERTEOL C CHNO TEXTOBJ)
                       (\INSERTCH C CHNO TEXTOBJ))
                   (add CHNO 1) finally (CL:WHEN NEWFONT
                                            (SETQ CHARLOOKS (create CHARLOOKS
                                                               using CHARLOOKS CLNAME _ PRIORFONTNAME
                                                                   ))
                                            (\TFBRAVO.FONT.FROM.CHARLOOKS CHARLOOKS))
                                      (TEDIT.LOOKS TEXTOBJ CHARLOOKS ORIGCHNO (fetch (RUN RUNLENGTH)
                                                                                 of RUN))
                                      (\TEDIT.UPDATE.SEL TEXTOBJ ORIGCHNO (fetch (RUN RUNLENGTH)
                                                                             of RUN)
                                             'RIGHT NIL T)
                                      (SETFILEPTR BSTREAM ORIGPTR))
             (SETFILEPTR BSTREAM ORIGPTR)
             T)])
)

(RPAQQ HIPPOTOXCCS
       ((14 60973)
        (15 61229)
        (19 61221)
        (22 61220)
        (24 60973)
        (25 61228)
        (65 9793)
        (66 9794)
        (67 9809)
        (68 9797)
        (69 9798)
        (70 9818)
        (71 9796)
        (72 9802)
        (73 9804)
        (75 9805)
        (76 9806)
        (77 9807)
        (78 9808)
        (79 9810)
        (80 9811)
        (81 9803)
        (82 9813)
        (83 9814)
        (84 9816)
        (85 9817)
        (87 9821)
        (88 9819)
        (89 9820)
        (90 9801)
        (97 9825)
        (98 9826)
        (99 9841)
        (100 9829)
        (101 9830)
        (102 9850)
        (103 9828)
        (104 9834)
        (105 9836)
        (106 9836)
        (107 9837)
        (108 9838)
        (109 9839)
        (110 9840)
        (111 9842)
        (112 9843)
        (113 9835)
        (114 9845)
        (115 9846)
        (116 9848)
        (117 9839)
        (119 9853)
        (120 9851)
        (121 9852)
        (122 9841)))

(RPAQQ MATHTOXCCS
       ((33 61232)
        (34 61287)
        (35 8551)
        (36 162)
        (37 184)
        (38 61366)
        (39 61299)
        (40 194)
        (41 61308)
        (42 199)
        (43 177)
        (44 61260)
        (45 61309)
        (46 8552)
        (47 61285)
        (48 61287)
        (49 8738)
        (50 8740)
        (51 8574)
        (52 61282)
        (53 61283)
        (54 61284)
        (55 61292)
        (56 8570)
        (57 199)
        (58 167)
        (60 8549)
        (61 8546)
        (62 8550)
        (63 2)
        (64 61248)
        (65 61365)
        (66 61258)
        (67 61356)
        (68 61369)
        (69 61364)
        (70 61233)
        (71 61275)
        (72 61279)
        (73 61273)
        (74 61274)
        (75 61278)
        (76 61272)
        (77 61629)
        (78 61259)
        (79 61281)
        (80 61297)
        (81 61265)
        (82 61358)
        (83 61305)
        (84 61296)
        (85 61271)
        (86 61367)
        (87 61298)
        (88 180)
        (89 61626)
        (90 61368)
        (94 175)
        (95 174)
        (97 61351)
        (98 61267)
        (99 211)
        (100 61370)
        (101 61303)
        (102 61266)
        (103 61263)
        (104 61288)
        (105 61360)
        (106 61361)
        (107 61362)
        (108 61363)
        (109 61256)
        (110 61290)
        (111 61287)
        (112 61238)
        (113 61240)
        (114 210)
        (115 61246)
        (116 61244)
        (117 61247)
        (118 61245)
        (119 61250)
        (120 61251)
        (121 61270)
        (122 61239)
        (123 188)
        (124 189)
        (125 190)
        (126 61264)))

(RPAQQ HELVTIMESTOXCCS ((14 60973)
                        (15 61229)
                        (19 61221)
                        (22 61220)
                        (24 60973)
                        (25 61228)))

(SETBRK (CHARCODE (%, %: = CR))
       NIL USER.CM.RDTBL)

(SETSEPR '(% )
       NIL USER.CM.RDTBL)

(SETSYNTAX (CHARCODE %:)
       'SEPRCHAR PROFILE.PARA.RDTBL)

(SETSYNTAX (CHARCODE CR)
       'BREAKCHAR PROFILE.PARA.RDTBL)

(SETSYNTAX (CHARCODE ^Z)
       'BREAKCHAR PROFILE.PARA.RDTBL)



(* ; "Named tabs")

(DEFINEQ

(\TFBRAVO.COPY.NAMEDTAB
  [LAMBDA (OBJ PIECE OLDCH NEWCH)                            (* jds " 8-Feb-84 19:58")
                                                             (* just creates a named tab stop with 
                                                             the same value as the original)

         (* Note that the USING phrase will create a new TEDITOBJ as well as a 
         TEDITUSEROBJ)

    (COPY OBJ])

(\TFBRAVO.PUT.NAMEDTAB
  [LAMBDA (OBJ CHARSTREAM FMTSTREAM)                         (* jds " 8-Feb-84 19:59")

         (* just writes the position of the tab so that a new one can be created on read)

    (PRINT (IMAGEOBJPROP OBJ 'OBJECTDATUM)
           CHARSTREAM])

(\TFBRAVO.GET.NAMEDTAB
  [LAMBDA (CHARSTREAM TEXTSTREAM)                            (* jds " 8-Feb-84 19:59")
                                                             (* should read the position, create an 
                                                             obj and return it)
    (IMAGEOBJCREATE (RATOM CHARSTREAM)
           \NAMEDTAB.IMAGEFNS])

(\TFBRAVO.ADD.NAMEDTAB
  [LAMBDA (RUN PARAFMTSPEC FORMATCHARS)                      (* ; "Edited 13-Aug-2023 19:56 by rmk")

    (* ;; "The CLUSERINFO contains a list of tab-looks appearing in this run, and FMTUSERINFO contains the definition of tabs that have been declared in this paragraph or inherited from previous paragraphs.  We would like to adjust the TABSPEC of the PARAFMFTSPEC so tab characters will align with their intended X positions.")

    (* ;; "Note that")

    (LET ((RUNLOOKS (fetch (RUN RUNLOOKS) of RUN))
          (TABDEFS (fetch (FMTSPEC FMTUSERINFO) of PARAFMTSPEC))
          (TABDEFAULT (CAR (fetch (FMTSPEC TABSPEC) of PARAFMTSPEC)))
          (TABOFFSETS (fetch (RUN RUNTABOFFSETS) of RUN))
          TABSPEC TAB TABNAMES)
         (SETQ TABNAMES (fetch (CHARLOOKS CLUSERINFO) of RUNLOOKS))
         (CL:WHEN TABDEFS
             [if TABNAMES
                 then (SETQ TABSPEC (for TN in TABNAMES eachtime (add TN -1)
                                       when (SETQ TAB (CDR (ASSOC TN TABDEFS)))
                                       unless (EQ TAB T) until (EQ TN -1) collect TAB))
               elseif (CDR TABDEFS)
                 then 
                      (* ;; "TABDEFS are sorted by X position, not names")

                      (SETQ TABSPEC (for TD in TABDEFS collect (CDR TD)))
               elseif (EQ 0 (CAR (CAR TABDEFS)))
                 then 
                      (* ;; "No name and 0, make it be the default")

                      (SETQ TABDEFAULT (fetch (TAB TABX) of (CDAR TABDEFS]
             (CL:WHEN [OR TABSPEC (NEQ TABDEFAULT (CAR (fetch (FMTSPEC TABSPEC) of PARAFMTSPEC]
                 (SETQ PARAFMTSPEC (create FMTSPEC using PARAFMTSPEC TABSPEC _ (CONS TABDEFAULT 
                                                                                     TABSPEC))))
             (CL:WHEN TABNAMES                               (* ; "Flush the names so looks uniquify")
                 (change (fetch (RUN RUNLOOKS) of RUN)
                        (create CHARLOOKS using DATUM CLUSERINFO _ NIL))))
         PARAFMTSPEC])

(\NAMEDTABNYET
  [LAMBDA NIL                                                (* gbn "30-Dec-83 17:23")
    (PROMPTPRINT "Can't do that to a named tab!"])

(\NAMEDTABSIZE
  [LAMBDA (TABOBJECT IMAGESTREAM CURRENTX RIGHTMARGIN)       (* ; "Edited  6-Aug-2023 14:24 by rmk")
                                                             (* gbn "19-May-84 22:52")
    (create IMAGEBOX
           XSIZE _ (IMAX 1 (IDIFFERENCE (HCSCALE (DSPSCALE NIL IMAGESTREAM)
                                               (IMAGEOBJPROP TABOBJECT 'OBJECTDATUM))
                                  CURRENTX))
           YSIZE _ 1
           YDESC _ 0
           XKERN _ 0])

(\NAMEDTABPREPRINT
  [LAMBDA (TABOBJ)                                           (* ; "Edited  6-Aug-2023 18:56 by rmk")
    (CONCAT "[TAB" (IMAGEOBJPROP TABOBJ 'TABNAME)
           "]"])

(\NAMEDTAB.INIT
  [LAMBDA NIL                                                (* ; "Edited  6-Aug-2023 18:59 by rmk")
                                                             (* jds "22-Aug-84 14:49")
    (SETQ \NAMEDTAB.IMAGEFNS (IMAGEFNSCREATE 'NILL (FUNCTION \NAMEDTABSIZE)
                                    (FUNCTION \TFBRAVO.PUT.NAMEDTAB)
                                    (FUNCTION \TFBRAVO.GET.NAMEDTAB)
                                    (FUNCTION \TFBRAVO.COPY.NAMEDTAB)
                                    (FUNCTION NILL)
                                    (FUNCTION NILL)
                                    (FUNCTION MOVE.NAMED.TAB)
                                    (FUNCTION NILL)
                                    (FUNCTION NILL)
                                    (FUNCTION NILL)
                                    (FUNCTION NILL)
                                    (FUNCTION \NAMEDTABPREPRINT])
)
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS \NAMEDTAB.IMAGEFNS)
)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(\NAMEDTAB.INIT)
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (6073 13411 (TEDIT.BRAVOFILE? 6083 . 9019) (TEDITFROMBRAVO 9021 . 13409)) (13522 23464 (
\TFBRAVO.USER.CM.LOOKS 13532 . 14223) (\TFBRAVO.READ.USER.CM 14225 . 18094) (\TFBRAVO.INIT.PARALOOKS 
18096 . 19857) (\TFBRAVO.INIT.PAGEFORMAT 19859 . 20606) (\TFBRAVO.GETPARAMS 20608 . 23462)) (23465 
41561 (\TFBRAVO.FIND.LAST.TRAILER 23475 . 24620) (\TFBRAVO.HANDLE.HEADING 24622 . 27040) (
\TFBRAVO.INSTALL.PAGEFORMAT 27042 . 32637) (\TFBRAVO.PARSE.PROFILE.PARA 32639 . 39799) (
\TFBRAVO.WRITE.RUN 39801 . 41559)) (41562 62895 (\TFBRAVO.WRITE.PARAGRAPH 41572 . 43402) (
\TFBRAVO.PARSE.PARA 43404 . 50370) (\TFBRAVO.READ.PARALOOKS 50372 . 56403) (\TFBRAVO.INSTALL.PARATABS 
56405 . 57290) (\TFBRAVO.READ.CHARLOOKS 57292 . 61522) (\TFBRAVO.FONT.FROM.CHARLOOKS 61524 . 62893)) (
62896 64803 (\TFBRAVO.READNUM? 62906 . 64801)) (64804 68656 (\TFBRAVO.ASSERT 64814 . 65161) (
\TEST.CHARACTER.LOOKS 65163 . 66941) (\TEST.PARAGRAPH.LOOKS 66943 . 68654)) (68781 72137 (
\TFBRAVO.XCCSCONVERT 68791 . 72135)) (75418 80639 (\TFBRAVO.COPY.NAMEDTAB 75428 . 75876) (
\TFBRAVO.PUT.NAMEDTAB 75878 . 76158) (\TFBRAVO.GET.NAMEDTAB 76160 . 76537) (\TFBRAVO.ADD.NAMEDTAB 
76539 . 78813) (\NAMEDTABNYET 78815 . 78975) (\NAMEDTABSIZE 78977 . 79492) (\NAMEDTABPREPRINT 79494 . 
79692) (\NAMEDTAB.INIT 79694 . 80637)))))
STOP
