(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "INTERLISP")
(FILECREATED "10-Nov-2020 15:57:14" |{DSK}<export>home>denber>lisp>HISTMENU.;40| 28526  

      |changes| |to:|  (FNS |HistoryMenu| |UpdateHistoryWindow| |UpdateWistoryWindow| 
                            |HistRightButtonFn| |HistMenuOp| |HistMenuMiddle| REMOVENTH)
                       (VARS HISTMENUCOMS HISTCOMS)

      |previous| |date:| "20-Oct-2020 12:02:51" |{DSK}<export>home>denber>lisp>HISTMENU.;1|)


(PRETTYCOMPRINT HISTMENUCOMS)

(RPAQQ HISTMENUCOMS ((FNS |HistMenuMiddle| |HistMenuOp| |HistRightButtonFn| |HistoryMenu| 
                              REMOVENTH |UpdateHistoryWindow| |UpdateWistoryWindow|)
                         (VARS HISTCOMS)))
(DEFINEQ

(|HistMenuMiddle|
  (LAMBDA (ITEM MENU KEY)

    (* |;;| "Actions to take when the middle button is pressed on a History Window menu item.")
                                                       (* \; "Edited 30-Oct-2020 14:36 by root")
    (PROG (N)                                                (* PRINT "HistMenuMiddle")
                                                             (* PRINT ITEM)
          (RETURN (CADR ITEM)))))

(|HistMenuOp|
  (LAMBDA (ITEM MENU KEY)                              (* \; "Edited  4-Nov-2020 19:59 by root")

    (* |;;| "Process History Window menu items when the user clicks on one.")

    (PROG (NITEMS)

     (* |;;| "Need to know the number of the item (ie. ITEMNO) the user clicked on in the menu so we can compute the Exec line that corresponds to.")

          (SETQ ITEMNO (|\\ItemNumber| ITEM (|fetch| (MENU ITEMS) |of| MENU)))
                                                             (* PRINT ITEMNO)
                                                             (* SETQ ITEMNO (-
                                                           ITEMNO 2))
          (SETQ ITEMEXEC (- LASTEXEC ITEMNO))

     (* |;;| 
   "This method is needed to stay in sync in case the user deletes an entry form the menu.")

          (SETQ ITEMEXEC (CAADAR (NTH |HistoryString| ITEMNO)))
                                                             (* \; 
                                                           "The exec line of the selected item.")

     (* |;;| " Stuff the appropriate text into the Exec window.  Since it actually goes into the window that has the caret first check to see if the window with focus is an Exec window.  Note the original HISTMENU did not do this.")
                                                             (* PRINT "HistMenuOp KEY=")
                                                             (* PRINT KEY)
          (|if| (NEQ (STRPOS "EXEC" (PROCESSPROP (TTY.PROCESS)
                                               'NAME))
                         NIL)
              |then| (SELECTQ KEY
                             (LEFT (BKSYSBUF (CONCAT "REDO " ITEMEXEC))
                                   (BKSYSCHARCODE (CHARCODE CR)))
                             (MIDDLE (SETQ MRET (MENU MMENU))(* \; 
                                  "Show the middle button menu and return which item was selected.")
                                                             (* PRINT MRET)
                                     (SETQ MRET (CADR MRET))
                                     (SELECTQ MRET
                                         (REDO (BKSYSBUF (CONCAT "REDO " ITEMEXEC))
                                               (BKSYSCHARCODE (CHARCODE CR)))
                                         (FIX (BKSYSBUF (CONCAT "FIX " ITEMEXEC))
                                              (BKSYSCHARCODE (CHARCODE CR)))
                                         (UNDO (BKSYSBUF (CONCAT "UNDO " ITEMEXEC))
                                               (BKSYSCHARCODE (CHARCODE CR)))
                                         (?? (BKSYSBUF (CONCAT "?? " ITEMEXEC))
                                             (BKSYSCHARCODE (CHARCODE CR)))
                                         (|Deleted|          (* PRINT "DELETE")
                                                             (* PRINT ITEMNO)
                                                    (SETQ NITEMS (LENGTH |HistoryString|))

                                                    (* |;;| 
                                                  "Remove the selected item from HistoryString:")

                                                    (SETQ |HistoryString| (REMOVENTH (- ITEMNO 1)
                                                                                 |HistoryString|))

                                                    (* |;;| 
                                  "Remove the selected item from HMITEMS too so they stay in sync.")

                                                    (SETQ HMITEMS (REMOVENTH (- ITEMNO 1)
                                                                         HMITEMS))

                                 (* |;;| "Now add in the earlier Exec item to the end so that both lists remain histMenuLength long.  Ie. if the last item on the last was 734, go find 733 and tack it on the end.")

                                                    (SETQ NBACK (LIST (MINUS (SUB1 NITEMS))))
                                                    (SETQ |HistoryString| (APPEND |HistoryString|
                                                                                 (LISPXFIND
                                                                                  LISPXHISTORY NBACK
                                                                                  'ENTRIES)))
                                                    (SETQ HMITEMS
                                                     (APPEND HMITEMS
                                                            (LIST (LIST (CAAAR (NTH |HistoryString| 
                                                                                    NITEMS))))))

                                                    (* |;;| "And finally update the menu image.")

                                                    (|replace| ITEMS |of| |HistMenu|
                                                       |with| HMITEMS)
                                                    (UPDATE/MENU/IMAGE |HistMenu|)
                                                    (REDISPLAYW |HistWin|))
                                         NIL))
                             (* |;;| "The RIGHTBUTTONFN of the underlying window takes precedence over the WHENSELECTEDFN of the menu filling the window so we do not put a RIGHT button entry here.")
                             (RIGHT (PRINT "HistMenuOp RIGHT")
                                                             (* SETQ MRET (CAR (MENU 
                                                           |HistRightMenu|)))
                                    (SETQ MRET NIL)
                                    (PRINT MRET)
                                    (SELECTQ MRET
                                        (|Bury| (BURYW |HistWin|))
                                        (|Move| (MOVEW |HistWin|))
                                        (|Shrink| (SHRINKW |HistWin|))
                                        (|Update| (|UpdateHistoryWindow|))
                                        NIL))
                             NIL)
            |else| (PROMPTPRINT "Please select the Exec window for this action.")))))

(|HistRightButtonFn|
  (LAMBDA (WIN)                                        (* \; "Edited  8-Nov-2020 17:01 by root")
    (PROG (X)
          (MENU |HistRightMenu|)                             (* SELECTQ MRET (|Bury|
                                                           (BURYW |HistWin|))
                                                           (|Move| (MOVEW |HistWin|))
                                                           (|Shrink| (SHRINKW |HistWin|))
                                                           (|Update| (|UpdateHistoryWindow|)) 
                                                           NIL)
          (RETURN WIN))))

(|HistoryMenu|
  (LAMBDA (|histMenuLength| |histMenuPosition|)        (* \; "Edited 10-Nov-2020 15:56 by root")
    (PROG (NEGLEN)                                           (* PRINT "Start HistoryMenu")
          (OR |histMenuLength| (SETQ |histMenuLength| 30))

     (* |;;| "The MIN here is needed in case the user starts HistoryMenu before the history has grown to the requested size.")

          (SETQ ACTUALNITEMS (MIN (CADR LISPXHISTORY)
                                  |histMenuLength|))
          (SETQ NEGLEN (MINUS (MIN |histMenuLength| ACTUALNITEMS)))
          (SETQ NBACK (LIST -1 `THRU NEGLEN))                (* \; " N.B. backquote!")
                                                             (* OR |histMenuPosition|
                                                           (SETQ |histMenuPosition|
                                                           (QUOTE (LASTMOUSEX LASTMOUSEY 176 
                                                           464))))
          (SETQ |HistEventWidth| (- (OR (CADDR |histMenuPosition|)
                                        178)
                                    4))
          (SETQ |HistoryString| (LISPXFIND LISPXHISTORY NBACK 'ENTRIES))
          (SETQ HMITEMS (LIST (CAAR |HistoryString|)))
          (|for| I |from| 2 |to| (MIN |histMenuLength| ACTUALNITEMS)
             |do|                                        (* PRINT (CAAAR (NTH |HistoryString| 
                                                           I)))
                   (SETQ HMITEMS (APPEND HMITEMS (LIST (LIST (CAAAR (NTH |HistoryString| I)))))))

     (* |;;| "try (CAADAR (NTH HistoryString n)) to get item no.")

          (SETQ MMENU (|create| MENU
                             ITEMS _ '((REDO 'REDO "REDO item selected")
                                       (FIX 'FIX "Edit item selected")
                                       (UNDO 'UNDO "UNDO event selected")
                                       (?? '?? "Show event selected")
                                       (|Delete| '|Deleted| "Delete event from history menu"))
                             WHENSELECTEDFN _ '|HistMenuMiddle|))
          (SETQ |HistRightMenu| (|create| MENU
                                       ITEMS _ '((|Bury| (BURYW |HistWin|)
                                                        "Puts this window on the bottom.")
                                                 (|Move| (MOVEW |HistWin|)
                                                        "Moves window by a corner.")
                                                 (|Shrink| (SHRINKW |HistWin|)
                                                        
                           "Replaces this window with its icon (or title if it doesn't have an icon."
                                                        )
                                                 (|Update| (|UpdateHistoryWindow|)
                                                        
                                                       "Update the window to show all current items."
                                                        )))) (* SETQ |HistWin| (CREATEW
                                                           (QUOTE (50 100 172 382)) 
                                                           "History Window"))
          (SETQ |HistMenu| (|create| MENU
                                  ITEMS _ HMITEMS
                                  MENUROWS _ |histMenuLength|
                                  ITEMWIDTH _ |HistEventWidth|
                                  WHENSELECTEDFN _ '|HistMenuOp|
                                  MENUOUTLINESIZE _ 0))

     (* |;;| " Remember the last Exec line no. so we know which one to FIX, etc.")

          (SETQ LASTEXEC (CAR (HISTORY-NTH LISPXHISTORY 2)))
          (SETQ LASTEXEC (- LASTEXEC 2))                     (* SETQ |HistRightButtonFn| NIL)
          (SETQ |HistWin| (ADDMENU |HistMenu| NIL |histMenuPosition|))
          (OR |histMenuPosition| (MOVEW |HistWin|))
          (WINDOWPROP |HistWin| 'RIGHTBUTTONFN '|HistRightButtonFn|)
          (WINDOWPROP |HistWin| 'TITLE "History Window")
          (WINDOWPROP |HistWin| 'BORDER 4)                   (* CREATEMENUEDWINDOW PUTMENUPROP 
                                                           UPDATE/MENU/IMAG WINDOWPROP HWIN
                                                           (QUOTE RIGHTBUTTONFN) 
                                                           |HistRightButtonFn|)
          (RETURN HWIN))))

(REMOVENTH
  (LAMBDA (N LIST)                                     (* \; "Edited 27-Oct-2020 16:15 by root")

    (* |;;| "Return LIST with the Nth element removed.")

    (|if| (OR (ZEROP N)
                  (NULL LIST))
        |then| (CDR LIST)
      |else| (CONS (CAR LIST)
                       (REMOVENTH (CL:1- N)
                              (CDR LIST))))))

(|UpdateHistoryWindow|
  (LAMBDA (NEGLEN)                                     (* \; "Edited 10-Nov-2020 15:53 by root")
    (PROG (NITEMS)
          (SETQ NITEMS (LENGTH (|fetch| ITEMS |of| |HistMenu|)))

     (* |;;| "Need this in case HistoryMenu was started before the requested size was reached,")

          (SETQ ACTUALNITEMS (ADD1 (MIN (CADR LISPXHISTORY)
                                        NITEMS)))
          (SETQ NEGLEN (MINUS ACTUALNITEMS))
          (SETQ NBACK (LIST -2 `THRU NEGLEN))
          (SETQ |HistoryString| (LISPXFIND LISPXHISTORY NBACK 'ENTRIES))
          (SETQ HMITEMS (LIST (CAAR |HistoryString|)))

     (* |;;| "Make sure LASTEXEC again points to the most recent event since that has now changed.")

          (SETQ LASTEXEC (CAR (HISTORY-NTH LISPXHISTORY 2)))
          (SETQ LASTEXEC (- LASTEXEC 2))
          (|for| I |from| 2 |to| ACTUALNITEMS
             |do| (SETQ HMITEMS (APPEND HMITEMS (LIST (LIST (CAAAR (NTH |HistoryString| I)))))))
          (|replace| ITEMS |of| |HistMenu| |with| HMITEMS)
          (UPDATE/MENU/IMAGE |HistMenu|)
          (WINDOWPROP |HistWin| 'BORDER 4)
          (REDISPLAYW |HistWin|))))

(|UpdateWistoryWindow|
  (LAMBDA NIL
    (PROG (N)
      NIL)))
)

(RPAQQ HISTCOMS
       ((FNS PRINTHISTORY ENTRY# PRINTHISTORY1 PRINTHISTORY2)
        (FNS EVALQT ENTEREVALQT USEREXEC LISPXREAD LISPXREADBUF LISPXREADP LISPXUNREAD LISPX LISPX/ 
             LISPX/1 LISPXEVAL LISPXSTOREVALUE HISTORYSAVE LISPXFIND LISPXGETINPUT REMEMBER 
             GETEXPRESSIONFROMEVENTSPEC LISPXFIND0 LISPXFIND1 HISTORYFIND HISTORYFIND1 HISTORYMATCH 
             VALUEOF VALUOF VALUOF-EVENT LISPXUSE LISPXUSE0 LISPXUSE1 LISPXSUBST LISPXUSEC LISPXFIX 
             CHANGESLICE LISPXSTATE LISPXTYPEAHEAD)
        (ALISTS (SYSTEMINITVARS LISPXHISTORY GREETHIST))
        (DECLARE\: DONTEVAL@LOAD DOCOPY (VARS (\#REDOCNT 3)
                                              (ARCHIVEFLG T)
                                              (ARCHIVEFN)
                                              (ARCHIVELST '(NIL 0 50 100))
                                              (DISPLAYTERMFLG)
                                              (EDITHISTORY '(NIL 0 30 100))
                                              (HERALDSTRING)
                                              (LASTEXEC)
                                              (LASTHISTORY)
                                              (LISPXBUFS)
                                              (LISPXHIST)
                                              (LISPXHISTORY '(NIL 0 30 100))
                                              (LISPXPRINTFLG T)
                                              (LISPXUSERFN)
                                              (MAKESYSDATE)
                                              (PROMPT#FLG T)
                                              (REDOCNT)
                                              (SYSOUT.EXT 'SYSOUT)
                                              (SYSOUTFILE 'WORK)
                                              (SYSOUTGAG)
                                              (TOPLISPXBUFS)))
        (LISPXMACROS SHH RETRIEVE BEFORE AFTER OK REMEMBER\: REMEMBER TYPE-AHEAD ??T)
        (ADDVARS (LISPXFINDSPLST FROM TO THRU SUCHTHAT ALL AND)
               (BEFORESYSOUTFORMS (SETQ SYSOUTDATE (DATE))
                      (PROGN (COND ((NULL FILE)
                                    (SETQ FILE SYSOUTFILE))
                                   (T (SETQ SYSOUTFILE (PACKFILENAME 'VERSION NIL 'BODY FILE))))
                             (COND ((AND (NULL (FILENAMEFIELD FILE 'EXTENSION))
                                         (NULL (FILENAMEFIELD FILE 'VERSION)))
                                    (SETQ FILE (PACKFILENAME 'BODY FILE 'EXTENSION SYSOUT.EXT))))))
               (RESETFORMS (SETQ READBUF NIL)
                      (SETQ READBUFSOURCE NIL)
                      (SETQ TOPLISPXBUFS (OR (CLBUFS T)
                                             TOPLISPXBUFS))
                      (COND ((EQ CLEARSTKLST T)
                             (COND ((EQ NOCLEARSTKLST NIL)
                                    (CLEARSTK))
                                   (T (* |clear| |all| |stack| |pointers| EXCEPT |those| |on| 
                                         NOCLEARSTKLST.)
                                      (MAPC (CLEARSTK T)
                                            (FUNCTION (LAMBDA (X)
                                                             (AND (NOT (FMEMB X NOCLEARSTKLST))
                                                                  (RELSTK X))))))))
                            (T (MAPC CLEARSTKLST (FUNCTION RELSTK))
                               (SETQ CLEARSTKLST NIL))))
               (HISTORYSAVEFORMS)
               (LISPXCOMS  |...| ?? FIX FORGET NAME ORIGINAL REDO REPEAT RETRY UNDO USE |fix| 
                      |forget| |name| |redo| |repeat| |retry| |undo| |use|)
               (SYSTATS (LISPXSTATS LISPX INPUTS)
                      (UNDOSAVES UNDO SAVES)
                      (UNDOSTATS CHANGES UNDONE)
                      NIL
                      (EDITCALLS CALLS TO EDITOR)
                      (EDITSTATS EDIT COMMANDS)
                      (EDITEVALSTATS COMMANDS INVOLVING EVALUATING A LISP EXPRESSION)
                      (EDITESTATS USES OF AN E COMMAND TYPED IN DIRECTLY)
                      (EDITISTATS USES OF AN I COMMAND TYPED IN DIRECTLY)
                      (EDITUNDOSAVES EDIT UNDO SAVES)
                      (EDITUNDOSTATS EDIT CHANGES UNDONE)
                      NIL
                      (P.A.STATS P.A. COMMANDS)
                      NIL
                      (CLISPIFYSTATS CALLS TO CLISPIFY)
                      NIL
                      (FIXCALLS CALLS TO DWIM)
                      (FIXTIME)
                      (ERRORCALLS WERE DUE TO ERRORS)
                      (DWIMIFYFIXES WERE FROM DWIMIFYING)
                      NIL "OF THOSE DUE TO ERRORS:" (TYPEINFIXES WERE DUE TO ERRORS IN TYPE-IN)
                      (PROGFIXES WERE DUE TO ERRORS IN USER PROGRAMS)
                      (SUCCFIXES1 OF THESE CALLS WERE SUCCESSFUL)
                      NIL "OF THE CALLS DUE TO DWIMIFYING:" (SUCCFIXES2 WERE SUCCESSFUL)
                      NIL
                      (SPELLSTATS OF ALL DWIM CORRECTIONS WERE SPELLING CORRECTIONS)
                      (CLISPSTATS WERE CLISP TRANSFORMATIONS)
                      (INFIXSTATS OF THESE WERE INFIX TRANSFORMATIONS)
                      (IFSTATS WERE IF/THEN/ELSE STATEMENTS)
                      (I.S.STATS WERE ITERATIVE STATEMENTS)
                      (MATCHSTATS WERE PATTERN MATCHES)
                      (RECORDSTATS WERE RECORD OPERATIONS)
                      NIL
                      (SPELLSTATS1 OTHER SPELLING CORRECTIONS\, E.G. EDIT COMMANDS)
                      NIL
                      (RUNONSTATS OF ALL SPELLING CORRECTIONS WERE RUN-ON CORRECTIONS)
                      NIL
                      (VETOSTATS CORRECTIONS WERE VETOED)
                      NIL)
               (NOCLEARSTKLST))
        (APPENDVARS (AFTERSYSOUTFORMS (COND ((LISTP SYSOUTGAG)
                                             (EVAL SYSOUTGAG))
                                            (SYSOUTGAG)
                                            ((OR (NULL USERNAME)
                                                 (EQ USERNAME (USERNAME NIL T)))
                                             (TERPRI T)
                                             (PRIN1 HERALDSTRING T)
                                             (TERPRI T)
                                             (TERPRI T)
                                             (GREET0)
                                             (TERPRI T))
                                            (T (LISPXPRIN1 '"****ATTENTION USER " T)
                                               (LISPXPRIN1 (USERNAME)
                                                      T)
                                               (LISPXPRIN1 '":
this sysout is initialized for user " T)
                                               (LISPXPRIN1 USERNAME T)
                                               (LISPXPRIN1 '".
" T)
                                               (LISPXPRIN1 '"To reinitialize, type GREET()
" T)))
                           (SETINITIALS)))
        (P (MAPC SYSTATS (FUNCTION (LAMBDA (X)
                                          (AND (LISTP X)
                                               (EQ (GETTOPVAL (CAR X))
                                                   'NOBIND)
                                               (SETTOPVAL (CAR X)
                                                      NIL)))))
           (PUTD 'E))
        (COMS (FNS GREET GREET0)
              (ADDVARS (PREGREETFORMS (DREMOVE GREETFORM RESETFORMS)
                              (SETQ CONSOLETIME (SETQ CPUTIME (SETQ EDITIME 0)))
                              (SETQ CONSOLETIME0 (CLOCK 0))
                              (SETQ CPUTIME0 (CLOCK 2)))
                     (POSTGREETFORMS (SETINITIALS)
                            (AND EDITCHARACTERS (APPLY 'SETTERMCHARS EDITCHARACTERS))))
              (DECLARE\: DONTEVAL@LOAD DOCOPY (VARS (GREETHIST)
                                                    (SYSTEMTYPE)
                                                    (GREETFORM '(LISPXEVAL '(GREET)
                                                                       '_))
                                                    (CUTEFLG)
                                                    (GREETDATES '((" 1-JAN" . "Happy new year")
                                                                  ("12-FEB"
                                                                        . "Happy Lincoln's birthday")
                                                                  ("14-FEB"
                                                                           . "Happy Valentine's day")
                                                                  ("22-FEB"
                                                                     . "Happy Washington's birthday")
                                                                  ("15-MAR"
                                                                        . "Beware the Ides of March")
                                                                  ("17-MAR"
                                                                         . "Happy St. Patrick's day")
                                                                  ("18-MAY" . "It's Victoria Day")
                                                                  (" 1-JUL" . "It's Canada Day")
                                                                  ("31-OCT" . "Trick or Treat")
                                                                  (" 5-NOV"
                                                                      . "<boom> it's Guy Fawkes day")
                                                                  ("25-DEC" . "Merry Christmas")))
                                                    (USERNAME)
                                                    (HOSTNAME)
                                                    (CONSOLETIME 0)
                                                    (CONSOLETIME0 0)
                                                    (CPUTIME 0)
                                                    (CPUTIME0 0)
                                                    (EDITIME 0)
                                                    (FIRSTNAME))
                     (ADDVARS (BEFOREMAKESYSFORMS (SETQ RESETFORMS (CONS GREETFORM RESETFORMS))
                                     (SETQ MAKESYSDATE (DATE))))
                     (ADDVARS (AFTERMAKESYSFORMS (LISPXEVAL '(GREET)
                                                        '_)))))
        (FNS LISPXPRINT LISPXPRIN1 LISPXPRIN2 LISPXPRINTDEF LISPXPRINTDEF0 LISPXSPACES LISPXTERPRI 
             LISPXTAB USERLISPXPRINT LISPXPUT)
        (GLOBALVARS \#REDOCNT ARCHIVEFLG ARCHIVEFN ARCHIVELST BOUNDPDUMMY BREAKRESETVALSLST 
               CAR/CDRNIL CHCONLST1 CLEARSTKLST CLISPARRAY CLISPCHARS CLISPFLG CLISPTRANFLG 
               CONSOLETIME CONSOLETIME0 CPUTIME CPUTIME0 CTRLUFLG CUTEFLG DISPLAYTERMFLG DWIMFLG 
               EDITHISTORY EDITIME EDITQUIETFLG EDITSTATS EVALQTFORMS FILERDTBL FIRSTNAME GREETDATES
               GREETHIST HISTORYCOMS HISTORYSAVEFN HISTORYSAVEFORMS HISTSTR0 HISTSTR2 HISTSTR3 IT 
               LASTHISTORY LISP-RELEASE-VERSION LISPXBUFS LISPXCOMS LISPXFINDSPLST LISPXFNS 
               LISPXHISTORY LISPXHISTORYMACROS LISPXMACROS LISPXPRINTFLG LISPXREADFN LISPXSTATS 
               LISPXUSERFN MACSCRATCHSTRING NEWUSERFLG P.A.STATS POSTGREETFORMS PREGREETFORMS 
               PRETTYHEADER RANDSTATE READBUFSOURCE REDOCNT REREADFLG RESETFORMS SYSFILES 
               TOPLISPXBUFS USERHANDLE USERNAME)
        (VARS (LISP-RELEASE-VERSION 2.0))
        (BLOCKS (LISPXFINDBLOCK LISPXFIND LISPXFIND0 LISPXFIND1 HISTORYFIND HISTORYFIND1
                       (ENTRIES LISPXFIND HISTORYFIND)
                       (LOCALFREEVARS _FLG L LST Z =FLG HISTORYFLG PREDFLG LINE HISTORY TYPE BACKUP 
                              QUIETFLG)
                       (NOLINKFNS HISTORYMATCH LISPXGETINPUT))
               (NIL ENTRY# EVALQT GETEXPRESSIONFROMEVENTSPEC GREET GREET0 HISTORYMATCH HISTORYSAVE 
                    LISPX LISPX/ LISPX/1 LISPXEVAL LISPXFIND1 LISPXGETINPUT LISPXPRIN1 LISPXPRIN2 
                    LISPXPRINT LISPXPRINTDEF LISPXPRINTDEF0 LISPXPUT LISPXREAD LISPXREADBUF 
                    LISPXREADP LISPXSPACES LISPXSTOREVALUE LISPXSUBST LISPXTAB LISPXTERPRI 
                    LISPXTYPEAHEAD LISPXUNREAD LISPXUSE LISPXUSE0 LISPXUSE1 LISPXUSEC PRINTHISTORY 
                    PRINTHISTORY1 PRINTHISTORY2 USEREXEC USERLISPXPRINT VALUEOF VALUOF (LOCALVARS
                                                                                                 . T)
                    (SPECVARS LISPXLINE LISPXID LISPXVALUE LISPXLISTFLG HISTORY ID EVENT 
                           BREAKRESETVALS VARS GENLST INITLST NAME MESSAGE)
                    (LINKFNS . T)
                    (NOLINKFNS LISPXTYPEAHEAD UNDOLISPX ARCHIVEFN LISPXFIX LISPXUSE LISPXUSE0 
                           LISPXSUBST LISPXFIND HISTORYMATCH PRINTHISTORY DISPLAYTERMP 
                           LISPXSTOREVALUE HISTORYSAVEFN ENTEREVALQT PRINTHISTORY1 PRINTHISTORY2 
                           LISPXFIND HISTORYMATCH LISPXGETINPUT LISPXSUBST ARCHIVEFN LISPXFIX 
                           LISPXUSE LISPXUSE0 LISPXSUBST HISTORYMATCH PRINTHISTORY DISPLAYTERMP 
                           LISPXSTOREVALUE HISTORYSAVEFN ENTEREVALQT LISPXTYEAHEAD UNDOLISPX 
                           GREETFILENAME)))
        (DECLARE\: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA VALUEOF)
                                                                             (NLAML)
                                                                             (LAMA)))))
(DECLARE\: DONTCOPY
  (FILEMAP (NIL (731 14594 (|HistMenuMiddle| 741 . 1200) (|HistMenuOp| 1202 . 7581) (|HistRightButtonFn|
 7583 . 8274) (|HistoryMenu| 8276 . 12906) (REMOVENTH 12908 . 13307) (|UpdateHistoryWindow| 13309 . 
14523) (|UpdateWistoryWindow| 14525 . 14592)))))
STOP
