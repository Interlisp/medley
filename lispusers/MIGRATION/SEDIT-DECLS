(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE (DEFPACKAGE SEDIT (USE LISP XCL)))
(il:filecreated "18-Apr-88 13:01:03" il:{eris}<lispcore>sources>sedit-decls.\;21 32113  

      il:|changes| il:|to:|  (il:vars il:sedit-declscoms)

      il:|previous| il:|date:| "13-Apr-88 17:22:16" il:{eris}<lispcore>sources>sedit-decls.\;20)


; Copyright (c) 1987, 1988 by Xerox Corporation.  All rights reserved.

(il:prettycomprint il:sedit-declscoms)

(il:rpaqq il:sedit-declscoms ((il:prop il:filetype il:sedit-decls) (il:prop il:makefile-environment il:sedit-decls) (il:* il:|;;;| "This file is for declaring things which are shared among sedit files.  This file is loaded at compile time by each sedit file, but the contents of this file are not copied into any of the compiled files.  The RECORDS declarations are here, and they are INITRECORDed and SYSRECORDed in SEDIT-ACCESS.  If you change a record, make sure sedit-access gets remade NEW.  All GLOBALVARS declarations are done here, because they're needed at compile time, but the actual variable declarations are done in the appropriate file.  Constants and Macros are declared here only if they are shared among files; otherwise they can remain in the appropriate file. ") (il:records broken-atom edit-context edit-env edit-node edit-node-type edit-point edit-selection gap line-block line-start list-format open-string string-item weak-link) (il:* il:|;;| "interface globalvars") (il:globalvars convert-upgrade keep-window-region contexts lisp-edit-environment list-formats-table pretty-print-env regions) (il:* il:|;;| "shared globalvars") (il:globalvars il:boldfont il:clispfont il:commentflg il:commentfont il:defaultfont il:promptwindow il:italicfont args-gap atom-caret basic-gap body-gap button-string button-string-node structure-caret clisp-indent-words clisp-program-words command-table-spec list-parse-info terminal-table temp-point temp-selection type-clisp type-comment type-comment-word type-dotlist type-gap type-list type-litatom type-quote type-root type-string type-unknown types args-bitmap body-bitmap gap-bitmap) (il:* il:|;;| "window file globalvars") (il:globalvars titled-icon selection-pending? pending-selection initial-selection scratch-selection pending-caret pending-last-x pending-last-y pending-type pending-shift last-move-clock button-string-node) (il:* il:|;;| "command file globalvars") (il:globalvars menus menu-description mutate-candidate package-candidate printbase-candidate find-candidate substitute-candidate) (il:* il:|;;| "random constants") (il:constants (editor-name "SEdit") (il:micasperpt 35.27778) (quote-wrapper-list (quote (quote quote il:bquote il:bquote il:comma il:\\\, comma-at il:\\\,@ comma-dot il:\\\,. function function)))) (il:* il:|;;| "random macros") (il:macros get-prompt-window eval-in-process lookup-command quote-wrapper quote-wrapper-name repaint-new-line reset-control-variables select-comment-indent set-comment-positions set-selection-nowhere) (il:* il:|;;| "kernel macros") (il:functions create-weak-link) (il:macros advance close-open-node dead-node? end-undo-block escape-char eq-point-type next-linear set-linear start-undo-block step-linear subnode undo-by zap-clisp-translation smash-using il:half) (il:* il:|;;| "the symbols that come from interlisp, divided into those that conflict with CL symbols and those that don't.  The SEDIT package declaration in the makefile-environment for all these files need not actually import any of these symbols, it just makes the functions easier to edit if you do cause then you don't need so many IL: prefixes.") (il:variables *il-cl-conflicts* *il-imports*) (il:* il:|;;| "and a little reminder:") (il:p (il:|printout| t t "EXPORTS.ALL must be loaded to compile SEdit" t) (il:|printout| t t "SEDIT-ACCESS must be REMADE NEW if you change a record" t))))

(il:putprops il:sedit-decls il:filetype :compile-file)

(il:putprops il:sedit-decls il:makefile-environment (:readtable "XCL" :package (defpackage il:sedit (:use il:lisp il:xcl))))



(il:* il:|;;;| 
"This file is for declaring things which are shared among sedit files.  This file is loaded at compile time by each sedit file, but the contents of this file are not copied into any of the compiled files.  The RECORDS declarations are here, and they are INITRECORDed and SYSRECORDed in SEDIT-ACCESS.  If you change a record, make sure sedit-access gets remade NEW.  All GLOBALVARS declarations are done here, because they're needed at compile time, but the actual variable declarations are done in the appropriate file.  Constants and Macros are declared here only if they are shared among files; otherwise they can remain in the appropriate file. "
)

(il:declare\: il:eval@compile

(il:datatype broken-atom (atom-chars))

(il:datatype edit-context (environment profile eval-fn eval-in-process context-lock completion-event edit-type icon-title edit-options comment-width comment-separation find-candidate substitute-candidate display-window window-left window-bottom window-right window-top root root-changed-fn completion-fn changed-structure? (dont-collect-changes? il:flag) changed-nodes open-node-changed? open-node open-node-info atom-started atom-started-undo-pointer undo-list undo-undo-list caret caret-point selection selection-displayed? (current-node il:fullxpointer) current-x (current-line il:fullxpointer) (last-linearized-sub-node-index il:word) (linear-pointer il:fullxpointer) (linear-prev il:fullxpointer) last-mouse-x last-mouse-y last-mouse-type \\x \\y \\z \\t first-block current-block matching? below? visible? (repaint-start il:fullxpointer) (repaint-line il:fullxpointer) repaint-x relinearization-time-stamp shift-y shift-down shift-right)
 changed-nodes il:_ (cons))

(il:datatype edit-env (parse-info parse-info-unknown user-data default-font italic-font keyword-font comment-font broken-atom-font space-width default-line-skip em-width indent-base indent-step max-width comment-width-percent init-comment-separation lparen-string rparen-string dot-string quote-string comment-string command-table default-char-handler help-menu)
)

(il:datatype edit-node ((node-type il:fullxpointer) format unassigned (super-node il:fullxpointer) (depth il:word) (sub-node-index il:word) structure sub-nodes (linear-thread il:fullxpointer) linear-form (start-x il:word) (right-margin il:word) (preferred-width il:word) (actual-width il:word) (changed? il:flag) inline-width actual-llength first-line last-line)
 (il:accessfns (inline? (eq (il:|fetch| first-line il:|of| il:datum) (il:|fetch| last-line il:|of| il:datum))))
 format il:_ (quote not-yet-assigned))

(il:datatype edit-node-type (name assign-format compute-format-values linearize sub-node-changed set-point compute-point-position compute-selection-position set-selection grow-selection select-segment insert delete copy-structure copy-selection stringify back-space close-node)
)

(il:datatype edit-point ((point-node il:fullxpointer) point-index point-type point-x (point-line il:fullxpointer) point-string point-offset)
)

(il:datatype edit-selection ((select-node il:fullxpointer) select-start select-end select-type delete-ok? pending-delete? select-start-x (select-start-line il:fullxpointer) select-end-x (select-end-line il:fullxpointer) select-string select-start-offset select-end-offset)
)

(il:datatype gap (linear-item))

(il:datatype line-block ((block-start il:fullxpointer) block-new-x block-width next-block bits? block-x block-base-line block-ascent block-descent)
)

(il:datatype line-start ((next-line il:fullxpointer) (prev-line il:fullxpointer) (node il:fullxpointer) (line-ascent il:word) (line-descent il:word) (line-skip il:word) (line-length il:word) (indent il:word) ycoord (cache-time il:word) cached-y (cached-ascent il:word) (cached-descent il:word))
 (il:accessfns (line-height (il:iplus (il:fetch line-skip il:of il:datum) (il:fetch line-ascent il:of il:datum) (il:fetch line-descent il:of il:datum))))
 (il:accessfns (base-line-y (il:idifference (il:add1 (il:fetch ycoord il:of il:datum)) (il:iplus (il:fetch line-skip il:of il:datum) (il:fetch line-ascent il:of il:datum)))))
 (il:accessfns (next-line-y (il:idifference (il:fetch ycoord il:of il:datum) (il:fetch line-height il:of il:datum))))
 (il:accessfns (old-top (if (eq (il:fetch cache-time il:of il:datum) (il:|fetch| relinearization-time-stamp il:|of| context)) (il:sub1 (il:iplus (il:fetch cached-y il:of il:datum) (il:fetch cached-ascent il:of il:datum))) (il:fetch ycoord il:of il:datum))))
 (il:accessfns (old-bottom (if (eq (il:fetch cache-time il:of il:datum) (il:|fetch| relinearization-time-stamp il:|of| context)) (il:idifference (il:fetch cached-y il:of il:datum) (il:fetch cached-descent il:of il:datum)) (il:add1 (il:fetch next-line-y il:of il:datum)))))
)

(il:datatype list-format (list-formats list-inline? list-pformat list-mformat list-sublists) (il:accessfns (non-standard? (null (il:|fetch| list-formats il:|of| il:datum))))
 (il:accessfns (set-format-list (il:|fetch| list-inline? il:|of| il:datum))) (il:accessfns (cfvlist (il:|fetch| list-pformat il:|of| il:datum)))
 (il:accessfns (linearize-list (il:|fetch| list-mformat il:|of| il:datum))) list-sublists il:_ nil)

(il:record open-string (real-length substring . buffer-string))

(il:datatype string-item (string (width il:word) (font il:fullxpointer) (prin-2? il:flag)))

(il:datatype weak-link ((destination il:fullxpointer)))
)

(il:/declaredatatype (quote broken-atom) (quote (il:pointer)) (quote ((broken-atom 0 il:pointer))) (quote 2))

(il:/declaredatatype (quote edit-context) (quote (il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:flag il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:fullxpointer il:pointer il:fullxpointer il:word il:fullxpointer il:fullxpointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:fullxpointer il:fullxpointer il:pointer il:pointer il:pointer il:pointer il:pointer)) (quote ((edit-context 0 il:pointer) (edit-context 2 il:pointer) (edit-context 4 il:pointer) (edit-context 6 il:pointer) (edit-context 8 il:pointer) (edit-context 10 il:pointer) (edit-context 12 il:pointer) (edit-context 14 il:pointer) (edit-context 16 il:pointer) (edit-context 18 il:pointer) (edit-context 20 il:pointer) (edit-context 22 il:pointer) (edit-context 24 il:pointer) (edit-context 26 il:pointer) (edit-context 28 il:pointer) (edit-context 30 il:pointer) (edit-context 32 il:pointer) (edit-context 34 il:pointer) (edit-context 36 il:pointer) (edit-context 38 il:pointer) (edit-context 40 il:pointer) (edit-context 42 il:pointer) (edit-context 42 (il:flagbits . 0)) (edit-context 44 il:pointer) (edit-context 46 il:pointer) (edit-context 48 il:pointer) (edit-context 50 il:pointer) (edit-context 52 il:pointer) (edit-context 54 il:pointer) (edit-context 56 il:pointer) (edit-context 58 il:pointer) (edit-context 60 il:pointer) (edit-context 62 il:pointer) (edit-context 64 il:pointer) (edit-context 66 il:pointer) (edit-context 68 il:fullxpointer) (edit-context 70 il:pointer) (edit-context 72 il:fullxpointer) (edit-context 74 (il:bits . 15)) (edit-context 76 il:fullxpointer) (edit-context 78 il:fullxpointer) (edit-context 80 il:pointer) (edit-context 82 il:pointer) (edit-context 84 il:pointer) (edit-context 86 il:pointer) (edit-context 88 il:pointer) (edit-context 90 il:pointer) (edit-context 92 il:pointer) (edit-context 94 il:pointer) (edit-context 96 il:pointer) (edit-context 98 il:pointer) (edit-context 100 il:pointer) (edit-context 102 il:pointer) (edit-context 104 il:fullxpointer) (edit-context 106 il:fullxpointer) (edit-context 108 il:pointer) (edit-context 110 il:pointer) (edit-context 112 il:pointer) (edit-context 114 il:pointer) (edit-context 116 il:pointer))) (quote 118))

(il:/declaredatatype (quote edit-env) (quote (il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer)) (quote ((edit-env 0 il:pointer) (edit-env 2 il:pointer) (edit-env 4 il:pointer) (edit-env 6 il:pointer) (edit-env 8 il:pointer) (edit-env 10 il:pointer) (edit-env 12 il:pointer) (edit-env 14 il:pointer) (edit-env 16 il:pointer) (edit-env 18 il:pointer) (edit-env 20 il:pointer) (edit-env 22 il:pointer) (edit-env 24 il:pointer) (edit-env 26 il:pointer) (edit-env 28 il:pointer) (edit-env 30 il:pointer) (edit-env 32 il:pointer) (edit-env 34 il:pointer) (edit-env 36 il:pointer) (edit-env 38 il:pointer) (edit-env 40 il:pointer) (edit-env 42 il:pointer) (edit-env 44 il:pointer) (edit-env 46 il:pointer))) (quote 48))

(il:/declaredatatype (quote edit-node) (quote (il:fullxpointer il:pointer il:pointer il:fullxpointer il:word il:word il:pointer il:pointer il:fullxpointer il:pointer il:word il:word il:word il:word il:flag il:pointer il:pointer il:pointer il:pointer)) (quote ((edit-node 0 il:fullxpointer) (edit-node 2 il:pointer) (edit-node 4 il:pointer) (edit-node 6 il:fullxpointer) (edit-node 8 (il:bits . 15)) (edit-node 9 (il:bits . 15)) (edit-node 10 il:pointer) (edit-node 12 il:pointer) (edit-node 14 il:fullxpointer) (edit-node 16 il:pointer) (edit-node 18 (il:bits . 15)) (edit-node 19 (il:bits . 15)) (edit-node 20 (il:bits . 15)) (edit-node 21 (il:bits . 15)) (edit-node 16 (il:flagbits . 0)) (edit-node 22 il:pointer) (edit-node 24 il:pointer) (edit-node 26 il:pointer) (edit-node 28 il:pointer))) (quote 30))

(il:/declaredatatype (quote edit-node-type) (quote (il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer)) (quote ((edit-node-type 0 il:pointer) (edit-node-type 2 il:pointer) (edit-node-type 4 il:pointer) (edit-node-type 6 il:pointer) (edit-node-type 8 il:pointer) (edit-node-type 10 il:pointer) (edit-node-type 12 il:pointer) (edit-node-type 14 il:pointer) (edit-node-type 16 il:pointer) (edit-node-type 18 il:pointer) (edit-node-type 20 il:pointer) (edit-node-type 22 il:pointer) (edit-node-type 24 il:pointer) (edit-node-type 26 il:pointer) (edit-node-type 28 il:pointer) (edit-node-type 30 il:pointer) (edit-node-type 32 il:pointer) (edit-node-type 34 il:pointer))) (quote 36))

(il:/declaredatatype (quote edit-point) (quote (il:fullxpointer il:pointer il:pointer il:pointer il:fullxpointer il:pointer il:pointer)) (quote ((edit-point 0 il:fullxpointer) (edit-point 2 il:pointer) (edit-point 4 il:pointer) (edit-point 6 il:pointer) (edit-point 8 il:fullxpointer) (edit-point 10 il:pointer) (edit-point 12 il:pointer))) (quote 14))

(il:/declaredatatype (quote edit-selection) (quote (il:fullxpointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:fullxpointer il:pointer il:fullxpointer il:pointer il:pointer il:pointer)) (quote ((edit-selection 0 il:fullxpointer) (edit-selection 2 il:pointer) (edit-selection 4 il:pointer) (edit-selection 6 il:pointer) (edit-selection 8 il:pointer) (edit-selection 10 il:pointer) (edit-selection 12 il:pointer) (edit-selection 14 il:fullxpointer) (edit-selection 16 il:pointer) (edit-selection 18 il:fullxpointer) (edit-selection 20 il:pointer) (edit-selection 22 il:pointer) (edit-selection 24 il:pointer))) (quote 26))

(il:/declaredatatype (quote gap) (quote (il:pointer)) (quote ((gap 0 il:pointer))) (quote 2))

(il:/declaredatatype (quote line-block) (quote (il:fullxpointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer il:pointer)) (quote ((line-block 0 il:fullxpointer) (line-block 2 il:pointer) (line-block 4 il:pointer) (line-block 6 il:pointer) (line-block 8 il:pointer) (line-block 10 il:pointer) (line-block 12 il:pointer) (line-block 14 il:pointer) (line-block 16 il:pointer))) (quote 18))

(il:/declaredatatype (quote line-start) (quote (il:fullxpointer il:fullxpointer il:fullxpointer il:word il:word il:word il:word il:word il:pointer il:word il:pointer il:word il:word)) (quote ((line-start 0 il:fullxpointer) (line-start 2 il:fullxpointer) (line-start 4 il:fullxpointer) (line-start 6 (il:bits . 15)) (line-start 7 (il:bits . 15)) (line-start 8 (il:bits . 15)) (line-start 9 (il:bits . 15)) (line-start 10 (il:bits . 15)) (line-start 12 il:pointer) (line-start 11 (il:bits . 15)) (line-start 14 il:pointer) (line-start 16 (il:bits . 15)) (line-start 17 (il:bits . 15)))) (quote 18))

(il:/declaredatatype (quote list-format) (quote (il:pointer il:pointer il:pointer il:pointer il:pointer)) (quote ((list-format 0 il:pointer) (list-format 2 il:pointer) (list-format 4 il:pointer) (list-format 6 il:pointer) (list-format 8 il:pointer))) (quote 10))

(il:/declaredatatype (quote string-item) (quote (il:pointer il:word il:fullxpointer il:flag)) (quote ((string-item 0 il:pointer) (string-item 2 (il:bits . 15)) (string-item 4 il:fullxpointer) (string-item 3 (il:flagbits . 0)))) (quote 6))

(il:/declaredatatype (quote weak-link) (quote (il:fullxpointer)) (quote ((weak-link 0 il:fullxpointer))) (quote 2))



(il:* il:|;;| "interface globalvars")

(il:declare\: il:doeval@compile il:dontcopy


(il:globalvars convert-upgrade keep-window-region contexts lisp-edit-environment list-formats-table pretty-print-env regions)
)



(il:* il:|;;| "shared globalvars")

(il:declare\: il:doeval@compile il:dontcopy


(il:globalvars il:boldfont il:clispfont il:commentflg il:commentfont il:defaultfont il:promptwindow il:italicfont args-gap atom-caret basic-gap body-gap button-string button-string-node structure-caret clisp-indent-words clisp-program-words command-table-spec list-parse-info terminal-table temp-point temp-selection type-clisp type-comment type-comment-word type-dotlist type-gap type-list type-litatom type-quote type-root type-string type-unknown types args-bitmap body-bitmap gap-bitmap)
)



(il:* il:|;;| "window file globalvars")

(il:declare\: il:doeval@compile il:dontcopy


(il:globalvars titled-icon selection-pending? pending-selection initial-selection scratch-selection pending-caret pending-last-x pending-last-y pending-type pending-shift last-move-clock button-string-node)
)



(il:* il:|;;| "command file globalvars")

(il:declare\: il:doeval@compile il:dontcopy


(il:globalvars menus menu-description mutate-candidate package-candidate printbase-candidate find-candidate substitute-candidate)
)



(il:* il:|;;| "random constants")

(il:declare\: il:eval@compile 

(il:rpaq editor-name "SEdit")

(il:rpaqq il:micasperpt 35.27778)

(il:rpaqq quote-wrapper-list (quote quote il:bquote il:bquote il:comma il:\\\, comma-at il:\\\,@ comma-dot il:\\\,. function function))


(il:constants (editor-name "SEdit") (il:micasperpt 35.27778) (quote-wrapper-list (quote (quote quote il:bquote il:bquote il:comma il:\\\, comma-at il:\\\,@ comma-dot il:\\\,. function function))))
)



(il:* il:|;;| "random macros")

(il:declare\: il:eval@compile 

(il:putprops get-prompt-window il:macro ((context) (il:getpromptwindow (il:|fetch| display-window il:|of| context))))

(il:putprops eval-in-process il:macro (nil (let* ((process (if (eq (il:processprop (il:this.process) (quote il:name)) (quote il:mouse)) (il:tty.process) (il:this.process))) (procform (il:processprop process (quote il:form)))) (cond ((eq (car procform) (quote edit1)) (il:|fetch| eval-in-process il:|of| (cadadr procform))) (t process)))))

(il:putprops lookup-command il:macro ((char table) (gethash char table)))

(il:putprops quote-wrapper il:macro (type (cond ((and (il:listp (car type)) (eq (caar type) (quote quote))) (if (il:listp (cadar type)) (il:kwote (il:|for| w il:|in| (cadar type) il:|collect| (il:listget quote-wrapper-list w))) (il:kwote (il:listget quote-wrapper-list (cadar type))))) (t (il:bquote (il:listget quote-wrapper-list (il:\\\, (car type))))))))

(il:putprops quote-wrapper-name il:macro ((type) (il:listget (il:constant (il:reverse quote-wrapper-list)) type)))

(il:putprops repaint-new-line il:macro (il:openlambda (line) (when (il:ilessp (il:|fetch| next-line-y il:|of| (car line)) (il:|fetch| window-top il:|of| context)) (repaint context (il:|fetch| indent il:|of| (car line)) (il:|fetch| base-line-y il:|of| (car line)) (cdr line) (il:|fetch| linear-pointer il:|of| context)) (when (il:ilessp (il:|fetch| next-line-y il:|of| (car line)) (il:|fetch| window-bottom il:|of| context)) (il:|replace| below? il:|of| context il:|with| t)))))

(il:putprops reset-control-variables il:macro ((context) (when (compiling-post-koto) (il:setq *package* (il:fetch package il:of context)) (il:setq *print-array* nil) (il:setq *print-base* (il:fetch print-base il:of context)) (il:setq *print-case* (il:fetch print-case il:of context)) (il:setq *print-escape* t) (il:setq *print-gensym* t) (il:setq *print-radix* nil))))

(il:putprops select-comment-indent il:macro ((key level-1-indent level-2-indent level-3-indent) (il:selectq key (1 level-1-indent) (2 level-2-indent) ((3 4 5) level-3-indent) (il:shouldnt "unexpected comment level"))))

(il:putprops set-comment-positions il:macro ((comment-start-x comment-indent form-indent paren-width node context) (cond ((il:igeq (il:iplus form-indent (il:|fetch| comment-width il:|of| context)) (il:|fetch| right-margin il:|of| node)) (il:setq comment-start-x (il:iplus (il:|fetch| start-x il:|of| node) paren-width)) (il:setq comment-indent comment-start-x)) (t (il:setq comment-start-x (il:idifference (il:|fetch| right-margin il:|of| node) (il:|fetch| comment-width il:|of| context))) (il:setq comment-indent (il:iplus comment-start-x (il:|fetch| comment-separation il:|of| context)))))))

(il:putprops set-selection-nowhere il:macro ((selection) (il:|replace| select-node il:|of| selection il:|with| nil)))
)



(il:* il:|;;| "kernel macros")


(defmacro create-weak-link (dest) (il:bquote (il:|create| weak-link destination il:_ (il:\\\, dest))))
(il:declare\: il:eval@compile 

(il:putprops advance il:macro ((width) (il:|add| (il:|fetch| current-x il:|of| context) width)))

(il:putprops close-open-node il:macro ((context) (when (il:|fetch| open-node-changed? il:|of| context) (close-node context))))

(il:putprops dead-node? il:macro ((node) (eq 0 (il:|fetch| depth il:|of| node))))

(il:putprops end-undo-block il:macro (nil (collect-undo-block context)))

(il:putprops escape-char il:macro ((read-table) (il:|fetch| (readtablep il:escapechar) il:|of| (or read-table *readtable*))))

(il:putprops eq-point-type il:macro ((point type) (let ((pointnode (il:|fetch| point-node il:|of| point))) (if (il:|type?| edit-selection pointnode) (eq (il:|fetch| node-type il:|of| (il:|fetch| select-node il:|of| pointnode)) type) (eq (il:|fetch| node-type il:|of| pointnode) type)))))

(il:putprops next-linear il:macro ((context item) (and (il:listp (il:|fetch| linear-pointer il:|of| context)) (eq (car (il:|fetch| linear-pointer il:|of| context)) item))))

(il:putprops set-linear il:macro (il:openlambda (context new-lptr) (il:|replace| linear-pointer il:|of| context il:|with| new-lptr) (if (il:listp (il:|fetch| linear-prev il:|of| context)) (rplacd (il:|fetch| linear-prev il:|of| context) new-lptr) (il:|replace| linear-form il:|of| (il:|fetch| linear-prev il:|of| context) il:|with| new-lptr))))

(il:putprops start-undo-block il:macro (nil (il:|push| (il:|fetch| undo-list il:|of| context) nil)))

(il:putprops step-linear il:macro ((context) (il:|replace| linear-pointer il:|of| context il:|with| (cdr (il:|replace| linear-prev il:|of| context il:|with| (il:|fetch| linear-pointer il:|of| context))))))

(il:putprops subnode il:macro (x (if (eq (car x) 1) (list (quote cadr) (list (quote il:fetch) (quote sub-nodes) (cadr x))) (list (quote cadr) (list (quote il:nth) (list (quote il:fetch) (quote sub-nodes) (cadr x)) (car x))))))

(il:putprops undo-by il:macro (info (list (quote il:push) (quote (il:|fetch| undo-list il:|of| context)) (list* (quote list) (il:kwote (car info)) (cdr info)))))

(il:putprops zap-clisp-translation il:macro ((x) (and il:clisparray (il:puthash x nil il:clisparray))))

(il:putprops smash-using il:macro (x (il:|bind| (src il:_ (if (il:atom (caddr x)) (caddr x) (quote $$source))) dest (descr il:_ (il:getdescriptors (car x))) il:|first| (il:setq dest (list (quote il:replacefieldval) (list (quote quote) (car descr)) (cadr x) (list (quote il:fetchfield) (list (quote quote) (car descr)) src))) (il:setq descr (cdr descr)) il:|while| descr il:|do| (il:setq dest (list (quote il:freplacefieldval) (list (quote quote) (car descr)) dest (list (quote il:fetchfield) (list (quote quote) (car descr)) src))) (il:setq descr (cdr descr)) il:|finally| (when (not (il:atom (caddr x))) (il:setq dest (list (quote let) (list (list (quote $$source) (caddr x))) dest))) (return dest))))

(il:putprops il:half il:macro ((il:x) (il:lrsh il:x 1)))
)



(il:* il:|;;| 
"the symbols that come from interlisp, divided into those that conflict with CL symbols and those that don't.  The SEDIT package declaration in the makefile-environment for all these files need not actually import any of these symbols, it just makes the functions easier to edit if you do cause then you don't need so many IL: prefixes."
)


(defparameter *il-cl-conflicts* (quote (il:*print-structure* il:* il:append il:apply il:assoc il:atom il:block il:character il:equal il:error il:floatp il:format il:function il:gethash il:if il:lambda il:length il:listp il:mapcar il:nth il:number il:numberp il:prin1 il:read il:reverse il:setq il:space il:stringp il:terpri)))

(defparameter *il-imports* (quote (il:\" il:$$iterate il:$$lst1 il:$$out il:\( il:*display-editor* il:\, il:\. il:|.P2| il:/declaredatatype il:\; il:|;;| il:|;;;| il:? il:accessfns il:add.process il:add1 il:addspell il:addspellflg il:addtovar il:alist il:alists il:allocstring il:apply* il:ascent il:atm il:attachwindow il:await.event il:base il:bitblt il:bitmapheight il:bitmaps il:bitmapwidth il:bits il:bksysbuf il:blackshade il:bltshade il:bold il:boldfont il:bottom il:box il:bquote il:bs il:buttoneventfn il:buttons il:c il:caseinsensitive il:ccodep il:changename il:changeoffsetflg il:charcode il:chardelete il:charwidth il:chcon1 il:clearbuf il:clearw il:clisp\: il:clisparray il:clispfont il:clisptran il:clispword il:clock il:closefn il:closew il:column il:columnspace il:comma il:commentflg il:commentfont il:coms il:comtail il:concat il:concatlist il:constant il:constants il:control il:copy il:copyall il:copyright il:copytermtable il:cr il:create il:create.event il:create.monitorlock il:createregion il:createw il:ctrl il:ctrlv il:cursorcreate il:datatype il:date il:datum il:declarations\: il:declare\: il:defaultfont il:defineq il:del il:descent il:docopy il:doeval@compile il:don\'t il:dontcopy il:donteval@load il:dontwait il:dowindowcom il:dremove il:dreverse il:dsp il:dspclippingregion il:dspfont il:dsplinefeed il:dsprightmargin il:dspxoffset il:dspxposition il:dspyoffset il:|Definition-for-EDITDATE| il:|Definition-for-EDITE| il:|Definition-for-EDITL| il:e il:echomode il:edit il:editchanges il:editferror il:editgetd il:editmacros il:editmode il:environment il:eol il:eqmemb il:ersetq il:esc il:escape il:escapechar il:eval@compile il:evalv il:expandfn il:expandregionfn il:expandw il:expr il:extent il:fcharacter il:fetchfield il:filecreated il:filemap il:filepkgflg il:files il:filesload il:filetype il:find.process il:fixeditdate il:fixp il:fixr il:flag il:flagbits il:flashwindow il:flength il:fm.changelabel il:fm.changestate il:fm.dontreshape il:fm.edititem il:fm.getitem il:fm.itemprop il:fm.resetmenu il:fmemb il:fn il:fns il:font il:fontcreate il:fontprop il:form il:forword il:freemenu il:freplacefieldval il:fullxpointer il:functions il:gacha il:getd il:getdef il:getdescriptors il:getpromptwindow il:getprop il:getproplist il:getregion il:getsyntax il:globalvars il:group il:half il:height il:heightifwindow il:helvetica il:icon il:iconwindow il:id il:idifference il:ifword il:igeq il:igreaterp il:ileq il:ilessp il:imax il:imin il:iminus il:in/scroll/bar? il:innerescquote il:infohook il:initrecords il:initvars il:input il:insidep il:interpress il:invert il:iplus il:iquotient il:italicfont il:item il:items il:itemwidth il:itimes il:keyaction il:keyactiontable il:keyboardstream il:keydownp il:kwote il:l il:l-case il:label il:lastmousestate il:lastmousex il:lastmousey il:lconc il:left il:leftbracket il:leftparen il:leq il:linedelete il:links il:listget il:listput il:litatom il:localclose il:localvars il:lrsh il:macro il:macros il:mainwindow il:makefile-environment il:markaschanged il:markaschangedfns il:mask il:maxwidth il:memb il:menu il:menufont il:menuoffset il:mess il:micasperpt il:middle il:mkstring il:mouse il:mouseconfirm il:mousestate il:move il:moveto il:multescapechar il:multiple-escape il:name il:nchars il:nconc1 il:neq il:nill il:nlambda il:nlistp il:nlsetq il:nobind il:none il:notify.event il:nthcharcode il:obtain.monitorlock il:offst il:openlambda il:openstringstream il:openwp il:p il:packagedelim il:paint il:pointer il:prettycomprint il:prin2 il:process il:process.apply il:process.eval il:process.evalv il:processp il:processprop il:proctypeahead il:promptforword il:promptwindow il:prop il:proplst il:props il:putd il:putdef il:puthash il:putprop il:putprops il:quotient il:readcode il:readp il:readsa il:record il:records il:recordtran il:redisplayw il:region il:rejectmaincoms il:release.monitorlock il:relmoveto il:repaintfn il:replacefieldval il:repositionattachedwindows il:resetlst il:resetsave il:resetvar il:reshapefn il:restartable il:retfrom il:retype il:right il:rightbracket il:rightbuttonfn il:rightparen il:rowspace il:rpaq il:rpaq? il:rpaqq il:rplcharcode il:rplnode2 il:rplstring il:scroll.handler il:scrollbyrepaintfn il:scrollextentuse il:scrollfn il:scrollw il:selcharq il:selectedfn il:selectq il:seprchar il:setfs il:setinterrupt il:setproplist il:setsyntax il:settermtable il:shapew il:shift il:shiftdownp il:shouldnt il:shrinkfn il:smallp il:smartarglist il:sp il:specvars il:spellfile il:state il:stkpos il:strequal il:stringdelim il:stringwidth il:strpos il:sub1 il:substring il:sysrecords il:systemreclst il:tab il:table il:tail il:tconc il:tedit.insert il:tedit.paralooks il:this.process il:times il:title il:titledicon il:titlediconw il:titlereg il:top il:totopw il:tty.process il:tty.processp il:tty/editdate il:tty/edite il:tty/editl il:tty\: il:ttydisplaystream il:ttyexitfn il:typename il:u-case il:untilmousestate il:up il:usedfree il:variables il:vars il:vartype il:wait.for.tty il:whiteshade il:width il:window il:windowaddprop il:windowentryfn il:windowprop il:windowregion il:with.monitor il:word il:worddelete il:wxoffset il:wyoffset il:x il:y il:[ il:\\\, il:\\\,. il:\\\,@ il:\\addbase il:\\background il:\\blt il:\\bltchar il:\\caret.create il:\\caret.down il:\\caret.flash? il:\\defaultkeyaction il:\\dtest il:\\getbase il:\\getsysbuf il:\\keyboard.stream il:\\linebuf.ofd il:\\putbase il:\\savevmbackground il:\\syncode il:] il:^ il:_ il:add il:always il:as il:bind il:by il:change il:|changes| il:collect il:count il:create il:|date:| il:do il:eachtime il:else il:elseif il:fetch il:ffetch il:finally il:first il:for il:freplace il:from when il:in il:instring il:join il:largest il:never il:of il:old il:on il:outof il:pop il:|previous| il:|printout| il:push il:pushnew il:repeatuntil il:repeatwhile il:replace il:smallest il:sum il:then il:thereis il:to il:|to:| il:type? il:unless il:until il:using il:when il:where il:while il:with il:{ il:})))



(il:* il:|;;| "and a little reminder:")


(il:|printout| t t "EXPORTS.ALL must be loaded to compile SEdit" t)

(il:|printout| t t "SEDIT-ACCESS must be REMADE NEW if you change a record" t)
(il:putprops il:sedit-decls il:copyright ("Xerox Corporation" 1987 1988))
(il:declare\: il:dontcopy
  (il:filemap (nil)))
il:stop
