(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")
(FILECREATED " 3-Aug-2005 09:39:34" {DSK}<project>medley3.5>lispusers>MIME.;42 139917 

      changes to%:  (FNS DEMIMEPART)

      previous date%: "28-Jun-2002 16:23:39" {DSK}<project>medley3.5>lispusers>MIME.;41)


(* ; "
Copyright (c) 1998, 1999, 1920, 2000, 2001, 2002, 2005 by Xerox Corporation.  All rights reserved.
")

(PRETTYCOMPRINT MIMECOMS)

(RPAQQ MIMECOMS
       ((FNS DEMIME PARSEMIME DEMIMEPART DEMIMETEXT DEMIMEAPPL MIMEERROR MIMEHEADERS MIMEPARAMS 
             PARSE-SUNATTACHMENT RECODEMIMEHEADER)
        (COMS 
              (* ;; "Replaces function on LAFITECOMMANDS and LAFITEHARDCOPY, so that MIME objects are decoded in messages.  These functions require the LAFITEMSG and MAILFOLDER records to be available:")

              (DECLARE%: DONTEVAL@LOAD DONTCOPY EVAL@COMPILE (FILES (LOADCOMP)
                                                                    LAFITEDECLS))
              (FNS LA.COPY.MESSAGE.TEXT \LAFITE.APPEND.MESSAGE.BODY)
              
              (* ;; 
   "Replaces function on LAFITEBROWSE, so that browser window interprets different character sets.")

              (FNS PRINTMESSAGESUMMARY.STRING))
        (FNS ADDMIMEOBJECT MIMEOBJINIT MIMEOBJ.DISPLAYFN MIMEOBJ.COPYFN MIMEOBJ.BUTTONEVENTINFN 
             MIMEOBJ.IMAGEBOXFN)
        (P (MIMEOBJINIT))
        (FNS DEPS FINDPSSEGMENTS POSTSCRIPTPART)
        (FNS STREAMFROMBASE64 STREAMFROMBINHEX STREAMFROMASCII STREAMFROMENRICHEDTEXT 
             STREAMFROMUUENCODE STREAMFROMQUOTEDPRINTABLE STREAMFROMUTF-8)
        (CONSTANTS BINHEXCHARS)
        (INITVARS (BINHEXCHARARRAY NIL))
        (DECLARE%: EVAL@COMPILE DONTCOPY (GLOBALVARS BINHEXCHARARRAY)
               (MACROS BINHEXBYTE BINHEXWORD BINHEXLONG))
        [INITVARS (ATTACHMENTDIR '(CONCAT "{dsk}/tilde/" (L-CASE (USERNAME))
                                         "/attachments"]
        (GLOBALVARS ATTACHMENTDIR)
        [COMS 
              (* ;; 
       "MIMEFASTRECODECHARCODE is a copy of FASTRECODECHARCODED on /project/dict/code/CHARACTERFNS")

              (FNS CACHEMIMECHARRECODEMAPS MIMEFASTRECODECHARCODE MIMERECODEMAP)
              (INITVARS (CURRENTCHARENCODING 'XEROX-RENDERING))
              [VARS (CACHEDCHARENCODINGS '(ISO8859/1 ISO-8859-1 ISO8859_1 ISO% 8859-1 LATIN1 
                                                 ISO8859/2 ISO-8859-2 ISO8859_2 LATIN2 CP1252 
                                                 WINDOWS-1252 CP1250 WINDOWS-1250]
              
              (* ;; "MIMERECODEMAPS must be set up by executing")

              
              (* ;; "    (CACHEMIMECHARRECODEMAPS CACHEDCHARENCODINGS)   ")

              
              (* ;; "in a system that has /project/dict/code/CHARACTERFNS loaded.")

              (ARRAY MIMERECODEMAPS)
              (P (MOVD? 'NILL 'CHARRECODEMAP]
        (DECLARE%: DONTCOPY (RECORDS MIMEPART))))
(DEFINEQ

(DEMIME
  [LAMBDA (MSGWINDOW TEXTSTREAM OUTFILE)                     (* ; 
                                                           "Edited 19-Jan-2000 07:14 by rmk:")
                                                             (* ; 
                                                           "Edited 17-Jan-2000 22:05 by rmk:")
                                                             (* ; "Edited 25-Feb-99 18:26 by rmk:")
                                                             (* ; "Edited 31-Oct-98 13:54 by rmk:")
    (RESETLST
        (LET [(INSTREAM (OR MSGWINDOW (WHICHW]
             (SETQ INSTREAM (IF (GETSTREAM INSTREAM 'INPUT T)
                              ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
                              ELSE [RESETSAVE [SETQ INSTREAM (OPENSTREAM INSTREAM 'INPUT NIL
                                                                        '((TYPE TEXT]
                                              '(PROGN (CLOSEF? OLDVALUE]
                                    INSTREAM))
             (SETFILEPTR INSTREAM 0)
             (FILEPOS "MIME-Version:" INSTREAM)
             (DEMIMEPART INSTREAM TEXTSTREAM (PARSEMIME INSTREAM 1 (GETEOFPTR INSTREAM))
                    NIL OUTFILE)))])

(PARSEMIME
  [LAMBDA (INSTREAM PARTNUM ENDPOS MAILFOLDER)          (* ; "Edited 19-Mar-2002 08:50 by rmk:")

    (* ;; "Returns a tree of MIMEPART records, NIL if there are none.  Note that the STARTPOS of the first part is the end of the main set of message headers.")

    (DECLARE (SPECVARS MAILFOLDER))                      (* ; 
         "MAILFOLDER is available so that messages can be printed in the appropriate prompt window")
    (LET
     (PART (HEADERS (MIMEHEADERS INSTREAM))
           (STARTPOS (GETFILEPTR INSTREAM))
           TYPE)
     (IF HEADERS
         THEN (SETQ TYPE (CDR (ASSOC 'CONTENT-TYPE HEADERS)))
               (SETQ PART (CREATE MIMEPART
                                 STARTPOS _ STARTPOS
                                 ENDPOS _ ENDPOS
                                 MAINTYPE _ (OR (CAAR TYPE)
                                                'TEXT)
                                 SUBTYPE _ (OR (CADAR TYPE)
                                               'PLAIN)
                                 TYPEPROPS _ (CDR TYPE)
                                 ENCODING _ (CADR (ASSOC 'CONTENT-TRANSFER-ENCODING HEADERS))
                                 DISPOSITION _ (CDR (ASSOC 'CONTENT-DISPOSITION HEADERS))
                                 PARTNUM _ PARTNUM))
               (SELECTQ (FETCH MAINTYPE OF PART)
                   (MULTIPART (REPLACE SUBPARTS OF PART
                                 WITH (FOR PARTNUM PARTSTART PARTEND
                                                 [BOUNDARY _
                                                        (CONCAT "--"
                                                               (CADR (ASSOC 'BOUNDARY
                                                                            (FETCH TYPEPROPS
                                                                               OF PART]
                                             FROM 1
                                             FIRST 

                                 (* ;; "Back up to start first search, since MIMEHEADERS might have read the crucial CR.  But also have to confirm that an EOL occurred before the boundary; FFILEPOS doesn't seem to match when the file's EOL convention is not CR.  This would all get simpler if FFILEPOS were fixed:  simply give T as the tail argument.")

                                                   (AND (SETQ PARTSTART (FFILEPOS BOUNDARY INSTREAM
                                                                               (SUB1 STARTPOS)))
                                                        (IF (MEMB (\BACKPEEKBIN INSTREAM)
                                                                      (CHARCODE (CR LF)))
                                                            THEN (SETFILEPTR INSTREAM
                                                                            (ADD PARTSTART
                                                                                   (NCHARS BOUNDARY))
                                                                            )
                                                                  T
                                                          ELSE (SETFILEPTR INSTREAM STARTPOS)
                                                                NIL))
                                             UNTIL [AND (EQ (CHARCODE -)
                                                                (PEEKCCODE INSTREAM))
                                                            (PROGN (READCCODE INSTREAM)
                                                                   (EQ (CHARCODE -)
                                                                       (PEEKCCODE INSTREAM]
                                             COLLECT 

                                                   (* ;; 
  "2 hyphens marks the end of the last boundary.  Probably should also check for final EOL, but...")

                                                   (IF (AND (EQ (PEEKCCODE INSTREAM)
                                                                    (CHARCODE CR)))
                                                       THEN (READCCODE INSTREAM))
                                                   (SETQ PARTSTART (GETFILEPTR INSTREAM))
                                                   (IF (SETQ PARTEND (FFILEPOS BOUNDARY INSTREAM
                                                                                NIL ENDPOS))
                                                       THEN (SELCHARQ (\BACKBIN INSTREAM)
                                                                     ((CR LF) 
                                                                          (SETQ PARTEND (SUB1 PARTEND
                                                                                              )))
                                                                     NIL)
                                                     ELSE 

                                 (* ;; "If part doesn't end with a boundary, it's an  illformed mime message, but deal with it anyway.  REPEATUNTIL will stop the iteration in this peculiar case.")

                                                           (SETQ PARTEND ENDPOS))
                                                   (SETFILEPTR INSTREAM PARTSTART)
                                                   (PROG1 (PARSEMIME INSTREAM PARTNUM PARTEND)
                                                       (SETFILEPTR INSTREAM (IPLUS PARTEND
                                                                                   (NCHARS BOUNDARY))
                                                              )) REPEATUNTIL (IEQP PARTEND ENDPOS
                                                                                       ))))
                   (MESSAGE [LET ((P (PARSEMIME INSTREAM PARTNUM ENDPOS)))

                                 (* ;; "P is the part for the message body.  We also add a separate part for the message headers, so they will be displayed.")

                                 (REPLACE SUBPARTS OF PART
                                    WITH (IF P
                                                 THEN (LIST (CREATE MIMEPART
                                                                       MAINTYPE _ 'TEXT
                                                                       STARTPOS _ STARTPOS
                                                                       ENDPOS _
                                                                       (SUB1 (FETCH STARTPOS
                                                                                OF P)))
                                                                P)
                                               ELSE (CONS (CREATE MIMEPART
                                                                     MAINTYPE _ 'TEXT
                                                                     STARTPOS _ STARTPOS
                                                                     ENDPOS _ ENDPOS
                                                                     PARTNUM _ 1])
                   (TEXT                                     (* ; 
                                     "Text could have postscript hidden in it, if it's long enough")
                         (SETQ PART (OR (POSTSCRIPTPART INSTREAM STARTPOS ENDPOS)
                                        PART)))
                   (X-SUN-ATTACHMENT 
                        (PARSE-SUNATTACHMENT PART INSTREAM))
                   NIL)
       ELSE (SETQ PART (POSTSCRIPTPART INSTREAM STARTPOS ENDPOS)))
     PART])

(DEMIMEPART
  [LAMBDA (INSTREAM TEXTSTREAM PART OBJECTFLAG OUTFILE)
                                                      (* ; "Edited  3-Aug-2005 09:39 by N.H.Briggs")
    (CL:WHEN PART
        (SELECTQ (FETCH MAINTYPE OF PART)
            (MULTIPART (SELECTQ (FETCH SUBTYPE OF PART)
                           ((MIXED X-SUN-ATTACHMENT REPORT)  (* ; 
                                                           "Don't know what REPORT is, put it here")
                                (FOR P IN (FETCH SUBPARTS OF PART)
                                   DO (DEMIMEPART INSTREAM TEXTSTREAM P OBJECTFLAG OUTFILE)))
                           ((RELATED ALTERNATIVE SIGNED) 
                                (FOR P TEXT IN (FETCH SUBPARTS OF PART)
                                   WHEN [AND (EQ 'TEXT (FETCH MAINTYPE OF P))
                                                 (PROGN (SETQ TEXT P)
                                                        (EQ 'PLAIN (FETCH SUBTYPE OF P]
                                   DO (DEMIMEPART INSTREAM TEXTSTREAM P OBJECTFLAG OUTFILE)
                                         (RETURN)
                                   FINALLY (DEMIMEPART INSTREAM TEXTSTREAM
                                                      (OR TEXT (CAR (FETCH SUBPARTS OF PART))
                                                          )
                                                      OBJECTFLAG OUTFILE)))
                           (APPLEDOUBLE (FOR P IN (FETCH SUBPARTS OF PART)
                                           UNLESS (EQ 'APPLEFILE (FETCH SUBTYPE OF P))
                                           DO (DEMIMEPART INSTREAM TEXTSTREAM P OBJECTFLAG 
                                                         OUTFILE)
                                                 (RETURN)
                                           FINALLY (DEMIMEPART INSTREAM TEXTSTREAM
                                                              (CAR (FETCH SUBPARTS OF PART))
                                                              OBJECTFLAG OUTFILE)))
                           (ERROR "UNRECOGNIZED MULTIPLE SUBTYPE" PART)))
            (MESSAGE (FOR P IN (FETCH SUBPARTS OF PART)
                        DO (DEMIMEPART INSTREAM TEXTSTREAM P OBJECTFLAG OUTFILE)))
            (TEXT (CL:WHEN OBJECTFLAG
                      (SETFILEPTR TEXTSTREAM (ADD1 (GETFILEPTR TEXTSTREAM)))
                      (CL:UNLESS (EQ 1 (FETCH PARTNUM OF PART))
                             (TEDIT.INSERT TEXTSTREAM "

--Included text:
"))
                      (CL:UNLESS (AND (EQ 'PLAIN (FETCH SUBTYPE OF PART))
                                      (ILEQ (- (FETCH ENDPOS OF PART)
                                               (FETCH STARTPOS OF PART))
                                            10000))

                          (* ;; "So the text can be saved to a file if needed.  Use doc since that invokes MSWord which is somewhat intelligent about EOL conventions.")

                          (ADDMIMEOBJECT INSTREAM PART TEXTSTREAM "Attachedtext.doc")))
                  (DEMIMETEXT INSTREAM TEXTSTREAM PART OBJECTFLAG OUTFILE))
            ((APPLICATION IMAGE) 
                 (DEMIMEAPPL INSTREAM PART OBJECTFLAG TEXTSTREAM OUTFILE))
            (PROGN (HELP (CONCAT "UNRECOGNIZED MIME TYPE: " (FETCH MAINTYPE OF PART)
                                "; RETURN for APPLICATION type")
                         PART)
                   (DEMIMEAPPL INSTREAM PART OBJECTFLAG TEXTSTREAM OUTFILE))))])

(DEMIMETEXT
  [LAMBDA (INSTREAM TEXTSTREAM PART OBJECTFLAG OUTFILE) (* ; "Edited 28-Jun-2002 16:21 by rmk:")
    (IF [AND (NULL TEXTSTREAM)
                 (OR OUTFILE (ASSOC 'NAME (FETCH (MIMEPART TYPE) OF PART]
        THEN (DEMIMEAPPL INSTREAM PART OBJECTFLAG TEXTSTREAM OUTFILE)
      ELSE (LET (TEDITSTREAM RICHTEXT (TTYPROCESS (TTY.PROCESS))
                           [CHARSET (CADR (ASSOC 'CHARSET (FETCH TYPEPROPS OF PART]
                           (STARTPOS (FETCH STARTPOS OF PART))
                           (ENDPOS (FETCH ENDPOS OF PART)))
                    (SETQ TEXTSTREAM (IF (NULL TEXTSTREAM)
                                         THEN (TEXTSTREAM (TEDIT))
                                       ELSEIF (GETSTREAM TEXTSTREAM 'OUTPUT T)
                                       ELSEIF (CAR (NLSETQ (TEXTSTREAM TEXTSTREAM)))
                                       ELSE [RESETSAVE [SETQ TEXTSTREAM
                                                            (OPENSTREAM TEXTSTREAM 'OUTPUT
                                                                   'NEW
                                                                   '((TYPE TEXT]
                                                       '(PROGN (CLOSEF? OLDVALUE)
                                                               (AND RESETSTATE (DELFILE OLDVALUE]
                                             TEXTSTREAM))
                    (CL:WHEN (TEXTSTREAMP TEXTSTREAM)
                        (SETQ TEDITSTREAM TEXTSTREAM)
                        (SETQ TEXTSTREAM (OPENSTREAM '{NODIRCORE} 'BOTH)))

                    (* ;; "If TEXTSTREAM is a tedit stream, the output is copied to a dummy NODIRCORE stream, so that it then then be included back in TEXTSTREAM in a single action.  To do this, we save the original TEXTSTREAM in a new variable TEDITSTREAM, then bind TEXTSTREAM to a NODIRCORE.")

                    (IF (MEMB (FETCH SUBTYPE OF PART)
                                  '(ENRICHED HTML))
                        THEN (SETQ RICHTEXT (LIST TEXTSTREAM CHARSET)) 

                              (* ;; "Save CHARSET conversion as part of richtext")

                              (SETQ TEXTSTREAM (OPENSTREAM '{NODIRCORE} 'BOTH))
                              (SETQ CHARSET NIL))
                    [SELECTQ (FETCH ENCODING OF PART)
                        (QUOTED-PRINTABLE 
                             (STREAMFROMQUOTEDPRINTABLE INSTREAM TEXTSTREAM STARTPOS ENDPOS 
                                    CHARSET))
                        (BASE64 (STREAMFROMBASE64 INSTREAM TEXTSTREAM STARTPOS ENDPOS CHARSET T))
                        ((X-UUENCODE UUENCODE) 
                             (STREAMFROMUUENCODE INSTREAM TEXTSTREAM STARTPOS ENDPOS CHARSET T))
                        (UTF-8 (STREAMFROMUTF-8 INSTREAM TEXTSTREAM STARTPOS ENDPOS CHARSET T))
                        (LET [(CHARMAP (AND CHARSET (NEQ 'US-ASCII (U-CASE CHARSET))
                                            (MIMERECODEMAP CHARSET]
                             (COND
                                (CHARMAP (SETFILEPTR INSTREAM STARTPOS)
                                       (WHILE (ILESSP (GETFILEPTR INSTREAM)
                                                         ENDPOS)
                                          DO (PRINTCCODE (MIMEFASTRECODECHARCODE (READCCODE
                                                                                          INSTREAM)
                                                                    CHARMAP)
                                                        TEXTSTREAM)))
                                (T (COPYCHARS INSTREAM TEXTSTREAM STARTPOS ENDPOS]
                    (CL:WHEN RICHTEXT
                        (STREAMFROMENRICHEDTEXT TEXTSTREAM (CAR RICHTEXT)
                               NIL NIL (CADR RICHTEXT)
                               (FETCH SUBTYPE OF PART))
                        (SETQ TEXTSTREAM (CAR RICHTEXT)))
                    (CL:WHEN TEDITSTREAM
                        (TEDIT.INCLUDE TEDITSTREAM TEXTSTREAM)
                        (SETQ TEXTSTREAM TEDITSTREAM)
                        (TEDIT.STREAMCHANGEDP TEXTSTREAM T)
                        (TTY.PROCESS TTYPROCESS))
                    TEXTSTREAM])

(DEMIMEAPPL
  [LAMBDA (INSTREAM PART OBJECTFLAG TEXTSTREAM OUTFILE) (* ; "Edited 27-Jun-2002 16:52 by rmk:")

    (* ;; "If OBJECTFLAG, inserts a MIMEOBJECT in TEXTSTREAM, for later demiming.  If OUTFILE is given, then that file/stream is used instead of FILENAME as the destination of the demimed information.")

    (IF OBJECTFLAG
        THEN (ADDMIMEOBJECT INSTREAM PART TEXTSTREAM)
      ELSE (LET ((FILENAME)
                     (STARTPOS (FETCH STARTPOS OF PART))
                     (ENDPOS (FETCH ENDPOS OF PART)))
                    (CL:WHEN (FETCH MAINDISPOSITION OF PART)
                        (PRINTOUT T (FETCH MAINDISPOSITION OF PART)
                               ": "))
                    (CL:UNLESS (EQ OUTFILE '{LPT})
                        [SETQ FILENAME (CADR (OR (ASSOC 'FILENAME (FETCH (MIMEPART 
                                                                                    DISPOSITIONPROPS)
                                                                     OF PART))
                                                 (ASSOC 'NAME (FETCH (MIMEPART TYPE) OF
                                                                                         PART])
                    (CL:WHEN OUTFILE
                        (SETQ FILENAME (IF FILENAME
                                           THEN (PACKFILENAME 'BODY OUTFILE 'BODY FILENAME)
                                         ELSE OUTFILE)))
                    (TERPRI T)
                    (PRINTOUT T (FETCH SUBTYPE OF PART)
                           T)
                    (CL:UNLESS FILENAME
                        (SETQ FILENAME (PACKFILENAME 'NAME (CONCAT (L-CASE (FETCH (MIMEPART
                                                                                       SUBTYPE)
                                                                              OF PART))
                                                                  "-attachment")
                                              'EXTENSION
                                              (SELECTQ (U-CASE (FETCH (MIMEPART SUBTYPE)
                                                                  OF PART))
                                                  (POSTSCRIPT 'ps)
                                                  NIL)))
                        (PRINTOUT T "filename not specified, using %"" FILENAME "%"" T))
                    (CL:UNLESS (EQ FILENAME '{LPT})
                        (SETQ FILENAME (PACKFILENAME 'BODY FILENAME 'DIRECTORY (EVAL ATTACHMENTDIR))))
                    (SELECTQ (FETCH SUBTYPE OF PART)
                        (MSWORD (CL:UNLESS (EQ '.doc (L-CASE (SUBATOM FILENAME -4 -1)))
                                    (SETQ FILENAME (PACK* FILENAME '.doc))))
                        (MSEXCEL (CL:UNLESS (EQ '.xls (L-CASE (SUBATOM FILENAME -4 -1)))
                                     (SETQ FILENAME (PACK* FILENAME '.xls))))
                        (HTML (CL:UNLESS (MEMB (L-CASE (SUBATOM FILENAME -4 -1))
                                               '(htm . html))
                                  (SETQ FILENAME (PACK* FILENAME '.html))))
                        (VND.FDF (CL:UNLESS (EQ (L-CASE (SUBATOM FILENAME -4 -1))
                                                'pdf)
                                     (SETQ FILENAME (PACK* FILENAME '.pdf))))
                        NIL)
                    (CL:UNLESS (OR OUTFILE (EQ 'MAC-BINHEX40 (FETCH SUBTYPE OF PART)))

                        (* ;; "Wait to see if extension changes on BINHEX")

                        (PRINTOUT T "Filename = " FILENAME))
                    (SELECTQ (FETCH ENCODING OF PART)
                        (BASE64 (STREAMFROMBASE64 INSTREAM FILENAME STARTPOS ENDPOS))
                        (QUOTED-PRINTABLE 
                             (STREAMFROMQUOTEDPRINTABLE INSTREAM FILENAME STARTPOS ENDPOS))
                        (UTF-8 (STREAMFROMUTF-8 INSTREAM FILENAME STARTPOS ENDPOS))
                        (X-UUENCODE (STREAMFROMUUENCODE INSTREAM FILENAME STARTPOS ENDPOS))
                        ((NIL 7BIT 8BIT) 
                             (IF (EQ 'MAC-BINHEX40 (FETCH SUBTYPE OF PART))
                                 THEN (STREAMFROMBINHEX INSTREAM FILENAME STARTPOS ENDPOS)
                               ELSE 

                                     (* ;; 
                                  "Assumes default encoding is vanilla ascii, with EOL conversions")

                                     (STREAMFROMASCII INSTREAM FILENAME STARTPOS ENDPOS)))
                        (PRINTOUT T "Unknown transfer encoding:  " (FETCH ENCODING OF PART)
                               T])

(MIMEERROR
  [LAMBDA (MSG)                                         (* ; "Edited 21-Oct-2001 17:55 by rmk:")

    (* ;; "Prints MSG in appropriate window")

    (DECLARE (USEDFREE MAILFOLDER))
    (IF (BOUNDP 'MAILFOLDER)
        THEN (LAB.PROMPTPRINT MAILFOLDER MSG)
      ELSE (PROMPTPRINT MSG])

(MIMEHEADERS
  [LAMBDA (INSTREAM X-SUN)                               (* ; "Edited  1-Nov-99 16:59 by rmk:")
    (BIND TAG LINE POS UNTIL [EQ 0 (NCHARS (SETQ LINE (CL:READ-LINE INSTREAM NIL ""]
       WHEN (SETQ POS (STRPOS ":" LINE))
       DO [SETQ TAG (U-CASE (SUBATOM LINE 1 (SUB1 POS]
             [SETQ LINE (CL:STRING-TRIM " 	" (SUBSTRING LINE (ADD1 POS)
                                                    NIL
                                                    (CONSTANT (CONCAT] 

             (* ;; "Lines can have internal semi-colons that separate parameters.  If a line ends in a semicolon, then the tag is continued on the next line.  If a parameter has an =, then it is an av pair.")

             (SELECTQ TAG
                 (CONTENT-TYPE                               (* ; 
                                                           "Extract type/subtype, then parameters")
                               [PUSH $$VAL `(,TAG ,@(MIMEPARAMS INSTREAM LINE])
                 (CONTENT-TRANSFER-ENCODING                  (* ; "Should be a single value")
                      [PUSH $$VAL (LIST TAG (U-CASE (MKATOM LINE])
                 (CONTENT-DESCRIPTION 
                      (PUSH $$VAL (LIST TAG LINE)))
                 (CONTENT-DISPOSITION 
                      [PUSH $$VAL `(,TAG ,@(MIMEPARAMS INSTREAM LINE])
                 (CL:WHEN [AND X-SUN (STREQUAL "X-SUN" (SUBSTRING TAG 1 5 (CONSTANT (CONCAT]
                     [PUSH $$VAL (LIST TAG (U-CASE (MKATOM LINE])])

(MIMEPARAMS
  [LAMBDA (INSTREAM LINE MORE)                               (* ; 
                                                           "Edited 12-Jan-2000 12:37 by rmk:")
                                                             (* ; 
                                                           "Edited 12-Jan-2000 12:29 by rmk:")
                                                             (* ; 
                                                           "Edited 12-Jan-2000 12:27 by rmk:")
                                                             (* ; 
                                                           "Edited 12-Jan-2000 12:26 by rmk:")
                                                             (* ; "Edited  1-Nov-99 16:46 by rmk:")
                                                             (* ; "Edited  9-Mar-99 15:58 by rmk:")
                                                             (* ; "Edited  9-Mar-99 15:52 by rmk:")

    (* ;; "Assumes first %"parameter%" is a singleton type, perhaps with a subtype")

    (LET (MORE POS TYPE)
         [SETQ TYPE (U-CASE (IF (SETQ POS (STRPOS ";" LINE))
                                THEN (SETQ MORE T)
                                      (PROG1 (SUBSTRING LINE 1 (SUB1 POS))
                                          (SETQ LINE (SUBSTRING LINE (ADD1 POS)))
                                          (CL:WHEN LINE
                                              (SETQ LINE (CL:STRING-TRIM " 	" LINE))))
                              ELSE (PROG1 LINE (SETQ LINE NIL]
         [SETQ TYPE (IF (SETQ POS (STRPOS "/" TYPE))
                        THEN [LIST [MKATOM (CL:STRING-TRIM " 	" (SUBSTRING TYPE 1 (SUB1 POS]
                                       (MKATOM (CL:STRING-TRIM " 	" (SUBSTRING TYPE (ADD1 POS]
                      ELSE (LIST (MKATOM TYPE]
         (CONS TYPE (BIND PNAME PVALUE PARAM POS WHILE MORE
                       COLLECT (CL:UNLESS LINE
                                       (SETQ LINE (CL:READ-LINE INSTREAM NIL NIL))
                                       (CL:WHEN LINE
                                           (SETQ LINE (CL:STRING-TRIM " 	" LINE))))
                             [SETQ PARAM (IF (SETQ POS (STRPOS ";" LINE))
                                             THEN (SETQ MORE T)
                                                   (PROG1 (CL:STRING-TRIM " 	" (SUBSTRING
                                                                                LINE 1 (SUB1 POS)))
                                                       (SETQ LINE (SUBSTRING LINE (ADD1 POS)))
                                                       (CL:WHEN LINE
                                                           (SETQ LINE (CL:STRING-TRIM " 	" LINE))))
                                           ELSE (SETQ MORE NIL)
                                                 (PROG1 LINE (SETQ LINE NIL]
                             (IF (SETQ POS (STRPOS "=" PARAM))
                                 THEN [SETQ PNAME (MKATOM (U-CASE (CL:STRING-TRIM
                                                                       " 	"
                                                                       (SUBSTRING PARAM 1
                                                                              (SUB1 POS]
                                       [SETQ PVALUE (CL:STRING-TRIM " 	%"" (SUBSTRING PARAM
                                                                                  (ADD1 POS]
                                       (LIST PNAME PVALUE)
                               ELSE (LIST (U-CASE PARAM])

(PARSE-SUNATTACHMENT
  [LAMBDA (PART INSTREAM)                                    (* ; "Edited 14-Sep-99 10:11 by rmk:")
                                                             (* ; "Edited 14-Sep-99 10:00 by rmk:")
    (REPLACE SUBTYPE OF PART WITH (FETCH MAINTYPE OF PART))
    (REPLACE MAINTYPE OF PART WITH 'MULTIPART)
    (REPLACE SUBPARTS OF PART
       WITH (FOR PARTNUM STARTPOS ENDPOS SUBPART SUNHEADERS SUBPART TEMP MAINTYPE
                       (PARTEND _ (FETCH ENDPOS OF PART))
                       [BOUNDARY _ (CONCAT "----------" (CHARACTER (CHARCODE CR] FROM 1
                   FIRST (SETQ STARTPOS (FILEPOS BOUNDARY INSTREAM (FETCH STARTPOS
                                                                          OF PART)
                                                   PARTEND NIL T))
                   COLLECT (SETQ SUNHEADERS (MIMEHEADERS INSTREAM T))
                         (SETQ STARTPOS (GETFILEPTR INSTREAM))
                         (FOR I FROM 1 TO (CADR (ASSOC 'X-SUN-CONTENT-LINES SUNHEADERS))
                            DO (FILEPOS (CHARACTER (CHARCODE CR))
                                          INSTREAM NIL PARTEND NIL T))
                         (SETQ ENDPOS (GETFILEPTR INSTREAM))
                         (SETQ MAINTYPE (SELECTQ (SETQ TEMP (CADR (ASSOC 'X-SUN-DATA-TYPE SUNHEADERS)
                                                                  ))
                                            ((NIL DEFAULT) 
                                                 'TEXT)
                                            TEMP))
                         (SETQ SUBPART
                          (CREATE MIMEPART
                                 STARTPOS _ STARTPOS
                                 ENDPOS _ ENDPOS
                                 MAINTYPE _ MAINTYPE
                                 ENCODING _ (CADR (ASSOC 'X-SUN-ENCODING-INFO SUNHEADERS))
                                 DISPOSITION _ (CDR (ASSOC 'CONTENT-DISPOSITION SUNHEADERS))
                                 PARTNUM _ PARTNUM))
                         (CL:WHEN (SETQ TEMP (CADR (ASSOC 'X-SUN-CHARSET SUNHEADERS)))
                             (PUSH (FETCH TYPEPROPS OF SUBPART)
                                    (LIST 'CHARSET TEMP)))
                         (CL:WHEN (AND (SETQ TEMP (CADR (ASSOC 'X-SUN-DATA-NAME SUNHEADERS)))
                                       (NEQ MAINTYPE 'TEXT)
                                       (NEQ TEMP 'TEXT))
                             (PUSH (FETCH TYPEPROPS OF SUBPART)
                                    (LIST 'NAME TEMP)))
                         SUBPART REPEATWHILE (SETQ STARTPOS (FILEPOS BOUNDARY INSTREAM NIL 
                                                                       PARTEND NIL T])

(RECODEMIMEHEADER
  [LAMBDA (INSTREAM OUTPUTSTREAM STARTPOS ENDPOS TEDITFLAG)

    (* ;; "The description for message headers is in /project/rfc/RFC2047.TXT, and  it relies on a lot of the definitions in /project/rfc/RFC2045.TXT.  According to the spec, encoded words can appear even if there isn't a MIME-VERSION property, but here we assume that only mime messages will in fact use this kind of encoding.")

    (BIND RUNPOS ENDRUN CHARSET ENCODING BADCHARSETS BADENCODINGS
       DO 

             (* ;; "Char-encoding runss are sequences of the form ?=charset?encoding?stuff?=, where charset is something like iso-8859-1, and encoding is Q for printed quotable, B for BASE64.")

             (IF (SETQ RUNPOS (FILEPOS "=?" INSTREAM STARTPOS ENDPOS))
                 THEN 

                       (* ;; "Copy since the end of the last run")

                       (IF TEDITFLAG
                           THEN (TEDIT.INCLUDE OUTPUTSTREAM INSTREAM STARTPOS RUNPOS)
                         ELSE (COPYCHARS INSTREAM OUTPUTSTREAM STARTPOS RUNPOS)) 

                       (* ;; "Decode this run:  skip =?, get charset and encoding")

                       (SETFILEPTR INSTREAM (IPLUS 2 RUNPOS))
                       (SETQ CHARSET (PACKC (BIND C UNTIL (EQ (CHARCODE ?)
                                                                      (SETQ C (BIN INSTREAM)))
                                               COLLECT C)))
                       (IF (MEMB CHARSET BADCHARSETS)
                           THEN (SETQ CHARSET NIL)
                         ELSEIF (MIMERECODEMAP CHARSET T)
                         ELSE (PUSH BADCHARSETS CHARSET)
                               (SETQ CHARSET NIL))
                       (SETQ ENCODING (U-CASE (READC INSTREAM)))
                       (BIN INSTREAM)                        (* ; "Skip the ? after the Q/B")
                       (SETQ STARTPOS (GETFILEPTR INSTREAM))
                       (SETQ ENDRUN (FILEPOS "?=" INSTREAM STARTPOS ENDPOS))
                       [SELECTQ (AND CHARSET ENCODING)
                           (Q (STREAMFROMQUOTEDPRINTABLE INSTREAM OUTPUTSTREAM STARTPOS ENDRUN 
                                     CHARSET))
                           (B (STREAMFROMBASE64 INSTREAM OUTPUTSTREAM STARTPOS ENDRUN CHARSET T))
                           (NIL (IF TEDITFLAG
                                    THEN (TEDIT.INCLUDE OUTPUTSTREAM INSTREAM RUNPOS ENDRUN)
                                  ELSE (COPYCHARS INSTREAM OUTPUTSTREAM RUNPOS ENDRUN)))
                           (PROGN (CL:UNLESS (MEMB ENCODING BADENCODINGS)
                                      (MIMEERROR (CONCAT ENCODING 
                                                            " is not recognized as a MIME encoding"))
                                      (PUSH BADENCODINGS ENCODING))
                                  (IF TEDITFLAG
                                      THEN (TEDIT.INCLUDE OUTPUTSTREAM INSTREAM STARTPOS ENDRUN)
                                    ELSE (COPYCHARS INSTREAM OUTPUTSTREAM STARTPOS ENDRUN]
                       (IF ENDRUN
                           THEN (SETQ STARTPOS (IPLUS 2 ENDRUN))
                         ELSE (RETURN))
               ELSE 

                     (* ;; "Copy the remaining bytes")

                     (IF TEDITFLAG
                         THEN (TEDIT.INCLUDE OUTPUTSTREAM INSTREAM STARTPOS ENDPOS)
                       ELSE (COPYCHARS INSTREAM OUTPUTSTREAM STARTPOS ENDPOS))
                     (SETFILEPTR INSTREAM ENDPOS)
                     (RETURN])
)



(* ;; 
"Replaces function on LAFITECOMMANDS and LAFITEHARDCOPY, so that MIME objects are decoded in messages.  These functions require the LAFITEMSG and MAILFOLDER records to be available:"
)

(DECLARE%: DONTEVAL@LOAD DONTCOPY EVAL@COMPILE 

(FILESLOAD (LOADCOMP)
       LAFITEDECLS)
)
(DEFINEQ

(LA.COPY.MESSAGE.TEXT
  [LAMBDA (MAILFOLDER MSGDESCRIPTOR NEWWINDOWFLG)       (* ; "Edited 19-Feb-2001 10:21 by rmk:")

    (* ;; "NEWWINDOWFLG is used for MIME messages, indicates that any mime text must be copied out of the folder, to avoid dangling references.  Otherwise, the mime objects just point into the mail folder, not copied until they are decoded.")

    (LET (OUTPUTSTREAM MIMEPARSE (MSGSTART (fetch (LAFITEMSG START) of MSGDESCRIPTOR))
                (MSGEND (fetch (LAFITEMSG END) of MSGDESCRIPTOR))
                (INSTREAM (\LAFITE.OPEN.FOLDER MAILFOLDER 'INPUT :ABORT)))
         (SETFILEPTR INSTREAM MSGSTART)
         (IF (SETQ MIMEPARSE (PARSEMIME INSTREAM 1 MSGEND MAILFOLDER))
             THEN 

                   (* ;; "The first mime part should describe just the header section, but not the boilerplate text that comes after it.   We have to produce all the headers, then the text parts in line, and other parts by mime objects.")

                   (CL:WHEN NEWWINDOWFLG

                       (* ;; "We copy all the bytes to a NODIRCORE stream, which then becomes the INPUTSTREAM.  This will be preserved if any MIMEOBJECT is created that points to it, otherwise it will be collected.  OUTPUTSTREAM here is just")

                       [LET [(TEMPSTRM (OPENSTREAM '{NODIRCORE} 'BOTH]
                            (COPYBYTES INSTREAM TEMPSTRM MSGSTART MSGEND)
                            (CLOSEF TEMPSTRM)
                            (SETQ INSTREAM (OPENSTREAM TEMPSTRM 'INPUT]
                       (SETQ MSGSTART 0)
                       (SETQ MSGEND (GETEOFPTR INSTREAM))

                       (* ;; "We have to reparse, because all the byte positions have changed.  We could also go through and update all byte positions by substraction")

                       (SETQ MIMEPARSE (PARSEMIME INSTREAM 1 MSGEND MAILFOLDER)))
                   [SETQ OUTPUTSTREAM (OPENTEXTSTREAM NIL NIL NIL NIL `(FONT ,LAFITEDISPLAYFONT]
                   (RECODEMIMEHEADER INSTREAM OUTPUTSTREAM MSGSTART (FETCH (MIMEPART STARTPOS
                                                                                          )
                                                                           OF MIMEPARSE)
                          T)
                   (DEMIMEPART INSTREAM OUTPUTSTREAM MIMEPARSE T)
                   OUTPUTSTREAM
           ELSE (SETQ OUTPUTSTREAM (OPENSTREAM '{NODIRCORE} 'BOTH))
                 (COPYBYTES INSTREAM OUTPUTSTREAM MSGSTART MSGEND)
                 (CLOSEF OUTPUTSTREAM)
                 (OPENSTREAM OUTPUTSTREAM 'INPUT NIL '((ENDOFSTREAMOP \LAFITE.EOF])

(\LAFITE.APPEND.MESSAGE.BODY
  [LAMBDA (TEXTSTREAM MSGSTREAM MSGDESCRIPTOR FILTERS)       (* ; "Edited 15-Jul-99 10:09 by rmk:")
                                                             (* ; "Edited 15-Jul-99 10:05 by rmk:")
                                                             (* ; "Edited 15-Jul-99 09:48 by rmk:")
                                                             (* ; "Edited 15-Jul-99 09:27 by rmk:")
                                                             (* ; "Edited  5-Aug-93 20:20 by bvm")

    (* ;; "Appends the text of the indicated message to TEXTSTREAM, filtering out any header fields found in FILTERS")

    (LET ((START (fetch (LAFITEMSG START) of MSGDESCRIPTOR))
          (END (fetch (LAFITEMSG END) of MSGDESCRIPTOR))
          (EOF (GETEOFPTR TEXTSTREAM))
          FILTERED MIMEPARSE)
         (if FILTERS
             then (SETQ FILTERED (LAFITE.NEW.PARSE.HEADER MSGSTREAM FILTERS START END)))
         (TEDIT.SETSEL TEXTSTREAM (ADD1 EOF)
                0
                'LEFT)                                       (* ; 
                                                           "Get selection right for TEDIT.INCLUDE")
         (SETFILEPTR MSGSTREAM START)
         [IF (SETQ MIMEPARSE (PARSEMIME MSGSTREAM 1 END))
             THEN 

                   (* ;; "MAILFOLDER not passed to PARSEMIME, so error messages will appear in PROMPTWINDOW, not in browser promptwindow.")

                   (TEDIT.INCLUDE TEXTSTREAM MSGSTREAM START (FETCH (MIMEPART STARTPOS)
                                                                OF MIMEPARSE)) 

                   (* ;; "The headers have to be fixed up before we start demiming, because END is not accurate in the DEMIME case.")

                   (CL:WHEN [AND FILTERED (NOT (= (GETEOFPTR TEXTSTREAM)
                                                  (+ EOF (- (FETCH (MIMEPART STARTPOS)
                                                               OF MIMEPARSE)
                                                            START]
                                                             (* ; "Rats, we have to recalculate more slowly now, since there could be ns chars in header.  TEdit counts them differently than the plain text file does")
                       (SETQ FILTERED (LAFITE.PARSE.HEADER TEXTSTREAM FILTERS EOF)))
                   (SETFILEPTR MSGSTREAM (FETCH (MIMEPART STARTPOS) OF MIMEPARSE))
                   (DEMIMEPART MSGSTREAM TEXTSTREAM MIMEPARSE T)
           ELSE (TEDIT.INCLUDE TEXTSTREAM MSGSTREAM START END)
                 (CL:WHEN [AND FILTERED (NOT (= (GETEOFPTR TEXTSTREAM)
                                                (+ EOF (- END START]
                                                             (* ; "Rats, we have to recalculate more slowly now, since there could be ns chars in header.  TEdit counts them differently than the plain text file does")
                     (SETQ FILTERED (LAFITE.PARSE.HEADER TEXTSTREAM FILTERS EOF)))]
         [for PAIR in FILTERED do 

                                    (* ;; "Note: we are depending on the pairs being in reverse order from the parse, so that the deletions do not affect the char count")

                                             (TEDIT.DELETE TEXTSTREAM (+ EOF (- (CAR PAIR)
                                                                                START)
                                                                         1)
                                                    (- (CADR PAIR)
                                                       (CAR PAIR]
         (TEDIT.SETSEL TEXTSTREAM (ADD1 (GETEOFPTR TEXTSTREAM))
                0)
         (SETFILEPTR TEXTSTREAM -1])
)



(* ;; 
"Replaces function on LAFITEBROWSE, so that browser window interprets different character sets.")

(DEFINEQ

(PRINTMESSAGESUMMARY.STRING
  [LAMBDA (X FILE)
    (IF (STRPOS "=?" X)
        THEN (RECODEMIMEHEADER (OPENSTRINGSTREAM X 'INPUT)
                        FILE 0 (NCHARS X))
      ELSE (PRIN3 X FILE))
    X])
)
(DEFINEQ

(ADDMIMEOBJECT
  [LAMBDA (INSTREAM PART TEXTSTREAM DEFAULTFILENAME)         (* ; "Edited 15-Dec-99 16:29 by rmk:")
                                                             (* ; "Edited 25-Jun-99 23:17 by rmk:")
                                                             (* ; "Edited 25-Jun-99 23:09 by rmk:")
    (TEDIT.INSERT TEXTSTREAM "
")
    (TEDIT.INSERT.OBJECT (IMAGEOBJCREATE (LIST PART (OR [CADR (OR (ASSOC 'FILENAME
                                                                         (FETCH (MIMEPART 
                                                                                     DISPOSITIONPROPS
                                                                                           )
                                                                            OF PART))
                                                                  (ASSOC 'NAME (FETCH
                                                                                (MIMEPART TYPE)
                                                                                  OF PART]
                                                        DEFAULTFILENAME)
                                               INSTREAM)
                                MIMEOBJIMAGEFNS)
           TEXTSTREAM)
    (TEDIT.INSERT TEXTSTREAM "
"])

(MIMEOBJINIT
  [LAMBDA NIL                                                (* ; "Edited 25-Jun-99 23:35 by rmk:")
                                                             (* ; "Edited 25-Jun-99 22:58 by rmk:")
                                                             (* ; "Edited 25-Jun-99 20:10 by rmk:")
                                                             (* ; "Edited 25-Jun-99 20:05 by rmk:")
                                                             (* ; "Edited 25-Jun-99 20:03 by rmk:")
    (SETQ MIMEOBJIMAGEFNS (IMAGEFNSCREATE 'MIMEOBJ.DISPLAYFN 'MIMEOBJ.IMAGEBOXFN 'MIMEOBJ.PUTFN
                                 'MIMEOBJ.GETFN
                                 'MIMEOBJ.COPYFN
                                 'MIMEOBJ.BUTTONEVENTINFN
                                 'MIMEOBJ.COPYBUTTONEVENTINFN NIL NIL NIL NIL NIL 
                                 'MIMEOBJ.PREPRINTFN])

(MIMEOBJ.DISPLAYFN
  [LAMBDA (OBJ STREAM)                                       (* ; "Edited 29-Jun-99 11:25 by rmk:")
                                                             (* ; "Edited 29-Jun-99 11:19 by rmk:")
                                                             (* ; "Edited 29-Jun-99 11:11 by rmk:")
                                                             (* ; "Edited 25-Jun-99 22:01 by rmk:")
    (LET ([PART (CAR (IMAGEOBJPROP OBJ 'OBJECTDATUM]
          [FILENAME (CADR (IMAGEOBJPROP OBJ 'OBJECTDATUM]
          (MARGIN (TIMES 3 (DSPSCALE NIL STREAM)))
          (ONEPOINT (DSPSCALE NIL STREAM))
          (FONT (FONTCREATE 'TERMINAL 10 'BOLD 0 STREAM))
          OLDFONT)
         (SETQ OLDFONT (DSPFONT FONT STREAM))

         (* ;; "10 is compensating for some kind of confusion with TEDIT.  It seems to invoke the DISPLAYFN 10 points to the left of the image box.")

         (DSPXPOSITION (PLUS (TIMES 10 ONEPOINT)
                             MARGIN
                             (CHARWIDTH (CHARCODE SPACE)
                                    FONT))
                STREAM)
         (DSPYPOSITION (PLUS MARGIN (FONTPROP FONT 'DESCENT))
                STREAM)
         (PRINTOUT STREAM FILENAME)
         (DRAWAREABOX (PLUS (TIMES 10 ONEPOINT)
                            ONEPOINT)
                ONEPOINT
                (PLUS (TIMES 2 (PLUS ONEPOINT (CHARWIDTH (CHARCODE SPACE)
                                                     FONT)))
                      (STRINGWIDTH FILENAME FONT))
                (PLUS (TIMES 2 ONEPOINT)
                      (FONTPROP FONT 'HEIGHT)
                      (FONTPROP FONT 'DESCENT))
                ONEPOINT NIL STREAM)
         (DSPFONT OLDFONT STREAM])

(MIMEOBJ.COPYFN
  [LAMBDA (OBJ)                                              (* ; "Edited 25-Jun-99 23:38 by rmk:")
                                                             (* ; "Edited 25-Jun-99 23:35 by rmk:")
                                                             (* ; "Edited 25-Jun-99 23:32 by rmk:")
    (LET ([STRM (CADDR (IMAGEOBJPROP OBJ 'OBJECTDATUM]
          NEWSTRM)
         (CL:WHEN STRM
             (SETQ NEWSTRM (OPENSTREAM '{NODIRCORE 'BOTH))
             (COPYBYTES STRM NEWSTRM)
             NEWSTRM)
         (IMAGEOBJCREATE (LIST (CREATE MIMEPART USING (CAR (IMAGEOBJPROP OBJ 'OBJECTDATUM))
                                                          STARTPOS _ 0 ENDPOS _ (GETEOFPTR NEWSTRM))
                               [COPY (CADR (IMAGEOBJPROP OBJ 'OBJECTDATUM]
                               NEWSTRM)
                MIMEOBJIMAGEFNS])

(MIMEOBJ.BUTTONEVENTINFN
  [LAMBDA (OBJ WSTRM SEL RELX RELY WINDOW HOSTSTREAM BUTTON)
                                                            (* ; "Edited 31-May-2000 17:33 by rmk:")
    (CL:WHEN (EQ BUTTON 'LEFT)
        (LET [(PART (CAR (IMAGEOBJPROP OBJ 'OBJECTDATUM]
             (SELECTQ [MENU (IF [AND (EQ 'APPLICATION (FETCH (MIMEPART MAINTYPE) OF
                                                                                         PART))
                                         (MEMB (FETCH (MIMEPART SUBTYPE) OF PART)
                                               '(POSTCRIPT POSTSCRIPT]
                                THEN 

                                      (* ;; "Eudora seems to misspell POSTSCRIPT.")

                                      (CREATE MENU
                                             TITLE _ " Postscript attachment "
                                             CENTERFLG _ T
                                             ITEMS _ '(Print Extract File% name))
                              ELSEIF [AND (EQ 'TEXT (FETCH (MIMEPART MAINTYPE) OF PART))
                                              (MEMB (FETCH (MIMEPART SUBTYPE) OF PART)
                                                    '(HTML HTM]
                                THEN (CREATE MENU
                                                TITLE _ " HTML attachment "
                                                CENTERFLG _ T
                                                ITEMS _ '(Display Extract))
                              ELSE (CREATE MENU
                                              TITLE _ " Extract attachment? "
                                              CENTERFLG _ T
                                              ITEMS _ '(Yes No File% name]
                 ((Yes Extract) 
                      (LET ((TSTREAM (TTYDISPLAYSTREAM)))
                           (CLEARW TSTREAM)
                           (PROMPTPRINT "Attachment extracted to "
                                  (FULLNAME (DEMIMEPART (CADDR (IMAGEOBJPROP OBJ 'OBJECTDATUM))
                                                   NIL PART)))
                           (CLOSEW (WFROMDS TSTREAM T))))
                 (File% name (LET ((FILENAME (PopUpWindowAndGetAtom "File name (Clear to abort): "))
                                   (TSTREAM (TTYDISPLAYSTREAM)))
                                  (CLEARW TSTREAM)
                                  (PROMPTPRINT "Attachment extracted to "
                                         (FULLNAME (DEMIMEPART (CADDR (IMAGEOBJPROP OBJ
                                                                                 'OBJECTDATUM))
                                                          NIL PART NIL FILENAME)))
                                  (CLOSEW (WFROMDS TSTREAM T))))
                 (Print (LET ((TSTREAM (TTYDISPLAYSTREAM)))
                             (CLEARW TSTREAM)
                             (DEMIMEPART (CADDR (IMAGEOBJPROP OBJ 'OBJECTDATUM))
                                    NIL PART NIL '{LPT})
                             (CLOSEW (WFROMDS TSTREAM T))))
                 (Display (DEMIMETEXT (CADDR (IMAGEOBJPROP OBJ 'OBJECTDATUM))
                                 (TEXTSTREAM (TEDIT))
                                 PART))
                 NIL)))])

(MIMEOBJ.IMAGEBOXFN
  [LAMBDA (OBJ STREAM)                                       (* ; "Edited 29-Jun-99 10:55 by rmk:")
                                                             (* ; "Edited 29-Jun-99 10:52 by rmk:")
                                                             (* ; "Edited 29-Jun-99 10:14 by rmk:")
                                                             (* ; "Edited 25-Jun-99 20:54 by rmk:")

    (* ;; "The imagebox has 1 point of white space, then the border (1 pt), then another point of white space, the text, with spaces before and after the text, and an extra DESCENT above the text.  So the margin around the text is 3 points.")

    (LET ([PART (CAR (IMAGEOBJPROP OBJ 'OBJECTDATUM]
          [FILENAME (CADR (IMAGEOBJPROP OBJ 'OBJECTDATUM]
          (MARGIN (TIMES 3 (DSPSCALE NIL STREAM)))
          (FONT (FONTCREATE 'TERMINAL 10 'BOLD 0 STREAM)))

         (* ;; "I dont understand why I only need to allocate one point (DSPSCALE) for the top margin, instead of 3.  But that's what makes it look symmetric.")

         (CREATE IMAGEBOX
                XSIZE _ (PLUS (TIMES 2 (PLUS MARGIN (CHARWIDTH (CHARCODE SPACE)
                                                           FONT)))
                              (STRINGWIDTH FILENAME FONT))
                YSIZE _ (PLUS MARGIN (FONTPROP FONT 'HEIGHT)
                              (FONTPROP FONT 'DESCENT)
                              (DSPSCALE NIL STREAM))
                YDESC _ (PLUS MARGIN (FONTPROP FONT 'DESCENT))
                XKERN _ 0])
)

(MIMEOBJINIT)
(DEFINEQ

(DEPS
  [LAMBDA (PSFILE MSGWINDOW)                                 (* ; "Edited 29-Jun-99 18:10 by rmk:")
                                                             (* ; "Edited 29-Jun-99 17:28 by rmk:")
                                                             (* ; "Edited 29-Jun-99 17:12 by rmk:")
                                                             (* ; "Edited 25-Jun-99 09:18 by rmk:")
                                                             (* ; "Edited 21-Apr-99 09:19 by rmk:")
                                                             (* ; "Edited  7-Apr-99 07:50 by rmk:")
                                                             (* ; "Edited 29-Dec-98 15:23 by rmk:")

    (* ;; "Extracts PostScript text in MSGWINDOW, puts it in PSFILE")

    (RESETLST
        [LET [(INSTREAM (OR MSGWINDOW (WHICHW]
             (SETQ INSTREAM (IF (GETSTREAM INSTREAM 'INPUT T)
                              ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
                              ELSE [RESETSAVE (SETQ INSTREAM (OPENSTREAM (PACKFILENAME
                                                                              'BODY INSTREAM
                                                                              'DIRECTORY
                                                                              (EVAL ATTACHMENTDIR))
                                                                        'INPUT))
                                              '(PROGN (CLOSEF? OLDVALUE]
                                    INSTREAM))
             (FOR SEG STARTPOS ENDPOS PSSTREAM IN (FINDPSSEGMENTS INSTREAM 0)
                DO (CL:UNLESS PSFILE
                           [SETQ PSFILE (OR (CADDR SEG)
                                            (ASKUSER NIL NIL "Postscript file name?  " '(])
                      [RESETSAVE [SETQ PSSTREAM (OPENSTREAM (PACKFILENAME 'VERSION NIL 'BODY PSFILE
                                                                   'DIRECTORY
                                                                   (EVAL ATTACHMENTDIR)
                                                                   'EXTENSION
                                                                   'ps)
                                                       'OUTPUT
                                                       'NEW
                                                       '((TYPE TEXT]
                             '(PROGN (CLOSEF? OLDVALUE)
                                     (AND RESETSTATE (DELFILE OLDVALUE]
                      (COPYCHARS INSTREAM PSSTREAM (CAR SEG)
                             (CADR SEG))
                      (SETFILEPTR INSTREAM (CADR SEG))
                      (PROG1 (FULLNAME (CLOSEF? PSSTREAM))
                             (SETQ PSFILE NIL))
                      NIL FINALLY (RETURN (IF (CDR $$VAL)
                                                  THEN $$VAL
                                                ELSE (CAR $$VAL])])

(FINDPSSEGMENTS
  [LAMBDA (INSTREAM BEGINPOS EOFPOS)                         (* ; 
                                                           "Edited 17-Jan-2000 22:07 by rmk:")
                                                             (* ; "Edited 29-Jun-99 18:08 by rmk:")
                                                             (* ; "Edited 29-Jun-99 17:00 by rmk:")

    (* ;; 
"Returns a list of pairs of starting/ending byte positions for all postscript segments in INSTREAM")

    (CL:WHEN BEGINPOS (SETFILEPTR INSTREAM BEGINPOS))
    (BIND STARTPOS ENDPOS PSSTREAM TITLE WHILE (SETQ STARTPOS (FFILEPOS "%%!PS-Adobe" 
                                                                             INSTREAM (GETFILEPTR
                                                                                       INSTREAM)
                                                                             EOFPOS))
       DO (CL:WHEN (FFILEPOS "%%Title: " INSTREAM NIL (PLUS STARTPOS 500)
                              NIL T)
                  [SETQ TITLE (MKATOM (CL:STRING-TRIM " " (CL:READ-LINE INSTREAM NIL ""]
                  [IF (EQ 0 (NCHARS TITLE))
                      THEN (SETQ TITLE NIL)
                    ELSE (SELECTQ (U-CASE (FILENAMEFIELD TITLE 'EXTENSION))
                                 (PS)
                                 ((DVI NIL) 
                                      (SETQ TITLE (PACKFILENAME 'EXTENSION 'ps 'BODY TITLE))
                                      NIL)
                                 (SETQ TITLE (PACK* TITLE ".ps"])
             (IF (SETQ ENDPOS (OR (FFILEPOS "%%%%EOF" INSTREAM NIL EOFPOS NIL T)
                                      (FFILEPOS "%%%%Trailer" INSTREAM NIL EOFPOS NIL T)))
                 THEN 

                       (* ;; "Add 1 because we didn't search for the closing CR, because of EOL foolishness.  But 1 should include it.")

                       (PUSH $$VAL (LIST STARTPOS (ADD1 ENDPOS)
                                             TITLE))
               ELSE (PRINTOUT T "Can't find Postscript terminator" T)
                     (SETFILEPTR INSTREAM (IPLUS STARTPOS 5))
                     NIL])

(POSTSCRIPTPART
  [LAMBDA (INSTREAM STARTPOS ENDPOS)                         (* ; 
                                                           "Edited 17-Jan-2000 23:14 by rmk:")
                                                             (* ; 
                                                           "Edited 17-Jan-2000 23:07 by rmk:")
                                                             (* ; 
                                                           "Edited 17-Jan-2000 23:02 by rmk:")
    (LET (HEADERS PART)
         (CL:WHEN (AND ENDPOS (IGREATERP (- ENDPOS (GETFILEPTR INSTREAM))
                                     20000)
                       (SETQ HEADERS (FINDPSSEGMENTS INSTREAM STARTPOS ENDPOS)))
             [SETQ HEADERS (FOR PSTAIL PS NEXT PSPART TEXTPART ON HEADERS AS PARTNUM
                              FROM 1
                              JOIN (SETQ PS (CAR PSTAIL))
                                    (SETQ PSPART (CREATE
                                                  MIMEPART
                                                  STARTPOS _ (CAR PS)
                                                  ENDPOS _ (CADR PS)
                                                  TYPE _ '((APPLICATION POSTSCRIPT)
                                                           (CHARSET "iso-8859-1"))
                                                  ENCODING _ (CADR (ASSOC 'CONTENT-TRANSFER-ENCODING
                                                                          HEADERS))
                                                  DISPOSITIONPROPS _
                                                  [AND (CADDR PS)
                                                       `((FILENAME ,(CADDR PS]
                                                  PARTNUM _ PARTNUM))
                                    (SETQ NEXT (CADR PSTAIL))
                                    (CL:WHEN (AND NEXT (IGREATERP (- (CAR NEXT)
                                                                     (CADR PS))
                                                              2))
                                        (ADD PARTNUM 1)
                                        (SETQ TEXTPART (CREATE MIMEPART
                                                              STARTPOS _ (CADR PS)
                                                              ENDPOS _ (CAR NEXT)
                                                              TYPE _ '((TEXT PLAIN)
                                                                       (CHARSET "iso-8859-1"))
                                                              ENCODING _ (CADR (ASSOC 
                                                                                      '
                                                                            CONTENT-TRANSFER-ENCODING
                                                                                      HEADERS))
                                                              PARTNUM _ PARTNUM)))
                                    (CONS PSPART (AND TEXTPART (CONS TEXTPART]

             (* ;; "Is there text after the message headers and before the first postscript part?  STARTPOS is the position after the headers.  Assume that anything interesting is at least 2 bytes long.")

             (* ;; "Not sure about the SUB1.   Perhaps the ENDPOS of X=STARTPOS of X+1.")

             (CL:WHEN (IGREATERP (- (FETCH STARTPOS OF (CAR HEADERS))
                                    STARTPOS)
                             2)
                 (PUSH HEADERS (CREATE MIMEPART
                                          STARTPOS _ STARTPOS
                                          ENDPOS _ (SUB1 (FETCH STARTPOS OF (CAR HEADERS)))
                                          TYPE _ '((TEXT PLAIN)
                                                   (CHARSET "iso-8859-1"))
                                          PARTNUM _ 1)))
             (SETQ PART (IF (CDR HEADERS)
                            THEN (CREATE MIMEPART
                                            STARTPOS _ (FETCH (MIMEPART STARTPOS)
                                                          OF (CAR HEADERS))
                                            ENDPOS _ (FETCH (MIMEPART ENDPOS)
                                                        OF (CAR (LAST HEADERS)))
                                            TYPE _ '((MULTIPART MIXED))
                                            SUBPARTS _ HEADERS)
                          ELSE (CAR HEADERS))))])
)
(DEFINEQ

(STREAMFROMBASE64
  [LAMBDA (INSTREAM OUTSTREAM STARTPOS ENDPOS FROMCHARENCODING TEXTP)
                                                             (* ; "Edited 25-Jun-99 18:06 by rmk:")
                                                             (* ; "Edited 25-Jun-99 18:06 by rmk:")
                                                             (* ; "Edited 20-Oct-98 13:59 by rmk:")

    (* ;; 
"TEXTP if this is a text file, in which case charencoding and CR/LF conventions should be observed")

    (RESETLST
        [IF (GETSTREAM INSTREAM 'INPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
            THEN (SETQ INSTREAM (TEXTSTREAM INSTREAM))
          ELSE (RESETSAVE (SETQ INSTREAM (OPENSTREAM INSTREAM 'INPUT))
                          '(PROGN (CLOSEF? OLDVALUE]
        [IF (GETSTREAM OUTSTREAM 'OUTPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM OUTSTREAM)))
            THEN (SETQ OUTSTREAM (TEXTSTREAM OUTSTREAM))
          ELSE (RESETSAVE [SETQ OUTSTREAM (OPENSTREAM OUTSTREAM 'OUTPUT 'NEW
                                                     (AND TEXTP '((TYPE TEXT]
                          '(PROGN (CLOSEF? OLDVALUE)
                                  (AND RESETSTATE (DELFILE OLDVALUE]
        (CL:UNLESS STARTPOS (SETQ STARTPOS 0))
        (SETFILEPTR INSTREAM STARTPOS)
        (FOR NBINS C BYTE VAL CRFLAG (I _ 3)
               [TEDITSTREAM _ (IF (TEXTSTREAMP OUTSTREAM)
                                  THEN (PROG1 OUTSTREAM
                                               (SETQ OUTSTREAM (OPENSTREAM '{NODIRCORE} 'BOTH)))]
               (RECODEMAP _ (MIMERECODEMAP FROMCHARENCODING))
           FROM (- (OR ENDPOS (GETEOFPTR INSTREAM))
                       STARTPOS) TO 1 BY -1
           DO (SETQ C (BIN INSTREAM))
                 (IF (AND (IGEQ C (CHARCODE A))
                              (ILEQ C (CHARCODE Z)))
                     THEN (SETQ C (IDIFFERENCE C (CHARCODE A)))
                   ELSEIF (AND (IGEQ C (CHARCODE a))
                                   (ILEQ C (CHARCODE z)))
                     THEN (SETQ C (IDIFFERENCE C (IDIFFERENCE (CHARCODE a)
                                                            26)))
                   ELSEIF (AND (IGEQ C (CHARCODE 0))
                                   (ILEQ C (CHARCODE 9)))
                     THEN (SETQ C (IDIFFERENCE C (IDIFFERENCE (CHARCODE 0)
                                                            52)))
                   ELSEIF (EQ C (CHARCODE +))
                     THEN (SETQ C 62)
                   ELSEIF (EQ C (CHARCODE /))
                     THEN (SETQ C 63)
                   ELSEIF (EQ C (CHARCODE =))
                     THEN                                (* ; "Pad with 0 at very end")
                           (SELECTQ I
                               (1                            (* ; "Two chars read, expect two pads")
                                  (CL:UNLESS (EQ (CHARCODE =)
                                                 (BIN INSTREAM))
                                         (HELP "Padding = in ill-formed configuration"))
                                  (SETQ BYTE (LOGOR (LLSH VAL 4)
                                                    (LRSH C 2)))
                                  (IF TEXTP
                                      THEN (SELCHARQ BYTE
                                                    (CR (SETQ CRFLAG T)
                                                        (BOUT OUTSTREAM BYTE))
                                                    (LF (IF CRFLAG
                                                            THEN (SETQ CRFLAG NIL)
                                                          ELSE (BOUT OUTSTREAM BYTE)))
                                                    (PROGN (BOUT OUTSTREAM BYTE)
                                                           (SETQ CRFLAG NIL)))
                                    ELSE (BOUT OUTSTREAM BYTE)))
                               (0                            (* ; "3 chars read, expect one pad")
                                  (SETQ BYTE (LOGOR (LLSH VAL 6)
                                                    C))
                                  (IF TEXTP
                                      THEN (SELCHARQ BYTE
                                                    (CR (SETQ CRFLAG T)
                                                        (BOUT OUTSTREAM BYTE))
                                                    (LF (IF CRFLAG
                                                            THEN (SETQ CRFLAG NIL)
                                                          ELSE (BOUT OUTSTREAM BYTE)))
                                                    (PROGN (BOUT OUTSTREAM BYTE)
                                                           (SETQ CRFLAG NIL)))
                                    ELSE (BOUT OUTSTREAM BYTE)))
                               (HELP "Padding = in ill-formed configuration"))
                           (RETURN)
                   ELSE                                  (* ; "throw everything else away")
                         (GO $$ITERATE))
                 (SELECTQ I
                     (3                                      (* ; "Just read first byte, save")
                        (SETQ VAL C)
                        (SETQ I 2))
                     (2                                      (* ; 
                                                        "Read second byte, can output first result")
                        (SETQ BYTE (LOGOR (LLSH VAL 2)
                                          (LRSH C 4)))
                        (IF TEXTP
                            THEN (SELCHARQ BYTE
                                          (CR (SETQ CRFLAG T)
                                              (BOUT OUTSTREAM BYTE))
                                          (LF (IF CRFLAG
                                                  THEN (SETQ CRFLAG NIL)
                                                ELSE (BOUT OUTSTREAM BYTE)))
                                          (PROGN (BOUT OUTSTREAM BYTE)
                                                 (SETQ CRFLAG NIL)))
                          ELSE (BOUT OUTSTREAM BYTE))
                        (SETQ VAL (LOGAND C 15))
                        (SETQ I 1))
                     (1 (SETQ BYTE (LOGOR (LLSH VAL 4)
                                          (LRSH C 2)))
                        (IF TEXTP
                            THEN (SELCHARQ BYTE
                                          (CR (SETQ CRFLAG T)
                                              (BOUT OUTSTREAM BYTE))
                                          (LF (IF CRFLAG
                                                  THEN (SETQ CRFLAG NIL)
                                                ELSE (BOUT OUTSTREAM BYTE)))
                                          (PROGN (BOUT OUTSTREAM BYTE)
                                                 (SETQ CRFLAG NIL)))
                          ELSE (BOUT OUTSTREAM BYTE))
                        (SETQ VAL (LOGAND C 3))
                        (SETQ I 0))
                     (PROGN (SETQ BYTE (LOGOR (LLSH VAL 6)
                                              C))
                            (IF TEXTP
                                THEN (SELCHARQ BYTE
                                              (CR (SETQ CRFLAG T)
                                                  (BOUT OUTSTREAM BYTE))
                                              (LF (IF CRFLAG
                                                      THEN (SETQ CRFLAG NIL)
                                                    ELSE (BOUT OUTSTREAM BYTE)))
                                              (PROGN (BOUT OUTSTREAM BYTE)
                                                     (SETQ CRFLAG NIL)))
                              ELSE (BOUT OUTSTREAM BYTE))
                            (SETQ I 3))) FINALLY (CL:WHEN TEDITSTREAM
                                                         (TEDIT.INCLUDE TEDITSTREAM OUTSTREAM)
                                                         (SETQ OUTSTREAM TEDITSTREAM))))
    OUTSTREAM])

(STREAMFROMBINHEX
  [LAMBDA (INSTREAM OUTSTREAM STARTPOS ENDPOS FROMCHARENCODING TEXTP)
                                                            (* ; "Edited 10-Jun-2001 22:00 by rmk:")

    (* ;; 
"TEXTP if this is a text file, in which case charencoding and CR/LF conventions should be observed")

    (RESETLST
        (CL:UNLESS STARTPOS (SETQ STARTPOS 0))
        (CL:UNLESS (AND (FILEPOS "file must be converted with BinHex 4.0)" INSTREAM STARTPOS ENDPOS 
                               NIL T UPPERCASEARRAY)
                        (EQ (CHARCODE CR)
                            (READCCODE INSTREAM)))
               (ERROR "Header missing from BinHex file part"))
        (UNTIL (SELCHARQ (BIN INSTREAM)
                        ((CR LF) 
                             NIL)
                        (%: T)
                        (ERROR "Colon missing from BinHex file part")))
        (CL:UNLESS BINHEXCHARARRAY
            (LET [(TMP (CL:MAKE-ARRAY (CONSTANT (ADD1 (- (NTHCHARCODE BINHEXCHARS -1)
                                                         (CHCON1 BINHEXCHARS]
                 (FOR I C FROM 1 WHILE (SETQ C (NTHCHARCODE BINHEXCHARS I))
                    DO (CL:SETF [CL:SVREF TMP (- C (CONSTANT (CHCON1 BINHEXCHARS]
                                  (SUB1 I)))
                 (SETQ BINHEXCHARARRAY TMP)))
        (LET (TEDITSTREAM NEXTBYTE LASTBYTE FNAME VERSION TYPE CREATOR FLAGS DATALENGTH EXTENSION
                    (REPEAT 0)
                    (POS 0)
                    (RECODEMAP (MIMERECODEMAP FROMCHARENCODING)))
             (SETQ FNAME (ALLOCSTRING (BINHEXBYTE)))
             (FOR I FROM 1 TO (NCHARS FNAME) DO (RPLCHARCODE FNAME I (BINHEXBYTE)))
             (SETQ VERSION (BINHEXBYTE))
             (SETQ TYPE (BINHEXLONG))
             (SETQ CREATOR (BINHEXLONG))                     (* ; 
                                 "Perhaps creator could be used to attach proper extension for PC?")
             (SETQ EXTENSION (CASE CREATOR
                                 (1297307460                 (* ; "Word")
                                    (PRINTOUT T "Microsoft Word file" T)
                                    'doc)
                                 ((1297303877 1297044307)    (* ; 
                                                          "HTML? First is for IE, 2nd for Netscape")
                                    (PRINTOUT T "HTML file" T)
                                    'html)
                                 (T NIL)))
             (SETQ FLAGS (BINHEXWORD))
             (SETQ DATALENGTH (BINHEXLONG))
             (BINHEXLONG)                                    (* ; "Length of resource fork")
             (BINHEXWORD)                                    (* ; "CRC")

             (* ;; "")

             (* ;; "Now, open the output stream, done after decoding the type so that we can finagle the extension based on the kind of file.  Except that we don't yet know how to map type-numbers into extensions.")

             [IF (GETSTREAM INSTREAM 'INPUT T)
               ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
                 THEN (SETQ INSTREAM (TEXTSTREAM INSTREAM))
               ELSE (RESETSAVE (SETQ INSTREAM (OPENSTREAM INSTREAM 'INPUT))
                               '(PROGN (CLOSEF? OLDVALUE]
             [IF (GETSTREAM OUTSTREAM 'OUTPUT T)
               ELSEIF (CAR (NLSETQ (TEXTSTREAM OUTSTREAM)))
                 THEN (SETQ OUTSTREAM (TEXTSTREAM OUTSTREAM))
               ELSE (RESETSAVE [SETQ OUTSTREAM (OPENSTREAM (IF EXTENSION
                                                                   THEN (PACKFILENAME
                                                                             'BODY OUTSTREAM
                                                                             'EXTENSION EXTENSION)
                                                                 ELSE OUTSTREAM)
                                                          'OUTPUT
                                                          'NEW
                                                          (AND TEXTP '((TYPE TEXT]
                               '(PROGN (CLOSEF? OLDVALUE)
                                       (AND RESETSTATE (DELFILE OLDVALUE]
             (IF (TEXTSTREAMP OUTSTREAM)
                 THEN (SETQ TEDITSTREAM OUTSTREAM)
                       (SETQ OUTSTREAM (OPENSTREAM '{NODIRCORE} 'BOTH))
               ELSE (PRINTOUT T "BinHex name: " (FULLNAME OUTSTREAM)
                               T))

             (* ;; "")

             (* ;; "Finally, decode the data fork")

             (FOR I FROM 1 TO DATALENGTH DO (BOUT OUTSTREAM (BINHEXBYTE)))

             (* ;; "File now contains Word:  CRC, Bytes:  Resource Fork, Word CRC, which we ignore since we don't care about error checking or the resource fork.")

             (CL:WHEN TEDITSTREAM
                 (TEDIT.INCLUDE TEDITSTREAM OUTSTREAM)
                 (SETQ OUTSTREAM TEDITSTREAM))))
    OUTSTREAM])

(STREAMFROMASCII
  [LAMBDA (INSTREAM OUTSTREAM STARTPOS ENDPOS)           (* ; "Edited 27-Oct-98 07:39 by rmk:")

    (* ;; "Default encoding:  no conversion, except for EOL")

    (RESETLST
        [IF (GETSTREAM INSTREAM 'INPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
            THEN (SETQ INSTREAM (TEXTSTREAM INSTREAM))
          ELSE (RESETSAVE (SETQ INSTREAM (OPENSTREAM INSTREAM 'INPUT))
                          '(PROGN (CLOSEF? OLDVALUE]
        [IF (GETSTREAM OUTSTREAM 'OUTPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM OUTSTREAM)))
            THEN (SETQ OUTSTREAM (TEXTSTREAM OUTSTREAM))
          ELSE (RESETSAVE [SETQ OUTSTREAM (OPENSTREAM OUTSTREAM 'OUTPUT 'NEW
                                                     '((TYPE TEXT]
                          '(PROGN (CLOSEF? OLDVALUE)
                                  (AND RESETSTATE (DELFILE OLDVALUE]
        (COPYCHARS INSTREAM OUTSTREAM (OR STARTPOS 0)
               ENDPOS))
    OUTSTREAM])

(STREAMFROMENRICHEDTEXT
  [LAMBDA (INSTREAM OUTSTREAM STARTPOS ENDPOS FROMCHARENCODING SUBTYPE)
                                                             (* ; 
                                                           "Edited 27-Dec-2000 10:58 by rmk:")
                                                             (* ; 
                                                           "Edited 27-Dec-2000 10:58 by rmk:")
                                                             (* ; "Edited 10-Dec-99 10:17 by rmk:")
                                                             (* ; "Edited 16-Nov-99 18:26 by rmk:")

    (* ;; "Assumes that INSTREAM is a text file without NS run-encoding, hence does BIN's isntead of READCCODE's and EOL conversion.  This function skips <> and </> tags, interpreting whichever ones it can.   SUBTYPE is one of ENRICHED, HTML, NIL(=ENRICHED).")

    (CL:UNLESS SUBTYPE
        (SETQ SUBTYPE 'ENRICHED))
    (RESETLST
        [IF (GETSTREAM INSTREAM 'INPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
            THEN (SETQ INSTREAM (TEXTSTREAM INSTREAM))
          ELSE (RESETSAVE (SETQ INSTREAM (OPENSTREAM INSTREAM 'INPUT))
                          '(PROGN (CLOSEF? OLDVALUE]
        [IF (GETSTREAM OUTSTREAM 'OUTPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM OUTSTREAM)))
            THEN (SETQ OUTSTREAM (TEXTSTREAM OUTSTREAM))
          ELSE (RESETSAVE [SETQ OUTSTREAM (OPENSTREAM OUTSTREAM 'OUTPUT 'NEW
                                                     '((TYPE TEXT]
                          '(PROGN (CLOSEF? OLDVALUE)
                                  (AND RESETSTATE (DELFILE OLDVALUE]
        (CL:UNLESS STARTPOS (SETQ STARTPOS 0))
        (SETFILEPTR INSTREAM STARTPOS)
        (FOR NBINS C CLOSE STACK TAG PARAMS [TEDITSTREAM
                                                 _
                                                 (IF (TEXTSTREAMP OUTSTREAM)
                                                     THEN (PROG1 OUTSTREAM
                                                                  (SETQ OUTSTREAM (OPENSTREAM
                                                                                   '{NODIRCORE}
                                                                                   'BOTH)))]
               [RECODEMAP _ (MIMERECODEMAP (OR FROMCHARENCODING 'ISO8859/1]
           FROM (- (OR ENDPOS (GETEOFPTR INSTREAM))
                       STARTPOS) BY -1 WHILE (IGEQ NBINS 1)
           DO
           (SELCHARQ (SETQ C (BIN INSTREAM))
                (< (CL:WHEN (SETQ CLOSE (EQ (\PEEKBIN INSTREAM T)
                                            (CHARCODE /)))
                       (ADD NBINS -1)
                       (BIN INSTREAM))
                   [SETQ TAG (CONCATLIST (UNTIL [EQ (CHARCODE >)
                                                        (SETQ C (PROGN (ADD NBINS -1)
                                                                       (BIN INSTREAM]
                                            COLLECT (U-CASE (CHARACTER C]
                   (IF CLOSE
                       THEN 

                             (* ;; 
                      "Flush stack.  Do we need to restore parameters or reinstall previous looks?")

                             (* ;; "At least in HTML, open and closes are not related:  <i> means switch to italics, </i> means nonitalics.  But 2 <i>'s can be followed by a single </i>.  More like commands.  Must be an rfc on this.")

                             (WHILE STACK UNTIL (STREQUAL (POP STACK)
                                                               TAG))
                     ELSEIF (STREQUAL TAG "BR")
                       THEN (TERPRI OUTSTREAM)
                     ELSEIF (STREQUAL TAG "PARAM")
                       THEN (UNTIL (EQ (CHARCODE <)
                                               (\PEEKBIN INSTREAM T)) DO (ADD NBINS -1)
                                                                            (BIN INSTREAM))
                     ELSE (PUSH STACK TAG)))
                (& (IF (EQ SUBTYPE 'HTML)
                       THEN
                       [SETQ TAG
                        (UNTIL [EQ (CHARCODE ;)
                                       (SETQ C (PROGN (ADD NBINS -1)
                                                      (BIN INSTREAM] COLLECT C
                           FINALLY (RETURN (IF (LEQ (LENGTH $$VAL)
                                                            20)
                                                   THEN (PACK (FOR C IN $$VAL
                                                                     COLLECT (FCHARACTER C)))
                                                 ELSE (LET [(STR (ALLOCSTRING (LENGTH $$VAL]
                                                               (FOR I FROM 1 AS C
                                                                  IN $$VAL
                                                                  DO (RPLCHARCODE STR I C))
                                                               STR]
                       (SELECTQ TAG
                           (amp (PRINTCCODE (CHARCODE &)
                                       OUTSTREAM))
                           (nbsp (SPACES 1 OUTSTREAM))
                           (quot (PRINTCCODE (CHARCODE %')
                                        OUTSTREAM))
                           (IF (AND (EQ (CHARCODE %#)
                                            (CHCON1 TAG))
                                        (FIXP (SUBATOM TAG 2 -1)))
                               THEN (PRINTCCODE (MIMEFASTRECODECHARCODE (SUBATOM TAG 2 -1)
                                                           RECODEMAP)
                                               OUTSTREAM)
                             ELSE (PRINTOUT OUTSTREAM "&" TAG ";")))
                     ELSE (PRINTCCODE (IF RECODEMAP
                                              THEN (MIMEFASTRECODECHARCODE C RECODEMAP)
                                            ELSE C)
                                     OUTSTREAM)))
                (CR (IF (EQ (CHARCODE LINEFEED)
                                (\PEEKBIN INSTREAM T))
                        THEN (BIN INSTREAM)
                              (ADD NBINS -1))
                    (IF (EQ SUBTYPE 'HTML)
                        THEN (SPACES 1 OUTSTREAM)
                      ELSE (TERPRI OUTSTREAM)))
                (LF (CL:UNLESS (EQ SUBTYPE 'HTML)
                        (IF (EQ SUBTYPE 'HTML)
                            THEN (SPACES 1 OUTSTREAM)
                          ELSE (TERPRI OUTSTREAM))))
                (PRINTCCODE (IF RECODEMAP
                                THEN (MIMEFASTRECODECHARCODE C RECODEMAP)
                              ELSE C)
                       OUTSTREAM)) FINALLY (CL:WHEN TEDITSTREAM
                                                   (TEDIT.INCLUDE TEDITSTREAM OUTSTREAM)
                                                   (SETQ OUTSTREAM TEDITSTREAM)))
        OUTSTREAM)])

(STREAMFROMUUENCODE
  [LAMBDA (INSTREAM FILENAME STARTPOS ENDPOS FROMCHARENCODING TEXTP)
                                                            (* ; "Edited 21-Jan-2001 20:03 by rmk:")
    (RESETLST
        [LET (TEMP STR)
             [RESETSAVE [SETQ TEMP (OPENSTREAM '/tmp/uudecodefile 'OUTPUT NIL '((TYPE TEXT]
                    '(PROGN (CLOSEF? OLDVALUE)
                            (DELFILE (FULLNAME OLDVALUE]
             (SETFILEPTR INSTREAM STARTPOS)
             (SKIPSEPRCODES INSTREAM FILERDTBL)
             (CL:UNLESS (EQUAL (CHARCODE (b e g i n SPACE))
                               (FOR I FROM 1 TO 6 COLLECT (READCCODE INSTREAM)))
                    (ERROR "%"begin%" line missing from uuencoded file"))
             (PRINTOUT TEMP "begin ")

             (* ;; "Copy mode characters")

             (BIND C DO (SETQ C (READCCODE INSTREAM))
                               (PRINTCCODE C TEMP) REPEATUNTIL (EQ C (CHARCODE SPACE)))

             (* ;; "Have to convert spaces in filename")

             (SETQ STR (CL:STRING-TRIM " " (CL:READ-LINE INSTREAM NIL "")))
             (FOR I C FROM 1 WHILE (SETQ C (NTHCHARCODE STR I))
                WHEN (EQ C (CHARCODE SPACE)) DO (RPLCHARCODE STR I (CHARCODE _)))
             (PRINTOUT TEMP STR T)
             (COPYCHARS INSTREAM TEMP (GETFILEPTR INSTREAM)
                    ENDPOS)
             (CLOSEF TEMP)
             (ShellCommand (CONCAT "cd /tmp; uudecode uudecodefile"))
             (IF (EQ FILENAME T)
                 THEN [COPYFILE (PACKFILENAME 'DIRECTORY '{dsk}/tmp 'BODY STR)
                                 T
                                 (AND TEXTP '((TYPE TEXT]
               ELSEIF (STREAMP FILENAME)
                 THEN 

                       (* ;; "Logic copied from DEMIMETEXT:")

                       (LET (CHARMAP)
                            [SETQ TEMP (OPENSTREAM (PACKFILENAME 'DIRECTORY '{dsk}/tmp 'BODY STR)
                                              'INPUT NIL '((TYPE TEXT]
                            (COND
                               ((AND CHARSET (NEQ 'US-ASCII (U-CASE CHARSET))
                                     (SETQ CHARMAP (MIMERECODEMAP CHARSET)))
                                (UNTIL (EOFP TEMP) DO (PRINTCCODE (MIMEFASTRECODECHARCODE
                                                                           (READCCODE TEMP)
                                                                           CHARMAP)
                                                                     FILENAME)))
                               (T (COPYCHARS TEMP FILENAME)))
                            (CLOSEF TEMP))
               ELSE (RENAMEFILE (PACKFILENAME 'DIRECTORY '{dsk}/tmp 'BODY STR)
                               (PACKFILENAME 'DIRECTORY (EVAL ATTACHMENTDIR)
                                      'BODY STR])])

(STREAMFROMQUOTEDPRINTABLE
  [LAMBDA (INSTREAM OUTSTREAM STARTPOS ENDPOS FROMCHARENCODING)
                                                             (* ; 
                                                           "Edited 27-Dec-2000 10:59 by rmk:")
                                                             (* ; 
                                                           "Edited 27-Dec-2000 10:59 by rmk:")
                                                             (* ; "Edited 25-Jun-99 18:07 by rmk:")
                                                             (* ; "Edited 25-Jun-99 18:07 by rmk:")
                                                             (* ; "Edited 17-Sep-98 08:22 by rmk:")

    (* ;; "Assumes that INSTREAM is a text file, hence does EOL conversion")

    (RESETLST
        [IF (GETSTREAM INSTREAM 'INPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
            THEN (SETQ INSTREAM (TEXTSTREAM INSTREAM))
          ELSE (RESETSAVE (SETQ INSTREAM (OPENSTREAM INSTREAM 'INPUT))
                          '(PROGN (CLOSEF? OLDVALUE]
        [IF (GETSTREAM OUTSTREAM 'OUTPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM OUTSTREAM)))
            THEN (SETQ OUTSTREAM (TEXTSTREAM OUTSTREAM))
          ELSE (RESETSAVE [SETQ OUTSTREAM (OPENSTREAM OUTSTREAM 'OUTPUT 'NEW
                                                     '((TYPE TEXT]
                          '(PROGN (CLOSEF? OLDVALUE)
                                  (AND RESETSTATE (DELFILE OLDVALUE]
        (CL:UNLESS STARTPOS (SETQ STARTPOS 0))
        (SETFILEPTR INSTREAM STARTPOS)
        (FOR NBINS C [TEDITSTREAM _ (IF (TEXTSTREAMP OUTSTREAM)
                                            THEN (PROG1 OUTSTREAM
                                                         (SETQ OUTSTREAM (OPENSTREAM '{NODIRCORE}
                                                                                'BOTH)))]
               [RECODEMAP _ (MIMERECODEMAP (OR FROMCHARENCODING 'ISO8859/1]
           FROM (- (OR ENDPOS (GETEOFPTR INSTREAM))
                       STARTPOS) TO 1 BY -1
           DO
           (SELCHARQ (SETQ C (BIN INSTREAM))
                (= (ADD NBINS -1)                        (* ; "Special code")
                   [SELCHARQ (SETQ C (BIN INSTREAM))
                        (CR                                  (* ; "CR(LF) or LF after = is flushed")
                            (LET ((POS (GETFILEPTR INSTREAM)))
                                 (IF (EQ (CHARCODE LINEFEED)
                                             (BIN INSTREAM))
                                     THEN                (* ; 
                           "Bin above should be \PEEKBIN, but that doesn't work for TEDIT streams.")
                                           (ADD NBINS -1)
                                   ELSE (SETFILEPTR INSTREAM POS))))
                        (LF)
                        (PROGN (CL:WHEN [OR (AND (IGEQ C (CHARCODE 0))
                                                 (ILEQ C (CHARCODE 9)))
                                            (AND (IGEQ C (CHARCODE A))
                                                 (ILEQ C (CHARCODE F]

                                   (* ;; "Hex digit begins 2 digit hex code")

                                   [SETQ C (LOGOR (LLSH [IF (ILEQ C (CHARCODE 9))
                                                            THEN (- C (CHARCODE 0))
                                                          ELSE (IPLUS 10 (- C (CHARCODE A]
                                                        4)
                                                  (IF (ILEQ (PROGN (ADD NBINS -1)
                                                                       (SETQ C (BIN INSTREAM)))
                                                                (CHARCODE 9))
                                                      THEN (- C (CHARCODE 0))
                                                    ELSE (IPLUS 10 (- C (CHARCODE A])
                               (CL:WHEN RECODEMAP
                                   (SETQ C (MIMEFASTRECODECHARCODE C RECODEMAP)))
                               (IF (MEMB C (CHARCODE (CR LF)))
                                   THEN (TERPRI OUTSTREAM)
                                 ELSE (PRINTCCODE C OUTSTREAM])
                (CR (IF (EQ (CHARCODE LINEFEED)
                                (\PEEKBIN INSTREAM T))
                        THEN (BIN INSTREAM)
                              (ADD NBINS -1))
                    (TERPRI OUTSTREAM))
                (LF (TERPRI OUTSTREAM))
                (PRINTCCODE (IF RECODEMAP
                                THEN (MIMEFASTRECODECHARCODE C RECODEMAP)
                              ELSE C)
                       OUTSTREAM)) FINALLY (CL:WHEN TEDITSTREAM
                                                   (TEDIT.INCLUDE TEDITSTREAM OUTSTREAM)
                                                   (SETQ OUTSTREAM TEDITSTREAM)))
        OUTSTREAM)])

(STREAMFROMUTF-8
  [LAMBDA (INSTREAM OUTSTREAM STARTPOS ENDPOS FROMCHARENCODING)
                                                            (* ; "Edited 11-Jan-2001 18:10 by rmk:")

    (* ;; "Assumes that INSTREAM is a text file, hence does EOL conversion")

    (CL:UNLESS FROMCHARENCODING
        (SETQ FROMCHARENCODING 'UNICODE))
    (RESETLST
        [IF (GETSTREAM INSTREAM 'INPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM INSTREAM)))
            THEN (SETQ INSTREAM (TEXTSTREAM INSTREAM))
          ELSE (RESETSAVE (SETQ INSTREAM (OPENSTREAM INSTREAM 'INPUT))
                          '(PROGN (CLOSEF? OLDVALUE]
        [IF (GETSTREAM OUTSTREAM 'OUTPUT T)
          ELSEIF (CAR (NLSETQ (TEXTSTREAM OUTSTREAM)))
            THEN (SETQ OUTSTREAM (TEXTSTREAM OUTSTREAM))
          ELSE (RESETSAVE [SETQ OUTSTREAM (OPENSTREAM OUTSTREAM 'OUTPUT 'NEW
                                                     '((TYPE TEXT]
                          '(PROGN (CLOSEF? OLDVALUE)
                                  (AND RESETSTATE (DELFILE OLDVALUE]
        (CL:UNLESS STARTPOS (SETQ STARTPOS 0))
        (SETFILEPTR INSTREAM STARTPOS)
        (FOR NBINS C [TEDITSTREAM _ (IF (TEXTSTREAMP OUTSTREAM)
                                            THEN (PROG1 OUTSTREAM
                                                         (SETQ OUTSTREAM (OPENSTREAM '{NODIRCORE}
                                                                                'BOTH)))]
               [RECODEMAP _ (MIMERECODEMAP (OR FROMCHARENCODING 'ISO8859/1]
           FROM (- (OR ENDPOS (GETEOFPTR INSTREAM))
                       STARTPOS) TO 1 BY -1
           DO
           [SELCHARQ (SETQ C (BIN INSTREAM))
                (CR                                          (* ; "CR(LF) or LF after = is flushed")
                    (LET ((POS (GETFILEPTR INSTREAM)))
                         (IF (EQ (CHARCODE LINEFEED)
                                     (BIN INSTREAM))
                             THEN                        (* ; 
                           "Bin above should be \PEEKBIN, but that doesn't work for TEDIT streams.")
                                   (ADD NBINS -1)
                           ELSE (SETFILEPTR INSTREAM POS))))
                (LF (TERPRI OUTSTREAM))
                (LET (BYTE)

                     (* ;; "If high-order bit is on, interpret next few bytes.")

                     [IF (EQ 0 (LOGAND C (MASK.1'S 7 1)))
                       ELSE                              (* ; 
                                                 "2 or more, make sure next byte is a continuation")
                             (SETQ BYTE (BIN STREAM))
                             (CL:UNLESS (EQ (MASK.1'S 7 1)
                                            (LOGAND (MASK.1'S 6 2)
                                                   BYTE))
                                 (ERROR "INVALID UTF-8 BYTE SEQUENCE" (LIST C BYTE))) 

                             (* ;; 
               "Assemble first 2 bytes, including high-order bits that will later get masked away.")

                             [SETQ C (LOGOR (LLSH C 6)
                                            (LOGAND BYTE (MASK.1'S 0 6]
                             (IF (EQ (MASK.1'S 12 2)
                                         (LOGAND C (MASK.1'S 11 3)))
                                 THEN 

                                       (* ;; "2 bytes, 11 bits")

                                       (SETQ C (LOGAND C (MASK.1'S 0 11)))
                               ELSE 

                                     (* ;; "3 or more")

                                     (SETQ BYTE (BIN STREAM))
                                     (CL:UNLESS (EQ (MASK.1'S 7 1)
                                                    (LOGAND BYTE (MASK.1'S 6 2)))
                                         (ERROR "INVALID UTF-8 BYTE SEQUENCE" (LIST C BYTE))) 

                                     (* ;; 
               "Assemble first 3 bytes, including high-order bits that will later get masked away.")

                                     [SETQ C (LOGOR (LLSH C 6)
                                                    (LOGAND BYTE (MASK.1'S 0 6]
                                     (IF (EQ (MASK.1'S 17 3)
                                                 (LOGAND C (MASK.1'S 16 4)))
                                         THEN 

                                               (* ;; "3 bytes, 16 bits")

                                               (SETQ C (LOGAND C (MASK.1'S 0 16)))
                                       ELSE 

                                            (* ;; "4 or more bytes, or perhaps C was a misplaced continuation (since we aren't bothering 5 and 6 byte encodings)")

                                             (CL:UNLESS (BITTEST C (MASK.1'S 18 1))
                                                 (ERROR "INVALID UTF-8 BYTE SEQUENCE" (LIST C)))
                                             (SETQ BYTE (BIN STREAM))
                                             (CL:UNLESS (EQ (MASK.1'S 7 1)
                                                            (LOGAND BYTE (MASK.1'S 6 2)))
                                                 (ERROR "INVALID UTF-8 BYTE SEQUENCE"
                                                        (LIST C BYTE))) 

                                             (* ;; "4 bytes, 21 bits")

                                             (SETQ C (LOGOR (LLSH (LOGAND C (MASK.1'S 0 16))
                                                                  6)
                                                            (LOGAND BYTE (MASK.1'S 0 6]
                     (CL:WHEN RECODEMAP
                         (SETQ C (MIMEFASTRECODECHARCODE C RECODEMAP)))
                     (IF (MEMB C (CHARCODE (CR LF)))
                         THEN (TERPRI OUTSTREAM)
                       ELSE (PRINTCCODE C OUTSTREAM] FINALLY (CL:WHEN TEDITSTREAM
                                                                         (TEDIT.INCLUDE TEDITSTREAM 
                                                                                OUTSTREAM)
                                                                         (SETQ OUTSTREAM TEDITSTREAM))
               )
        OUTSTREAM)])
)
(DECLARE%: EVAL@COMPILE 

(RPAQQ BINHEXCHARS "!%"#$%%&'()*+,-012345689@ABCDEFGHIJKLMNPQRSTUVXYZ[`abcdefhijklmpqr")


(CONSTANTS BINHEXCHARS)
)

(RPAQ? BINHEXCHARARRAY NIL)
(DECLARE%: EVAL@COMPILE DONTCOPY 
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS BINHEXCHARARRAY)
)

(DECLARE%: EVAL@COMPILE 

(PUTPROPS BINHEXBYTE  MACRO
   (NIL (IF (EQ REPEAT 0)
            THEN [PROG (C C2 REPFLAG)
                       GETBYTE
                           [WHILE (MEMB (SETQ C (BIN INSTREAM))
                                            (CHARCODE (CR LF]
                           (CL:UNLESS (EQ (CHARCODE %:)
                                          C)
                               [SETQ C (CL:SVREF BINHEXCHARARRAY (- C (CONSTANT (CHCON1 BINHEXCHARS]

                               (* ;; "Save byte in C for repetition")

                               (SETQ C (SELECTQ POS
                                           (0                (* ; 
           "Start of byte, used 6 bits from first code, 2 bits from second code, carry over 4 bits")
                                              (SETQ POS 1)
                                              [WHILE (MEMB (SETQ C2 (BIN INSTREAM))
                                                               (CHARCODE (CR LF]
                                              (CL:WHEN (EQ (CHARCODE %:)
                                                           C2)
                                                     (HELP 
                                                     "BINHEX FILE TERMINATES IN THE MIDDLE OF A BYTE"
                                                           ))
                                              [SETQ C2 (CL:SVREF BINHEXCHARARRAY
                                                              (- C2 (CONSTANT (CHCON1 BINHEXCHARS]
                                              (SETQ NEXTBYTE (LOGAND 255 (LLSH C2 4)))
                                              (LOGOR (LLSH C 2)
                                                     (LRSH C2 4)))
                                           (1                (* ; 
                    " NEXTBYTE has 4 left-adjusted bits, use 4 bits from current code, save 2 bits")
                                              (SETQ POS 2)
                                              (PROG1 (LOGOR NEXTBYTE (LRSH C 2))
                                                  (SETQ NEXTBYTE (LOGAND 255 (LLSH C 6)))))
                                           (2                (* ; 
                "NEXTBYTE has 2 left-adjusted bits, use all 6 bits from current code, save nothing")
                                              (SETQ POS 0)
                                              (PROG1 (LOGOR NEXTBYTE C)
                                                     (SETQ NEXTBYTE 0)))
                                           NIL))

                               (* ;; "144 is hex 90, the repetition mark")

                               (IF REPFLAG
                                   THEN 

                                         (* ;; "C now contains the repetition factor")

                                         (IF (EQ C 0)
                                             THEN (SETQ LASTBYTE 144)
                                                   (RETURN 144)
                                           ELSE 

                                            (* ;; "We already put out the prefix byte, and now we are putting out one that corresponds to the repeat-mark+number.")

                                                 (SETQ REPEAT (- C 2))
                                                 (RETURN LASTBYTE))
                                 ELSEIF (EQ C 144)
                                   THEN (SETQ REPFLAG T)
                                         (GO GETBYTE)
                                 ELSE (SETQ LASTBYTE C)
                                       (RETURN C)))]
          ELSE (CL:DECF REPEAT)
                LASTBYTE)))

(PUTPROPS BINHEXWORD  MACRO
   (NIL (LOGOR (LLSH (BINHEXBYTE)
                     8)
               (BINHEXBYTE))))

(PUTPROPS BINHEXLONG  MACRO
   (NIL (LOGOR (LLSH (BINHEXWORD)
                     16)
               (BINHEXWORD))))
)
)

(RPAQ? ATTACHMENTDIR '(CONCAT "{dsk}/tilde/" (L-CASE (USERNAME))
                                 "/attachments"))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS ATTACHMENTDIR)
)



(* ;; "MIMEFASTRECODECHARCODE is a copy of FASTRECODECHARCODED on /project/dict/code/CHARACTERFNS")

(DEFINEQ

(CACHEMIMECHARRECODEMAPS
  [LAMBDA (CHARENCODINGS)                                    (* ; 
                                                           "Edited 27-Dec-2000 11:31 by rmk:")
                                                             (* ; 
                                                           "Edited 27-Dec-2000 11:17 by rmk:")
                                                             (* ; 
                                                           "Edited 27-Dec-2000 11:03 by rmk:")
                                                             (* ; 
                                                           "Edited 27-Dec-2000 10:54 by rmk:")
                                                             (* ; 
                                                           "Edited 27-Dec-2000 10:52 by rmk:")
    (CL:UNLESS (BOUNDP 'MIMERECODEMAPS)
           (SETQ MIMERECODEMAPS NIL))

    (* ;; "This depends on CHARACTERFNS and RECODEMAPS on /project/dict/code/.  It creates the mapping arrays that are then cached on MIME. ")

    (FOR C M INSIDE CHARENCODINGS WHEN (SETQ M (CHARRECODEMAP C CURRENTCHARENCODING))
       DO (SETQ M (FASTRECODEMAP M T))
             (PRINTOUT T C " " (CL:IF M
                                   "cached"
                                   "not found")
                    T)
             (PUSH MIMERECODEMAPS (LIST (LIST C CURRENTCHARENCODING)
                                            (FOR X IN MIMERECODEMAPS
                                               WHEN (EQ M (CADR X))
                                               DO 

                                        (* ;; "If the same mapping array already exists, just put its name instead of a copy of the array, to make the file smaller.")

                                                     (RETURN (CAR X)) FINALLY (RETURN M])

(MIMEFASTRECODECHARCODE
  [LAMBDA (CODE MAPARRAY)                                    (* ; 
                                                           "Edited 27-Dec-2000 10:40 by rmk:")
                                                             (* ; "Edited  7-Dec-95 14:29 by ")
                                                             (* ; "Edited 21-Jun-95 10:18 by rmk:")

    (* ;; "Recodes a singleton charcode.  Leaves everything else unchanged.  MAPARRAY can contain a list of possible sequences, or an entry  an be a simple SMALLP recoding.")

    (IF (AND (SMALLP CODE)
                 MAPARRAY)
        THEN (CL:WHEN (LISTP MAPARRAY)
                     (SETQ MAPARRAY (FASTRECODEMAP MAPARRAY T)))
              [LET ((CSMAP (CL:SVREF MAPARRAY (LRSH CODE 8)))
                    RECODE)
                   (IF [NOT (AND CSMAP (SETQ CSMAP (CL:SVREF CSMAP (LOGAND CODE 255]
                       THEN CODE
                     ELSEIF (SMALLP CSMAP)
                     ELSE (SETQ RECODE (CDR (ASSOC NIL CSMAP))) 

                           (* ;; 
                      "WARNING:  If recode is a sequence, then a list is returned, not a singleton")

                           (IF (CDR RECODE)
                               THEN RECODE
                             ELSE (CAR RECODE]
      ELSE                                               (* ; "Nothing to recode")
            CODE])

(MIMERECODEMAP
  [LAMBDA (CHARENCODING NOERROR)                        (* ; "Edited 21-Oct-2001 18:48 by rmk:")
    (CL:WHEN CHARENCODING
        (SETQ CHARENCODING (MKATOM (U-CASE CHARENCODING)))   (* ; "Canonical name")
        [LET (MAP)
             (IF (SETQ MAP (CDR (SASSOC (LIST CHARENCODING CURRENTCHARENCODING)
                                           MIMERECODEMAPS)))
                 THEN (SETQ MAP (CAR MAP))               (* ; 
                                                           "Test CDR, so that NIL can be identity")

                       (* ;; "If not an array, presumably a synonym identifier, search again.")

                       (IF (CL:ARRAYP MAP)
                           THEN MAP
                         ELSEIF MAP
                           THEN (CADR (SASSOC MAP MIMERECODEMAPS)))
               ELSEIF (CAR (NLSETQ (FASTRECODEMAP (CHARRECODEMAP CHARENCODING CURRENTCHARENCODING
                                                             )
                                              T)))
               ELSEIF (NOT NOERROR)
                 THEN (MIMEERROR (CONCAT CHARENCODING 
                                                " is an unrecognized character encoding"])])
)

(RPAQ? CURRENTCHARENCODING 'XEROX-RENDERING)

(RPAQQ CACHEDCHARENCODINGS (ISO8859/1 ISO-8859-1 ISO8859_1 ISO% 8859-1 LATIN1 ISO8859/2 
                                      ISO-8859-2 ISO8859_2 LATIN2 CP1252 WINDOWS-1252 CP1250 
                                      WINDOWS-1250))



(* ;; "MIMERECODEMAPS must be set up by executing")




(* ;; "    (CACHEMIMECHARRECODEMAPS CACHEDCHARENCODINGS)   ")




(* ;; "in a system that has /project/dict/code/CHARACTERFNS loaded.")


(RPAQQ MIMERECODEMAPS
       (((WINDOWS-1250 XEROX-RENDERING)
         (CP1250 XEROX-RENDERING))
        ((CP1250 XEROX-RENDERING)

         )
        ((WINDOWS-1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((CP1252 XEROX-RENDERING)

         )
        ((LATIN2 XEROX-RENDERING)
         (ISO8859/2 XEROX-RENDERING))
        ((ISO8859_2 XEROX-RENDERING)
         (ISO8859/2 XEROX-RENDERING))
        ((ISO-8859-2 XEROX-RENDERING)
         (ISO8859/2 XEROX-RENDERING))
        ((ISO8859/2 XEROX-RENDERING)

         )
        ((LATIN1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO% 8859-1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO8859_1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO-8859-1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO8859/1 XEROX-RENDERING)
         #256(#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 39 NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61217 NIL NIL NIL NIL NIL 61291 NIL 8994 211 227 NIL 61290 61219 210 9086 NIL NIL NIL NIL 39 NIL NIL NIL 203 209 235 NIL NIL NIL NIL NIL 61729 61730 61731 61732 61735 61736 225 61741 61744 61745 61746 61749 61758 61759 61760 61764 226 61772 61775 61776 61777 61778 61780 180 233 61791 61792 61793 61797 61803 236 251 61857 61858 61859 61860 61863 61864 241 61869 61872 61873 61874 61877 61886 61887 61888 61892 243 61900 61903 61904 61905 61906 61908 184 249 61919 61920 61921 61925 61931 252 61933) #256(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61805 NIL) NIL)
         )
        ((US-ASCII XEROX-RENDERING)
         NIL)
        ((WINDOWS-1250 XEROX-RENDERING)
         (CP1250 XEROX-RENDERING))
        ((CP1250 XEROX-RENDERING)

         )
        ((WINDOWS-1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((CP1252 XEROX-RENDERING)

         )
        ((LATIN2 XEROX-RENDERING)
         (ISO8859/2 XEROX-RENDERING))
        ((ISO8859_2 XEROX-RENDERING)
         (ISO8859/2 XEROX-RENDERING))
        ((ISO-8859-2 XEROX-RENDERING)
         (ISO8859/2 XEROX-RENDERING))
        ((ISO8859/2 XEROX-RENDERING)

         )
        ((LATIN1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO% 8859-1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO8859_1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO-8859-1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO8859/1 XEROX-RENDERING)
         #256(#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61217 NIL NIL NIL NIL NIL 61291 NIL 8994 211 227 NIL 61290 61219 210 9086 NIL NIL NIL NIL 39 NIL NIL NIL 203 209 235 NIL NIL NIL NIL NIL 61729 61730 61731 61732 61735 61736 225 61741 61744 61745 61746 61749 61758 61759 61760 61764 226 61772 61775 61776 61777 61778 61780 180 233 61791 61792 61793 61797 61803 236 251 61857 61858 61859 61860 61863 61864 241 61869 61872 61873 61874 61877 61886 61887 61888 61892 243 61900 61903 61904 61905 61906 61908 184 249 61919 61920 61921 61925 61931 252 61933) #256(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61805 NIL) NIL)
         )
        ((WINDOWS-1250 XEROX-RENDERING)
         (CP1250 XEROX-RENDERING))
        ((CP1250 XEROX-RENDERING)
         #256(#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 8218 NIL 8222 8230 8224 8225 NIL 8240 352 8249 346 356 381 377 NIL 8216 8217 8220 8221 8226 8211 8212 NIL 8482 353 8250 347 357 382 378 61217 711 728 321 NIL 260 61291 NIL 8994 211 ((NIL 227) (NIL 350)) NIL 61290 61219 210 ((NIL 9086) (NIL 379)) NIL NIL 731 322 39 NIL NIL NIL 203 ((NIL 209) (NIL 261)) ((NIL 235) (NIL 351)) NIL 317 733 318 380 ((NIL 61729) (NIL 340)) 61730 61731 ((NIL 61732) (NIL 258)) 61735 ((NIL 61736) (NIL 313)) ((NIL 225) (NIL 262)) 61741 ((NIL 61744) (NIL 268)) 61745 ((NIL 61746) (NIL 280)) 61749 ((NIL 61758) (NIL 282)) 61759 61760 ((NIL 61764) (NIL 270)) ((NIL 226) (NIL 272)) ((NIL 61772) (NIL 323)) ((NIL 61775) (NIL 327)) 61776 61777 ((NIL 61778) (NIL 336)) 61780 180 ((NIL 233) (NIL 344)) ((NIL 61791) (NIL 366)) 61792 ((NIL 61793) (NIL 368)) 61797 61803 ((NIL 236) (NIL 354)) 251 ((NIL 61857) (NIL 341)) 61858 61859 ((NIL 61860) (NIL 259)) 61863 ((NIL 61864) (NIL 314)) ((NIL 241) (NIL 263)) 61869 ((NIL 61872) (NIL 269)) 61873 ((NIL 61874) (NIL 281)) 61877 ((NIL 61886) (NIL 283)) 61887 61888 ((NIL 61892) (NIL 271)) ((NIL 243) (NIL 273)) ((NIL 61900) (NIL 324)) ((NIL 61903) (NIL 328)) 61904 61905 ((NIL 61906) (NIL 337)) 61908 184 ((NIL 249) (NIL 345)) ((NIL 61919) (NIL 367)) 61920 ((NIL 61921) (NIL 369)) 61925 61931 ((NIL 252) (NIL 355)) ((NIL 61933) (NIL 729))) #256(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61805 NIL) NIL)
         )
        ((WINDOWS-1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((CP1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((LATIN2 XEROX-RENDERING)
         (ISO8859/2 XEROX-RENDERING))
        ((ISO8859/2 XEROX-RENDERING)

         )
        ((LATIN1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((ISO8859/1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((windows-1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((CP1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((ISO8859/1 XEROX-RENDERING)
         (ISO8859/1 XEROX-RENDERING))
        ((windows-1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((CP1252 XEROX-RENDERING)

         )
        ((ISO8859/1 XEROX-RENDERING)
         #256(#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61217 NIL NIL NIL NIL NIL 61291 NIL 8994 211 227 NIL 61290 61219 210 9086 NIL NIL NIL NIL 39 NIL NIL NIL 203 209 235 NIL NIL NIL NIL NIL 61729 61730 61731 61732 61735 61736 225 61741 61744 61745 61746 61749 61758 61759 61760 61764 226 61772 61775 61776 61777 61778 61780 180 233 61791 61792 61793 61797 61803 236 251 61857 61858 61859 61860 61863 61864 241 61869 61872 61873 61874 61877 61886 61887 61888 61892 243 61900 61903 61904 61905 61906 61908 184 249 61919 61920 61921 61925 61931 252 61933) #256(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61805 NIL) NIL)
         )
        ((windows-1252 XEROX-RENDERING)
         (CP1252 XEROX-RENDERING))
        ((CP1252 XEROX-RENDERING)

         )
        ((ISO8859/1 XEROX-RENDERING)
         #256(#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61217 NIL NIL NIL NIL NIL 61291 NIL 8994 211 227 NIL 61290 61219 210 9086 NIL NIL NIL NIL 39 NIL NIL NIL 203 209 235 NIL NIL NIL NIL NIL 61729 61730 61731 61732 61735 61736 225 61741 61744 61745 61746 61749 61758 61759 61760 61764 226 61772 61775 61776 61777 61778 61780 180 233 61791 61792 61793 61797 61803 236 251 61857 61858 61859 61860 61863 61864 241 61869 61872 61873 61874 61877 61886 61887 61888 61892 243 61900 61903 61904 61905 61906 61908 184 249 61919 61920 61921 61925 61931 252 61933) #256(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 61805 NIL) NIL)
         )))

(MOVD? 'NILL 'CHARRECODEMAP)
(DECLARE%: DONTCOPY 
(DECLARE%: EVAL@COMPILE

(RECORD MIMEPART (STARTPOS ENDPOS TYPE ENCODING DISPOSITION PARTNUM SUBPARTS)
                     (RECORD TYPE ((MAINTYPE SUBTYPE) . TYPEPROPS))
                     (RECORD DISPOSITION ((MAINDISPOSITION SUBDISPOSITION) . DISPOSITIONPROPS)))
)
)
(PUTPROPS MIME COPYRIGHT ("Xerox Corporation" 1998 1999 1920 2000 2001 2002 2005))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (2958 37439 (DEMIME 2968 . 4254) (PARSEMIME 4256 . 12136) (DEMIMEPART 12138 . 15903) (
DEMIMETEXT 15905 . 20315) (DEMIMEAPPL 20317 . 25190) (MIMEERROR 25192 . 25520) (MIMEHEADERS 25522 . 
27090) (MIMEPARAMS 27092 . 30800) (PARSE-SUNATTACHMENT 30802 . 33712) (RECODEMIMEHEADER 33714 . 37437)
) (37733 44293 (LA.COPY.MESSAGE.TEXT 37743 . 40444) (\LAFITE.APPEND.MESSAGE.BODY 40446 . 44291)) (
44407 44646 (PRINTMESSAGESUMMARY.STRING 44417 . 44644)) (44647 54572 (ADDMIMEOBJECT 44657 . 46002) (
MIMEOBJINIT 46004 . 46929) (MIMEOBJ.DISPLAYFN 46931 . 48688) (MIMEOBJ.COPYFN 48690 . 49587) (
MIMEOBJ.BUTTONEVENTINFN 49589 . 52996) (MIMEOBJ.IMAGEBOXFN 52998 . 54570)) (54592 64584 (DEPS 54602 . 
57677) (FINDPSSEGMENTS 57679 . 59923) (POSTSCRIPTPART 59925 . 64582)) (64585 101169 (STREAMFROMBASE64 
64595 . 73017) (STREAMFROMBINHEX 73019 . 78166) (STREAMFROMASCII 78168 . 79197) (
STREAMFROMENRICHEDTEXT 79199 . 86552) (STREAMFROMUUENCODE 86554 . 89507) (STREAMFROMQUOTEDPRINTABLE 
89509 . 94702) (STREAMFROMUTF-8 94704 . 101167)) (105793 110524 (CACHEMIMECHARRECODEMAPS 105803 . 
107748) (MIMEFASTRECODECHARCODE 107750 . 109231) (MIMERECODEMAP 109233 . 110522)))))
STOP
