(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")
(FILECREATED " 3-Mar-89 18:17:39" {ERINYES}<LISPUSERS>MEDLEY>NSTHASIZE.;1 13450  

      changes to%:  (FNS NSTHASIZE)
                    (VARS NSTHASIZECOMS)

      previous date%: " 8-Apr-86 09:09:30" {DSK}/usr/local/koto/lispusers/nsthasize.;1)


(* "
Copyright (c) 1986, 1989 by Xerox Corporation.  All rights reserved.
")

(PRETTYCOMPRINT NSTHASIZECOMS)

(RPAQQ NSTHASIZECOMS ((INITVARS (GV.TO.NS.REG))
                          (FNS CONVERT.GV.TO.NS GV.READFORWARDING READ-GV-NS-MAPPING NSTHASIZE 
                               \GETSTRING \GV.COLLECT.ENTRY \GV.COLLECT.ENTRY.1 
                               \GV.COLLECT.ENTRY.LIST)
                          (FILES (LOADCOMP)
                                 MAINTAIN)))

(RPAQ? GV.TO.NS.REG )
(DEFINEQ

(CONVERT.GV.TO.NS
  [LAMBDA (X)                                            (* lmm " 7-Apr-86 16:23")
    (COND
       ((SETQ X (\CHECKNAME X))
        (PROG ([REG (MKATOM (U-CASE (CDR X]
               NSREG)
              (RETURN (if (EQ REG 'NS)
                          then (OR (CH.LOOKUP.OBJECT (SUBSTRING (CAR X)
                                                                2 -2))
                                       (PROGN (PRINTOUT T "[Unable to check " X 
                                                     " in clearinghouse, assuming correct]")
                                              (SUBSTRING (CAR X)
                                                     2 -2)))
                        else (OR (SETQ NSREG (ASSOC REG GV.TO.NS.REG))
                                     (RETURN))
                              (LET (NAME)
                                   (OR [CH.LOOKUP.OBJECT (SETQ NAME (CONCAT (CAR X)
                                                                           ":"
                                                                           (CDR NSREG]
                                       (PROGN (PRINTOUT T "[Unable to check " NAME 
                                                     " in clearinghouse, assuming correct]")
                                              NAME])

(GV.READFORWARDING
  [LAMBDA (X)                                            (* lmm "19-Nov-85 11:20")
    (CDR (ASSOC 'Forwarding (GV.READENTRY X NIL '\GV.COLLECT.ENTRY])

(READ-GV-NS-MAPPING
  [LAMBDA NIL                                            (* lmm " 4-Apr-86 16:56")
    (SETQ GV.TO.NS.REG
     (RESETLST
         (PROG ((STREAM (OPENSTREAM '{INDIGO}<REGISTRAR>GV>GV-NS-MAPPING.TXT 'INPUT 'OLD))
                (RT (COPYREADTABLE 'ORIG))
                LINES)
           RESTART
               (RESETSAVE NIL (LIST 'CLOSEF? STREAM))
               (SETSEPR NIL NIL RT)
               (SETBRK (CHARCODE (CR))
                      NIL RT)
               (OR (FFILEPOS "GV-to-NS Mappings:" STREAM 0 NIL NIL T)
                   (ERROR "Couldn't find string GV-to-NS Mappings in " (FULLNAME STREAM)))
               (FILEPOS "	" STREAM)
               [RETURN
                (do (SELCHARQ (BIN STREAM)
                             (TAB)
                             (CR (RETURN LINES))
                             (%. [LET ((LINE (RSTRING STREAM RT)))
                                      (PRINTOUT T LINE T)
                                      (push LINES (LET ((POS (STRPOS " -> " LINE)))
                                                           (OR POS (GO BADFORMAT))
                                                           (CONS [MKATOM (U-CASE (SUBSTRING
                                                                                  LINE 1 (SUB1 POS]
                                                                 (SUBSTRING LINE (PLUS POS 4)
                                                                        -1]
                                 (BIN STREAM))
                             (GO BADFORMAT]
           BADFORMAT
               (ERROR "bad format on {INDIGO}<Registrar>GV>GV-NS-MAPPING.TXT")))])

(NSTHASIZE
  [LAMBDA (GVDL NSDL NODELETE)                        (* ; "Edited  3-Mar-89 18:16 by masinter")
    (OR GV.TO.NS.REG (PROGN (PRIN1 "Reading gv to ns mapping ...")
                            (READ-GV-NS-MAPPING)))   (* lmm " 8-Apr-86 09:03")
    (SETQ GVDL (OR (\CHECKNAME GVDL)
                   (ERROR "Invalid grapevine group" GVDL)))
    (SETQ NSDL (OR (CH.LOOKUP.OBJECT NSDL)
                   (ERROR "Invalid NS distribution list" NSDL)))
    (LET
     (FORWARDING NSADDRESS)
     (for X in (CDR (GV.READMEMBERS GVDL))
        do (if (OR (COND
                              ((SETQ NSADDRESS (CONVERT.GV.TO.NS X))
                               (PRINTOUT T X)
                               T))
                           (AND (SETQ FORWARDING (GV.READFORWARDING X))
                                (PROGN (PRINTOUT T X " => " FORWARDING)
                                       (if (CDR FORWARDING)
                                           then (PRINTOUT T " -- more than one address." T)
                                                 NIL
                                         else T))
                                (if [NOT (SETQ NSADDRESS (CONVERT.GV.TO.NS (CAR FORWARDING]
                                    then (PRINTOUT T " not an NS equivalent address." T)
                                          NIL
                                  else T)))
                   then (PRINTOUT T " => " NSADDRESS "...")
                         (PROG (VALUE)
                           LP  (if (OR (type? NSNAME (SETQ VALUE (CH.ADD.MEMBER NSDL
                                                                                'MEMBERS NSADDRESS)))
                                           (MATCH VALUE WITH (%'ERROR %'UPDATE.ERROR %'NoChange 
                                                                        --)))
                                   then (if (AND NODELETE (OR (NEQ NODELETE 'FIRST)
                                                                      (NLISTP VALUE)))
                                                then (PRINTOUT T "ok." T)
                                              else (PRINTOUT T "ok, delete: " (GV.REMOVEMEMBER
                                                                                   GVDL X)
                                                              T))
                                 elseif (COND
                                               ((AND (EQ (CAR VALUE)
                                                         'ERROR)
                                                     (SELECTQ (CAR (CDR VALUE))
                                                         (CALL.ERROR (SELECTQ (CADDR VALUE)
                                                                         (TooBusy (PRINTOUT T 
                                                                                         " error:" 
                                                                                         VALUE 
                                                                                      " ... retrying"
                                                                                         " ..."))
                                                                         (AccessRightsInsufficient 
                                                                              (PRINTOUT T " error:" 
                                                                                     VALUE 
                                                                                  " will not move..."
                                                                                     T)
                                                                              (RETURN))
                                                                         (HELP VALUE))
                                                                     (GO LP))
                                                         (HELP VALUE)))
                                                T))
                                   then (TERPRI T)
                                         NIL
                                 else (HELP VALUE])

(\GETSTRING
  [LAMBDA (STREAM LENGTH)                                (* lmm "19-Nov-85 10:21")
    (COND
       ((IGREATERP LENGTH \MAXGVSTRING)
        (ERROR "stream must be confused - string too long" LENGTH))
       (T (LET ((STRING (ALLOCSTRING LENGTH)))
               (AIN STRING 1 LENGTH STREAM)
               (COND
                  ((ODDP LENGTH)
                   (BIN STREAM)))
               STRING])

(\GV.COLLECT.ENTRY
  [LAMBDA (INSTREAM)                                     (* lmm " 4-Apr-86 16:53")

         (* * Called by GV.READENTRY to parse and display some of what Grapevine sends 
       back as "the entire database entry" for NAME.
       The contents are different for groups, individuals, and dead folk)

    (LET (NAMETYPE (RESULTS))
         (\RECEIVESTAMP INSTREAM T)                          (* Skip stamp)
         (BIN16 INSTREAM)                                    (* Skip component count)

         (* First component is the "prefix" %, which contains, among other things, the 
       name's type and its "official" name)

         (BIN16 INSTREAM)                                    (* Length of this component)
         (\RECEIVESTAMP INSTREAM T)                          (* Skip stamp)
         (SETQ NAMETYPE (BIN16 INSTREAM))
         (\RECEIVERNAME INSTREAM)
         (SELECTC NAMETYPE
             (\NAMETYPE.INDIVIDUAL 
                  (\SKIPCOMPONENT INSTREAM)                  (* Skip password)
                  (SETQ RESULTS (\GV.COLLECT.ENTRY.1 INSTREAM 'ConnectSite RESULTS))
                  (SETQ RESULTS (\GV.COLLECT.ENTRY.LIST INSTREAM 'Forwarding RESULTS))
                  (SETQ RESULTS (\GV.COLLECT.ENTRY.LIST INSTREAM 'MailboxSites RESULTS)))
             (\NAMETYPE.GROUP 
                  (\GV.COLLECT.ENTRY.1 INSTREAM 'Remark RESULTS)
                  (\MT.SKIPSTRINGLIST INSTREAM)
                  (\SKIPCOMPONENT INSTREAM)                  (* Skip stamp list)
                  (\SKIPCOMPONENT INSTREAM)                  (* Skip DelMembers)
                  (\SKIPCOMPONENT INSTREAM)                  (* Skip stamp list)
                  (PROGN                                     (* owners)
                         (\MT.SKIPSTRINGLIST INSTREAM)
                         (\SKIPCOMPONENT INSTREAM)
                         (\SKIPCOMPONENT INSTREAM)
                         (\SKIPCOMPONENT INSTREAM))
                  (PROGN                                     (* friends)
                         (\MT.SKIPSTRINGLIST INSTREAM)
                         (\SKIPCOMPONENT INSTREAM)
                         (\SKIPCOMPONENT INSTREAM)
                         (\SKIPCOMPONENT INSTREAM))
                  '((GROUP . T)))
             (\NAMETYPE.DEAD 
                  '((DEAD . T)))
             NIL])

(\GV.COLLECT.ENTRY.1
  [LAMBDA (INSTREAM HEADING RESULTS)                     (* lmm " 2-Apr-86 12:51")
    (COND
       ((EQ (BIN16 INSTREAM)
            0)
        RESULTS)
       (T (CONS (CONS HEADING (LET [(STRLEN (PROGN (\RECEIVESTAMP INSTREAM T)
                                                             (* Skip stamp)
                                                   (BIN16 INSTREAM]
                                   (LET ((STRING (ALLOCSTRING STRLEN)))
                                        (AIN STRING 1 STRLEN INSTREAM)
                                        (COND
                                           ((ODDP STRLEN)
                                            (BIN INSTREAM)))
                                        STRING)))
                RESULTS])

(\GV.COLLECT.ENTRY.LIST
  [LAMBDA (INSTREAM HEADING RESULTS)                     (* lmm " 2-Apr-86 12:52")

         (* * return a component consisting of an RList, a stamp list, a "removal" RList
       (not interesting) and another stamp list)

    (PROG1 (PROG ((CNT 0)
                  (NWORDS (BIN16 INSTREAM))
                  STRLEN RMAR VAL)
                 (COND
                    ((EQ NWORDS 0)
                     (RETURN RESULTS)))
                 [do (add CNT 1)
                        (SETQ STRLEN (BIN16 INSTREAM))
                        (BIN16 INSTREAM)                     (* ignore maxLength)
                        (push VAL (\GETSTRING INSTREAM STRLEN))
                        (SETQ NWORDS (IDIFFERENCE NWORDS (IPLUS (QUOTIENT (ADD1 STRLEN)
                                                                       2)
                                                                2)))
                        (COND
                           ((ILEQ NWORDS 0)
                            (RETURN]
                 (RETURN (CONS (CONS HEADING VAL)
                               RESULTS)))
        (\SKIPCOMPONENT INSTREAM)
        (\SKIPCOMPONENT INSTREAM)
        (\SKIPCOMPONENT INSTREAM))])
)

(FILESLOAD (LOADCOMP)
       MAINTAIN)
(PUTPROPS NSTHASIZE COPYRIGHT ("Xerox Corporation" 1986 1989))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (830 13324 (CONVERT.GV.TO.NS 840 . 2194) (GV.READFORWARDING 2196 . 2378) (
READ-GV-NS-MAPPING 2380 . 4071) (NSTHASIZE 4073 . 8385) (\GETSTRING 8387 . 8814) (\GV.COLLECT.ENTRY 
8816 . 11260) (\GV.COLLECT.ENTRY.1 11262 . 12058) (\GV.COLLECT.ENTRY.LIST 12060 . 13322)))))
STOP
