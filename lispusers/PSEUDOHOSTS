(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "27-Jan-2022 12:35:16" 
{DSK}<Users>kaplan>Local>medley3.5>my-medley>lispusers>PSEUDOHOSTS.;119 22617  

      :CHANGES-TO (VARS PSEUDOHOSTSCOMS)

      :PREVIOUS-DATE "26-Jan-2022 23:33:17" 
{DSK}<Users>kaplan>Local>medley3.5>my-medley>lispusers>PSEUDOHOSTS.;118)


(PRETTYCOMPRINT PSEUDOHOSTSCOMS)

(RPAQQ PSEUDOHOSTSCOMS
       [
        (* ;; "Public entries")

        (FNS PSEUDOHOST PSEUDOHOSTP PSEUDOHOSTS TARGETHOST TRUEFILENAME)
        
        (* ;; "Internals")

        (FNS EXPAND.PH CONTRACT.PH SLASHIT UNSLASHIT)
        (FNS OPENFILE.PH GETFILENAME.PH DIRECTORYNAMEP.PH CLOSEFILE.PH REOPENFILE.PH DELETEFILE.PH 
             OPENP.PH UNREGISTERFILE.PH REGISTERFILE.PH GENERATEFILES.PH GETFILEINFO.PH 
             SETFILEINFO.PH NEXTFILEFN.PH FILEINFOFN.PH RENAMEFILE.PH)
        (P (PSEUDOHOST 'LI LOGINHOST/DIR))
        (DECLARE%: EVAL@COMPILE DONTCOPY (RECORDS PHDEVICE PHGENFILESTATE)
               (MACROS PSEUDOHOST.NAME PSEUDOHOST.TARGETVAL)
               (P (CL:UNLESS (GETP 'EXPORTS.ALL 'FILE)
                      (LOAD 'EXPORTS.ALL))])



(* ;; "Public entries")

(DEFINEQ

(PSEUDOHOST
  [LAMBDA (HOST PREFIX)                                      (* ; "Edited 25-Jan-2022 09:58 by rmk")
                                                             (* ; "Edited 23-Jan-2022 20:43 by rmk")
                                                             (* ; "Edited 18-Jan-2022 13:08 by rmk")
    (CL:WHEN (AND (LISTP HOST)
                  (NULL PREFIX))
        (SETQ PREFIX (CADR HOST))
        (SETQ HOST (CAR HOST)))
    (SETQ HOST (U-CASE (MKATOM HOST)))
    (IF PREFIX
        THEN (CL:UNLESS (FILENAMEFIELD PREFIX 'HOST)
                 (SETQ PREFIX (UNSLASHIT (PACKFILENAME 'HOST 'DSK 'BODY PREFIX))))
             (CL:UNLESS (MEMB (NTHCHARCODE PREFIX -1)
                              (CHARCODE (> / <)))
                 (SETQ PREFIX (CONCAT PREFIX (IF (STRPOS "/" PREFIX)
                                                 THEN "/"
                                               ELSE ">"))))
             [LET (PREVIOUS TARGETHOST TARGETDEVICE)
                  (CL:WHEN (SETQ PREVIOUS (PSEUDOHOSTP HOST))(* ; 
                                                       "Redefining: first clear out the previous one")
                      (PSEUDOHOST HOST NIL))
                  [SETQ TARGETHOST (U-CASE (FILENAMEFIELD PREFIX 'HOST]

                  (* ;; "We know about the directory separators for these particular devices.  Maybe there should be separate list of slash-hosts somewhere that we can use.")

                  (SELECTQ TARGETHOST
                      ((DSK CORE) 
                           (SETQ PREFIX (UNSLASHIT PREFIX)))
                      (UNIX (SETQ PREFIX (SLASHIT PREFIX)))
                      NIL)
                  (SETQ TARGETDEVICE (OR (\GETDEVICEFROMHOSTNAME TARGETHOST)
                                         (ERROR "UNKNOWN TARGET HOST" TARGETHOST)))

                  (* ;; "Save the last directory marker to pack on if needed.")

                  (\DEFINEDEVICE HOST (CREATE FDEV
                                         USING TARGETDEVICE DEVICENAME _ HOST FDEV1 _ TARGETDEVICE 
                                               FDEV2 _ (CONS PREFIX (CL:IF (EQ (CHARCODE /)
                                                                               (NTHCHARCODE PREFIX -1
                                                                                      ))
                                                                        '/
                                                                        '<))
                                               OPENFILE _ (FUNCTION OPENFILE.PH)
                                               GETFILENAME _ (FUNCTION GETFILENAME.PH)
                                               DIRECTORYNAMEP _ (FUNCTION DIRECTORYNAMEP.PH)
                                               CLOSEFILE _ (FUNCTION CLOSEFILE.PH)
                                               REOPENFILE _ (FUNCTION REOPENFILE.PH)
                                               DELETEFILE _ (FUNCTION DELETEFILE.PH)
                                               OPENP _ (FUNCTION OPENP.PH)
                                               UNREGISTERFILE _ (FUNCTION UNREGISTERFILE.PH)
                                               REGISTERFILE _ (FUNCTION REGISTERFILE.PH)
                                               GENERATEFILES _ (FUNCTION GENERATEFILES.PH)
                                               GETFILEINFO _ (FUNCTION GETFILEINFO.PH)
                                               SETFILEINFO _ (FUNCTION SETFILEINFO.PH)
                                               RENAMEFILE _ (FUNCTION RENAMEFILE.PH]
      ELSEIF (PSEUDOHOSTP HOST)
        THEN (UNINTERRUPTABLY
                 
                 (* ;; "\DEFINEDEVICE removes the name-mapping but doesn't remove the device.  Maybe that's on purpose for other devices, but not here.")

                 (SETQ \FILEDEVICES (DREMOVE (\GETDEVICEFROMNAME HOST \FILEDEVICES)
                                           \FILEDEVICES))
                 (\DEFINEDEVICE HOST NIL))
      ELSE (ERROR HOST "is not a pseudohost"))
    HOST])

(PSEUDOHOSTP
  [LAMBDA (HOST)                                             (* ; "Edited 18-Jan-2022 11:29 by rmk")
    (LET ((DEV (\GETDEVICEFROMNAME HOST T T)))
         (CL:WHEN (AND DEV (TYPE? FDEV (FETCH (PHDEVICE TARGETDEV) OF DEV)))
             (LIST HOST (FETCH (PHDEVICE PREFIX)
                               DEV)))])

(PSEUDOHOSTS
  [LAMBDA NIL                                                (* ; "Edited 17-Jan-2022 18:15 by rmk")
    (FOR DEV IN \FILEDEVICES WHEN (TYPE? FDEV (FETCH (PHDEVICE TARGETDEV) OF DEV))
       COLLECT (LIST (FETCH (FDEV DEVICENAME) OF DEV)
                     (FETCH (PHDEVICE PREFIX) OF DEV])

(TARGETHOST
  [LAMBDA (HOST)                                             (* ; "Edited 22-Jan-2022 09:00 by rmk")
    (CL:WHEN (PSEUDOHOSTP HOST)
        (FETCH (FDEV DEVICENAME) OF (FETCH (PHDEVICE TARGETDEV) OF (\GETDEVICEFROMNAME HOST))))])

(TRUEFILENAME
  [LAMBDA (FILE)                                             (* ; "Edited 26-Jan-2022 23:33 by rmk")
                                                             (* ; "Edited 25-Jan-2022 08:47 by rmk")
    (LET (FILENAME DEVICE)
         (IF (STREAMP FILE)
             THEN (SETQ FILENAME (FETCH (STREAM FULLFILENAME) OF FILE))
                  (SETQ DEVICE (FETCH (STREAM DEVICE) OF FILE))
           ELSE (SETQ FILENAME (\ADD.CONNECTED.DIR FILE))
                (SETQ DEVICE (\GETDEVICEFROMNAME FILENAME)))
         (CL:IF (TYPE? PHDEVICE DEVICE)
             (EXPAND.PH FILENAME DEVICE)
             FILENAME)])
)



(* ;; "Internals")

(DEFINEQ

(EXPAND.PH
  [LAMBDA (FILENAME PHDEV)

    (* ;; "Edited 26-Jan-2022 11:06 by rmk: that FILENAME contains }, because HOST was identified in it.  If FILENAME is a stream, expand its full name")

    (* ;; "Assumes that FILENAME contains }, because HOST was identified in it.  If FILENAME is a stream, expand its full name")

    (IF (TYPE? STREAM FILENAME)
        THEN (CL:UNLESS PHDEV
                 (SETQ PHDEV (FETCH (STREAM DEVICE) OF FILENAME)))
             (SETQ FILENAME (FETCH (STREAM FULLNAME) OF FILENAME))
      ELSEIF (NOT (TYPE? FDEV PHDEV))
        THEN (SETQ PHDEV (\GETDEVICEFROMNAME PHDEV)))
    (LET (SUFFIX SUFFIXPOS)
         (CL:WHEN (SETQ SUFFIXPOS (STRPOS "}" FILENAME))
             (SETQ SUFFIX (SUBSTRING FILENAME (ADD1 SUFFIXPOS)))
             (CL:WHEN (FMEMB (CHCON1 SUFFIX)
                             (CHARCODE (< > /)))
                 (SETQ SUFFIX (SUBSTRING SUFFIX 2)))
             (CONCAT (FETCH (PHDEVICE PREFIX) OF PHDEV)
                    SUFFIX))])

(CONTRACT.PH
  [LAMBDA (NAME PHDEV)                                       (* ; "Edited 25-Jan-2022 09:44 by rmk")
                                                             (* ; "Edited 20-Jan-2022 20:04 by rmk")
                                                             (* ; "Edited 18-Jan-2022 22:54 by rmk")
                                                             (* ; "Edited 16-Jan-2022 19:57 by rmk")
                                                             (* ; "Edited 14-Jan-2022 00:03 by rmk")
    (CL:UNLESS (TYPE? FDEV PHDEV)
        (SETQ PHDEV (\GETDEVICEFROMNAME PHDEV)))
    (CL:WHEN NAME
        (LET* [(PREFIX (FETCH (PHDEVICE PREFIX) OF PHDEV))
               (CONNECTOR (FETCH (PHDEVICE CONNECTOR) OF PHDEV))
               (SUFFIX (SUBSTRING NAME (ADD1 (NCHARS PREFIX]
              (IF (STRPOS PREFIX NAME 1 NIL T NIL FILEDIRCASEARRAY)
                  THEN (CL:WHEN (STRPOS ">" SUFFIX 1 NIL NIL NIL FILEDIRCASEARRAY)

                           (* ;; "Must be a subdirectory.  (CDR INFO) tells us whether to use / or > depending on what the prefix has")

                           [SETQ SUFFIX (CONCAT CONNECTOR (IF (EQ CONNECTOR '/)
                                                              THEN (SLASHIT SUFFIX)
                                                            ELSE (UNSLASHIT SUFFIX])
                       (PACK* '{ (FETCH (FDEV DEVICENAME) OF PHDEV)
                              "}"
                              (OR SUFFIX ""))
                ELSE 
                     (* ;; "If the target's NAME didn't begin with the prefix, then the caller must have jumped outside the pseudo root.  So just return the NAME")

                     NAME)))])

(SLASHIT
  [LAMBDA (X LCASEDIRS)                                      (* ; "Edited 26-Jan-2022 15:08 by rmk")
                                                             (* ; "Edited  3-Jan-2022 11:44 by rmk")
                                                             (* ; "Edited 22-Dec-2021 20:18 by rmk")
                                                            (* ; "Edited  2-Nov-2021 22:54 by rmk:")
    (LET [LASTDIRPOS SLASHED (DIRPOS (ADD1 (OR (STRPOS "}" X)
                                               0]
         [SETQ SLASHED (CONCATCODES (FOR I C FROM DIRPOS WHILE (SETQ C (NTHCHARCODE X I))
                                       COLLECT (SELCHARQ C
                                                    ((< >) 
                                                         (SETQ LASTDIRPOS I)
                                                         (CHARCODE /))
                                                    (/ (SETQ LASTDIRPOS I)
                                                       C)
                                                    C]
         (CL:WHEN (AND LCASEDIRS LASTDIRPOS)
             (SETQ LASTDIRPOS (ADD1 (IDIFFERENCE LASTDIRPOS DIRPOS)))
             (SETQ SLASHED (CONCAT (L-CASE (SUBSTRING SLASHED 1 LASTDIRPOS))
                                  (OR (SUBSTRING SLASHED (ADD1 LASTDIRPOS))
                                      ""))))
         (CL:IF (EQ DIRPOS 1)
             SLASHED
             (CONCAT (SUBSTRING X 1 (SUB1 DIRPOS))
                    SLASHED))])

(UNSLASHIT
  [LAMBDA (X LCASEDIRS)                                      (* ; "Edited 26-Jan-2022 15:09 by rmk")
                                                             (* ; "Edited 22-Dec-2021 20:18 by rmk")
                                                            (* ; "Edited 21-Nov-2021 23:00 by rmk:")

    (* ;; "Tricky to get the first one right.")

    (LET [LASTDIRPOS UNSLASHED (DIRPOS (ADD1 (OR (STRPOS "}" X)
                                                 0]
         [SETQ UNSLASHED
          (CONCATCODES (FOR I C LASTC FROM DIRPOS WHILE (SETQ C (NTHCHARCODE X I))
                          COLLECT (PROG1 (SELCHARQ C
                                              (/ (SETQ LASTDIRPOS I)
                                                 (IF (AND LASTC (NEQ LASTC (CHARCODE })))
                                                     THEN (CHARCODE >)
                                                   ELSE (CHARCODE <)))
                                              ((< >) 
                                                   (SETQ LASTDIRPOS I)
                                                   C)
                                              C)
                                         (SETQ LASTC C]
         (CL:WHEN (AND LCASEDIRS LASTDIRPOS)
             (SETQ LASTDIRPOS (ADD1 (IDIFFERENCE LASTDIRPOS DIRPOS)))
             (SETQ UNSLASHED (CONCAT (L-CASE (SUBSTRING UNSLASHED 1 LASTDIRPOS))
                                    (OR (SUBSTRING UNSLASHED (ADD1 LASTDIRPOS))
                                        ""))))
         (CL:IF (EQ DIRPOS 1)
             UNSLASHED
             (CONCAT (SUBSTRING X 1 (SUB1 DIRPOS))
                    UNSLASHED))])
)
(DEFINEQ

(OPENFILE.PH
  [LAMBDA (FILE ACCESS RECOG OTHERINFO FDEV OLDSTRING)       (* ; "Edited 25-Jan-2022 08:45 by rmk")
                                                             (* ; "Edited 18-Jan-2022 10:29 by rmk")
    (LET ((STREAM (PSEUDOHOST.TARGETVAL OPENFILE (FILE ACCESS RECOG OTHERINFO FDEV OLDSTRING)
                         FDEV)))
         (CHANGE (FETCH (STREAM FULLFILENAME) OF STREAM)
                (CONTRACT.PH DATUM FDEV))
         (REPLACE (STREAM DEVICE) OF STREAM WITH FDEV)
         STREAM])

(GETFILENAME.PH
  [LAMBDA (NAME RECOG FDEV)                                  (* ; "Edited 25-Jan-2022 22:56 by rmk")
                                                             (* ; "Edited 16-Jan-2022 20:27 by rmk")
    (PSEUDOHOST.NAME GETFILENAME (NAME RECOG FDEV])

(DIRECTORYNAMEP.PH
  [LAMBDA (DIRSPEC DEV CREATE?)                              (* ; "Edited 25-Jan-2022 22:56 by rmk")
                                                             (* ; "Edited 18-Jan-2022 11:32 by rmk")

    (* ;; "{FOO} by itself is always a legitimate directory--you should be able to connect to it when you are starting up")
                                                             (* ; "Edited 16-Jan-2022 20:35 by rmk")
    (OR (EQ (CHARCODE })
            (NTHCHARCODE DIRSPEC -1))
        (PSEUDOHOST.NAME DIRECTORYNAMEP (DIRSPEC DEV CREATE?)
               DEV])

(CLOSEFILE.PH
  [LAMBDA (STREAM ABORTFLG)                                  (* ; "Edited 16-Jan-2022 15:38 by rmk")
    (APPLY* (FETCH (FDEV CLOSEFILE) OF (FETCH (PHDEVICE TARGETDEV) OF (FETCH (STREAM DEVICE)
                                                                         OF STREAM)))
           STREAM ABORTFLG])

(REOPENFILE.PH
  [LAMBDA (FILE ACCESS RECOG OTHERINFO FDEV OLDSTREAM)       (* ; "Edited 25-Jan-2022 12:50 by rmk")
                                                             (* ; "Edited 18-Jan-2022 11:41 by rmk")
    (LET ((STREAM (PSEUDOHOST.TARGETVAL REOPENFILE (FILE ACCESS RECOG OTHERINFO FDEV OLDSTREAM)
                         FDEV)))
         (CHANGE (FETCH (STREAM FULLFILENAME) OF STREAM)
                (CONTRACT.PH DATUM FDEV))
         (REPLACE (STREAM DEVICE) OF STREAM WITH FDEV)
         STREAM])

(DELETEFILE.PH
  [LAMBDA (FILENAME DEV)                                     (* ; "Edited 25-Jan-2022 22:56 by rmk")
                                                             (* ; "Edited 18-Jan-2022 10:23 by rmk")
    (PSEUDOHOST.NAME DELETEFILE (FILENAME DEV])

(OPENP.PH
  [LAMBDA (FILENAME ACCESS DEVICE)                           (* ; "Edited 18-Jan-2022 10:29 by rmk")
    (PSEUDOHOST.TARGETVAL OPENP (FILENAME ACCESS DEVICE])

(UNREGISTERFILE.PH
  [LAMBDA (DEVICE STREAM)                                    (* ; "Edited 16-Jan-2022 16:47 by rmk")
    (APPLY* (FETCH (FDEV UNREGISTERFILE) OF (FETCH (PHDEVICE TARGETDEV) OF DEVICE))
           (FETCH (PHDEVICE TARGETDEV) OF DEVICE)
           STREAM])

(REGISTERFILE.PH
  [LAMBDA (DEVICE STREAM)                                    (* ; "Edited 16-Jan-2022 16:46 by rmk")
    (APPLY* (FETCH (FDEV REGISTERFILE) OF (FETCH (PHDEVICE TARGETDEV) OF DEVICE))
           (FETCH (PHDEVICE TARGETDEV) OF DEVICE)
           STREAM])

(GENERATEFILES.PH
  [LAMBDA (FDEV PATTERN DESIREDPROPS OPTIONS)                (* ; "Edited 17-Jan-2022 20:46 by rmk")

    (* ;; "FDEV is the pseudohost. We will generate from the target directory using its GENFILESTATE, but fiddle the output so that it looks like it is coming from the pseudo host.")

    (LET ((TARGETGENOBJ (APPLY* (FETCH (FDEV GENERATEFILES) OF (FETCH (PHDEVICE TARGETDEV)
                                                                  OF FDEV))
                               (FETCH (PHDEVICE TARGETDEV) OF FDEV)
                               (EXPAND.PH PATTERN FDEV)
                               DESIREDPROPS OPTIONS)))

         (* ;; "The TARGETGENOBJ contains the targets functions as well as its GENFILESTATE.  We need the ph FDEV to contract the generated names")

         (CREATE FILEGENOBJ
                NEXTFILEFN _ (FUNCTION NEXTFILEFN.PH)
                FILEINFOFN _ (FUNCTION FILEINFOFN.PH)
                GENFILESTATE _ (LIST FDEV TARGETGENOBJ])

(GETFILEINFO.PH
  [LAMBDA (STREAM ATTRIBUTE DEVICE)                          (* ; "Edited 25-Jan-2022 12:43 by rmk")
                                                             (* ; "Edited 17-Jan-2022 18:21 by rmk")
    (PSEUDOHOST.TARGETVAL GETFILEINFO (STREAM ATTRIBUTE DEVICE])

(SETFILEINFO.PH
  [LAMBDA (STREAM ATTRIBUTE VALUE DEVICE)                    (* ; "Edited 25-Jan-2022 12:37 by rmk")
    (PSEUDOHOST.TARGETVAL SETFILEINFO (STREAM ATTRIBUTE VALUE DEVICE])

(NEXTFILEFN.PH
  [LAMBDA (GENFILESTATE NAMEONLY)                            (* ; "Edited 17-Jan-2022 21:27 by rmk")
    (LET* ((TARGETGENOBJ (CADR GENFILESTATE))
           (TARGETGENFILESTATE (FETCH GENFILESTATE OF TARGETGENOBJ))
           (FILENAME (APPLY* (FETCH NEXTFILEFN OF TARGETGENOBJ)
                            TARGETGENFILESTATE NAMEONLY)))
          (CL:WHEN FILENAME
              (CL:UNLESS NAMEONLY
                  (SETQ FILENAME (CONTRACT.PH FILENAME (CAR GENFILESTATE)))))
          FILENAME])

(FILEINFOFN.PH
  [LAMBDA (GENFILESTATE ATTRIBUTE)                           (* ; "Edited 17-Jan-2022 20:52 by rmk")
    (APPLY* (FETCH FILEINFOFN OF (CADR GENFILESTATE))
           (FETCH GENFILESTATE OF (CADR GENFILESTATE))
           ATTRIBUTE])

(RENAMEFILE.PH
  [LAMBDA (OLD-DEVICE OLD-NAME NEW-DEVICE NEW-NAME)          (* ; "Edited 18-Jan-2022 09:52 by rmk")
    (LET ((OLDTARGETDEV (FETCH (PHDEVICE TARGETDEV) OF OLD-DEVICE))
          (NEWTARGETDEV (FETCH (PHDEVICE TARGETDEV) OF NEW-DEVICE))
          (NEWTARGETNAME NEW-NAME)
          RESULT)
         (CL:WHEN (TYPE? FDEV NEWTARGETDEV)                  (* ; "NEW-DEVICE is a pseudo host")
             (SETQ NEWTARGETNAME (EXPAND.PH NEW-NAME NEW-DEVICE)))
         (SETQ RESULT (APPLY* (FETCH (FDEV RENAMEFILE) OF OLDTARGETDEV)
                             OLDTARGETDEV
                             (EXPAND.PH OLD-NAME OLD-DEVICE)
                             (OR NEWTARGETDEV NEW-DEVICE)
                             NEWTARGETNAME))
         (CL:WHEN (AND RESULT (NEQ NEWTARGETDEV NEW-DEVICE))
             (SETQ RESULT (CONTRACT.PH RESULT NEW-DEVICE)))
         RESULT])
)

(PSEUDOHOST 'LI LOGINHOST/DIR)
(DECLARE%: EVAL@COMPILE DONTCOPY 
(DECLARE%: EVAL@COMPILE

(ACCESSFNS PHDEVICE [(PREFIX (CAR (FETCH (FDEV FDEV2) OF DATUM)))
                     (TARGETDEV (FETCH (FDEV FDEV1) OF DATUM)
                            (REPLACE (FDEV FDEV1) OF DATUM WITH NEWVALUE))
                     (CONNECTOR (CDR (FETCH (FDEV FDEV2) OF DATUM]
                    (TYPE? (FETCH (PHDEVICE PREFIX) OF DATUM)))

(RECORD PHGENFILESTATE (PHDEVICE . TARGETGENFILESTATE))
)

(DECLARE%: EVAL@COMPILE 

(PUTPROPS PSEUDOHOST.NAME MACRO
          [TAIL (LET [(OPNAME (CAR TAIL))
                      (ARGS (CADR TAIL))
                      (DEV (OR (CADDR TAIL)
                               (CAR (LAST (CADR TAIL]

                     (* ;; 
    "Assumes that the name is (CAR ARGS), the device is the last or args if not specified separately")

                     `(CONTRACT.PH [APPLY* (FETCH (FDEV ,OPNAME) OF (FETCH (PHDEVICE TARGETDEV)
                                                                       OF ,DEV))
                                          (EXPAND.PH ,(CAR ARGS)
                                                 ,DEV)
                                          ,@(SUBST `(FETCH (PHDEVICE TARGETDEV) OF ,DEV)
                                                   DEV
                                                   (CDR ARGS]
                             ,DEV])

(PUTPROPS PSEUDOHOST.TARGETVAL MACRO
          [TAIL (LET [(OPNAME (CAR TAIL))
                      (ARGS (CADR TAIL))
                      (DEV (OR (CADDR TAIL)
                               (CAR (LAST (CADR TAIL]

                     (* ;; "Assumes that the name is (CAR ARGS), the device is the last or args if not specified separately.  Unlike PSEUDOHOST.OP, this returns the target value, doesn't assume it is a name to be contracted.")

                     `(APPLY* (FETCH (FDEV ,OPNAME) OF (FETCH (PHDEVICE TARGETDEV)
                                                          OF ,DEV))
                             (EXPAND.PH ,(CAR ARGS)
                                    ,DEV)
                             ,@(SUBST `(FETCH (PHDEVICE TARGETDEV) OF ,DEV)
                                      DEV
                                      (CDR ARGS])
)


(CL:UNLESS (GETP 'EXPORTS.ALL 'FILE)
    (LOAD 'EXPORTS.ALL))
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (1205 7096 (PSEUDOHOST 1215 . 5418) (PSEUDOHOSTP 5420 . 5770) (PSEUDOHOSTS 5772 . 6129) 
(TARGETHOST 6131 . 6405) (TRUEFILENAME 6407 . 7094)) (7124 13330 (EXPAND.PH 7134 . 8189) (CONTRACT.PH 
8191 . 10010) (SLASHIT 10012 . 11580) (UNSLASHIT 11582 . 13328)) (13331 20121 (OPENFILE.PH 13341 . 
13902) (GETFILENAME.PH 13904 . 14193) (DIRECTORYNAMEP.PH 14195 . 14819) (CLOSEFILE.PH 14821 . 15175) (
REOPENFILE.PH 15177 . 15742) (DELETEFILE.PH 15744 . 16028) (OPENP.PH 16030 . 16206) (UNREGISTERFILE.PH
 16208 . 16513) (REGISTERFILE.PH 16515 . 16816) (GENERATEFILES.PH 16818 . 17858) (GETFILEINFO.PH 17860
 . 18162) (SETFILEINFO.PH 18164 . 18363) (NEXTFILEFN.PH 18365 . 18907) (FILEINFOFN.PH 18909 . 19180) (
RENAMEFILE.PH 19182 . 20119)))))
STOP
