(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")
(FILECREATED " 1-Oct-91 14:10:29" |{PELE:MV:ENVOS}<LISPUSERS>MEDLEY>SFFONT.;2| 36558  

      changes to%:  (VARS SFFONTCOMS)

      previous date%: " 4-Feb-87 23:04:29" |{PELE:MV:ENVOS}<LISPUSERS>MEDLEY>SFFONT.;1|)


(* ; "
Copyright (c) 1991 by Venue.  All rights reserved.
")

(PRETTYCOMPRINT SFFONTCOMS)

(RPAQQ SFFONTCOMS
       ((RECORDS SF.CHARACTER SF.CHARDESC SF.DERIVATIVE SF.FACE SF.FAMILY SF.FIDUCIAL SF.MADE-FROM 
               SF.SPLINE SF.SPLINES SF.VERSION SF.WIDTH)
        (FNS READ.SPLINE.FONT SF.DERIVS.TO.BEZIER SF.PRINT SFDRAW SFDRAW.CLOSED.CURVE TEST 
             VIEW.FONT.FILES \LOOKUPSPLINEFONT \SETSPLINEFONT ginit)
        (DECLARE%: EVAL@LOAD DONTCOPY (FILES (LOADCOMP)
                                             IRISSTREAM)
               (VARS TIMESROMANDFILES TRA TRB TRC TRFILES))
        (INITVARS (\SPLINEFONTSINCORE (LIST NIL)))
        (GLOBALVARS \SPLINEFONTSINCORE)
        (CONSTANTS (\CHARSEGMENTS.IRIS 10))))
(DECLARE%: EVAL@COMPILE

(RECORD SF.CHARACTER (CHARCODE))

(ASSOCRECORD SF.CHARDESC (FAMILY CHARACTER FACE WIDTH FIDUCIAL VERSION SPLINES)
                             (ACCESSFNS (SF.WIDTH (FETCH WIDTH OF DATUM))))

(RECORD SF.DERIVATIVE (XPRIME YPRIME XDPRIME YDPRIME XTPRIME YTPRIME))

(RECORD SF.FACE (WEIGHT SLOPE EXPANSION))

(RECORD SF.FAMILY (SFFAMILY))

(RECORD SF.FIDUCIAL (XFIDUCIAL YFIDUCIAL))

(RECORD SF.MADE-FROM (FILENAME XCHAR.ORIGIN YCHAR.ORIGIN XFIDUCIAL.ORIGIN YFIDUCIAL.ORIGIN))

(RECORD SF.SPLINE (%#OFKNOTS KNOTLIST WEIGHTLIST DERIVATIVELIST . OPTIONALSOLNMETHOD))

(RECORD SF.SPLINES (CLOSEDCURVELIST))

(RECORD SF.VERSION (VERSION DATE TIME))

(RECORD SF.WIDTH (XWIDTH YWIDTH))
)
(DEFINEQ

(READ.SPLINE.FONT
  [LAMBDA (FILES FAMILY CHARSET)                             (* ; "Edited  4-Feb-87 22:54 by gbn")

(* ;;; "reads SF files and updates \SPLINEFONTSINCORE.  \SPLINEFONTSINCORE looks like (((FAMILY1 CHARSET#) FONTARRAY1) ...)")

(* ;;; "should learn about sd files")

    (PROG (FONTARRAY FAM I CHAR)
          (PROG1 (RETURN (BIND INPUTSTREAM for F in (OR (LISTP FILES)
                                                        (LIST FILES))
                            collect (RESETLST (RESETSAVE NIL (LIST 'CLOSEF? INPUTSTREAM))
                                           (SETQ INPUTSTREAM (OPENSTREAM F 'INPUT))
                                           (SETQ CHAR (READ INPUTSTREAM FILERDTBL))
                                           [SETQ FAM (OR FAMILY (U-CASE (fetch SFFAMILY
                                                                           of (fetch FAMILY
                                                                                 of CHAR]
                                                             (* ; 
     "the fontarray can already be here, since a single file need not contain a whole character set.")
                                           [if (NOT (SETQ FONTARRAY (\LOOKUPSPLINEFONT FAM CHARSET)))
                                               then (\SETSPLINEFONT FAM CHARSET (SETQ FONTARRAY
                                                                                 (ARRAY (ADD1 
                                                                                         \MAXTHINCHAR
                                                                                              ]
                                           (PROG1 (CONS FAM
                                                        (bind C
                                                           repeatwhile (NEQ 'STOP (SETQ CHAR
                                                                                   (READ INPUTSTREAM 
                                                                                         FILERDTBL)))
                                                           collect (SETA FONTARRAY
                                                                         (SETQ C
                                                                          (fetch CHARCODE
                                                                             of (fetch CHARACTER
                                                                                   of CHAR)))
                                                                         CHAR)
                                                                 (PRINTOUT PROMPTWINDOW
                                                                        (SETQ C (CHARACTER C)))
                                                                 C))
                                                  (CLOSEF INPUTSTREAM])

(SF.DERIVS.TO.BEZIER
  [LAMBDA (KNOT XOFFSET YOFFSET SCALE DERIVATIVES)           (* gbn " 1-Aug-84 05:51")
          
          (* * Compute the Bezier control points from the derivative coefficients.
          Stolen from <cedar5.1>graphics>cgcubicimpl.mesa Returns an array of 4 xyz 
          points suitable for handing to the iris draw curve function
          (IRIS.CURVE format))

    (PROG [[BEZ (create BEZIER
                       B0X _ (PLUS XOFFSET (TIMES SCALE (fetch XCOORD of KNOT)))
                       B0Y _ (PLUS YOFFSET (TIMES SCALE (fetch YCOORD of KNOT]
           (DERIVS (for I from 1 to (LENGTH DERIVATIVES)
                      collect (TIMES SCALE (QUOTIENT (CAR (NTH DERIVATIVES I))
                                                  (ELT \FACT.IRIS (IQUOTIENT (ADD1 I)
                                                                         2]
          (replace B1X of BEZ with (PLUS (fetch B0X of BEZ)
                                         (QUOTIENT (fetch XPRIME of DERIVS)
                                                3)))
          (replace B1Y of BEZ with (PLUS (fetch B0Y of BEZ)
                                         (QUOTIENT (fetch YPRIME of DERIVS)
                                                3)))
          (replace B2X of BEZ with (PLUS (fetch B1X of BEZ)
                                         (QUOTIENT (PLUS (fetch XPRIME of DERIVS)
                                                         (fetch XDPRIME of DERIVS))
                                                3)))
          (replace B2Y of BEZ with (PLUS (fetch B1Y of BEZ)
                                         (QUOTIENT (PLUS (fetch YPRIME of DERIVS)
                                                         (fetch YDPRIME of DERIVS))
                                                3)))
          (replace B3X of BEZ with (PLUS (fetch B0X of BEZ)
                                         (fetch XPRIME of DERIVS)
                                         (fetch XDPRIME of DERIVS)
                                         (fetch XTPRIME of DERIVS)))
          (replace B3Y of BEZ with (PLUS (fetch B0Y of BEZ)
                                         (fetch YPRIME of DERIVS)
                                         (fetch YDPRIME of DERIVS)
                                         (fetch YTPRIME of DERIVS)))
          (RETURN BEZ])

(SF.PRINT
  [LAMBDA (STRING FONTFAMILY SCALE STREAM)                   (* ; "Edited 16-Jan-87 16:22 by gbn")
    (DECLARE%: (GLOBALVARS \SPLINEFONTSINCORE))

(* ;;; "Uses SFDRAW to draw a single char at a time to print out a string in the chosen font.  Defaults to GACHA")

    (PROG ((FONTARRAY (ASSOC (OR FONTFAMILY 'GACHA)
                             \SPLINEFONTSINCORE))
           CHAR CHARDESC)
          (if FONTARRAY
              then (SETQ FONTARRAY (CADR FONTARRAY))
            else (printout T "Spline font" %, FONTFAMILY %, 
                        "not in core.  Load it with READ.SPLINE.FONT")
                 (LISPERROR))
          (for I to (NCHARS STRING) do (SETQ CHAR (NTHCHARCODE STRING I))
                                       (SETQ CHARDESC (ELT FONTARRAY CHAR))
                                       (if CHARDESC
                                           then (SFDRAW CHARDESC NIL NIL NIL SCALE STREAM)
                                         else                (* ; 
                                "well, what to do?  ignore for now.  The char is not currently there")
                                           ))
          (FLUSHOUTPUT STREAM)
          (RETURN STRING])

(SFDRAW
  [LAMBDA (CHARDESC PRECISION XOFFSET YOFFSET SCALE STREAM)  (* gbn "24-Oct-85 16:59")
          
          (* * takes a character descriptor in SF format and draws it on STREAM)

    (PROG ((PRECISION (OR PRECISION \CHARSEGMENTS.IRIS))
           (X (OR XOFFSET (DSPXPOSITION NIL STREAM)))
           (Y (OR YOFFSET (DSPYPOSITION NIL STREAM)))
           (SCALE (OR SCALE 1.0))
           XWIDTH)
          (for CCURVE in (fetch SPLINES of CHARDESC)
             do (SFDRAW.CLOSED.CURVE CCURVE PRECISION X Y SCALE STREAM))
          (MOVETO [IPLUS X (SETQ XWIDTH (TIMES SCALE (fetch XWIDTH of (fetch SF.WIDTH of CHARDESC]
                 [IPLUS Y (TIMES SCALE (fetch YWIDTH of (fetch SF.WIDTH of CHARDESC]
                 STREAM)
          (RETURN XWIDTH])

(SFDRAW.CLOSED.CURVE
  [LAMBDA (CCURVE PRECISION XOFFSET YOFFSET SCALE STREAM)    (* gbn "21-Jun-85 03:00")
          
          (* * A closed curve looks like a list of splines.
          Each spline is described by the record SF.SPLINE)

    (PROG ((STREAM (if (EQ (TYPENAME STREAM)
                           'WINDOW)
                       then (WINDOWPROP STREAM 'DSP)
                     else STREAM))
           (SCALE (OR SCALE 1.0))
           SPPOUTSTREAM)
          [for SPLINE in CCURVE
             do 
          
          (* if necessary destructively change the knot list to be a list of postions)

                [if [NOT (type? POSITION (CAR (fetch KNOTLIST of SPLINE]
                    then (for KNOT in (fetch KNOTLIST of SPLINE) do (RPLACD KNOT (CADR KNOT] 
                                                             (* draw a single spline, driven off 
                                                             the stream type)
                (SELECTQ (TYPENAME (fetch IMAGEDATA of STREAM))
                    (IRISDATA 
          
          (* this is for the iris colour monitor, which is interested in Bezier control 
          points. Use the knots together with the derivative list to produce the Bezier 
          points to send to the Iris)

                              (SETQ SPPOUTSTREAM (fetch SPPOUTSTREAM of (fetch IRISDATA of STREAM)))
                              (bind BEZIER for I to (SUB1 (fetch %#OFKNOTS of SPLINE)) as KNOT
                                 in (fetch KNOTLIST of SPLINE) as DERIVS
                                 in (fetch DERIVATIVELIST of SPLINE)
                                 do (SETQ BEZIER (SF.DERIVS.TO.BEZIER KNOT XOFFSET YOFFSET SCALE 
                                                        DERIVS)) 
          
          (* get the bezier control points corresponding to the parametric
          (derivative) definition)

                                    (SELECTQ \IRIS.VERSION
                                        (GL2 (IRIS.CRV BEZIER SPPOUTSTREAM))
                                        (R1C (IRIS.CURVE PRECISION \BEZIERBASIS.IRIS BEZIER 
                                                    SPPOUTSTREAM))
                                        (ERROR))))
                    (\DISPLAYDATA 
          
          (* since the display is interested in the control points in the derivative form 
          as found here, just call the internal parametric spline drawing routine for the 
          display)
                                                             (* (GLOBALRESOURCE \BRUSHBBT
                                                             (PROG ((%#KNOTS (fetch %#OFKNOTS of 
                                                             SPLINE)) (BBT \BRUSHBBT)
                                                             (RESULT)) (SETQ RESULT
                                                             (create SPLINE %#KNOTS _ %#KNOTS DX _
                                                             (ARRAY %#KNOTS 0 0.0) DDX _
                                                             (ARRAY %#KNOTS 0 0.0) DDDX _
                                                             (ARRAY %#KNOTS 0 0.0) DY _
                                                             (ARRAY %#KNOTS 0 0.0) DDY _
                                                             (ARRAY %#KNOTS 0 0.0) DDDY _
                                                             (ARRAY %#KNOTS 0 0.0) X _
                                                             (ARRAY %#KNOTS 0 0.0) Y _
                                                             (ARRAY %#KNOTS 0 0.0)))
                                                             (for I to (SUB1 %#KNOTS) as KNOT in
                                                             (fetch KNOTLIST of SPLINE) as DERIVS 
                                                             in (fetch DERIVATIVELIST of SPLINE) do
                                                             (SETA (fetch X of RESULT) I
                                                             (PLUS XOFFSET (TIMES SCALE
                                                             (fetch XCOORD of KNOT))))
                                                             (SETA (fetch Y of RESULT) I
                                                             (PLUS YOFFSET (TIMES SCALE
                                                             (fetch YCOORD of KNOT))))
                                                             (SETA (fetch (SPLINE DX) of RESULT) I
                                                             (TIMES SCALE (fetch XPRIME of DERIVS)))
                                                             (SETA (fetch DY of RESULT) I
                                                             (TIMES SCALE (fetch YPRIME of DERIVS)))
                                                             (SETA (fetch DDX of RESULT) I
                                                             (TIMES SCALE (fetch XDPRIME of DERIVS)))
                                                             (SETA (fetch DDY of RESULT) I
                                                             (TIMES SCALE (fetch YDPRIME of DERIVS)))
                                                             (SETA (fetch DDDX of RESULT) I
                                                             (TIMES SCALE (fetch XTPRIME of DERIVS)))
                                                             (SETA (fetch DDDY of RESULT) I
                                                             (TIMES SCALE (fetch YTPRIME of DERIVS))) 
                                                             finally (\CURVE2 RESULT 1 NIL BBT 
                                                             STREAM)))))
                                  )
                    (PROGN 
          
          (* Don't know what kind of stream so just do it using the standard DSP fns.)
          
          (* * "JUNK TO NOT TYPE AGAIN" (SETQ %#KNOTS
          (fetch %#OFKNOTS of SPLINE)) (replace %#KNOTS of RESULT with %#KNOTS)
          (replace DX OF RESULT WITH (ARRAY %#KNOTS 0 0.0))
          (replace DDX of RESULT with (ARRAY %#KNOTS 0 0.0))
          (replace DDDX of RESULT with (ARRAY %#KNOTS 0 0.0))
          (replace DY of RESULT with (ARRAY %#KNOTS 0 0.0))
          (replace DDY of RESULT with (ARRAY %#KNOTS 0 0.0))
          (replace DDDY of RESULT with (ARRAY %#KNOTS 0 0.0))
          (replace X of RESULT with (ARRAY %#KNOTS 0 0.0))
          (replace Y of RESULT with (ARRAY %#KNOTS 0 0.0)))

                           (if SCALE
                               then (printout T 
                                           "SCALE specified for device which does not support it")
                                    (LISPERROR))
                           (DRAWCURVE (for KNOT in (fetch KNOTLIST of SPLINE)
                                         collect (create POSITION
                                                        XCOORD _ (PLUS (fetch XCOORD of KNOT)
                                                                       XOFFSET)
                                                        YCOORD _ (PLUS (fetch YCOORD of KNOT)
                                                                       YOFFSET)))
                                  NIL NIL NIL STREAM]
          (RETURN])

(TEST
  [LAMBDA (STRING COLOR SCALE)                               (* gbn " 1-Aug-84 02:45")
          
          (* * comment)

    (PROG NIL
          (IRIS.COLOR IRIS.BLACK)
          (IRIS.CLEAR)
          (IRIS.COLOR (OR COLOR IRIS.BLUE))
          (SF.PRINT (OR STRING "Greg")
                 NIL SCALE STR)
          (IRIS.GFLUSH)
          (RETURN])

(VIEW.FONT.FILES
  [LAMBDA (FILES)                                            (* edited%: " 9-Aug-84 05:35")
          
          (* * comment)

    (PROG (FONTARRAY FAMILY I CHAR)
          (RETURN (for F in (OR (LISTP FILES)
                                (LIST FILES))
                     collect (SETQ I (OPENSTREAM F 'INPUT))
                           (SETQ CHAR (READ I))
                           (CONS FAMILY (bind C repeatwhile (NEQ 'STOP (SETQ CHAR (READ I)))
                                           collect [SETQ C (CHARACTER (fetch CHARCODE
                                                                         of (fetch CHARACTER
                                                                               of CHAR]
                                                 (printout T C %,)
                                                 C finally (CLOSEF I])

(\LOOKUPSPLINEFONT
  [LAMBDA (FAMILY CHARSET)                                   (* gbn "22-Oct-85 12:09")
          
          (* * if there is a font array in core for this charset of this font family, 
          this returns it, else nil)

    (LET ((ENTRY (SASSOC (LIST FAMILY CHARSET)
                        \SPLINEFONTSINCORE)))
         (AND ENTRY (CDR ENTRY])

(\SETSPLINEFONT
  [LAMBDA (FAMILY CHARSET ARRAY)                             (* gbn "22-Oct-85 11:42")
          
          (* * installs a font array in \splinefontsincore for this family and charset)

    (PUTASSOC (LIST FAMILY CHARSET)
           ARRAY \SPLINEFONTSINCORE])

(ginit
  [LAMBDA NIL                                                (* edited%: " 6-Aug-84 12:00")
    (if (MOUSECONFIRM 
               "do you really want to ginit. You destroy font definitions which must be reloaded?" 
               NIL (if (HASTTYWINDOWP)
                       then T
                     else PROMPTWINDOW))
        then (IRIS.GINIT)
             (IRIS.CURSOFF)
             (IRIS.CLEAR)
             (makecolormap)
             (IRIS.SETCURSOR 0 1 255)
             (IRIS.COLOR IRIS.RED])
)
(DECLARE%: EVAL@LOAD DONTCOPY 

(FILESLOAD (LOADCOMP)
       IRISSTREAM)


(RPAQQ TIMESROMANDFILES (TIMESROMAND.LC1-SF;1 TIMESROMAND.LC2-SF;1 TIMESROMAND.NUM-SF;1 
                                   TIMESROMAND.S1-SF;1 TIMESROMAND.S3-SF;1 TIMESROMAND.UC1-SF;1 
                                   TIMESROMAND.UC2-SF;1))

(RPAQQ TRA
       [(FAMILY TIMESROMAND)
        (CHARACTER 97)
        (FACE M R R)
        (WIDTH 237 0)
        (FIDUCIAL 385 385)
        (VERSION 0 29-SEP-77 |16:35:46|)
        (MADE-FROM NIL 121 130 62 40)
        (SPLINES ((2 ((200 . 153)
                      (200 . 45))
                     NIL
                     ((0 -108.0 0 0 0 0))
                     NATURAL)
                  (4 ((200 . 45)
                      (202 . 28)
                      (214 . 23)
                      (223 . 27))
                     NIL
                     ((-0.866666 -19.6 0 0 17.2 15.6)
                      (7.733334 -11.8 17.2 15.6 -26.0 -6.000002)
                      (11.93333 0.8000005 -8.8 9.599998 8.8 -9.599998))
                     NATURAL)
                  (2 ((223 . 27)
                      (227 . 20))
                     NIL
                     ((4.0 -7.0 0 0 0 0))
                     NATURAL)
                  (7 ((227 . 20)
                      (216 . 9)
                      (197 . -1)
                      (170 . -6)
                      (144 . -2)
                      (126 . 7)
                      (117 . 23))
                     NIL
                     ((-9.420512 -11.06538 0 0 -9.476924 0.3923078)
                      (-14.15898 -10.86923 -9.476924 0.3923078 -0.6153832 4.038461)
                      (-23.94359 -8.457692 -10.09231 4.430769 11.93846 7.453844)
                      (-28.06666 -0.2999992 1.846154 11.88461 6.861538 -9.853844)
                      (-22.78974 6.657692 8.707692 2.030769 2.615385 7.961536)
                      (-12.77436 12.66923 11.32308 9.992306 -11.32308 -9.992306))
                     NATURAL)
                  (10 ((117 . 23)
                       (89 . 4)
                       (62 . -3)
                       (37 . 3)
                       (18 . 25)
                       (18 . 52)
                       (32 . 77)
                       (60 . 98)
                       (92 . 113)
                       (118 . 125))
                      NIL
                      ((-28.15654 -21.56226 0 0 0.9392528 15.37358)
                       (-27.68691 -13.87547 0.9392528 15.37358 1.303736 -4.867924)
                       (-26.0958 -0.9358488 2.242989 10.50566 -0.1541991 10.09811)
                       (-23.9299 14.61887 2.08879 20.60377 23.31306 -17.52453)
                       (-10.18458 26.46038 25.40185 3.079245 -15.09804 -6.0)
                       (7.668246 26.53962 10.30381 -2.920755 7.079094 -0.4754715)
                       (21.51161 23.38113 17.3829 -3.396226 -13.21835 -4.098113)
                       (32.28533 17.93585 4.164558 -7.494339 -14.20569 4.867924)
                       (29.34705 12.87547 -10.04114 -2.626415 10.04114 2.626415))
                      NATURAL)
                  (2 ((118 . 125)
                      (118 . 166))
                     NIL
                     ((0 41.0 0 0 0 0))
                     NATURAL)
                  (17 ((118 . 166)
                       (110 . 187)
                       (91 . 189)
                       (88 . 171)
                       (98 . 152)
                       (85 . 130)
                       (59 . 124)
                       (32 . 132)
                       (21 . 154)
                       (31 . 182)
                       (55 . 198)
                       (86 . 205)
                       (118 . 208)
                       (148 . 205)
                       (175 . 196)
                       (195 . 177)
                       (200 . 153))
                      NIL
                      ((-4.255993 24.64079 0 0 -22.46404 -21.84477)
                       (-15.48801 13.71841 -22.46404 -21.84477 46.32022 -4.776135)
                       (-14.79195 -10.51443 23.85617 -26.62091 -0.8168106 34.94932)
                       (8.655816 -19.66068 23.03936 8.328413 -61.05298 -21.02116)
                       (1.168687 -21.84285 -38.01361 -12.69275 29.0287 37.13531)
                       (-22.33057 -15.96793 -8.984904 24.44257 4.938131 -13.52012)
                       (-28.8464 1.714581 -4.046773 10.92245 23.21877 4.945154)
                       (-21.2838 15.10961 19.172 15.86761 4.186775 -6.260496)
                       (-0.01840973 27.84697 23.35877 9.607112 -9.965858 -27.90316)
                       (18.35743 23.5025 13.39291 -18.29605 -6.323341 9.873148)
                       (28.58868 10.14302 7.069574 -8.422904 -6.740779 6.410579)
                       (32.28786 4.925408 0.3287937 -2.012324 -2.713542 -5.515475)
                       (31.25988 0.1553465 -2.384749 -7.527798 -0.4050512 3.651317)
                       (28.67261 -5.546795 -2.7898 -3.876482 -1.666252 -9.089788)
                       (25.04968 -13.96817 -4.456052 -12.96627 -16.92993 8.707838)
                       (12.12866 -22.58052 -21.38599 -4.258433 21.38599 4.258433))
                      NATURAL))
               ((2 ((118 . 108)
                    (118 . 58))
                   NIL
                   ((0 -50.0 0 0 0 0))
                   NATURAL)
                (9 ((118 . 58)
                    (118 . 49)
                    (111 . 38)
                    (97 . 39)
                    (90 . 49)
                    (88 . 66)
                    (93 . 83)
                    (104 . 99)
                    (118 . 108))
                   NIL
                   ((1.256443 -7.739323 0 0 -7.53866 -7.564064)
                    (-2.512887 -11.52136 -7.53866 -7.564064 -4.3067 25.82032)
                    (-12.2049 -6.175257 -11.84536 18.25626 24.76546 -11.71723)
                    (-11.66752 6.222386 12.9201 6.539029 -10.75515 3.048599)
                    (-4.124999 14.28571 2.164949 9.587628 6.255152 -12.47717)
                    (1.167526 17.63475 8.420102 -2.889543 -2.265462 4.860088)
                    (8.454898 17.17526 6.154639 1.970545 -3.193299 -12.96318)
                    (13.01289 12.66421 2.96134 -10.99263 -2.96134 10.99263))
                   NATURAL])

(RPAQQ TRB
       [(FAMILY TIMESROMAND)
        (CHARACTER 99)
        (FACE M R R)
        (WIDTH 211 0)
        (FIDUCIAL 385 385)
        (VERSION 0 29-SEP-77 |16:50:06|)
        (MADE-FROM NIL 118 130 57 78)
        (SPLINES ((2 ((181 . 46)
                      (189 . 37))
                     NIL
                     ((8.0 -9.0 0 0 0 0))
                     NATURAL)
                  (32 ((189 . 37)
                       (166 . 14)
                       (135 . -1)
                       (92 . -4)
                       (59 . 7)
                       (33 . 30)
                       (16 . 66)
                       (12 . 101)
                       (17 . 136)
                       (30 . 166)
                       (51 . 189)
                       (86 . 204)
                       (125 . 206)
                       (154 . 202)
                       (180 . 189)
                       (196 . 168)
                       (196 . 143)
                       (178 . 127)
                       (155 . 124)
                       (138 . 134)
                       (130 . 155)
                       (130 . 176)
                       (124 . 189)
                       (111 . 184)
                       (96 . 160)
                       (91 . 129)
                       (93 . 95)
                       (102 . 63)
                       (117 . 42)
                       (144 . 33)
                       (167 . 39)
                       (181 . 46))
                      NIL
                      ((-21.8826 -24.50792 0 0 -6.704422 9.047542)
                       (-25.23481 -19.98415 -6.704422 9.047542 -14.47789 2.762293)
                       (-39.17817 -9.555464 -21.18231 11.80983 40.61599 3.903284)
                       (-40.05249 4.206011 19.43367 15.71312 -15.98606 -6.375422)
                       (-28.61185 16.73142 3.447612 9.337696 5.328262 9.5984)
                       (-22.50011 30.86831 8.775874 18.9361 6.673012 -26.01818)
                       (-10.38772 36.79532 15.44889 -7.082087 -8.020304 10.47433)
                       (1.051008 34.95039 7.428581 3.392247 1.408212 -9.879148)
                       (9.183696 33.40307 8.836792 -6.486902 -3.612545 -0.9577408)
                       (16.21421 26.4373 5.224247 -7.444641 13.04197 1.710107)
                       (27.95945 19.84771 18.26621 -5.734535 -12.55532 -11.88268)
                       (39.948 8.171835 5.710896 -17.61722 -22.82069 15.82064)
                       (34.24855 -1.535063 -17.1098 -1.796579 19.83808 -9.399882)
                       (27.05779 -8.031584 2.728286 -11.19646 -14.53163 3.778893)
                       (22.52026 -17.3386 -11.80335 -7.417568 -3.711554 0.2843065)
                       (8.861142 -24.61401 -15.5149 -7.133261 -6.622156 19.08388)
                       (-9.964836 -22.20533 -22.13706 11.95062 18.20018 1.380173)
                       (-23.0018 -9.564632 -3.936874 13.33079 11.82142 -0.6045686)
                       (-21.02796 3.463873 7.884551 12.72622 0.5141201 1.038099)
                       (-12.88635 16.70915 8.39867 13.76432 4.122093 -15.54783)
                       (-2.426633 22.69955 12.52076 -1.783509 -23.00249 -4.846774)
                       (-1.407115 18.49265 -10.48173 -6.630284 3.887866 -13.06508)
                       (-9.944906 5.329831 -6.59386 -19.69536 1.451023 -2.892914)
                       (-15.81326 -15.81199 -5.142837 -22.58827 20.30804 18.63673)
                       (-10.80207 -29.08189 15.16521 -3.951541 -10.6832 0.3459764)
                       (-0.978461 -32.86044 4.482012 -3.605564 4.424731 3.979362)
                       (5.715916 -34.47633 8.906742 0.373798 -7.015726 13.73657)
                       (11.1148 -27.23424 1.891017 14.11037 17.63817 -4.92565)
                       (21.8249 -15.5867 19.52919 9.184722 -27.53697 11.96602)
                       (27.5856 -0.4189663 -8.007784 21.15074 -3.490269 -24.93843)
                       (17.83268 8.262562 -11.49805 -3.787686 11.49805 3.787686))
                      NATURAL])

(RPAQQ TRC
       [(FAMILY TIMESROMAND)
        (CHARACTER 100)
        (FACE M R R)
        (WIDTH 250 0)
        (FIDUCIAL 385 385)
        (VERSION 0 29-SEP-77 |16:56:16|)
        (MADE-FROM NIL 103 130 57 78)
        (SPLINES ((2 ((136 . 269)
                      (136 . 189))
                     NIL
                     ((0 -80.0 0 0 0 0))
                     NATURAL)
                  (15 ((136 . 189)
                       (114 . 204)
                       (86 . 211)
                       (57 . 203)
                       (40 . 190)
                       (25 . 168)
                       (16 . 140)
                       (12 . 110)
                       (13 . 82)
                       (20 . 51)
                       (32 . 28)
                       (52 . 8)
                       (82 . -2)
                       (111 . 7)
                       (136 . 25))
                      NIL
                      ((-20.69145 16.12365 0 0 -7.851328 -6.741922)
                       (-24.61711 12.75269 -7.851328 -6.741922 3.256639 -14.29039)
                       (-30.84012 -1.134427 -4.594689 -21.03232 24.82477 21.9035)
                       (-23.02242 -11.21499 20.23008 0.8711902 -24.55573 -13.32363)
                       (-15.0702 -17.00562 -4.325648 -12.45244 13.39815 7.391023)
                       (-12.69677 -25.76255 9.072504 -5.061419 -5.036883 1.759538)
                       (-6.142708 -29.9442 4.035622 -3.30188 0.749383 9.57082)
                       (-1.732394 -28.46066 4.785005 6.268941 2.039351 -16.04282)
                       (4.072286 -30.21314 6.824355 -9.773884 -2.906779 24.60048)
                       (9.443252 -27.68678 3.917576 14.82659 3.587763 -16.35907)
                       (15.15471 -21.03973 7.505339 -1.532484 6.555731 10.83583)
                       (25.93791 -17.1543 14.06107 9.303344 -17.81069 15.01576)
                       (31.09364 -0.3430727 -3.749619 24.31911 -1.312975 -16.89888)
                       (26.68753 15.52659 -5.062595 7.420223 5.062595 -7.420223))
                      NATURAL)
                  (2 ((136 . 25)
                      (136 . -3))
                     NIL
                     ((0 -28.0 0 0 0 0))
                     NATURAL)
                  (2 ((136 . -3)
                      (241 . 10))
                     NIL
                     ((105.0 13.0 0 0 0 0))
                     NATURAL)
                  (2 ((241 . 10)
                      (241 . 15))
                     NIL
                     ((0 5.0 0 0 0 0))
                     NATURAL)
                  (5 ((241 . 15)
                      (231 . 19)
                      (222 . 26)
                      (217 . 37)
                      (217 . 50))
                     NIL
                     ((-10.07143 3.446428 0 0 0.4285715 3.321429)
                      (-9.857142 5.107143 0.4285715 3.321429 3.857143 1.392856)
                      (-7.5 9.125 4.285714 4.714285 2.142858 -2.892857)
                      (-2.142857 12.39286 6.428572 1.821428 -6.428572 -1.821428))
                     NATURAL)
                  (2 ((217 . 50)
                      (217 . 300))
                     NIL
                     ((0 250.0 0 0 0 0))
                     NATURAL)
                  (2 ((217 . 300)
                      (117 . 300))
                     NIL
                     ((-100.0 0 0 0 0 0))
                     NATURAL)
                  (2 ((117 . 300)
                      (117 . 295))
                     NIL
                     ((0 -5.0 0 0 0 0))
                     NATURAL)
                  (4 ((117 . 295)
                      (128 . 291)
                      (134 . 283)
                      (136 . 269))
                     NIL
                     ((12.06667 -3.333333 0 0 -6.4 -4.0)
                      (8.866666 -5.333333 -6.4 -4.0 2.0 -4.0)
                      (3.466666 -11.33333 -4.4 -8.0 4.4 8.0))
                     NATURAL))
               ((2 ((136 . 159)
                    (136 . 79))
                   NIL
                   ((0 -80.0 0 0 0 0))
                   NATURAL)
                (12 ((136 . 79)
                     (133 . 52)
                     (122 . 34)
                     (108 . 40)
                     (100 . 62)
                     (96 . 88)
                     (95 . 116)
                     (97 . 143)
                     (104 . 168)
                     (117 . 179)
                     (130 . 174)
                     (136 . 159))
                    NIL
                    ((-1.169987 -27.97882 0 0 -10.98008 5.872907)
                     (-6.660026 -25.04236 -10.98008 5.872907 6.900384 24.63546)
                     (-14.18991 -6.851724 -4.079692 30.50837 13.37854 -14.41478)
                     (-11.58033 16.44926 9.298848 16.0936 -6.414546 -14.97637)
                     (-5.488757 25.05467 2.884301 1.117225 0.279644 2.320276)
                     (-2.464635 27.33204 3.163945 3.437501 -0.7040282 -6.304729)
                     (0.3472968 27.61717 2.459917 -2.867228 2.536468 4.898638)
                     (4.075448 27.19927 4.996385 2.03141 2.558155 -19.28982)
                     (10.35091 19.58576 7.55454 -17.25841 -6.769083 0.2606583)
                     (14.52091 2.457678 0.785456 -16.99775 -11.48182 6.247193)
                     (9.565454 -11.41648 -10.69636 -10.75056 10.69636 10.75056))
                    NATURAL])

(RPAQQ TRFILES ({INDIGO}<PRESSFONTS>OLDSF>TIMESROMAND.LC1-SF;1 
                          {INDIGO}<PRESSFONTS>OLDSF>TIMESROMAND.LC2-SF;1 
                          {INDIGO}<PRESSFONTS>OLDSF>TIMESROMAND.NUM-SF;1 
                          {INDIGO}<PRESSFONTS>OLDSF>TIMESROMAND.S1-SF;1 
                          {INDIGO}<PRESSFONTS>OLDSF>TIMESROMAND.S3-SF;1 
                          {INDIGO}<PRESSFONTS>OLDSF>TIMESROMAND.UC1-SF;1 
                          {INDIGO}<PRESSFONTS>OLDSF>TIMESROMAND.UC2-SF;1))
)

(RPAQ? \SPLINEFONTSINCORE (LIST NIL))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS \SPLINEFONTSINCORE)
)
(DECLARE%: EVAL@COMPILE 

(RPAQQ \CHARSEGMENTS.IRIS 10)


(CONSTANTS (\CHARSEGMENTS.IRIS 10))
)
(PUTPROPS SFFONT COPYRIGHT ("Venue" 1991))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (1784 19991 (READ.SPLINE.FONT 1794 . 4813) (SF.DERIVS.TO.BEZIER 4815 . 7456) (SF.PRINT 
7458 . 8733) (SFDRAW 8735 . 9574) (SFDRAW.CLOSED.CURVE 9576 . 17439) (TEST 17441 . 17819) (
VIEW.FONT.FILES 17821 . 18759) (\LOOKUPSPLINEFONT 18761 . 19148) (\SETSPLINEFONT 19150 . 19442) (ginit
 19444 . 19989)))))
STOP
