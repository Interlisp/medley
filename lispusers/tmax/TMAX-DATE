(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)

(FILECREATED "17-Mar-2022 23:03:32" 
|{DSK}<Users>kaplan>Local>medley3.5>my-medley>lispusers>TMAX-DATE.;3| 14993  

      :CHANGES-TO (VARS TMAX-DATECOMS)
                  (FNS MAKE.DATEOBJ.IMAGEFNS)

      :PREVIOUS-DATE "24-Oct-2021 13:52:22" 
|{DSK}<Users>kaplan>Local>medley3.5>my-medley>lispusers>TMAX-DATE.;2|)


; Copyright (c) 1987-1988 by Xerox Corporation.

(PRETTYCOMPRINT TMAX-DATECOMS)

(RPAQQ TMAX-DATECOMS
       (
        (* |;;| "Developed under support from NIH grant RR-00785. Written by Frank Gilmurray and Sami Shaio. Updated by Ron Kaplan (2021)")

        

(* |;;;| "TMAX-DATE ImageObject functions")

        (FNS DATEOBJ DATEOBJP DATE.DISPLAYFN DATE.IMAGEBOXFN DATE.PUTFN DATE.GETFN DATE.COPYFN 
             DATE.BUTTONEVENTINFN)
        

(* |;;;| "Date support functions")

        (FNS CURRENT.DISPLAY.FONT CHANGE.DATE.FORMAT)
        

(* |;;;| "Functions to change date format")

        (FNS FINDTIME FINDHOUR AMPM FINDDAY NUMP FINDMONTH FINDYEAR)
        (VARS DATE.FORMAT.ITEMS)
        (FNS MAKE.DATEOBJ.IMAGEFNS)
        (INITVARS (\\DATEOBJ.IMAGEFNS (MAKE.DATEOBJ.IMAGEFNS)))
        (ADDVARS (IMAGEOBJGETFNS (DATE.GETFN)))
        (DECLARE\: DOEVAL@COMPILE DONTCOPY (RECORDS DATERECORD))))



(* |;;| 
"Developed under support from NIH grant RR-00785. Written by Frank Gilmurray and Sami Shaio. Updated by Ron Kaplan (2021)"
)




(* |;;;| "TMAX-DATE ImageObject functions")

(DEFINEQ

(dateobj
  (lambda (date/time date.string template)                   (* |fsg| "13-Jul-87 11:51")
          (* * |Create| |an| |instance| |of| \a date |imageobj.|)

    (let* ((template.type (or template '(m d y f)))
           (dateandtime (or date/time (mkstring (date))))
           (displaydate (or date.string (change.date.format dateandtime template.type)))
           (newobj (imageobjcreate (|create| daterecord
                                          datestring _ dateandtime
                                          display.date _ displaydate
                                          template.date _ template.type)
                          \\dateobj.imagefns)))
          (imageobjprop newobj 'type 'dateobj)
          newobj)))

(dateobjp
  (lambda (imobj)                                            (* |ss:| "27-Jun-87 15:39")
          (* |Tests| |an| |imageobj| |to| |see| |if| |it| |is| \a |date| |imageobject.|
          b\y |convention,| |testing| |functions| |for| |an| |imageobject| |will| |be| 
          |named| (concat |<type| |of| |imageobj>| "P"))

    (and imobj (eq (imageobjprop imobj 'type)
                   'dateobj))))

(date.displayfn
  (lambda (obj stream streamtype hoststream)                 (* |fsg| "17-Sep-87 10:44")
          (* * |Display| |function| |for| |date| |imageobjs.|)

    (tmax.shadeobj obj stream)
    (prin1 (|fetch| display.date |of| (|fetch| objectdatum |of| obj))
           stream)))

(date.imageboxfn
  (lambda (obj stream currentx rightmargin)                  (* |ss:| "27-Jun-87 15:38")
          (* * |Return| |the| |ImageBox| |for| |the| |date| |string.|
          |The| |size| |is| |determined| |by| |the| |stream's| |current| |font.|)

    (dspfont (current.display.font stream)
           stream)
    (|create| imagebox
           xsize _ (stringwidth (|fetch| display.date |of| (|fetch| objectdatum |of| obj))
                          stream)
           ysize _ (fontprop stream 'height)
           ydesc _ (fontprop stream 'descent)
           xkern _ 0)))

(date.putfn
  (lambda (obj stream)                                       (* |ss:| "27-Jun-87 15:38")
    (prin2 (list '|Date| (|fetch| objectdatum |of| obj))
           stream)))

(date.getfn
  (lambda (stream copy.object)                               (* |fsg| "20-Aug-87 14:56")
    (let ((window (|with| textobj textobj (car \\window))))
         (tsp.setup.fmmenu window))
    (apply (function dateobj)
           (or copy.object (cadr (read stream))))))

(date.copyfn
  (lambda (image.obj source.stream target.stream)            (* |fsg| "23-Jul-87 11:34")
          (* * |Here| |to| copy \a |Date| |Image| |Object.|)

    (selectq (imagestreamtype target.stream)
        (text (let ((textobj (textobj target.stream)))
                   (apply* (imageobjprop image.obj 'getfn)
                          target.stream
                          (|fetch| objectdatum |of| image.obj))))
        (error "Unknown TARGET stream type" (imagestreamtype target.stream)))))

(date.buttoneventinfn
  (lambda (obj windowstream selection relx rely window hoststream button)
                                                             (* |fsg| "11-Aug-87 13:56")
    (and (mousestate middle)
         (let ((old.date (|fetch| objectdatum |of| obj))
               (new.date (menu (|create| menu
                                      title _ '|Date/Time Menu|
                                      items _ date.format.items
                                      centerflg _ t))))
              (and new.date (not (equal (|fetch| (daterecord template.date) |of| old.date)
                                        new.date))
                   (progn (|with| daterecord old.date (cond
                                                         ((listp new.date)
                                                          (setq display.date (change.date.format
                                                                              datestring new.date))
                                                          (setq template.date new.date))
                                                         (t (setq datestring (mkstring (date)))
                                                            (setq display.date (change.date.format
                                                                                datestring 
                                                                                template.date)))))
                          'changed))))))
)



(* |;;;| "Date support functions")

(DEFINEQ

(current.display.font
  (lambda (stream)                                       (* \; "Edited 12-Mar-88 15:28 by drc:")

(* |;;;| "Return the current font.  This function is here instead of TMAX because the DATE code is also used in the LetterHead code.")

    (let ((current.font (|fetch| clfont |of| (|with| textstream (textstream textobj)
                                                            currentlooks))))
         (cond
            ((typenamep current.font 'fontdescriptor)
             current.font)
            ((typenamep current.font 'fontclass)
             (|fetch| displayfd |of| current.font))
            (t (shouldnt "Can't get current font"))))))

(CHANGE.DATE.FORMAT
  (LAMBDA (DATE TEMPLATE)                                    (* \; 
                                                           "Edited 24-Oct-2021 13:47 by rmk:")
                                                             (* |ss:| "27-Jun-87 15:36")

(* |;;;| "Convert the string DATE to the format specified by TEMPLATE.")

    (COND
       (TEMPLATE (LET ((VERSION (SELECTQ (CAR (LAST TEMPLATE))
                                    (A 'ABBREV)
                                    (F 'FULL)
                                    'EURO))
                       (FUNCLST '((D FINDDAY)
                                  (M FINDMONTH)
                                  (Y FINDYEAR))))
                      (COND
                         ((EQ T (CAR TEMPLATE))
                          (FINDTIME DATE VERSION))
                         (T (LET ((CH (|if| (EQ VERSION 'ABBREV)
                                          |then| "/"
                                        |else| " ")))
                                 (CONCAT (APPLY (CADR (ASSOC (CAR TEMPLATE)
                                                             FUNCLST))
                                                (LIST DATE VERSION))
                                        CH
                                        (APPLY (CADR (ASSOC (CADR TEMPLATE)
                                                            FUNCLST))
                                               (LIST DATE VERSION))
                                        (|if| (EQUAL CH " ")
                                            |then| ", "
                                          |else| CH)
                                        (APPLY (CADR (ASSOC (CADDR TEMPLATE)
                                                            FUNCLST))
                                               (LIST DATE VERSION))))))))
       (T (DATE)))))
)



(* |;;;| "Functions to change date format")

(DEFINEQ

(FINDTIME
  (LAMBDA (OLDDATE VERSION)                                  (* \; 
                                                           "Edited 24-Oct-2021 13:28 by rmk:")

    (* |;;| 
  "RMK: The spell-out default is very strange:  it rounds the minutes to the nearest half hour.")

    (* |;;| "RMK:  Correct for Y2K: Substrings then work.  Still, terrible code.")
                                                             (* |ss:| "27-Jun-87 15:40")
    (LET* ((UDATE (\\UNPACKDATE (IDATE OLDDATE)))
           (HOUR (CAR (NTH UDATE 4)))
           (MINUTES (CAR (NTH UDATE 5))))
          (SELECTQ VERSION
              (ABBREV (CONCAT (FINDHOUR HOUR)
                             ":" MINUTES " " (AMPM HOUR)))
              (EURO (SUBSTRING OLDDATE 13 17))
              (CONCAT (SELECTQ (|if| (LESSP MINUTES 46)
                                   |then| (FINDHOUR HOUR)
                                 |else| (PLUS 1 (FINDHOUR HOUR)))
                          (1 "one")
                          (2 "two")
                          (3 "three")
                          (4 "four")
                          (5 "five")
                          (6 "six")
                          (7 "seven")
                          (8 "eight")
                          (9 "nine")
                          (10 "ten")
                          (11 "eleven")
                          (12 "twelve")
                          NIL)
                     " "
                     (|if| (AND (GREATERP MINUTES 15)
                                    (LESSP MINUTES 45))
                         |then| "thirty"
                       |else| "o'clock")
                     " "
                     (AMPM HOUR))))))

(FINDHOUR
  (LAMBDA (HOUR)                                             (* \; 
                                                           "Edited 24-Oct-2021 13:35 by rmk:")
                                                             (* |ss:| " 8-Feb-86 17:49")
    (COND
       ((LESSP HOUR 13)
        HOUR)
       (T (IDIFFERENCE HOUR 12)))))

(AMPM
  (LAMBDA (HOUR)                                             (* \; 
                                                           "Edited 24-Oct-2021 13:37 by rmk:")
    (|if| (OR (LESSP HOUR 12)
                  (EQ HOUR 24))
        |then| "a.m."
      |else| "p.m.")))

(findday
  (lambda (olddate version)                                  (* |shw:| " 1-Jul-85 11:28")
    (mkatom (|if| (nump (substring olddate 1 2))
                |then| (substring olddate 1 2)
              |else| (substring olddate 2 2)))))

(nump
  (lambda (n)                                                (* |edited:| " 4-Apr-86 17:55")
                                                             (* |changed|)
    (not (null (numberp (mkatom n))))))

(FINDMONTH
  (LAMBDA (OLDDATE VERSION)                                  (* \; 
                                                           "Edited 24-Oct-2021 13:52 by rmk:")
                                                             (* |ss:| "27-Jun-87 15:40")

    (* |;;| "\\UNPACKDATE uses 0 origin for months")

    (LET ((MONTH (ASSOC (ADD1 (CAR (NTH (\\UNPACKDATE (IDATE OLDDATE))
                                        2)))
                        '((1 |Jan| |January|)
                          (2 |Feb| |February|)
                          (3 |Mar| |March|)
                          (4 |Apr| |April|)
                          (5 |May| |May|)
                          (6 |Jun| |June|)
                          (7 |Jul| |July|)
                          (8 |Aug| |August|)
                          (9 |Sep| |September|)
                          (10 |Oct| |October|)
                          (11 |Nov| |November|)
                          (12 |DecDecember|)))))
         (|if| (EQ VERSION 'ABBREV)
             |then| (CADR MONTH)
           |else| (CADDR MONTH)))))

(FINDYEAR
  (LAMBDA (OLDDATE VERSION)                                  (* \; 
                                                           "Edited 24-Oct-2021 13:48 by rmk:")
                                                             (* |ss:| "27-Jun-87 15:41")
    (CAR (\\UNPACKDATE (IDATE OLDDATE)))))
)

(RPAQQ DATE.FORMAT.ITEMS
       ((|Month Day, Year| '(M D Y F)
               "Insert current date as \"March 8, 1952\"")
        (|Month/Day/Year| '(M D Y A)
               "Insert current date as \"3/8/52\"")
        (|Day Month, Year| '(D M Y F)
               "Insert current date as \"8 March, 1952\"")
        (|Day/Month/Year| '(D M Y A)
               "Insert current date as \"8/3/52\"")
        (|Time| '(T F)
               "Insert current time as \"four thirty p.m.\"")
        (|Numbered Time| '(T A)
               "Insert current time as \"4:30 p.m.\"")
        (|Military Time| '(T E)
               "Insert current time as \"16:30\"")
        (|Update| T "Convert to current date/time")))
(DEFINEQ

(MAKE.DATEOBJ.IMAGEFNS
  (LAMBDA NIL                                               (* \; "Edited 17-Mar-2022 23:03 by rmk")
    (IMAGEFNSCREATE (FUNCTION DATE.DISPLAYFN)
           (FUNCTION DATE.IMAGEBOXFN)
           (FUNCTION DATE.PUTFN)
           (FUNCTION DATE.GETFN)
           (FUNCTION DATE.COPYFN)
           (FUNCTION DATE.BUTTONEVENTINFN)
           (FUNCTION NILL)
           (FUNCTION NILL)
           (FUNCTION NILL)
           (FUNCTION NILL)
           (FUNCTION NILL)
           (FUNCTION NILL)
           (FUNCTION NILL))))
)

(RPAQ? \\DATEOBJ.IMAGEFNS (MAKE.DATEOBJ.IMAGEFNS))

(ADDTOVAR IMAGEOBJGETFNS (DATE.GETFN))
(DECLARE\: DOEVAL@COMPILE DONTCOPY 
(DECLARE\: EVAL@COMPILE

(RECORD DATERECORD (DATESTRING DISPLAY.DATE TEMPLATE.DATE))
)
)
(PUTPROPS TMAX-DATE COPYRIGHT ("Xerox Corporation" 1987 1988))
(DECLARE\: DONTCOPY
  (FILEMAP (NIL (1517 6251 (DATEOBJ 1527 . 2294) (DATEOBJP 2296 . 2730) (DATE.DISPLAYFN 2732 . 3054) (
DATE.IMAGEBOXFN 3056 . 3683) (DATE.PUTFN 3685 . 3883) (DATE.GETFN 3885 . 4179) (DATE.COPYFN 4181 . 
4713) (DATE.BUTTONEVENTINFN 4715 . 6249)) (6295 8948 (CURRENT.DISPLAY.FONT 6305 . 7011) (
CHANGE.DATE.FORMAT 7013 . 8946)) (9001 13400 (FINDTIME 9011 . 10790) (FINDHOUR 10792 . 11153) (AMPM 
11155 . 11454) (FINDDAY 11456 . 11727) (NUMP 11729 . 11958) (FINDMONTH 11960 . 13076) (FINDYEAR 13078
 . 13398)) (14112 14678 (MAKE.DATEOBJ.IMAGEFNS 14122 . 14676)))))
STOP
