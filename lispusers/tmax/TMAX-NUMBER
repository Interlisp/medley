(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)

(FILECREATED "16-Mar-2024 07:49:47" |{WMEDLEY}<lispusers>tmax>TMAX-NUMBER.;3| 33943  

      :EDIT-BY |rmk|

      :CHANGES-TO (FNS NUMBER.DISPLAYFN NUMBER.PREPRINTFN NUMBER.IMAGEBOXFN NUMBER.PUTFN NUMBER.GETFN
                       NUMBER.COPYFN)

      :PREVIOUS-DATE "18-Mar-2022 07:06:06" |{WMEDLEY}<lispusers>tmax>TMAX-NUMBER.;2|)


(PRETTYCOMPRINT TMAX-NUMBERCOMS)

(RPAQQ TMAX-NUMBERCOMS
       ((* |Developed| |under| |support| |from| NIH |grant| RR-00785.)
        (* |Written| |by| |Frank| |Gilmurray| |and| |Sami| |Shaio.|)
        (* * TMAX-NUMBER |ImageObject| |functions|)
        (FNS NUMBEROBJ NUMBEROBJP NGROUPP NUMBER.DISPLAYFN NUMBER.PREPRINTFN NUMBER.IMAGEBOXFN 
             NUMBER.PUTFN NUMBER.GETFN NUMBER.COPYFN NUMBER.BUTTONEVENTINFN NUMBEROBJ.TEDIT-TO-TEX-FN
             )
        (FNS COPY.NGROUP.BRANCH DUMP.NGROUP.GRAPH NGROUP.BUTTONEVENTINFN NGROUP.DEFINE.TAG 
             NUMBER.DELETE.TAG NGROUP.SHOW.TAG CHANGE.INSERTED.NGROUP.FORMAT 
             CHANGE.NGROUP.FORMAT.#TEXT SHOW.INSERTED.NGROUP.FORMAT)
        (* * |Variable| |and| |Record| |definitions|)
        (VARS NGROUP.GRAPH.MENU.ITEMS NGROUP.INSERTED.MENU.ITEMS NGROUP.INSERTED.NOTAG.ITEMS 
              NGROUP.INSERTED.TAG.ITEMS)
        (FILES (COMPILED SYSLOAD)
               TMAX)
        (INITVARS (\\NUMBEROBJ.IMAGEFNS (IMAGEFNSCREATE (FUNCTION NUMBER.DISPLAYFN)
                                               (FUNCTION NUMBER.IMAGEBOXFN)
                                               (FUNCTION NUMBER.PUTFN)
                                               (FUNCTION NUMBER.GETFN)
                                               (FUNCTION NUMBER.COPYFN)
                                               (FUNCTION NUMBER.BUTTONEVENTINFN)
                                               (FUNCTION NILL)
                                               (FUNCTION NILL)
                                               (FUNCTION NILL)
                                               (FUNCTION XREF.WHENDELETEDFN)
                                               (FUNCTION NILL)
                                               (FUNCTION NILL)
                                               (FUNCTION NUMBER.PREPRINTFN))))
        (DECLARE\: EVAL@COMPILE DONTCOPY (RECORDS NGCOUNTER NGTEMPLATE NUMBEROBJ))))



(* |Developed| |under| |support| |from| NIH |grant| RR-00785.)




(* |Written| |by| |Frank| |Gilmurray| |and| |Sami| |Shaio.|)

(* * TMAX-NUMBER |ImageObject| |functions|)

(DEFINEQ

(NUMBEROBJ
  (LAMBDA (USE TEMPLATE NUMSTRING REF.TYPE FONT MOTHER ABBREV.LEVEL)
                                                             (* |fsg| "26-Aug-87 14:29")
    (LET ((NEWOBJ (IMAGEOBJCREATE (|create| NUMBEROBJ
                                         REF.TYPE _ REF.TYPE
                                         NUMSTRING _ (OR NUMSTRING "Note#")
                                         USE _ USE
                                         NGROUP.MOTHER _ MOTHER
                                         TEMPLATE _ TEMPLATE
                                         UPDATED.OBJ _ NIL
                                         TEXT.AFTER# _ NIL
                                         PAGE.NUMBER _ NIL
                                         FONT _ FONT
                                         TEXT.BEFORE# _ NIL
                                         ABBREV-VAL _ ABBREV.LEVEL)
                         \\NUMBEROBJ.IMAGEFNS)))
         (IMAGEOBJPROP NEWOBJ 'TYPE 'NUMBEROBJ)
         (IMAGEOBJPROP NEWOBJ 'TEDIT-TO-TEX-FN (FUNCTION NUMBEROBJ.TEDIT-TO-TEX-FN))
         NEWOBJ)))

(numberobjp
  (lambda (imobj)                                            (* |ss:| "27-Jun-87 16:21")
          (* * |Tests| |an| |imageobj| |to| |see| |if| |it| |is| \a |number| 
          |imageobject.| |The| |only| |number| |imageobjects| |so| |far| |are| |NGroups| 
          |and| |Endnotes.| b\y |convention,| |testing| |functions| |for| |an| 
          |imageobject| |will| |be| |named| (concat |<type| |of| |imageobj>| "P"))

    (and imobj (eq (imageobjprop imobj 'type)
                   'numberobj))))

(ngroupp
  (lambda (imobj)                                            (* |ss:| "27-Jun-87 16:15")
          (* * |Like| numberobjp |but| |also| |checks| |for| |NGroup| |ImageObject.|)

    (and (numberobjp imobj)
         (eq (|fetch| (numberobj use) |of| (|fetch| objectdatum |of| imobj))
             'ngroup))))

(NUMBER.DISPLAYFN
  (LAMBDA (IMAGE.OBJ STREAM)                                (* \; "Edited 16-Mar-2024 07:46 by rmk")
                                                             (* |fsg| "24-Sep-87 14:56")

    (* |;;| "Display function for numberobjs.  Allows different formats for display according to the use to which the numberobj is being put.  If no specific action is specified, displaying defaults to printing out as a plain number.*")

    (|with| NUMBEROBJ (|fetch| OBJECTDATUM |of| IMAGE.OBJ)
           (LET* ((MAIN.WINDOW (\\TEDIT.PRIMARYW TEXTOBJ))
                  (IMAGE.TAG (IMAGEOBJPROP IMAGE.OBJ 'TAG))
                  (OLD.FONT (DSPFONT NIL STREAM))
                  (NBR.FONT (SELECTQ USE
                                (NOTE (|fetch| (ENDNOTEFONTS NUMBER.FONT) |of| (GET.ENDNOTE.FONTS
                                                                                MAIN.WINDOW)))
                                (NGROUP FONT)
                                (ERROR "Undefined USE field" USE))))
                 (AND IMAGE.TAG (OR (TSP.GETCODEVAL IMAGE.TAG MAIN.WINDOW)
                                    (TSP.PUTCODE IMAGE.TAG IMAGE.OBJ MAIN.WINDOW)))
                 (AND (FONTP NBR.FONT)
                      (DSPFONT (FONTCREATE (FONTPROP NBR.FONT 'FAMILY)
                                      (FONTPROP NBR.FONT 'SIZE)
                                      (FONTPROP NBR.FONT 'FACE))
                             STREAM))
                 (OR (IMAGESTREAMTYPEP STREAM 'DISPLAY)
                     (SETQ PAGE.NUMBER (CAR FORMATTINGSTATE)))
                 (TMAX.SHADEOBJ IMAGE.OBJ STREAM)
                 (SELECTQ USE
                     (NGROUP (PRIN1 (CONCAT (OR TEXT.BEFORE# "")
                                           (MKSTRING NUMSTRING)
                                           (OR TEXT.AFTER# ""))
                                    STREAM)
                             (OR (IMAGESTREAMTYPEP STREAM 'DISPLAY)
                                 (UPDATE.NGROUP.MANINDEX TEMPLATE REF.TYPE MAIN.WINDOW)))
                     (NOTE (LET ((CURRENT.YPOS (DSPYPOSITION NIL STREAM))
                                 (IMAGEBOX (LISTGET (|fetch| IMAGEOBJPLIST |of| IMAGE.OBJ)
                                                  'BOUNDBOX)))
                                (DSPYPOSITION (IPLUS CURRENT.YPOS (IDIFFERENCE (|fetch| YSIZE
                                                                                  |of| IMAGEBOX)
                                                                         (FONTPROP STREAM
                                                                                'HEIGHT)))
                                       STREAM)
                                (PRIN1 (MKSTRING NUMSTRING)
                                       STREAM)
                                (DSPYPOSITION CURRENT.YPOS STREAM)))
                     NIL)
                 (DSPFONT OLD.FONT STREAM)))))

(NUMBER.PREPRINTFN
  (LAMBDA (IMAGE.OBJ)                                       (* \; "Edited 16-Mar-2024 07:47 by rmk")
                                                             (* \; "Edited 18-May-99 22:51 by rmk:")
                                                             (* |fsg| "24-Sep-87 14:56")

    (* |;;| "Returns string that represents the number object, for plaintext put.  If no specific action is specified, displaying defaults to printing out as a plain number.*")

    (WITH NUMBEROBJ (FETCH OBJECTDATUM OF IMAGE.OBJ)
          (LET* ((MAIN.WINDOW (\\TEDIT.PRIMARYW TEXTOBJ))
                 (IMAGE.TAG (IMAGEOBJPROP IMAGE.OBJ 'TAG)))
                (AND IMAGE.TAG (OR (TSP.GETCODEVAL IMAGE.TAG MAIN.WINDOW)
                                   (TSP.PUTCODE IMAGE.TAG IMAGE.OBJ MAIN.WINDOW)))
                (SELECTQ USE
                    (NGROUP (CONCAT (OR TEXT.BEFORE# "")
                                   (MKSTRING NUMSTRING)
                                   (OR TEXT.AFTER# "")))
                    (NOTE (MKSTRING NUMSTRING))
                    NIL)))))

(NUMBER.IMAGEBOXFN
  (LAMBDA (OBJ STREAM CURRENTX RIGHTMARGIN)                 (* \; "Edited 16-Mar-2024 07:47 by rmk")
                                                             (* |fsg| " 4-Aug-87 14:56")

(* |;;;| "For Endnote numbers, the YSize is the current font height plus 0.25 times the Endnote number font height.  We do this so the the Endnote number will be superscripted but not too much.")

(* |;;;| "The YSize is computed as the current font height plus half of the NOTE or NGroup font.  The reason is weird.  Ask Sami for more details.")

    (|with| NUMBEROBJ (|fetch| OBJECTDATUM |of| OBJ)
           (LET* ((MAIN.WINDOW (\\TEDIT.PRIMARYW TEXTOBJ))
                  (IMOBJ.STRING (MKSTRING NUMSTRING))
                  (NBR.FONT (SELECTQ USE
                                (NOTE (|fetch| (ENDNOTEFONTS NUMBER.FONT) |of| (GET.ENDNOTE.FONTS
                                                                                MAIN.WINDOW)))
                                (NGROUP FONT)
                                (ERROR "Undefined USE field" USE))))
                 (AND (EQ USE 'NGROUP)
                      (PROGN (AND (STRINGP TEXT.BEFORE#)
                                  (SETQ IMOBJ.STRING (CONCAT TEXT.BEFORE# IMOBJ.STRING)))
                             (AND (STRINGP TEXT.AFTER#)
                                  (SETQ IMOBJ.STRING (CONCAT IMOBJ.STRING TEXT.AFTER#)))))
                 (AND (FONTP NBR.FONT)
                      (DSPFONT (FONTCREATE (FONTPROP NBR.FONT 'FAMILY)
                                      (FONTPROP NBR.FONT 'SIZE)
                                      (FONTPROP NBR.FONT 'FACE))
                             STREAM))
                 (|create| IMAGEBOX
                        XSIZE _ (STRINGWIDTH IMOBJ.STRING STREAM)
                        YSIZE _ (SELECTQ USE
                                    (NOTE (FIX (PLUS (TIMES (DSPSCALE NIL STREAM)
                                                            (FONTPROP (CURRENT.DISPLAY.FONT STREAM)
                                                                   'HEIGHT))
                                                     (TIMES 0.25 (FONTPROP STREAM 'HEIGHT)))))
                                    (FONTPROP STREAM 'HEIGHT))
                        YDESC _ (FONTPROP STREAM 'DESCENT)
                        XKERN _ 0)))))

(NUMBER.PUTFN
  (LAMBDA (OBJ STREAM)                                      (* \; "Edited 16-Mar-2024 07:48 by rmk")
                                                             (* |fsg| " 5-Aug-87 08:24")
    (LET ((WINDOW (\\TEDIT.PRIMARYW TEXTOBJ))
          (USE (|with| NUMBEROBJ (|fetch| OBJECTDATUM |of| OBJ)
                      USE))
          (OLD.FONT (|with| NUMBEROBJ (|fetch| OBJECTDATUM |of| OBJ)
                           FONT)))
         (SELECTQ USE
             (NOTE (NOTE.PUTFN OBJ STREAM WINDOW))
             (NGROUP (LET ((NGROUP.REC (COPY (|fetch| OBJECTDATUM |of| OBJ))))
                          (|with| NUMBEROBJ NGROUP.REC (SETQ FONT (LIST.FONT.PROPS FONT))
                                 (PRIN4 (LIST '|NGroup| (AND (WINDOWPROP WINDOW 'DUMPNGROUPGRAPH)
                                                             (DUMP.NGROUP.GRAPH WINDOW))
                                              (IMAGEOBJPROP OBJ 'TAG)
                                              NGROUP.REC)
                                        STREAM))))
             (ERROR "Unknown NUMBER ImageObject type" USE)))))

(NUMBER.GETFN
  (LAMBDA (STREAM COPY.OBJECT)                              (* \; "Edited 16-Mar-2024 07:48 by rmk")
                                                             (* |fsg| " 3-Sep-87 15:17")

(* |;;;| "If COPY.OBJECT is non-NIL then we are COPYing it to this window.")

    (LET ((NBROBJ.DATUM (OR COPY.OBJECT (CDR (READ STREAM))))
          (NEWOBJ (NUMBEROBJ))
          (WINDOW (\\TEDIT.PRIMARYW TEXTOBJ)))
         (TSP.SETUP.FMMENU WINDOW)
         (AND (ILESSP (LENGTH NBROBJ.DATUM)
                     3)
              (SETQ NBROBJ.DATUM (CONS NIL NBROBJ.DATUM)))
         (AND (CAR NBROBJ.DATUM)
              (NOT (AND (BOUNDP 'TMAX.PRUNE.NGRAPH)
                        TMAX.PRUNE.NGRAPH))
              (COPY.NGROUP.BRANCH (CAR NBROBJ.DATUM)
                     WINDOW))
         (AND (CADR NBROBJ.DATUM)
              (NOT (GETHASH (CADR NBROBJ.DATUM)
                          (WINDOWPROP WINDOW 'TSP.CODE.ARRAY)))
              (PROGN (TSP.PUTCODE (CADR NBROBJ.DATUM)
                            NEWOBJ WINDOW)
                     (IMAGEOBJPROP NEWOBJ 'TAG (CADR NBROBJ.DATUM))))
         (|with| NUMBEROBJ (SETQ NBROBJ.DATUM (NGROUP.FIXUP.RECORDS (CADDR NBROBJ.DATUM)
                                                     COPY.OBJECT))
                (SELECTQ USE
                    (NOTE (NOTE.GETFN NEWOBJ NBROBJ.DATUM WINDOW))
                    (NGROUP (AND (LISTP FONT)
                                 (SETQ FONT (FONTCREATE FONT)))
                            (CREATE.NGROUP.NODE REF.TYPE NGROUP.MOTHER NBROBJ.DATUM WINDOW)
                            (CREATE.NGROUP.NODE NGROUP.MOTHER NIL NIL WINDOW)
                            (ADD.NGROUP.TO.MOTHER.NODE REF.TYPE NGROUP.MOTHER WINDOW)
                            (WINDOWPROP WINDOW 'REBUILD.GRAPHFLG T)
                            (AND (|fetch| (NGTEMPLATE NG.MANUALINDEX) |of| TEMPLATE)
                                 (WINDOWADDPROP WINDOW 'MANUALGROUPS REF.TYPE))
                            (|replace| OBJECTDATUM |of| NEWOBJ |with| NBROBJ.DATUM))
                    (ERROR "Unknown USE type in NUMBER.GETFN" USE)))
         NEWOBJ)))

(NUMBER.COPYFN
  (LAMBDA (IMAGE.OBJ SOURCE.STREAM TARGET.STREAM)           (* \; "Edited 16-Mar-2024 07:48 by rmk")
                                                             (* |fsg| " 4-Aug-87 09:46")

(* |;;;| "Here to COPY a Number Image Object.  If we are copying to our own window, we delete the TAG if any so we don't get two ImageObjs with the same TAG name.")

    (SELECTQ (IMAGESTREAMTYPE TARGET.STREAM)
        (TEXT (LET ((SOURCE.WINDOW (\\TEDIT.PRIMARYW TEXTOBJ))
                    (TEXTOBJ (TEXTOBJ TARGET.STREAM)))
                   (APPLY* (IMAGEOBJPROP IMAGE.OBJ 'GETFN)
                          TARGET.STREAM
                          (LIST (|with| NUMBEROBJ (|fetch| OBJECTDATUM |of| IMAGE.OBJ)
                                       (AND (EQ USE 'NGROUP)
                                            (NEQ SOURCE.STREAM TARGET.STREAM)
                                            (|for| PARENT |in| (APPEND (LIST.ANCESTORS REF.TYPE NIL 
                                                                              SOURCE.WINDOW)
                                                                      (LIST REF.TYPE))
                                               |collect| (CAR (GETHASH PARENT (TSP.GET.NGROUP.ARRAY
                                                                               SOURCE.WINDOW))))))
                                (AND (NEQ SOURCE.STREAM TARGET.STREAM)
                                     (IMAGEOBJPROP IMAGE.OBJ 'TAG))
                                (|fetch| OBJECTDATUM |of| IMAGE.OBJ)))))
        (ERROR "Unknown TARGET stream type" (IMAGESTREAMTYPE TARGET.STREAM)))))

(number.buttoneventinfn
  (lambda (obj stream sel relx rely window hoststream button)(* |fsg| " 2-Sep-87 11:09")
          (* * |Here| |when| \a |NumberOBJ| |is| |left| |or| |middle| |buttoned.|
          |Left| |just| |dislays| |the| |Tag| |if| |any| |in| |the| |prompt| |window.|
          |Middle| |pops| |up| \a |menu| |allowing| |this| |user| |to| |do| |various| 
          |things.|)

    (and (mousestate left)
         (cond
            ((imageobjprop obj 'tag)
             (|with| numberobj (|fetch| objectdatum |of| obj)
                    (tedit.promptprint stream (concat "Tag for this " (selectq use
                                                                          (note "Endnote")
                                                                          (ngroup ref.type)
                                                                          (error "Undefined USE code" 
                                                                                 use))
                                                     " is \""
                                                     (imageobjprop obj 'tag)
                                                     "\"")
                           t)))
            (t (tedit.promptprint stream "" t))))
    (and (mousestate middle)
         (let* ((datum (|fetch| objectdatum |of| obj))
                (use (|fetch| (numberobj use) |of| datum))
                (ref.type (|fetch| (numberobj ref.type) |of| datum)))
               (and (selectq use
                        (note (note.buttoneventinfn obj stream window))
                        (ngroup (ngroup.buttoneventinfn ref.type obj stream window))
                        (error "Undefined USE code" use))
                    (progn (tedit.promptprint stream "" t)
                           'changed))))))

(NUMBEROBJ.TEDIT-TO-TEX-FN
  (LAMBDA (OBJ STREAM)
    (PRIN3 "\\ex{" STREAM)
    (LET ((DATUM (IMAGEOBJPROP OBJ 'OBJECTDATUM)))
         (PRIN3 (CAR DATUM)
                STREAM)
         (PRIN3 (CADR DATUM)
                STREAM))
    (PRIN3 "}" STREAM)
    T))
)
(DEFINEQ

(copy.ngroup.branch
  (lambda (ngroup.parents window)                            (* |fsg| "11-Aug-87 09:36")
          (* * |Build| |the| |NGroup| |database| |for| |the| |parents| |of| \a |copied| 
          |NGroup| |or| |the| |entire| |NGroup| |database| |on| \a get.)

    (|for| parent |in| ngroup.parents |do| (and parent (|with| numberobj parent (and (listp font)
                                                                                     (setq font
                                                                                      (fontcreate
                                                                                       font)))
                                                              (or ngroup.mother (setq ngroup.mother
                                                                                 'new.ngroup))
                                                              (create.ngroup.node ref.type 
                                                                     ngroup.mother parent window)
                                                              (create.ngroup.node ngroup.mother nil 
                                                                     nil window)
                                                              (add.ngroup.to.mother.node ref.type 
                                                                     ngroup.mother window))))))

(dump.ngroup.graph
  (lambda (window)                                           (* |fsg| " 3-Aug-87 16:03")
          (* * |Return| \a |list| |of| |the| |NGroup| |graph| |data| |that| |is| put 
          |along| |with| |the| |NGroup| |Imageobject.|
          w\e |can| |then| |rebuild| |the| |entire| |NGroup| |graph| |on| \a get.)

    (let ((graph.list (tconc nil)))
         (maphash (tsp.get.ngroup.array window)
                (function (lambda (val key)
                            (and (neq key 'new.ngroup)
                                 (let ((ngroup.rec (copy (car val))))
                                      (|with| numberobj ngroup.rec (setq font (list.font.props font))
                                             (tconc graph.list ngroup.rec)))))))
         (windowprop window 'dumpngroupgraph nil)
         (cdar graph.list))))

(ngroup.buttoneventinfn
  (lambda (ref.type ngroup.obj stream window)                (* |fsg| " 5-Aug-87 08:31")
          (* * |Here| |when| |an| |inserted| |NGroup| |is| |middle| |buttoned.|)

    (let ((tag (imageobjprop ngroup.obj 'tag))
          (graphw (windowprop window 'imageobj.menuw)))
         (menu (|create| menu
                      title _ (concat ref.type " Menu")
                      items _ (append (cond
                                         (tag ngroup.inserted.tag.items)
                                         (t ngroup.inserted.notag.items))
                                     ngroup.inserted.menu.items)
                      centerflg _ t)))))

(ngroup.define.tag
  (lambda (ref.type window ngroup.obj)                       (* |fsg| " 5-Aug-87 09:26")
          (* * |Define| \a tag |for| |this| |NGroup| |or| |Change| |the| tag |if| |it| 
          |already| |exists.|)

    (let ((old.tag (imageobjprop ngroup.obj 'tag))
          (new.tag (tsp.get.incode (textstream window))))
         (and new.tag (neq new.tag old.tag)
              (progn (and old.tag (number.delete.tag window ngroup.obj))
                     (tsp.putcode new.tag ngroup.obj window)
                     (imageobjprop ngroup.obj 'tag new.tag))))))

(number.delete.tag
  (lambda (window ngroup.obj)                                (* |fsg| " 5-Aug-87 09:27")
          (* * |Delete| |this| |Imageobj's| tag.)

    (tsp.putcode (imageobjprop ngroup.obj 'tag nil)
           nil window)
    nil))

(ngroup.show.tag
  (lambda (ref.type window ngroup.obj)                       (* |fsg| " 5-Aug-87 08:43")
          (* * |Show| |this| |NGroup's| tag.)

    (tedit.promptprint (textstream window)
           (concat ref.type ":  Tag=\"" (imageobjprop ngroup.obj 'tag)
                  "\"")
           t)))

(change.inserted.ngroup.format
  (lambda (ref.type ngroup.obj stream window format.field)   (* |fsg| " 1-Sep-87 15:33")
          (* * |Change| |an| |inserted| |NGroup's| |entire| |format| |or| \a |selected| 
          |field.|)

    (let ((graphw (windowprop window 'imageobj.menuw))
          (new.format (|for| field |in| (cond
                                           (format.field (list format.field))
                                           (t '(txtbefore display txtafter abbrevval before#txt 
                                                      after#txt)))
                         |collect| (selectq field
                                       (txtbefore (change.ngroup.format.txtbefore ref.type graphw 
                                                         ngroup.obj))
                                       (display (change.ngroup.format.display ref.type graphw 
                                                       ngroup.obj))
                                       (txtafter (change.ngroup.format.txtafter ref.type graphw 
                                                        ngroup.obj))
                                       (abbrevval (change.ngroup.format.abbrev ref.type graphw 
                                                         ngroup.obj))
                                       (before#txt (change.ngroup.format.#text ref.type window 
                                                          ngroup.obj 'before))
                                       (after#txt (change.ngroup.format.#text ref.type window 
                                                         ngroup.obj 'after))
                                       (error "Unknown NGroup Format field" field)))))
         (apply 'or new.format))))

(change.ngroup.format.#text
  (lambda (ref.type window ngroup.obj flavor)                (* |fsg| "25-Aug-87 14:48")
          (* * |Change| |the| |text| |before| |or| |after| |an| |inserted| |NGroup| 
          |regardless| |of| |the| |Text| |Before| |or| |Text| |After| |toggle| 
          |settings.|)

    (|with| numberobj (|fetch| objectdatum |of| ngroup.obj)
           (let ((old.string (selectq flavor
                                 (before text.before#)
                                 text.after#))
                 (new.string (tedit.getinput (textstream window)
                                    (concat (selectq flavor
                                                (before "Text before ")
                                                "Text after ")
                                           ref.type ":"))))
                (and new.string (setq new.string (concat (selectq flavor
                                                             (before "")
                                                             " ")
                                                        (convert.tabs.to.spaces new.string)
                                                        (selectq flavor
                                                            (before " ")
                                                            ""))))
                (selectq flavor
                    (before (setq text.before# new.string))
                    (setq text.after# new.string))
                (not (strequal old.string new.string))))))

(show.inserted.ngroup.format
  (lambda (ref.type ngroup.obj stream window)                (* |fsg| "26-Aug-87 12:05")
          (* * |Show| |the| |format| |of| |an| |inserted| |NGroup.|)

    (|with| numberobj (|fetch| objectdatum |of| ngroup.obj)
           (|with| ngtemplate template (tedit.promptprint stream
                                              (concat ref.type ": Display="
                                                     (concat (cond
                                                                (ng.text-before (concat "\"" 
                                                                                       ng.text-before 
                                                                                       "\""))
                                                                (t "\"\""))
                                                            ng.chartype
                                                            (cond
                                                               (ng.text-after (concat "\"" 
                                                                                     ng.text-after 
                                                                                     "\""))
                                                               (t "\"\"")))
                                                     " Abbrev="
                                                     (or abbrev-val "None"))
                                              t)))))
)
(* * |Variable| |and| |Record| |definitions|)


(RPAQQ NGROUP.GRAPH.MENU.ITEMS
       `((|Change Font| (CHANGE.NGROUP.FONT LABEL GRAPHW)
                "Change this NGroup's entire FONT."
                (SUBITEMS (|Family| (CHANGE.NGROUP.FONT LABEL GRAPHW 'FAMILY)
                                 "Change this NGroup's font family.")
                       (|Size| (CHANGE.NGROUP.FONT LABEL GRAPHW 'SIZE)
                              "Change this NGroup's font size.")
                       (|Face| (CHANGE.NGROUP.FONT LABEL GRAPHW 'FACE)
                              "Change this NGroup's font face.")))
         (|Show Font| (SHOW.NGROUP.FONT LABEL GRAPHW)
                "Show this NGroup's FONT.")
         (|Change Format| (CHANGE.NGROUP.FORMAT LABEL GRAPHW)
                "Change this NGroup's entire FORMAT."
                (SUBITEMS (|Delimiter Before| (CHANGE.NGROUP.FORMAT LABEL GRAPHW 'TXTBEFORE)
                                 "Change the delimiter preceding this NGroup.")
                       (|Display Type| (CHANGE.NGROUP.FORMAT LABEL GRAPHW 'DISPLAY)
                              "Change how this NGroup is displayed.")
                       (|Delimiter After| (CHANGE.NGROUP.FORMAT LABEL GRAPHW 'TXTAFTER)
                              "Change the delimiter following this NGroup.")
                       (|Abbreviate Level| (CHANGE.NGROUP.FORMAT LABEL GRAPHW 'ABBREVVAL)
                              "Specify the starting level of this NGroup value.")
                       (|Starting Value| (CHANGE.NGROUP.FORMAT LABEL GRAPHW 'START)
                              "Change this NGroup's starting value.")
                       (|Table-Of-Contents| (CHANGE.NGROUP.FORMAT LABEL GRAPHW 'TOC)
                              "Include this NGroup in the Table-Of-Contents.")
                       \,@
                       (AND (MANUALINDEX.ENABLED? (WINDOWPROP GRAPHW 'TWINDOW))
                            (LIST (LIST '|Manual Index| (FUNCTION (CHANGE.NGROUP.FORMAT LABEL GRAPHW
                                                                         'MANINDEX))
                                        "Include this NGroup in the Manual Index page numbers.")))))
         (|Show Format| (SHOW.NGROUP.FORMAT LABEL GRAPHW)
                "Show this NGroup's FORMAT.")))

(RPAQQ NGROUP.INSERTED.MENU.ITEMS
       ((|Change Font| (CHANGE.NGROUP.FONT REF.TYPE GRAPHW NIL NGROUP.OBJ)
               "Change this NGroup's entire FONT."
               (SUBITEMS (|Family| (CHANGE.NGROUP.FONT REF.TYPE GRAPHW 'FAMILY NGROUP.OBJ)
                                "Change this NGroup's font family.")
                      (|Size| (CHANGE.NGROUP.FONT REF.TYPE GRAPHW 'SIZE NGROUP.OBJ)
                             "Change this NGroup's font size.")
                      (|Face| (CHANGE.NGROUP.FONT REF.TYPE GRAPHW 'FACE NGROUP.OBJ)
                             "Change this NGroup's font face.")))
        (|Show Font| (SHOW.NGROUP.FONT REF.TYPE GRAPHW NGROUP.OBJ)
               "Show this NGroup's FONT.")
        (|Change Format| (CHANGE.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ STREAM WINDOW)
               "Change this NGroup's entire FORMAT."
               (SUBITEMS (|Delimiter Before| (CHANGE.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ 
                                                    STREAM WINDOW 'TXTBEFORE)
                                "Change the delimiter preceding this NGroup.")
                      (|Display Type| (CHANGE.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ STREAM 
                                             WINDOW 'DISPLAY)
                             "Change how this NGroup is displayed.")
                      (|Delimiter After| (CHANGE.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ STREAM 
                                                WINDOW 'TXTAFTER)
                             "Change the delimiter following this NGroup.")
                      (|Abbreviate Level| (CHANGE.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ STREAM 
                                                 WINDOW 'ABBREVVAL)
                             "Specify the starting level of this NGroup value.")
                      (|Text Before| (CHANGE.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ STREAM WINDOW
                                            'BEFORE#TXT)
                             "Change the text preceding this NGroup.")
                      (|Text After| (CHANGE.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ STREAM WINDOW
                                           'AFTER#TXT)
                             "Change the text following this NGroup.")))
        (|Show Format| (SHOW.INSERTED.NGROUP.FORMAT REF.TYPE NGROUP.OBJ STREAM WINDOW)
               "Show this NGroup's FORMAT.")))

(RPAQQ NGROUP.INSERTED.NOTAG.ITEMS ((|Define Tag| (NGROUP.DEFINE.TAG REF.TYPE WINDOW NGROUP.OBJ)
                                           "Define a TAG for this NGroup.")))

(RPAQQ NGROUP.INSERTED.TAG.ITEMS ((|Change Tag| (NGROUP.DEFINE.TAG REF.TYPE WINDOW NGROUP.OBJ)
                                         "Change this NGroup's TAG.")
                                  (|Delete Tag| (NUMBER.DELETE.TAG WINDOW NGROUP.OBJ)
                                         "Delete this NGroup's TAG.")
                                  (|Show Tag| (NGROUP.SHOW.TAG REF.TYPE WINDOW NGROUP.OBJ)
                                         "Show this NGroup's TAG.")))

(FILESLOAD (COMPILED SYSLOAD)
       TMAX)

(RPAQ? \\NUMBEROBJ.IMAGEFNS
       (IMAGEFNSCREATE (FUNCTION NUMBER.DISPLAYFN)
              (FUNCTION NUMBER.IMAGEBOXFN)
              (FUNCTION NUMBER.PUTFN)
              (FUNCTION NUMBER.GETFN)
              (FUNCTION NUMBER.COPYFN)
              (FUNCTION NUMBER.BUTTONEVENTINFN)
              (FUNCTION NILL)
              (FUNCTION NILL)
              (FUNCTION NILL)
              (FUNCTION XREF.WHENDELETEDFN)
              (FUNCTION NILL)
              (FUNCTION NILL)
              (FUNCTION NUMBER.PREPRINTFN)))
(DECLARE\: EVAL@COMPILE DONTCOPY 
(DECLARE\: EVAL@COMPILE

(RECORD NGCOUNTER (NCOUNT . ANCESTRY))

(RECORD NGTEMPLATE (NG.CHARTYPE NG.TEXT-AFTER NG.START NG.ADDTOTOC NG.CURRENTVAL NG.MANUALINDEX 
                          NG.TEXT-BEFORE))

(RECORD NUMBEROBJ (REF.TYPE NUMSTRING USE NGROUP.MOTHER TEMPLATE UPDATED.OBJ TEXT.AFTER# PAGE.NUMBER
                         FONT TEXT.BEFORE# ABBREV-VAL))
)
)
(DECLARE\: DONTCOPY
  (FILEMAP (NIL (2562 18335 (NUMBEROBJ 2572 . 3678) (NUMBEROBJP 3680 . 4220) (NGROUPP 4222 . 4576) (
NUMBER.DISPLAYFN 4578 . 7583) (NUMBER.PREPRINTFN 7585 . 8717) (NUMBER.IMAGEBOXFN 8719 . 11110) (
NUMBER.PUTFN 11112 . 12284) (NUMBER.GETFN 12286 . 14471) (NUMBER.COPYFN 14473 . 16156) (
NUMBER.BUTTONEVENTINFN 16158 . 18063) (NUMBEROBJ.TEDIT-TO-TEX-FN 18065 . 18333)) (18336 27507 (
COPY.NGROUP.BRANCH 18346 . 19802) (DUMP.NGROUP.GRAPH 19804 . 20680) (NGROUP.BUTTONEVENTINFN 20682 . 
21382) (NGROUP.DEFINE.TAG 21384 . 21987) (NUMBER.DELETE.TAG 21989 . 22248) (NGROUP.SHOW.TAG 22250 . 
22572) (CHANGE.INSERTED.NGROUP.FORMAT 22574 . 24369) (CHANGE.NGROUP.FORMAT.#TEXT 24371 . 25957) (
SHOW.INSERTED.NGROUP.FORMAT 25959 . 27505)))))
STOP
