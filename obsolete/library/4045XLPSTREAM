(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "IL")(FILECREATED "20-Jan-93 13:38:44" |{DSK}<python>lde>lispcore>library>4045XLPSTREAM.;2| 141841       |changes| |to:|  (RECORDS 4045XLP.PARAMETERS SIXEL 4045XLPDATA 4045XLPBITMAP)      |previous| |date:| "11-Jun-90 14:05:58" |{DSK}<python>lde>lispcore>library>4045XLPSTREAM.;1|); Copyright (c) 1985, 1986, 1987, 1988, 1990, 1993 by Venue & Xerox Corporation.  All rights reserved.(PRETTYCOMPRINT 4045XLPSTREAMCOMS)(RPAQQ 4045XLPSTREAMCOMS        ((XCL:FILE-ENVIRONMENTS "4045XLPSTREAM")        (VARS (4045XLPSTREAM.VERSION "3.0"))        (* |;;;| "Main stream functions")        (FNS \\4045XLPINIT OPEN4045XLPSTREAM \\CLOSE4045XLPSTREAM 4045.OUTCHARFN 4045.OUTCHARFN1)        (* |;;;| "Font methods")        (FNS \\CREATE4045FONT \\CREATECHARSET.4045 \\SEARCH4045FONTS \\CHANGECHARSET.4045XLP)        (* |;;;| "DSPxx fns")        (FNS \\DSPXPOSITION.4045XLP \\DSPYPOSITION.4045XLP \\DSPBOTTOMMARGIN.4045XLP              \\DSPTOPMARGIN.4045XLP \\DSPLEFTMARGIN.4045XLP \\DSPRIGHTMARGIN.4045XLP              \\DSPCLIPPINGREGION.4045XLP \\DSPSPACEFACTOR.4045XLP \\DSPLINEFEED.4045XLP              \\DSPFONT.4045)        (* |;;;| "Stream manipulation functions")        (FNS BEGINPAGE.4045XLP ENDPAGE.4045XLP NEWPAGE.4045XLP NEWLINE.4045XLP SETXY.4045XLP              \\MOVETO.4045XLP \\BOLDMODE.4045XLP \\MEDIUMMODE.4045XLP \\FIXLINELENGTH.4045XLP              \\CHARWIDTH.4045XLP \\STRINGWIDTH.4045XLP)        (* |;;;| "Misc.  stream functions")        (FNS |CreateImageData.4045XLP| |FixMargins.4045XLP| |4045XLP.Error| |4045XLPPageNumber|              |4045XLPIn2700ModeP| \\SEND4045XLPCOMMAND |MakePosition.4045XLP| 4045XLP.SCALEBRUSH              |Landscape.4045XLP| |SendFileHeading.4045XLP| |4045XLP.Print.Heading|)        (* |;;;| "Bitmap Functions")        (FNS |4045XLP.EncodedSixelofBitmap| \\BLTSHADE.4045XLP \\4045XLP.ROUND.BITMAP              \\SCALEDBITBLT.4045XLP \\GENERICBITBLT.4045XLP \\BITBLT.4045XLP \\BLACKBOX.4045XLP              \\WINDOWCMD.4045XLP)                                                             (* \; "Page bitmap fns")        (FNS 4045XLP.RESET 4045XLP.GETBMSTR 4045XLP.GET.BITMAP 4045XLP.RELEASE.BITMAP              |\\ScaledBltBigBitmap.4045XLP| |ChangePageBitmap.4045XLP|)        (* |;;;| "Drawing algorithms")        (FNS \\DRAWPOINT.4045XLP \\DRAWARC.4045XLP \\DRAWCIRCLE.4045XLP \\FILLCIRCLE.4045XLP              \\DRAWPOLYGON.4045XLP \\FILLPOLYGON.4045XLP \\DRAWELLIPSE.4045XLP \\DRAWCURVE.4045XLP              \\DRAWLINE.4045XLP \\DRAWLINE1.4045XLP)        (* |;;;| "Default Printing Code")        (FNS 4045XLPFILEP 4045XLP.BITMAPSCALE 4045XLPPRINT 4045XLPBITMAPFILE 4045XLP.PRINTTEXT              4045XLP.HOSTNAMEP 4045XLP.CHECK.OUTPUTFILE 4045XLP.PRINTHEADERPAGE              4045XLP.PRINT.ERRORPAGE 4045XLP.PROMPT)        (* |;;;| "Port initializing and parameter setting code")        (FNS 4045XLP.HELP.GET.PORT 4045XLP.GET.PORT 4045XLP.RELEASE.PORT 4045XLP.INIT.PORT              4045XLP.INIT.RS232 4045XLP.INIT.TTY 4045XLP.INIT.CENTRONICS 4045XLP.SET.PARAMETERS              4045XLP.GET.PARAMETERS)        (FNS 4045XLP.CHANGE.MODE 4045XLP.SETUP-DEFAULT-FONTS)        (FUNCTIONS 4045XLP.CHANGE.TO.USA.MODE 4045XLP.CHANGE.TO.INT.MODE)        (* |;;;| "Records")        (RECORDS 4045XLP.PARAMETERS)        (DECLARE\: EVAL@LOAD DONTCOPY (RECORDS SIXEL 4045XLPDATA 4045XLPBITMAP)               (FUNCTIONS |4045XLP.Set.Pagenumber| |4045XLP.Set.Errorlist| |4045XLP.Clear.Errorlist|                      |4045XLP.Set.LandscapeMode| |4045XLP.Set.Heading| |4045XLP.Get.Heading|                       |\\4045XLPBackingStream| 4045XLP.HAS.BITMAP |4045XLPPage| |4045XLPGetErrors|                       |4045XLPLandscapeP|))        (INITRECORDS 4045XLPDATA SIXEL 4045XLPBITMAP)        (* |;;;| "Variables and initialization")                (* |;;| "The NSTO4045Cxxx arrays contain the mappings from the charset specified by xxx to the (one) charset of 4045.0 C0 allows charcodes <32 for special commands ie.  esc's and LF's etc.")        (VARS \\ASCIITOASCII \\NSTO4045NULL \\NSTO4045C41 \\NSTO4045C357 \\NSTO4045C356               \\NSTO4045C361 \\NSTO4045C46 \\NSTO4045C0 \\4045WIDTHSARRAY (LINESPERPAGE 57)              (4045XLP.FONTS '(DEFAULTFONT (TITAN 10)                                     ITALICFONT                                     (TITAN 10)                                     BOLDFONT                                     (TITAN 10 BRR)                                     LITTLEFONT                                     (TITAN 10)                                     TINYFONT                                     (TITAN 10)                                     BIGFONT                                     (TITAN 10 BRR)                                     COMMENTFONT                                     (TITAN 10)                                     TEXTFONT                                     (TITAN 10))))        (INITVARS (4045XLP.MONITOR (CREATE.MONITORLOCK '4045XLP))               (\\4045XLP.BITMAPREC)               (4045XLP.DEFAULTS))        (ADDVARS (PRINTERTYPES ((4045XLP)                                (CANPRINT (4045XLP))                                (STATUS TRUE)                                (SEND 4045XLPPRINT)                                (HOSTNAMEP 4045XLP.HOSTNAMEP)                                (BITMAPSCALE 4045XLP.BITMAPSCALE)                                (BITMAPFILE (4045XLPBITMAPFILE FILE BITMAP SCALEFACTOR REGION                                                    ROTATION TITLE))))               (PRINTFILETYPES (4045XLP (TEST 4045XLPFILEP)                                      (EXTENSION (4045XLP))                                      (CONVERSION (TEXT 4045XLP.PRINTTEXT TEDIT                                                        (LAMBDA (FILE PFILE)                                                               (SETQ FILE (OPENTEXTSTREAM FILE))                                                               (TEDIT.FORMAT.HARDCOPY FILE PFILE T                                                                       NIL NIL NIL '4045XLP)                                                               (CLOSEF? FILE)                                                               PFILE)                                                        TEDIT \\TEDIT.HARDCOPY)))))        (* |;;;| "Initializing stuff")        (GLOBALVARS 4045XLP-GO-TO-LANDSCAPE-COMMAND |4045XLPDefaultRegionLeft|                |4045XLPDefaultPageWidth| |4045XLPDefaultPageHeight| |4045XLPDefaultLineFeedHeight|                |4045XLPLandscapePageBMRaster| |4045XLPLandscapePageBMWidth|                |4045XLPLandscapePageBMHeight| |4045XLPDefaultLandscapeCharsPerLine|                |4045XLPDefaultLandscapeTop| |4045XLPDefaultLandscapeRight| |4045XLPLandscapeHeading|               |4045XLPDefaultLandscapeRegion| |4045XLPDefaultLandscapeFontHeight|                |4045XLPDefaultLandscapeFontAscent| |4045XLPDefaultLandscapeFontDescent|                |4045XLPDefaultLandscapeFontBox| |4045XLPDefaultLandscapeFontDX|                |4045XLPDefaultLandscapeFontWidths| |4045XLPPortraitHeading|                |4045XLPPortraitPageBMRaster| |4045XLPPortraitPageBMWidth|                |4045XLPPortraitPageBMHeight| |4045XLPDefaultPortraitCharsPerLine|                |4045XLPDefaultPortraitTop| |4045XLPDefaultPortraitRight|                |4045XLPDefaultPortraitRegion| |4045XLPDefaultPortraitFontHeight|                |4045XLPDefaultPortraitFontAscent| |4045XLPDefaultPortraitFontDescent|                |4045XLPDefaultPortraitFontBox| |4045XLPDefaultPortraitFontDX|                |4045XLPDefaultPortraitFontWidths| |4045XLPPageBitmapPages|)        (DECLARE\: EVAL@COMPILE DONTCOPY (CONSTANTS (|4045XLPFileHeading| (CONCAT (CHARACTER                                                                                   (CHARCODE ESC))                                                                                 "+P"                                                                                 (CHARACTER                                                                                  (CHARCODE LF))                                                                                 (CHARACTER                                                                                  (CHARCODE ESC))                                                                                 "+P"                                                                                 (CHARACTER                                                                                  (CHARCODE LF))                                                                                 (CHARACTER                                                                                  (CHARCODE ESC))                                                                                 "+X"                                                                                 (CHARACTER                                                                                  (CHARCODE LF))))                                                (|4045XLPDefaultScale| (FQUOTIENT 300 72))                                                (|4045XLPDefaultSpaceFactor| 1)                                                (|4045XLPDefaultRegionBottom| 100)                                                (|4045XLPDefaultXPosition| 0)                                                (|4045XLPDefaultYPosition| 0)                                                (|4045XLPPageBitmapPages| 533)                                                (4045XLP.DOTSPERPOINT (FQUOTIENT 300 72))                                                4045XLP.DOTSPERMICA))        (DECLARE\: DONTEVAL@LOAD DOCOPY (P (\\4045XLPINIT)                                           (|pushnew| DEFAULTPRINTINGHOST '4045XLP)                                           (SETQ DEFAULTPRINTERTYPE '4045XLP)))        (PROP FILETYPE 4045XLPSTREAM)))(XCL:DEFINE-FILE-ENVIRONMENT "4045XLPSTREAM" :PACKAGE "IL"   :READTABLE "XCL"   :COMPILER :COMPILE-FILE)(RPAQ 4045XLPSTREAM.VERSION "3.0")(* |;;;| "Main stream functions")(DEFINEQ(\\4045xlpinit  (lambda nil                                            (* \; "Edited 14-Jan-88 17:23 by Snow")    (declare (globalvars \\4045xlpimageops 4045xlpfdev imagestreamtypes 4045xlp.defaults                         \\4045xlp.bitmaprec))    (setq \\4045xlpimageops (|create| imageops                                   imagetype _ '4045xlp                                   imclosefn _ (function \\close4045xlpstream)                                   imxposition _ (function \\dspxposition.4045xlp)                                   imyposition _ (function \\dspyposition.4045xlp)                                   imfont _ (function \\dspfont.4045)                                   imleftmargin _ (function \\dspleftmargin.4045xlp)                                   imrightmargin _ (function \\dsprightmargin.4045xlp)                                   imlinefeed _ (function \\dsplinefeed.4045xlp)                                   imdrawline _ (function \\drawline.4045xlp)                                   imdrawcurve _ (function \\drawcurve.4045xlp)                                   imdrawarc _ (function \\drawarc.4045xlp)                                   imdrawpoint _ (function \\drawpoint.4045xlp)                                   imdrawcircle _ (function \\drawcircle.4045xlp)                                   imfillcircle _ (function \\fillcircle.4045xlp)                                   imdrawellipse _ (function \\drawellipse.4045xlp)                                   imdrawpolygon _ (function \\drawpolygon.4045xlp)                                   imfillpolygon _ (function \\fillpolygon.4045xlp)                                   imbltshade _ (function \\bltshade.4045xlp)                                   imbitblt _ (function \\bitblt.4045xlp)                                   immoveto _ (function \\moveto.4045xlp)                                   imscale _ (function (lambda nil                                                         (constant (fquotient 300 72))))                                   imterpri _ (function newline.4045xlp)                                   imbottommargin _ (function \\dspbottommargin.4045xlp)                                   imtopmargin _ (function \\dsptopmargin.4045xlp)                                   imfontcreate _ '4045xlp                                   imnewpage _ (function newpage.4045xlp)                                   imspacefactor _ (function \\dspspacefactor.4045xlp)                                   imstringwidth _ (function \\stringwidth.4045xlp)                                   imcharwidth _ (function \\charwidth.4045xlp)                                   imscaledbitblt _ (function \\scaledbitblt.4045xlp)                                   imclippingregion _ (function \\dspclippingregion.4045xlp)                                   imbitmapsize _ (function (lambda (stream bitmap dimension)                                                              (selectq dimension                                                                  (width (times 4 (bitmapwidth bitmap                                                                                         )))                                                                  (height (times 4 (bitmapheight                                                                                    bitmap)))                                                                  (nil (cons (times 4 (bitmapwidth                                                                                       bitmap))                                                                             (times 4 (bitmapheight                                                                                       bitmap))))                                                                  (\\illegal.arg dimension))))))    (setq 4045xlpfdev (|create| fdev                             devicename _ (list '4045xlp 'printer)                             resetable _ nil                             randomaccessp _ nil                             pagemapped _ nil                             closefile _ (function nill)                             deletefile _ (function nill)                             getfileinfo _ (function nill)                             openfile _ (function (lambda (name access recog otherinfo fdev)                                                    name))                             readpages _ (function \\illegal.deviceop)                             setfileinfo _ (function nill)                             generatefiles _ (function \\generatenofiles)                             truncatefile _ (function nill)                             writepages _ (function \\illegal.deviceop)                             getfilename _ (function (lambda (name recog fdev)                                                       name))                             reopenfile _ (function (lambda (name)                                                      name))                             eventfn _ (function nill)                             directorynamep _ (function nill)                             hostnamep _ (function nill)                             bin _ (function \\illegal.deviceop)                             bout _ (function 4045.outcharfn)                             peekbin _ (function \\illegal.deviceop)                             backfileptr _ (function \\pagedbackfileptr)                             blockin _ (function \\illegal.deviceop)                             blockout _ (function \\nonpagedbouts)))    (|push| imagestreamtypes '(4045xlp (openstream open4045xlpstream)                                         (fontcreate \\create4045font)                                         (fontsavailable \\search4045fonts)                                         (createcharset \\createcharset.4045)))(* |;;;| "Set all the fontclasses up so text printing works ok.")    (4045xlp.setup-default-fonts)                    (* |;;| "set up the mode vars.")    (4045xlp.change.mode "USA")(* |;;;| "create the default initialization codes for using the stream")    (cond       (4045xlp.defaults)       (t (setq 4045xlp.defaults           (|create| 4045xlp.parameters                  port _ '{rs232}                  language _ 2700                  slug _ nil                  messagestream _ promptwindow                  printerrors _ nil                  printheader _ nil                  windowtitle _ nil                  landscape _ nil))          (4045xlp.help.get.port)))(* |;;;| "make SURE you only do this once!!!")    (cond       (\\4045xlp.bitmaprec)       (t (setq \\4045xlp.bitmaprec (|create| 4045xlpbitmap                                           bitmapdirty _ nil                                           monitor _ (create.monitorlock)                                           bitmap _                                           (|create| bitmap                                                  bitmapbase _ (\\allocpageblock                                                                       |4045XLPPageBitmapPages|)                                                  bitmaprasterwidth _ |4045XLPPortraitPageBMRaster|                                                  bitmapwidth _ |4045XLPPortraitPageBMWidth|                                                  bitmapheight _ |4045XLPPortraitPageBMHeight|)))))    nil))(OPEN4045XLPSTREAM  (LAMBDA (4045XLPFILE OPTIONS)                        (* \; "Edited 11-Jun-90 13:57 by mitani")(* |;;;| "Opens a 4045XLP stream, to which user can perform DIG operations")    (DECLARE (GLOBALVARS 4045XLP.DEFAULTS \\4045XLPIMAGEOPS 4045XLPFDEV))    (LET* ((|LandscapeP| (COND                            ((AND (NOT (LISTGET OPTIONS 'PORTRAIT))                                  (OR (LISTGET OPTIONS 'LANDSCAPE)                                      (|ffetch| (4045XLP.PARAMETERS LANDSCAPE) |of|                                                                                      4045XLP.DEFAULTS                                             )))                             T)                            (T NIL)))           (4045XLPDEFAULTFONT (COND                                  (|LandscapeP| (FONTCREATE DEFAULTFONT NIL NIL 90 '4045XLP))                                  (T (FONTCREATE DEFAULTFONT NIL NIL NIL '4045XLP))))           (4045XLPSTREAM (|create| STREAM                                 DEVICE _ 4045XLPFDEV                                 ACCESS _ 'OUTPUT                                 USERCLOSEABLE _ T                                 OUTCHARFN _ (FUNCTION 4045.OUTCHARFN)                                 IMAGEOPS _ \\4045XLPIMAGEOPS                                 IMAGEDATA _ (|CreateImageData.4045XLP| |LandscapeP|)                                 F1 _ (OPENSTREAM 4045XLPFILE 'OUTPUT NIL '((TYPE BINARY)))                                 F5 _ NIL                                 LINELENGTH _ (COND                                                 (|LandscapeP| |4045XLPDefaultLandscapeCharsPerLine|)                                                 (T |4045XLPDefaultPortraitCharsPerLine|)))))                                                             (* \;                                                            "Set the fullfilename up correctly")          (|replace| (STREAM FULLFILENAME) |of| 4045XLPSTREAM |with| (FULLNAME                                                                                  (                                                                             |\\4045XLPBackingStream|                                                                                   4045XLPSTREAM)))(* |;;;| "send the header string so we know it's a 4045xlp file to the file")          (|SendFileHeading.4045XLP| (|\\4045XLPBackingStream| 4045XLPSTREAM))                                                             (* \;                                                            "Set up the stream properties correctly")          (|4045XLP.Error| 'CLEAR 4045XLPSTREAM)          (|4045XLPPageNumber| 0 4045XLPSTREAM)          (|4045XLP.Set.Heading| 4045XLPSTREAM (COND                                                  ((EQ (LISTGET OPTIONS 'HEADING)                                                       T)                                                   (CONCAT (OR (LISTGET OPTIONS 'DOCUMENT.NAME)                                                               (FULLNAME 4045XLPFILE))                                                          "     "                                                          (GETFILEINFO 4045XLPFILE 'CREATIONDATE)))                                                  (T (LISTGET OPTIONS 'HEADING))))                                                             (* \;                                                            "Set the stream mode (default is 2700)")          (STREAMPROP 4045XLPSTREAM '2700MODE (EQ (OR (LISTGET OPTIONS 'MODE)                                                      (|ffetch| (4045XLP.PARAMETERS LANGUAGE)                                                         |of| 4045XLP.DEFAULTS))                                                  2700))     (* \;                                         "Make sure the stream gets positioned and set up correctly")          (|FixMargins.4045XLP| 4045XLPSTREAM |LandscapeP| (|4045XLPIn2700ModeP|                                                                       4045XLPSTREAM))          (COND             (|LandscapeP| (|Landscape.4045XLP| 4045XLPSTREAM (|4045XLPIn2700ModeP|                                                                          4045XLPSTREAM))))          (DSPFONT 4045XLPDEFAULTFONT 4045XLPSTREAM)          (DSPLINEFEED (FONTPROP 4045XLPDEFAULTFONT 'HEIGHT)                 4045XLPSTREAM)          (BEGINPAGE.4045XLP 4045XLPSTREAM)          (\\MEDIUMMODE.4045XLP 4045XLPSTREAM)          4045XLPSTREAM)))(\\close4045xlpstream  (lambda (4045xlpstream)                                (* \; "Edited 14-Jan-88 16:50 by Snow")    (declare (globalvars 4045xlp.defaults))    (endpage.4045xlp 4045xlpstream)    (and (|ffetch| (4045xlp.parameters printerrors) |of| 4045xlp.defaults)         (4045xlp.print.errorpage 4045xlpstream)         (endpage.4045xlp 4045xlpstream))                    (* |;;| "reset the printer.")    (\\send4045xlpcommand "+X" (|\\4045XLPBackingStream| 4045xlpstream))    (closef (|\\4045XLPBackingStream| 4045xlpstream))    4045xlpstream))(4045.outcharfn  (lambda (4045xlpstream charcode)                  (* \; "Edited 22-Jan-87 10:54 by snow.pasa")(* |;;;| "Send out a character to the stream.  outcharfn1 is the ns-4045 translator and code that does the actual character output.")    (declare (globalvars 4045xlp.defaults))    (let ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream))          nscode)         (setq nscode (cond                         ((\\fatcharcodep charcode)                          charcode)                         (t (\\getbase (|ffetch| 4045xlpnstranstable |of| 4045xlpdata)                                   charcode))))              (* \; "Select on NSCODE.")         (selcharq nscode              (^f)              (eol (newline.4045xlp 4045xlpstream))              (lf (\\dspxposition.4045xlp 4045xlpstream (prog1 (\\dspxposition.4045xlp                                                                           4045xlpstream)                                                                   (newline.4045xlp 4045xlpstream                                                                          ))))              (^l (newpage.4045xlp 4045xlpstream))              (4045.outcharfn1 nscode 4045xlpstream 4045xlpdata)))))(4045.outcharfn1  (lambda (nscode 4045xlpstream 4045xlpdata)        (* \; "Edited 22-Jan-87 10:55 by snow.pasa")(* |;;;| "this is a printable character, so translate the ns code into a code that the 4045 can handle.")    (declare (globalvars 4045xlp.defaults))    (let ((backingstream (|\\4045XLPBackingStream| 4045xlpstream))          (slug (numberp (|ffetch| (4045xlp.parameters slug) |of| 4045xlp.defaults)))          (clippingregion (|ffetch| (4045xlpdata 4045xlpclippingregion) |of| 4045xlpdata))          newxpos ypos transcode)                            (* \;                        "first change the charset of the stream to pick the right translation block")         (cond            ((neq (\\charset nscode)                  (|ffetch| (4045xlpdata 4045xlpcharset) |of| 4045xlpdata))             (\\changecharset.4045xlp 4045xlpdata (\\charset nscode))))                                                             (* \;                                "now translate the charcode from NS to a 4045 recognizable charcode")         (setq transcode (\\getbase (|ffetch| (4045xlpdata 4045xlpcstranstable) |of|                                                                                           4045xlpdata                                           )                                (\\char8code nscode)))         (cond            ((eq transcode 255)                    (* |;;| "The character has translated to a slug, see if the user wants to save the printing errors, and also if he has redefined the slug character.")             (and (|ffetch| (4045xlp.parameters printerrors) |of| 4045xlp.defaults)                  (|4045XLP.Error| nscode 4045xlpstream))             (and slug (setq transcode slug))))              (* \;                                                       "Increment the xposition the correct ammount")         (setq newxpos (|add| (|ffetch| (4045xlpdata 4045xlpxpos) |of| 4045xlpdata)                              (selcharq (\\char8code transcode)                                   (space (|ffetch| (4045xlpdata 4045xlpspacewidth) |of|                                                                                        4045xlpdata))                                   (\\fgetwidth (|ffetch| (4045xlpdata 4045xlpwidthscache)                                                   |of| 4045xlpdata)                                          (\\char8code transcode)))))         (|if| (igreaterp newxpos (|ffetch| (4045xlpdata 4045xlpright) |of| 4045xlpdata))             |then| (newline.4045xlp 4045xlpstream))         (setq ypos (|ffetch| (4045xlpdata 4045xlpypos) |of| 4045xlpdata))         (|if| (and (ilessp newxpos (|ffetch| (region right) |of| clippingregion))                        (igreaterp newxpos (|ffetch| (region left) |of| clippingregion))                        (ilessp ypos (|ffetch| (region top) |of| clippingregion))                        (igreaterp ypos (|ffetch| (region bottom) |of| clippingregion)))             |then|                                      (* \;                                       "within the clipping region, so reset the character position")                   (|freplace| (stream charposition) |of| 4045xlpstream                      |with| (add1 (|ffetch| (stream charposition) |of| 4045xlpstream)))                                                              (* \;     "accented characters have their accent character codes stored as the charset of the character.")                   (and (not (zerop (\\charset transcode)))                        (bout backingstream (\\charset transcode)))                   (bout backingstream (\\char8code transcode)))))))(* |;;;| "Font methods")(DEFINEQ(\\create4045font  (lambda (family size fontface rotation device)         (* \; "Edited 14-Jan-88 16:58 by Snow")                    (* |;;| "Creates a font descriptor for a 4045 font for hardcopy.  Doesn't matter what font we are trying to create, will always create this descriptor, but with different names.")    (declare (globalvars \\asciitons \\4045widthsarray))    (let (csinfo fd)         (cond            ((fmemb rotation '(90 270))             (setq fd              (|create| fontdescriptor                     fontdevice _ device                     fontfamily _ family                     fontsize _ size                     fontface _ fontface                     \\sffacecode _ (\\facecode fontface)                     rotation _ rotation                     otherdevicefontprops _ (|ffetch| (arrayp base) |of| \\asciitons)                     fontscale _ |4045XLPDefaultScale|                     fbbox _ |4045XLPDefaultLandscapeFontBox|                     |\\SFDescent| _ |4045XLPDefaultLandscapeFontDescent|                     fbbdx _ |4045XLPDefaultLandscapeFontDX|                     |\\SFHeight| _ |4045XLPDefaultLandscapeFontHeight|                     |\\SFAscent| _ |4045XLPDefaultLandscapeFontAscent|))             (setq csinfo (|create| charsetinfo                                 charsetascent _ |4045XLPDefaultLandscapeFontAscent|                                 charsetdescent _ |4045XLPDefaultLandscapeFontDescent|                                 widths _ (|ffetch| (arrayp base) |of|                                                                   |4045XLPDefaultLandscapeFontWidths|                                                 ))))            (t (setq csinfo (|create| charsetinfo                                   charsetascent _ |4045XLPDefaultPortraitFontAscent|                                   charsetdescent _ |4045XLPDefaultPortraitFontDescent|                                   widths _ (|ffetch| (arrayp base) |of|                                                                    |4045XLPDefaultPortraitFontWidths|                                                   )))               (setq fd                (|create| fontdescriptor                       fontdevice _ device                       fontfamily _ family                       fontsize _ size                       fontface _ fontface                       \\sffacecode _ (\\facecode fontface)                       rotation _ rotation                       otherdevicefontprops _ (|ffetch| (arrayp base) |of| \\asciitons)                       fontscale _ |4045XLPDefaultScale|                       fbbox _ |4045XLPDefaultPortraitFontBox|                       |\\SFDescent| _ |4045XLPDefaultPortraitFontDescent|                       fbbdx _ |4045XLPDefaultPortraitFontDX|                       |\\SFHeight| _ |4045XLPDefaultPortraitFontHeight|                       |\\SFAscent| _ |4045XLPDefaultPortraitFontAscent|))))         (\\rplptr (|ffetch| (fontdescriptor fontcharsetvector) |of| fd)                0 csinfo)         fd)))(\\createcharset.4045  (lambda (family psize face rotation device charset)                                                        (* \; "Edited 22-Jan-87 10:55 by snow.pasa")(* |;;;| "Build the CHARSETINFO for a 4045 font.")    (let (csinfo)         (cond            ((fmemb rotation '(90 270))             (setq csinfo (|create| charsetinfo                                 widths _ (|ffetch| (arrayp base) |of|                                                                   |4045XLPDefaultLandscapeFontWidths|                                                 )                                 charsetascent _ |4045XLPDefaultLandscapeFontAscent|                                 charsetdescent _ |4045XLPDefaultLandscapeFontDescent|)))            (t (|create| charsetinfo                      widths _ (|ffetch| (arrayp base) |of|                                                                  |4045XLPDefaultPortraitFontWidths|)                      charsetascent _ |4045XLPDefaultPortraitFontAscent|                      charsetdescent _ |4045XLPDefaultPortraitFontDescent|)))         csinfo)))(\\search4045fonts  (lambda (family psize face rotation device)       (* \; "Edited 22-Jan-87 10:56 by snow.pasa")(* |;;;| "returns a list of the form (family size face rotation 4045xlp) for any font matching the specs.  * is used as wildcard.")    (declare (globalvars displayfontdirectories))    (|bind| fontsfound thisfont (filenamepattern _ (\\fontfilename family psize face))       |for| dir |inside| displayfontdirectories       |do| (|for| fontfile |in| (directory (packfilename 'directory dir 'body                                                                filenamepattern))                   |when| (progn (setq thisfont (\\fontinfofromfilename fontfile device))                                     (and (or (eq family '*)                                              (eq family (car thisfont)))                                          (or (eq psize '*)                                              (eq psize (cadr thisfont)))                                          (or (eq face '*)                                              (equal face (caddr thisfont)))))                   |do|                     (* |;;| "make sure the file is appropriate e.g.  the directory pattern for CLASSIC if SIZE is * will match CLASSICTHIN10 as well.")                         (or (member thisfont fontsfound)                             (setq fontsfound (cons thisfont fontsfound)))) |finally|                                                                            (return fontsfound))))(\\changecharset.4045xlp  (lambda (4045xlpdata charset)                          (* \; "Edited 14-Jan-88 17:25 by Snow")    (declare (globalvars \\nsto4045null \\nsto4045c357 \\nsto4045c356 \\nsto4045c46 \\nsto4045c41                         \\nsto4045c0 \\nsto4045c361))                    (* |;;| "change the transtable for different charsets.  the widths are loaded only once.")    (let (transtable)         (setq transtable (selectq charset                              (0 \\nsto4045c0)                              (33 \\nsto4045c41)                              (38 \\nsto4045c46)                              (238 \\nsto4045c356)                              (239 \\nsto4045c357)                              (241 \\nsto4045c361)                              \\nsto4045null))         (|freplace| (4045xlpdata 4045xlpcstranstable) |of| 4045xlpdata            |with| (|ffetch| (arrayp base) |of| transtable))         (|freplace| 4045xlpcharset |of| 4045xlpdata |with| charset)))))(* |;;;| "DSPxx fns")(DEFINEQ(\\dspxposition.4045xlp  (lambda (4045xlpstream xposition)                 (* \; "Edited 22-Jan-87 10:56 by snow.pasa")    (prog1 (|ffetch| (4045xlpdata 4045xlpxpos) |of| (|ffetch| (stream imagedata)                                                               |of| 4045xlpstream))           (cond              (xposition (setxy.4045xlp 4045xlpstream xposition (|ffetch| (4045xlpdata                                                                                          4045xlpypos)                                                                       |of| (|ffetch|                                                                                 (stream imagedata)                                                                                   |of|                                                                                         4045xlpstream                                                                                 ))))))))(\\dspyposition.4045xlp  (lambda (4045xlpstream yposition)                 (* \; "Edited 22-Jan-87 10:56 by snow.pasa")    (prog1 (|ffetch| (4045xlpdata 4045xlpypos) |of| (|ffetch| (stream imagedata)                                                               |of| 4045xlpstream))           (cond              (yposition (setxy.4045xlp 4045xlpstream (|ffetch| (4045xlpdata 4045xlpxpos)                                                             |of| (|ffetch| (stream imagedata                                                                                           )                                                                         |of| 4045xlpstream))                                yposition))))))(\\dspbottommargin.4045xlp  (lambda (4045xlpstream yposition)                 (* \; "Edited 22-Jan-87 10:57 by snow.pasa")    (prog1 (|ffetch| (4045xlpdata 4045xlpbottom) |of| (|ffetch| (stream imagedata)                                                                 |of| 4045xlpstream))           (cond              (yposition (|freplace| (4045xlpdata 4045xlpbottom) |of| (|ffetch|                                                                               (stream imagedata)                                                                                 |of|                                                                                        4045xlpstream)                            |with| yposition))))))(\\dsptopmargin.4045xlp  (lambda (4045xlpstream yposition)                 (* \; "Edited 22-Jan-87 10:57 by snow.pasa")    (prog1 (|ffetch| (4045xlpdata 4045xlptop) |of| (|ffetch| (stream imagedata)                                                              |of| 4045xlpstream))           (cond              (yposition (|freplace| (4045xlpdata 4045xlptop) |of| (|ffetch| (stream                                                                                          imagedata)                                                                              |of| 4045xlpstream)                            |with| yposition))))))(\\dspleftmargin.4045xlp  (lambda (4045xlpstream xposition)                 (* \; "Edited 22-Jan-87 10:57 by snow.pasa")    (prog1 (|ffetch| (4045xlpdata 4045xlpleft) |of| (|ffetch| (stream imagedata)                                                               |of| 4045xlpstream))           (cond              (xposition (|freplace| (4045xlpdata 4045xlpleft) |of| (|ffetch|                                                                             (stream imagedata)                                                                               |of| 4045xlpstream                                                                             ) |with| xposition)                     (\\fixlinelength.4045xlp 4045xlpstream))))))(\\dsprightmargin.4045xlp  (lambda (4045xlpstream xposition)                 (* \; "Edited 22-Jan-87 10:57 by snow.pasa")    (prog1 (|ffetch| (4045xlpdata 4045xlpright) |of| (|ffetch| (stream imagedata)                                                                |of| 4045xlpstream))           (cond              (xposition (|freplace| (4045xlpdata 4045xlpright) |of| (|ffetch|                                                                              (stream imagedata)                                                                                |of|                                                                                       4045xlpstream)                            |with| xposition)                     (\\fixlinelength.4045xlp 4045xlpstream))))))(\\dspclippingregion.4045xlp  (lambda (4045xlpstream region)                    (* \; "Edited 22-Jan-87 10:57 by snow.pasa")    (let ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream)))         (prog1 (|ffetch| (4045xlpdata 4045xlpclippingregion) |of| 4045xlpdata)                (and region (uninterruptably                                (|freplace| (4045xlpdata 4045xlpclippingregion) |of|                                                                                           4045xlpdata                                   |with| region)))))))(\\dspspacefactor.4045xlp  (lambda (4045xlpstream factor)                    (* \; "Edited 22-Jan-87 10:58 by snow.pasa")    (let ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream)))         (prog1 (|ffetch| (4045xlpdata 4045xlpspacefactor) |of| 4045xlpdata)                (cond                   (factor (|freplace| (4045xlpdata 4045xlpspacewidth) |of| 4045xlpdata                              |with| (fixr (times factor (\\fgetwidth (|ffetch| (4045xlpdata                                                                                                                                                                            4045xlpwidthscache                                                                                         )                                                                             |of| 4045xlpdata)                                                                    (charcode space)))))                                                             (* \;                                      "Doing the multiply first will insure that FACTOR is a number")                          (|freplace| (4045xlpdata 4045xlpspacewidth) |of| 4045xlpdata                             |with| factor)))))))(\\dsplinefeed.4045xlp  (lambda (4045xlpstream deltay)                    (* \; "Edited 22-Jan-87 11:00 by snow.pasa")(* |;;;| "sets the amount that a line feed increases the y coordinate by.")    (let ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream)))         (prog1 (|ffetch| (4045xlpdata 4045xlplinefeed) |of| 4045xlpdata)                (and deltay (cond                               ((numberp deltay)                                (|freplace| (4045xlpdata 4045xlplinefeed) |of| 4045xlpdata                                   |with| deltay))                               (t (\\illegal.arg deltay))))))))(\\dspfont.4045  (lambda (4045xlpstream font)                      (* \; "Edited 22-Jan-87 11:01 by snow.pasa")(* |;;;| "Change fonts (or return the current font) for a 4045XLP stream")    (declare (globalvars \\asciitons \\defaultcharset))    (prog ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream))           (|Landscape| (|4045XLPLandscapeP| 4045xlpstream))           oldfont)          (setq oldfont (|ffetch| (4045xlpdata 4045xlpfont) |of| 4045xlpdata))          (and (null font)               (return oldfont))          (cond             ((eq oldfont (setq font (or (\\getfontdesc font '4045xlp)                                         (fontcopy oldfont font))))                                                             (* \;                  "There was no change, or they were only asking for the old font.  Just return it.")              (return oldfont)))                             (* \;                          "Remember the new font, first checking to be sure the rotation is correct")          (cond             (|Landscape| (cond                             ((not (fmemb (fontprop font 'rotation)                                          '(90 270)))                              (setq font (fontcopy font 'rotation 90)))))             (t (cond                   ((not (eq (fontprop font 'rotation)                             0))                    (setq font (fontcopy font 'rotation 0))))))          (|freplace| (4045xlpdata 4045xlpfont) |of| 4045xlpdata |with| font)          (|freplace| (4045xlpdata 4045xlpwidthscache) |of| 4045xlpdata             |with| (|ffetch| (arrayp base) |of| (cond                                                                (|Landscape|                                                                   |4045XLPDefaultLandscapeFontWidths|                                                                       )                                                                (t |4045XLPDefaultPortraitFontWidths|                                                                   ))))          (|freplace| (4045xlpdata 4045xlpspacewidth) |of| 4045xlpdata             |with| (fixr (times (|ffetch| (4045xlpdata 4045xlpspacefactor) |of|                                                                                           4045xlpdata                                            )                                     (\\fgetwidth (|ffetch| (4045xlpdata 4045xlpwidthscache)                                                     |of| 4045xlpdata)                                            (charcode space)))))          (|freplace| (4045xlpdata 4045xlpnstranstable) |of| 4045xlpdata             |with| (|ffetch| (arrayp base) |of| \\asciitons))          (\\changecharset.4045xlp 4045xlpdata \\defaultcharset)          (selectq (fontprop font 'weight)              (bold (|if| (neq (fontprop oldfont 'weight)                                   'bold)                        |then| (\\boldmode.4045xlp 4045xlpstream)))              (|if| (eq (fontprop oldfont 'weight)                            'bold)                  |then| (\\mediummode.4045xlp 4045xlpstream)))          (\\fixlinelength.4045xlp 4045xlpstream)          (return oldfont)))))(* |;;;| "Stream manipulation functions")(DEFINEQ(beginpage.4045xlp  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:01 by snow.pasa")(* |;;;| "Start up a new page on the stream.  Make sure to change the pagenumber and charpos too!")    (let ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream))          (|PageNum| (|4045XLPPageNumber| (add1 (|4045XLPPageNumber| nil 4045xlpstream))                            4045xlpstream)))                 (* \;                                                  "change the charposition to reflect the new page.")         (|freplace| (stream charposition) |of| 4045xlpstream |with| 0)         (|4045XLP.Print.Heading| 4045xlpstream |PageNum|)         (setxy.4045xlp 4045xlpstream (|ffetch| (4045xlpdata 4045xlpleft) |of|                                                                                         4045xlpdata)                (difference (|ffetch| (4045xlpdata 4045xlptop) |of| 4045xlpdata)                       (fontascent (|ffetch| (4045xlpdata 4045xlpfont) |of| 4045xlpdata))))         nil)))(endpage.4045xlp  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:01 by snow.pasa")(* |;;;| "Ends a page on the 4045xlpstream")    (declare (globalvars \\4045xlp.bitmaprec))    (let* ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream))           (4045xlpbitmap (|ffetch| (4045xlpbitmap bitmap) |of| \\4045xlp.bitmaprec)))          (cond             ((4045xlp.has.bitmap 4045xlpdata)               (* \;                                                           "we wrote on the bitmap, so now print it")              (4045xlp.prompt "Formatting the drawing ...")              (|\\ScaledBltBigBitmap.4045XLP| 4045xlpbitmap 0 0 4045xlpstream 0 0 2)              (4045xlp.release.bitmap 4045xlpdata)))          (bout (|\\4045XLPBackingStream| 4045xlpstream)                (charcode ff))          (forceoutput (|\\4045XLPBackingStream| 4045xlpstream)                 t))))(newpage.4045xlp  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:02 by snow.pasa")    (endpage.4045xlp 4045xlpstream)    (beginpage.4045xlp 4045xlpstream)))(newline.4045xlp  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:02 by snow.pasa")                    (* |;;| "Do a newline on the page, and if you have to start on a new page.  Don't forget to reset the charposition")    (let ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream))          newypos)         (setq newypos (idifference (|ffetch| (4045xlpdata 4045xlpypos) |of| 4045xlpdata)                              (|ffetch| (4045xlpdata 4045xlplinefeed) |of| 4045xlpdata)))         (cond            ((ilessp newypos (|ffetch| (4045xlpdata 4045xlpbottom) |of| 4045xlpdata))             (newpage.4045xlp 4045xlpstream))            (t (setxy.4045xlp 4045xlpstream (|ffetch| (4045xlpdata 4045xlpleft) |of|                                                                                        4045xlpdata)                      newypos)))         (|freplace| (stream charposition) |of| 4045xlpstream |with| 0))))(setxy.4045xlp  (lambda (4045xlpstream x y)                       (* \; "Edited 22-Jan-87 11:02 by snow.pasa")                                                             (* \; "Move to (X,Y) on the page.")    (|freplace| (4045xlpdata 4045xlpxpos) |of| (|ffetch| (stream imagedata) |of|                                                                                        4045xlpstream                                                              ) |with| x)    (|freplace| (4045xlpdata 4045xlpypos) |of| (|ffetch| (stream imagedata) |of|                                                                                        4045xlpstream                                                              ) |with| y)    (cond       ((|4045XLPIn2700ModeP| 4045xlpstream)        (cond           ((|4045XLPLandscapeP| 4045xlpstream)            (\\send4045xlpcommand (concat "a" (idifference |4045XLPDefaultPageWidth|                                                         (iplus y |4045XLPDefaultLandscapeFontHeight|                                                                ))                                             ","                                             (fixr x))                   (|\\4045XLPBackingStream| 4045xlpstream)))           (t (\\send4045xlpcommand (concat "a" (fixr x)                                               ","                                               (fixr y))                     (|\\4045XLPBackingStream| 4045xlpstream)))))       (t (cond             ((|4045XLPLandscapeP| 4045xlpstream)              (\\send4045xlpcommand (concat "p" (fixr x)                                               ","                                               (idifference |4045XLPDefaultPageWidth| y))                     (|\\4045XLPBackingStream| 4045xlpstream)))             (t (\\send4045xlpcommand (concat "p" (fixr x)                                                 ","                                                 (idifference |4045XLPDefaultPageHeight| y))                       (|\\4045XLPBackingStream| 4045xlpstream))))))    nil))(\\moveto.4045xlp  (lambda (4045xlpstream x y)                       (* \; "Edited 22-Jan-87 11:03 by snow.pasa")    (setxy.4045xlp 4045xlpstream x y)))(\\boldmode.4045xlp  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:03 by snow.pasa")(* |;;;| "turn on bold mode")    (\\send4045xlpcommand (cond                                 ((|4045XLPIn2700ModeP| 4045xlpstream)                                  "b")                                 (t "W"))           (|\\4045XLPBackingStream| 4045xlpstream)           t)))(\\mediummode.4045xlp  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:03 by snow.pasa")(* |;;;| "turn off bold mode")    (\\send4045xlpcommand (cond                                 ((|4045XLPIn2700ModeP| 4045xlpstream)                                  "p")                                 (t "&"))           (|\\4045XLPBackingStream| 4045xlpstream)           t)))(\\fixlinelength.4045xlp  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:03 by snow.pasa")                    (* |;;| "4045XLPSTREAM is known to be a stream of type 4045XLP --- Called by RIGHTMARGIN LEFTMARGIN and \\SFFIXFONT to update the LINELENGTH field in the stream.  also called when the stream is created.")    (let (llen (4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream)))         (|freplace| (stream linelength) |of| 4045xlpstream            |with| (cond                          ((igreaterp (setq llen (iquotient (idifference (|ffetch| (4045xlpdata                                                                                        4045xlpright)                                                                            |of| 4045xlpdata)                                                                   (|ffetch| (4045xlpdata                                                                                         4045xlpleft)                                                                      |of| 4045xlpdata))                                                        (|ffetch| (fontdescriptor                                                                              fontavgcharwidth)                                                           |of| (|ffetch| (4045xlpdata                                                                                          4045xlpfont)                                                                       |of| 4045xlpdata))))                                  1)                           llen)                          (t 10))))))(\\charwidth.4045xlp  (lambda (4045xlpstream charcode)                  (* \; "Edited 22-Jan-87 11:04 by snow.pasa")(* |;;;| "Gets the width of CHARCODE in a 4045XLP stream, observing spacefactor")    (cond       ((eq charcode (charcode space))        (|ffetch| (4045xlpdata 4045xlpspacewidth) |of| (|ffetch| (stream imagedata)                                                                  |of| 4045xlpstream)))       (t (\\fgetcharwidth (|ffetch| (4045xlpdata 4045xlpfont) |of| (|ffetch|                                                                             (stream imagedata)                                                                               |of| 4045xlpstream                                                                             ))                 charcode)))))(\\stringwidth.4045xlp  (lambda (4045xlpstream string rdtbl)              (* \; "Edited 22-Jan-87 11:04 by snow.pasa")                                                             (* \;                       "Returns the width of STRING in the interpress STREAM, observing spacefactor")    (\\stringwidth.generic string (|ffetch| (4045xlpdata 4045xlpfont) |of|                                                                          (|ffetch| (stream                                                                                         imagedata)                                                                             |of| 4045xlpstream))           rdtbl           (|ffetch| (4045xlpdata 4045xlpspacewidth) |of| (|ffetch| (stream imagedata)                                                                     |of| 4045xlpstream))))))(* |;;;| "Misc.  stream functions")(DEFINEQ(|CreateImageData.4045XLP|  (lambda (landscape)                               (* \; "Edited 22-Jan-87 11:04 by snow.pasa")(* |;;;| "Creates the imagedata for 4045")    (cond       (landscape (|create| 4045xlpdata                         4045xlptop _ |4045XLPDefaultLandscapeTop|                         4045xlpright _ |4045XLPDefaultLandscapeRight|                         4045xlpclippingregion _ |4045XLPDefaultLandscapeRegion|))       (t (|create| 4045xlpdata                 4045xlptop _ |4045XLPDefaultPortraitTop|                 4045xlpright _ |4045XLPDefaultPortraitRight|                 4045xlpclippingregion _ |4045XLPDefaultPortraitRegion|)))))(|FixMargins.4045XLP|  (lambda (4045xlpstream |LandscapeP| |2700ModeP|)  (* \; "Edited 22-Jan-87 11:04 by snow.pasa")(* |;;;| "Corrects for improper margins in 2700 mode by setting the margins to 0")    (cond       (|2700ModeP| (\\send4045xlpcommand (cond                                                 (|LandscapeP| (concat "m" |4045XLPDefaultPageWidth|                                                                       "," 0 "," 0 "," 0 ","                                                                       |4045XLPDefaultPageHeight|))                                                 (t (concat "m" |4045XLPDefaultPageHeight| "," 0 ","                                                            0 "," 0 "," |4045XLPDefaultPageWidth|)))                           (|\\4045XLPBackingStream| 4045xlpstream))))))(|4045XLP.Error|  (lambda (errcode 4045xlpstream)                   (* \; "Edited 22-Jan-87 11:05 by snow.pasa")                    (* |;;| "Currently, the Errorlist is stored on the F2 Property of the stream CLEAR as an errcode will clear the list NIL will return the list")    (cond       ((eq errcode 'clear)                                  (* \; "Clear all errors")        (|4045XLP.Set.Errorlist| 4045xlpstream nil))       ((null errcode)        (|4045XLPGetErrors| 4045xlpstream))       (t (|4045XLP.Set.Errorlist| 4045xlpstream (append (|4045XLPGetErrors| 4045xlpstream)                                                        (list (cons (|4045XLPPageNumber| nil                                                                            4045xlpstream)                                                                    errcode))))))))(|4045XLPPageNumber|  (lambda (|Number| 4045xlpstream)                  (* \; "Edited 22-Jan-87 11:05 by snow.pasa")                                                             (* \;                       "If a number is given, the page number is changed otherwise, it is returned.")    (cond       (|Number| (|4045XLP.Set.Pagenumber| |Number| 4045xlpstream))       (t (|4045XLPPage| 4045xlpstream)))))(|4045XLPIn2700ModeP|  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:05 by snow.pasa")                                                             (* \;                                                   "determines if the stream is in 2700 mode or not")    (streamprop 4045xlpstream '2700mode)))(\\send4045xlpcommand  (lambda (str backingstream nocr)                       (* \; "Edited 15-Jan-88 16:08 by Snow")                    (* |;;| "Since the sequence esc...  is so common, this function will send the esc and also the ending lf if necessary")    (bout backingstream (charcode esc))    (|for| c |instring| str |do| (bout backingstream c))    (or nocr (bout backingstream (charcode lf)))))(|MakePosition.4045XLP|  (lambda (left top 2700mode landscape)             (* \; "Edited 22-Jan-87 11:06 by snow.pasa")    (let ((xpos (cond                   (2700mode (cond                                (landscape (idifference |4045XLPDefaultPageWidth| top))                                (t left)))                   (t left)))          (ypos (cond                   (2700mode (cond                                (landscape left)                                (t top)))                   (t (cond                         (landscape (idifference |4045XLPDefaultPageWidth| top))                         (t (idifference |4045XLPDefaultPageHeight| top)))))))         (concat xpos "," ypos))))(4045xlp.scalebrush  (lambda (brush)                                   (* \; "Edited 22-Jan-87 11:06 by snow.pasa")                                                             (* \;                                          "scales the brush for use on the 4045 bitmap ie.  by half")    (cond       ((listp brush)        (list (car brush)              (cond                 ((igreaterp (cadr brush)                         3)                    (* |;;| "This is a strange algorithm mainly for sketch correction.  Sketch produces brushes for a full 4045 page, but the actual drawing page is only half size.")                  (imax (iquotient (sub1 (cadr brush))                               2)                        2))                 ((eq brush 2)                  2)                 (t 1))))       (t (list 'round (cond                          ((igreaterp brush 3)                           (imax (iquotient (sub1 brush)                                        2)                                 2))                          ((eq brush 2)                           2)                          (t 1)))))))(|Landscape.4045XLP|  (lambda (4045xlpstream 2700mode?)                      (* \; "Edited 14-Jan-88 17:40 by Snow")    (let ((backingstream (|\\4045XLPBackingStream| 4045xlpstream)))         (\\send4045xlpcommand 4045xlp-go-to-landscape-command backingstream)         (cond            (2700mode? (\\send4045xlpcommand "9" backingstream t))            (t (\\send4045xlpcommand "F9" backingstream t)))         (forceoutput backingstream t)         (|4045XLP.Set.LandscapeMode| 4045xlpstream t))))(|SendFileHeading.4045XLP|  (lambda (backingstream)                           (* \; "Edited 22-Jan-87 11:06 by snow.pasa")    (|for| ch |instring| |4045XLPFileHeading| |do| (bout backingstream ch))))(|4045XLP.Print.Heading|  (lambda (4045xlpstream pagenum)    (cond       ((|4045XLP.Get.Heading| 4045xlpstream)        (moveto |4045XLPDefaultRegionLeft| (cond                                              ((|4045XLPLandscapeP| 4045xlpstream)                                               |4045XLPLandscapeHeading|)                                              (t |4045XLPPortraitHeading|))               4045xlpstream)        (printout 4045xlpstream (|4045XLP.Get.Heading| 4045xlpstream)               "       Page: " pagenum t t))))))(* |;;;| "Bitmap Functions")(DEFINEQ(|4045XLP.EncodedSixelofBitmap|  (lambda (baseptr |Sixel#|)                        (* \; "Edited 22-Jan-87 11:07 by snow.pasa")    (let* ((|WordsToSkip| (itimes 3 (iquotient |Sixel#| 8)))           (|SixelsRemaining| (iremainder |Sixel#| 8))           (|StartOfSixelRun| (\\addbase baseptr |WordsToSkip|)))          (iplus 63 (selectq |SixelsRemaining|                        (0 (|ffetch| (sixel zero) |of| |StartOfSixelRun|))                        (1 (|ffetch| (sixel one) |of| |StartOfSixelRun|))                        (2 (|ffetch| (sixel two) |of| |StartOfSixelRun|))                        (3 (|ffetch| (sixel three) |of| |StartOfSixelRun|))                        (4 (|ffetch| (sixel four) |of| |StartOfSixelRun|))                        (5 (|ffetch| (sixel five) |of| |StartOfSixelRun|))                        (6 (|ffetch| (sixel six) |of| |StartOfSixelRun|))                        (7 (|ffetch| (sixel seven) |of| |StartOfSixelRun|))                        (shouldnt |SixelsRemaining|))))))(\\bltshade.4045xlp  (lambda (texture 4045xlpstream destinationleft destinationbottom width height operation                  clippingregion)                    (* \; "Edited 22-Jan-87 11:07 by snow.pasa")(* |;;;| "Blt a shade into the given area.  The 20 and 12 are fudge factors for BLTShading that force the correct behavior.")    (select texture ((blackshade)                            (* \;                                                            "More efficient to draw thick line")                     (\\blackbox.4045xlp 4045xlpstream destinationleft destinationbottom width                             height))           ((whiteshade nil)                                 (* \;                                                            "Can't erase bits so this is a no-op")            nil)           (\\bltshade.genericprinter texture 4045xlpstream destinationleft destinationbottom width                   height operation clippingregion 4))))(\\4045xlp.round.bitmap  (lambda (sourcebm sourceleft sourcebottom width height)                                                        (* \; "Edited 22-Jan-87 11:07 by snow.pasa")(* |;;;| "to help with sixel conversion, enlarge to a multiple of 24 bits wide")    (let* ((sourceregion (intersectregions (createregion sourceleft sourcebottom width height)                                (createregion 0 0 (bitmapwidth sourcebm)                                       (bitmapheight sourcebm))))           (newbitmap (bitmapcreate (itimes (iquotient (iplus (|fetch| (region width)                                                                 |of| sourceregion)                                                              23)                                                   24)                                           24)                             (|ffetch| (region height) |of| sourceregion))))          (bitblt sourcebm sourceleft sourcebottom newbitmap 0 0 (|ffetch| (region width)                                                                    |of| sourceregion)                 (|ffetch| (region height) |of| sourceregion)                 'input                 'replace)          newbitmap)))(\\scaledbitblt.4045xlp(lambda (sourcebitmap sourceleft sourcebottom 4045xlpstream destinationleft destinationbottom width height sourcetype operation texture clippingregion clippedsourceleft clippedsourcebottom scale) (* \; "Edited 14-Jan-88 18:20 by Snow") (* |;;;| "\\4045XLP.ROUND.BITMAP makes the bitmap a multiple of 24 bits wide for ease of handling and printing.  4045XLP wants bitmaps to be a multiple of 8 bits wide, and sixel encoding is easiest on things that are a multiple of 24 bits wide.  Only supports scale factors of 1, 2, and 4 CURRENTLY") (declare (globalvars 4045xlp.defaults)) (cond ((not (fmemb scale (quote (nil 1 2 4)))) (\\illegal.arg scale))) (let* ((expanded.sourcebitmap (\\4045xlp.round.bitmap sourcebitmap sourceleft sourcebottom (or width (bitmapwidth sourcebitmap)) (or height (bitmapheight sourcebitmap)))) (backingstream (|\\4045XLPBackingStream| 4045xlpstream)) (height (bitmapheight expanded.sourcebitmap)) (width.rounded (bitmapwidth expanded.sourcebitmap)) (sixel.width (iquotient width.rounded 6)) (|WordWidth| (|ffetch| (bitmap bitmaprasterwidth) |of| expanded.sourcebitmap)) (scale (or scale 4))) (4045xlp.prompt "Formatting bitmap...") (\\windowcmd.4045xlp scale destinationleft (iplus (itimes scale height) destinationbottom) width.rounded height 4045xlpstream) (\\genericbitblt.4045xlp expanded.sourcebitmap height sixel.width |WordWidth| backingstream) (4045xlp.prompt "done.")) t))(\\genericbitblt.4045xlp  (lambda (expanded.sourcebitmap height sixel.width wordwidth backingstream)                                                        (* \; "Edited 22-Jan-87 11:08 by snow.pasa")                    (* |;;| "Run-length encoding algorithm for 4045 Is called by bitblt and scaledbitblt to dump the data faster and less of it.")    (|bind| (|CurrRow| _ (|ffetch| (bitmap bitmapbase) |of| expanded.sourcebitmap))           (bytecount _ 0)           prevbyte presentbyte |for| row |from| 1 |to| height       |do| (|for| |Sixel| |from| 0 |to| (sub1 sixel.width)                   |do| (setq presentbyte (|4045XLP.EncodedSixelofBitmap| |CurrRow| |Sixel|))                         (cond                            ((and (eq prevbyte presentbyte)                                  (neq bytecount 32767))                             (|add| bytecount 1))                            (t (cond                                  ((eq bytecount 0)                                   (setq bytecount 1))                                  ((eq bytecount 1)                                   (bout backingstream prevbyte))                                  (t (|for| i |instring| (mkstring bytecount)                                        |do| (bout backingstream i))                                     (bout backingstream prevbyte)                                     (setq bytecount 1)))                               (setq prevbyte presentbyte))))             (setq |CurrRow| (\\addbase |CurrRow| wordwidth))             (block) |finally| (cond                                      ((eq bytecount 1)                                       (bout backingstream prevbyte))                                      (prevbyte (|for| i |instring| (mkstring bytecount)                                                   |do| (bout backingstream i))                                             (bout backingstream prevbyte))))))(\\bitblt.4045xlp  (lambda (sourcebitmap sourceleft sourcebottom 4045xlpstream destinationleft destinationbottom width                  height sourcetype operation texture clippingregion clippedsourceleft                  clippedsourcebottom)               (* \; "Edited 22-Jan-87 11:08 by snow.pasa")(* |;;;| "\\4045XLP.ROUND.BITMAP makes the bitmap a multiple of 24 bits wide for ease of handling and printing.  4045XLP wants bitmaps to be a multiple of 8 bits wide, and sixel encoding is easiest on things that are a multiple of 24 bits wide")    (declare (globalvars 4045xlp.defaults))    (let* ((expanded.sourcebitmap (\\4045xlp.round.bitmap sourcebitmap sourceleft sourcebottom                                          width height))           (backingstream (|\\4045XLPBackingStream| 4045xlpstream))           (height (bitmapheight expanded.sourcebitmap))           (width.rounded (bitmapwidth expanded.sourcebitmap))           (sixel.width (iquotient width.rounded 6))           (|WordWidth| (|ffetch| (bitmap bitmaprasterwidth) |of| expanded.sourcebitmap)))          (4045xlp.prompt "Formatting bitmap...")          (\\windowcmd.4045xlp 4 destinationleft (iplus (itimes 4 height)                                                            destinationbottom)                 width.rounded height 4045xlpstream)          (\\genericbitblt.4045xlp expanded.sourcebitmap height sixel.width |WordWidth|                  backingstream)          (4045xlp.prompt "done."))))(\\blackbox.4045xlp  (lambda (4045xlpstream left bottom width height)  (* \; "Edited 22-Jan-87 11:08 by snow.pasa")(* |;;;| "Draw a black box by drawing a thick line because it's faster and the 4045 can do more lines than graphic windows")    (let ((backingstream (|\\4045XLPBackingStream| 4045xlpstream))          (4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream)))         (cond            ((|4045XLPIn2700ModeP| 4045xlpstream)             (cond                ((|4045XLPLandscapeP| 4045xlpstream)                 (\\send4045xlpcommand (concat "y" (idifference |4045XLPDefaultPageWidth|                                                              (iplus height bottom))                                                  "," left "," width "," height)                        backingstream))                (t (\\send4045xlpcommand (concat "x" left "," bottom "," width "," height)                          backingstream))))            (t (cond                  ((|4045XLPLandscapeP| 4045xlpstream)                   (\\send4045xlpcommand (concat "x" left "," (idifference                                                                          |4045XLPDefaultPageWidth|                                                                         (iplus bottom height))                                                    "," width "," height)                          backingstream))                  (t (\\send4045xlpcommand (concat "x" left "," (idifference                                                                            |4045XLPDefaultPageHeight|                                                                           (iplus bottom height))                                                      "," width "," height)                            backingstream))))))))(\\windowcmd.4045xlp  (lambda (magnification left top width height 4045xlpstream)                                                        (* \; "Edited 22-Jan-87 11:08 by snow.pasa")(* |;;;| "Sends out the actual command to set up a grapic window on the 4045xlp.  Obeys 2700mode and landscape modes")    (let ((|Landscape| (|4045XLPLandscapeP| 4045xlpstream))          (2700mode (|4045XLPIn2700ModeP| 4045xlpstream)))         (\\send4045xlpcommand (|if| (|4045XLPIn2700ModeP| 4045xlpstream)                                       |then| (concat "gw" magnification ";"                                                         (|MakePosition.4045XLP| left top                                                                 2700mode |Landscape|)                                                         "," width "," height)                                     |else| (concat "vw" magnification ";"                                                       (|MakePosition.4045XLP| left top 2700mode                                                               |Landscape|)                                                       "," width "," height))                (|\\4045XLPBackingStream| 4045xlpstream))))))(* \; "Page bitmap fns")(DEFINEQ(4045xlp.reset  (lambda (stream portto?)                          (* \; "Edited 22-Jan-87 11:09 by snow.pasa")                    (* |;;| "Resets the bitmap for other stream to use it.  Note: this will cause problems if the person calls it while one stream thinks it has the stream and then it is given away.  Several streams may be writing to the same bitmap! The OPTIONAL stream arg means to reset the stream if you know what stream you are using.  It will also release the port lock if the port flag is t.")    (declare (globalvars \\4045xlp.bitmaprec))    (cond       (stream (4045xlp.release.bitmap (|ffetch| (stream imagedata) |of| stream)))       (t (bltshade whiteshade (|ffetch| (4045xlpbitmap bitmap) |of| \\4045xlp.bitmaprec))          (release.monitorlock (|ffetch| (4045xlpbitmap monitor) |of| \\4045xlp.bitmaprec)                 t)))    (and portto? (4045xlp.release.port t))))(4045xlp.getbmstr  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:09 by snow.pasa")(* |;;;| "Returns a stream to the bitmap and resets the data structure if the bitmap is available.  Otherwise it waits for the bitmap to become free")    (declare (globalvars \\4045xlp.bitmaprec))    (let ((4045xlpdata (|ffetch| (stream imagedata) |of| 4045xlpstream))          bitmap)         (cond            ((4045xlp.has.bitmap 4045xlpdata))            (t (4045xlp.get.bitmap 4045xlpdata)               (setq bitmap (|ffetch| (4045xlpbitmap bitmap) |of| \\4045xlp.bitmaprec))               (cond                  ((|4045XLPLandscapeP| 4045xlpstream)                   (|ChangePageBitmap.4045XLP| bitmap |4045XLPLandscapePageBMRaster|                           |4045XLPLandscapePageBMWidth| |4045XLPLandscapePageBMHeight|))                  (t (|ChangePageBitmap.4045XLP| bitmap |4045XLPPortraitPageBMRaster|                             |4045XLPPortraitPageBMWidth| |4045XLPPortraitPageBMHeight|)))               (|freplace| (4045xlpbitmap bitmapdirty) |of| \\4045xlp.bitmaprec |with|                                                                                        t)))         (|ffetch| (4045xlpbitmap bmstream) |of| \\4045xlp.bitmaprec))))(4045xlp.get.bitmap  (lambda (4045xlpdata)                             (* \; "Edited 22-Jan-87 11:09 by snow.pasa")                    (* |;;| "if the stream doesn't have the bitmap, this function will wait until the bitmap is available and then give the stream the bitmap")    (declare (globalvars \\4045xlp.bitmaprec))    (obtain.monitorlock (|ffetch| (4045xlpbitmap monitor) |of| \\4045xlp.bitmaprec))    (|freplace| (4045xlpdata 4045xlpownsbitmapflg) |of| 4045xlpdata |with| t)    (bltshade whiteshade (|ffetch| (4045xlpbitmap bitmap) |of| \\4045xlp.bitmaprec))))(4045xlp.release.bitmap  (lambda (4045xlpdata)                             (* \; "Edited 22-Jan-87 11:09 by snow.pasa")                                                             (* \;                                                       "give up the bitmap, and mark the stream so.")    (declare (globalvars \\4045xlp.bitmaprec))    (|freplace| (4045xlpdata 4045xlpownsbitmapflg) |of| 4045xlpdata |with| nil)    (|freplace| (4045xlpbitmap bitmapdirty) |of| \\4045xlp.bitmaprec |with| nil)    (release.monitorlock (|ffetch| (4045xlpbitmap monitor) |of| \\4045xlp.bitmaprec))))(|\\ScaledBltBigBitmap.4045XLP|(lambda (sourcebitmap sourceleft sourcebottom 4045xlpstream destinationleft destinationbottom scale) (* \; "Edited 14-Jan-88 18:23 by Snow") (* |;;;| "Currently only used to blt the page bitmap to the printer, but will really handle any bitmap that is a multiple of 24 bits wide.  Cannot be a region because the sixeling must start on a word boundary and it is difficult to determine if that is the case.  Sends the whole bitmap only.") (declare (globalvars 4045xlp.defaults)) (cond ((not (fmemb scale (quote (nil 1 2 4)))) (\\illegal.arg scale)) ((not (zerop (iremainder (bitmapwidth sourcebitmap) 24))) (\\illegal.arg sourcebitmap))) (let* ((backingstream (|\\4045XLPBackingStream| 4045xlpstream)) (height (bitmapheight sourcebitmap)) (width (bitmapwidth sourcebitmap)) (sixel.width (iquotient width 6)) (|WordWidth| (|ffetch| (bitmap bitmaprasterwidth) |of| sourcebitmap)) (scale (or scale 4))) (4045xlp.prompt "Formatting bitmap...") (\\windowcmd.4045xlp scale destinationleft (iplus (itimes scale height) destinationbottom) width height 4045xlpstream) (\\genericbitblt.4045xlp sourcebitmap height sixel.width |WordWidth| backingstream) (4045xlp.prompt "done.") t)))(|ChangePageBitmap.4045XLP|  (lambda (bitmap rasterwidth width height)         (* \; "Edited 22-Jan-87 11:10 by snow.pasa")    (|freplace| (bitmap bitmaprasterwidth) |of| bitmap |with| rasterwidth)    (|freplace| (bitmap bitmapwidth) |of| bitmap |with| width)    (|freplace| (bitmap bitmapheight) |of| bitmap |with| height)    (|freplace| (4045xlpbitmap bmstream) |of| \\4045xlp.bitmaprec |with| (dspcreate                                                                                      bitmap))    (dspoperation 'paint (|ffetch| (4045xlpbitmap bmstream) |of| \\4045xlp.bitmaprec)))))(* |;;;| "Drawing algorithms")(DEFINEQ(\\drawpoint.4045xlp  (lambda (4045xlpstream x y brush operation)            (* \; "Edited  5-Mar-87 12:02 by ")                                                         (* \; "Edited  5-Mar-87 12:00 by ")                                                             (* \; "draw a POINT")    (let* ((newbrush (4045xlp.scalebrush brush)))          (drawpoint (iquotient (add1 x)                            2)                 (iquotient (add1 y)                        2)                 newbrush                 (4045xlp.getbmstr 4045xlpstream)                 operation))))(\\drawarc.4045xlp  (lambda (4045xlpstream centerx centery radius startangle ndegrees brush dashing)                                                             (* \; "Edited  5-Mar-87 11:56 by ")                                                             (* \; "draw an arc")    (let* ((newbrush (4045xlp.scalebrush brush)))          (drawarc (iquotient (add1 centerx)                          2)                 (iquotient (add1 centery)                        2)                 (iquotient (add1 radius)                        2)                 startangle ndegrees newbrush dashing (4045xlp.getbmstr 4045xlpstream)))))(\\drawcircle.4045xlp  (lambda (4045xlpstream x y radius brush dashing)  (* \; "Edited 22-Jan-87 11:10 by snow.pasa")                                                             (* \;                                                            "Draw a circle on the 4045xlpstream")    (let ((newbrush (4045xlp.scalebrush brush)))         (drawcircle (iquotient (add1 x)                            2)                (iquotient (add1 y)                       2)                (iquotient (add1 radius)                       2)                newbrush dashing (4045xlp.getbmstr 4045xlpstream)))))(\\fillcircle.4045xlp  (lambda (4045xlpstream x y radius texture)        (* \; "Edited 22-Jan-87 11:10 by snow.pasa")(* |;;;| "draw a filled circle on the given stream")    (fillcircle (iquotient (add1 x)                       2)           (iquotient (add1 y)                  2)           (iquotient (add1 radius)                  2)           texture           (4045xlp.getbmstr 4045xlpstream))))(\\drawpolygon.4045xlp  (lambda (4045xlpstream points closed brush dashing)                                                        (* \; "Edited 22-Jan-87 11:10 by snow.pasa")                                                             (* \; "draw a polygon on the stream")    (drawpolygon points closed (4045xlp.scalebrush brush)           dashing           (4045xlp.getbmstr 4045xlpstream))))(\\fillpolygon.4045xlp  (lambda (4045xlpstream points texture)            (* \; "Edited 22-Jan-87 11:11 by snow.pasa")                                                             (* \;                                                            "draw a filled polygon on the stream")    (let ((goodptlst (|for| pt |in| points |collect| (cons (iquotient (add1 (car pt))                                                                              2)                                                                       (iquotient (add1 (cdr pt))                                                                              2)))))         (fillpolygon goodptlst texture (4045xlp.getbmstr 4045xlpstream)))))(\\drawellipse.4045xlp  (lambda (4045xlpstream x y minor major orientation brush dashing)                                                        (* \; "Edited 22-Jan-87 11:11 by snow.pasa")                                                             (* \; "draw an ellipse")    (drawellipse (iquotient (add1 x)                        2)           (iquotient (add1 y)                  2)           (iquotient (add1 minor)                  2)           (iquotient (add1 major)                  2)           orientation           (4045xlp.scalebrush brush)           dashing           (4045xlp.getbmstr 4045xlpstream))))(\\drawcurve.4045xlp  (lambda (4045xlpstream knots closed brush dashing)(* \; "Edited 22-Jan-87 11:12 by snow.pasa")                                                             (* \; "draw a curve")    (let* ((newbrush (4045xlp.scalebrush brush))           (goodktlist (|for| kt |in| knots |collect| (cons (iquotient                                                                         (add1 (car kt))                                                                         2)                                                                        (iquotient                                                                         (add1 (cdr kt))                                                                         2)))))          (drawcurve goodktlist closed newbrush dashing (4045xlp.getbmstr 4045xlpstream)))))(\\drawline.4045xlp  (lambda (4045xlpstream x1 y1 x2 y2 width operation color dashing)                                                        (* \; "Edited 22-Jan-87 11:12 by snow.pasa")(* |;;;| "4045 can print horizontal and vert.  solid lines fast so use the special function to do that otherwise draw on the page bitmap")    (let ((halfwidth (iquotient width 2)))         (cond            ((zerop width))            ((or (listp dashing)                 (not (or (eqp x1 x2)                          (eqp y1 y2))))             (drawline (iquotient (add1 x1)                              2)                    (iquotient (add1 y1)                           2)                    (iquotient (add1 x2)                           2)                    (iquotient (add1 y2)                           2)                    (cond                       ((igreaterp halfwidth 1)                        halfwidth)                       (t 1))                    'paint                    (4045xlp.getbmstr 4045xlpstream)                    color dashing))            (t (\\drawline1.4045xlp 4045xlpstream x1 y1 x2 y2 width)))         (\\moveto.4045xlp 4045xlpstream x2 y2))))(\\drawline1.4045xlp  (lambda (4045xlpstream x1 y1 x2 y2 |width|)       (* \; "Edited 22-Jan-87 11:12 by snow.pasa")                                                             (* \;              "uses direct line drawing on the 4045 BUT only works for horizontal and vert.  lines.")    (let ((backingstream (|\\4045XLPBackingStream| 4045xlpstream))          (|LandscapeP| (|4045XLPLandscapeP| 4045xlpstream))          (|2700Mode| (|4045XLPIn2700ModeP| 4045xlpstream))          |XPos| |YPos| |len| axis)         (cond            ((eqp x1 x2)                                     (* \; "vertical line")                                                             (* \;                                                         "correction for funny line placing on 4045")             (setq |XPos| (idifference x1 (iquotient (sub1 |width|)                                                 2)))             (setq |YPos| (min y1 y2))             (setq |len| (add1 (iabs (idifference y2 y1))))             (setq axis (cond                           ((and |2700Mode| |LandscapeP|)                            "x")                           (t "y")))             (|if| (or (and |2700Mode| |LandscapeP|)                           (null |2700Mode|))                 |then|                                  (* \; "correction for stupid printer.")                       (|add| |YPos| |len|))             (\\send4045xlpcommand (concat axis (|MakePosition.4045XLP| |XPos| |YPos|                                                            |2700Mode| |LandscapeP|)                                              "," |len| "," |width|)                    backingstream))            ((eqp y1 y2)                                     (* \; "horizontal line")             (setq |XPos| (min x1 x2))                       (* \;                                                         "correction for funny line placing on 4045")             (setq |YPos| (idifference y1 (iquotient (sub1 |width|)                                                 2)))             (setq |len| (iplus 3 (iabs (idifference x2 x1))))             (setq axis (cond                           ((and |2700Mode| |LandscapeP|)                            "y")                           (t "x")))             (|if| (or (and |2700Mode| |LandscapeP|)                           (null |2700Mode|))                 |then| (|add| |YPos| |width|))             (\\send4045xlpcommand (concat axis (|MakePosition.4045XLP| |XPos| |YPos|                                                            |2700Mode| |LandscapeP|)                                              "," |len| "," |width|)                    backingstream)))))))(* |;;;| "Default Printing Code")(DEFINEQ(4045xlpfilep  (lambda (file noopen)                             (* \; "Edited 22-Jan-87 11:12 by snow.pasa")                                                             (* \;                                          "Returns fullname of FILE if it looks like a 4045XLP file")    (or (eq (unpackfilename file 'extension)            '4045xlp)        (resetlst (prog (strm)                        (cond                           ((setq strm (\\getstream file 'input t))                            (or (randaccessp strm)                                (return))                            (resetsave nil (list 'setfileptr strm (getfileptr strm)))                            (setfileptr strm 0))                           (noopen (return))                           (t (resetsave (setq strm (openstream file 'input 'old 8))                                     '(progn (closef? oldvalue)))))                        (return (|for| i |from| 1 |to| (constant (nchars                                                                                  |4045XLPFileHeading|                                                                                    ))                                   |when| (or (eofp strm)                                                  (neq (nthcharcode |4045XLPFileHeading| i)                                                       (bin strm))) |do| (return nil)                                   |finally| (return (fullname strm)))))))))(4045xlp.bitmapscale  (lambda (width height)                            (* \; "Edited 22-Jan-87 11:12 by snow.pasa")                                                             (* \;                                                            "will eventually prescale the bitmap")    1))(4045xlpprint  (lambda (port file printoptions)                       (* \; "Edited 14-Jan-88 15:46 by Snow")(* |;;;| "Set up a printing process to the printer.")    (declare (globalvars 4045xlp.defaults 4045xlp.monitor))    (prog ((host (or (4045xlp.check.outputfile port)                     (|fetch| (4045xlp.parameters port) |of| 4045xlp.defaults)))           out in)          (or file (return))                                 (* \;              "have to grab the monitorlock anytime you actually are going to print on the printer!")          (with.monitor 4045xlp.monitor (4045xlp.prompt (concat (fullname file)                                                                   " on " host " -- in progress"))                    (* |;;| "print the break page if necessary")                 (cond                    ((or (|ffetch| (4045xlp.parameters printheader) |of| 4045xlp.defaults)                         (listget printoptions 'break.page))                     (4045xlp.printheaderpage (or (listget printoptions 'document.name)                                                      file))))                    (* |;;| "Set up the two streams to deal with the input and output")                 (resetsave (setq in (openstream file 'input 'old '((sequential t)                                                                    (don\'tcache t))))                        '(progn (closef? oldvalue)))                 (resetsave (setq out (openstream host 'output 'new '((type binary)                                                                      (sequential t)                                                                      (don\'tcache t))))                        '(progn (bout oldvalue (charcode ff))                                (forceoutput oldvalue t)                                (closef? oldvalue)))                 (for cpy from 1 to (or (listget printoptions '\#copies)                                                    1) do (copybytes in out)                                                             (setfileptr in 0)                                                             (bout out (charcode ff))                                                             (forceoutput out t)                                                             (block))                 (4045xlp.prompt (concat (fullname file)                                            " on " host " -- done.")))          (cond             ((listget printoptions 'delete)              (delfile (closef? (fullname file)))))          (return (fullname file)))))(4045xlpbitmapfile(lambda (outputfile bitmap scalefactor region rotation title) (* \; "Edited 14-Jan-88 18:23 by Snow") (* \; "This is the function called for default hardcopying of windows") (declare (globalvars 4045xlp.defaults 4045xlp.monitor)) (or bitmap (setq bitmap (screenbitmap))) (resetlst (let ((w (cond (region (|ffetch| (region width) |of| region)) (t (|ffetch| bitmapwidth |of| bitmap)))) (h (cond (region (|ffetch| (region height) |of| region)) (t (|ffetch| bitmapheight |of| bitmap)))) (left (cond (region (|ffetch| (region left) |of| region)) (t 0))) (bottom (cond (region (|ffetch| (region bottom) |of| region)) (t 0))) (port (or (4045xlp.check.outputfile outputfile) outputfile)) (windowtitle (or (|ffetch| (4045xlp.parameters windowtitle) |of| 4045xlp.defaults) title)) scale scaling clip 4045xlpstream) (* \; "make sure there is a reasonable port, or use the default port") (cond ((4045xlp.check.outputfile outputfile) (* \; "If we're going to the port, get a monitorlock before printing anything") (resetsave (4045xlp.get.port bitmap) (quote (progn (4045xlp.release.port)))))) (cond ((null rotation) (* \; "Pick the default rotation") (resetsave (setq 4045xlpstream (openimagestream port (quote 4045xlp))) (quote (progn (closef? oldvalue))))) ((fmemb rotation (quote (0 360))) (resetsave (setq 4045xlpstream (openimagestream port (quote 4045xlp) (quote (portrait t)))) (quote (progn (closef? oldvalue))))) ((fmemb rotation (quote (90 270))) (resetsave (setq 4045xlpstream (openimagestream port (quote 4045xlp) (quote (landscape t)))) (quote (progn (closef? oldvalue))))) (t (\\illegal.arg rotation))) (setq clip (dspclippingregion nil 4045xlpstream)) (setq scale (|for| scale |in| (quote (4 2 1)) |do| (cond ((and (ileq (times w scale) (|ffetch| (region width) |of| clip)) (ileq (times h scale) (|ffetch| (region height) |of| clip))) (return scale))) |finally| (\\illegal.arg clip))) (* |;;| "actually blt the bitmap to the stream after all setup has been done, and the monitorlock has been grabbed if needed") (cond (windowtitle (printout 4045xlpstream .center 0 windowtitle))) (scaledbitblt bitmap left bottom 4045xlpstream (max 0 (iquotient (difference (|ffetch| (region width) |of| clip) (times w scale)) 2)) (max 0 (iquotient (difference (|ffetch| (region height) |of| clip) (times h scale)) 2)) w h nil nil nil nil scale) (* \; "get a new page") (newpage.4045xlp 4045xlpstream) (closef 4045xlpstream)))))(4045xlp.printtext  (lambda (file imagefile imagetype heading fonts tabs options)                                                        (* \; "Edited 22-Jan-87 11:13 by snow.pasa")                                                             (* \;                                        "Converts PSPOOL format text files into 4045XLP image files")    (resetlst (let (imagestream infile)                   (4045xlp.prompt "Formatting TEXT file for print...")                   (resetsave (setq infile (openstream file 'input 'old '((binary t)                                                                          (sequential t))))                          '(progn (closef? oldvalue)))                   (cond                      ((4045xlp.check.outputfile imagefile)                                                             (* \;   "we are going directly to the port so get the monitorlock and print the header page if necessary")                       (resetsave (4045xlp.get.port file)                              '(progn (4045xlp.release.port)))))                    (* |;;| "Strip off the extension if we are generating the name from the INFILE, so that OPENIMAGESTREAM can pack on the appropriate extension")                   (resetsave (setq imagestream                               (openimagestream (or imagefile (packfilename 'extension nil                                                                     'version nil 'body infile))                                      imagetype                                      (append (|if| (null heading)                                                  |then| (list 'heading                                                                   (concat (fullname infile)                                                                          "    "                                                                          (getfileinfo infile                                                                                 'creationdate))))                                             (append (list 'document.name (fullname infile)                                                           'landscape t)                                                    options))))                          '(and resetstate (delfile (closef? oldvalue))))                                                             (* \; "Make \\BIN return NIL on EOS")                   (copy.text.to.image infile imagestream fonts)                   (4045xlp.prompt "done.")                   (list (closef infile)                         (closef imagestream))))))(4045xlp.hostnamep  (lambda (printername)                             (* \; "Edited 22-Jan-87 11:13 by snow.pasa")    (and (strpos "4045XLP" printername)         '4045xlp)))(4045xlp.check.outputfile  (lambda (file)                                    (* \; "Edited 22-Jan-87 11:13 by snow.pasa")    (let ((host (u-case (unpackfilename file 'host))))         (cond            ((or (eq host 'rs232)                 (eq host 'tty)                 (eq host 'centronics))             (pack* '{ host '}))            (t nil)))))(4045xlp.printheaderpage  (lambda (file)                                    (* \; "Edited 22-Jan-87 11:14 by snow.pasa")(* |;;;| "This function will print a header page for everything.  It will automatically open a stream and close it when it is done.  ASSUMES THE MONITORLOCK WAS ALREADY PICKED UP BY THE CALLING FUNCTION!")    (declare (globalvars 4045xlp.defaults 4045xlpstream.version))    (resetlst (let (outstream)                   (resetsave (setq outstream (openimagestream (|ffetch| (4045xlp.parameters                                                                              port) |of|                                                                                      4045xlp.defaults                                                                      )                                                     '4045xlp                                                     '(portrait t)))                          '(progn (closef oldvalue)))                   (setxy.4045xlp outstream 0 2000)                   (printout outstream .center 0 (cond                                                    ((and (neq t (|ffetch| (4045xlp.parameters                                                                                printheader)                                                                    |of| 4045xlp.defaults))                                                          (|ffetch| (4045xlp.parameters                                                                                printheader)                                                             |of| 4045xlp.defaults))                                                     (|ffetch| (4045xlp.parameters printheader)                                                        |of| 4045xlp.defaults))                                                    (t (concat "For: " (username))))                          t t)                   (cond                      ((or (bitmapp file)                           (windowp file))                       (\\boldmode.4045xlp outstream)                       (printout outstream .center 0 file t t)                       (\\mediummode.4045xlp outstream))                      (t (\\boldmode.4045xlp outstream)                         (printout outstream .center 0 (or (fullname file)                                                           file)                                t t)                         (\\mediummode.4045xlp outstream)                         (printout outstream .center 0 (concat "Created: "                                                              (cond                                                                 ((stringp file)                                                             (* \;                                                "When we get a bitmap title instead of a file name.")                                                                  (date))                                                                 (t (getfileinfo file 'creationdate))                                                                 ))                                t t)))                   (printout outstream .center 0 (concat "Printed: " (date))                          t t)                   (printout outstream .center 0 (concat "Xerox 4045 Print Service Version "                                                         4045xlpstream.version)                          t)                                 (* \;                                                            "draw for more interesting header page")                   (drawline 100 300 100 3000 26 'paint outstream)                   (drawline 2450 300 2450 3000 26 'paint outstream)                   (drawline 2410 300 2410 3000 12 'paint outstream)                   (drawline 2385 300 2385 3000 5 'paint outstream)                   (drawline 140 300 140 3000 12 'paint outstream)                   (drawline 165 300 165 3000 5 'paint outstream)                   (bout outstream (charcode ff))                   (forceoutput (|\\4045XLPBackingStream| outstream))                   nil))))(4045xlp.print.errorpage  (lambda (4045xlpstream)                           (* \; "Edited 22-Jan-87 11:14 by snow.pasa")(* |;;;| "We only know about bad character errors for now but later this may be expanded!")    (let ((errs (|4045XLP.Error| nil 4045xlpstream)))         (cond            (errs (drawline 200 500 2300 500 5 'paint 4045xlpstream)                  (drawline 200 3000 2300 3000 5 'paint 4045xlpstream)                  (dspleftmargin 200 4045xlpstream)                  (dsprightmargin 2300 4045xlpstream)                  (printout 4045xlpstream t t t .center 0 "4045XLPStream Printing Errors" t t t)                  (|if| errs                      |then| (printout 4045xlpstream .center 0                                         "Unknown characters: [charset,charcode]")                            (|bind| |Page| |Char| |ErrString| |for| |Error| |in| errs                               |do| (cond                                           ((neq |Page| (car |Error|))                                            (printout 4045xlpstream t t "Page: " (setq |Page|                                                                                  (car |Error|))                                                   t t)))                                     (setq |Char| (cdr |Error|))                                     (setq |ErrString| (concat "[" (\\charset |Char|)                                                              ","                                                              (\\char8code |Char|)                                                              "]  "))                                     (cond                                        ((ileq (iplus (dspxposition nil 4045xlpstream)                                                      (stringwidth |ErrString| 4045xlpstream))                                               (dsprightmargin nil 4045xlpstream)))                                        (t (terpri 4045xlpstream)))                                     (printout 4045xlpstream |ErrString|)))                  t)))))(4045xlp.prompt  (lambda (promptstring)                            (* \; "Edited 22-Jan-87 11:14 by snow.pasa")    (let ((messagestream (|ffetch| (4045xlp.parameters messagestream) |of| 4045xlp.defaults))          )         (and messagestream (printout messagestream "[4045XLP: " promptstring " ]" t))))))(* |;;;| "Port initializing and parameter setting code")(DEFINEQ(4045xlp.help.get.port  (lambda nil                                            (* \; "Edited  5-Mar-87 11:18 by ")    (let ((port (askuser 10 'r "Which port would you like to use for the 4045? "                       '((r "s232" explainstring "Rs232 - Use the RS232 port for the 4045" return                            'rs232)                         (t "ty" explainstring "Tty - Use the Tty port for the 4045" return                            'tty)                         (c "entronics" explainstring                             "Centronics - Use the Centronics port for the 4045" return 'centronics)                         (s "erver" explainstring "Server - use a server address for the 4045" return                            'server)) nil nil '(confirmflg t autocompleteflg t promptconfirmflg t))))         (cond            ((eq port 'server)             (printout t t "You must set the PORT parameter to the address of " t                     "the server machine before using the software." t                     "See the documentation on using 4045XLP.SET.PARAMETERS" t "to do this." t))            (t (4045xlp.init.port port)               (4045xlp.set.parameters (list (cons 'port (cond                                                                ((or (null port)                                                                     (eq port 'rs232))                                                                 "{RS232}")                                                                ((eq port 'tty)                                                                 '{tty})                                                                ((eq port 'centronics)                                                                 "{CENTRONICS}")                                                                (t (ringbells)                                                                   (\\illegal.arg port)))))))))))(4045xlp.get.port  (lambda (|file|)    (declare (globalvars 4045xlp.monitor))      (* \; "Edited 22-Jan-87 11:14 by snow.pasa")    (let ((monitor (obtain.monitorlock 4045xlp.monitor)))         (cond            ((|ffetch| (4045xlp.parameters printheader) |of| 4045xlp.defaults)             (4045xlp.printheaderpage |file|)))         monitor)))(4045xlp.release.port  (lambda (evenifnotmine)    (declare (globalvars 4045xlp.monitor))      (* \; "Edited 22-Jan-87 11:15 by snow.pasa")    (release.monitorlock 4045xlp.monitor)))(4045xlp.init.port  (lambda (port)                                    (* \; "Edited 22-Jan-87 11:15 by snow.pasa")    (declare (globalvars 4045xlp.defaults))    (selectq (u-case port)        ((rs232 rs232c dlrs232 dlrs232c {rs232})              (4045xlp.init.rs232))        ((tty dltty {tty})              (4045xlp.init.tty))        ((centronics cent {centronics} {cent})              (4045xlp.init.centronics))        (selectq (|ffetch| (4045xlp.parameters port) |of| 4045xlp.defaults)            (({rs232} rs232 rs232c {rs232c})                  (4045xlp.init.rs232))            (({tty} tty printer)                  (4045xlp.init.tty))            (({centronics} centronics {cent} cent)                  (4045xlp.init.centronics))            (promptprint (concat "Error bad port specification" (or port (|ffetch| (                                                                                   4045xlp.parameters                                                                                        port)                                                                            |of| 4045xlp.defaults                                                                                ))))))    t))(4045xlp.init.rs232  (lambda nil                                            (* \; "Edited  5-Mar-87 11:19 by ")(* |;;;| "init the rs232 port, but first load the package if it isn't already loaded")    (filesload dlrs232c)    (cond       (\\rs232c.ready (rs232c.set.parameters '((|BaudRate| . 9600)                                                (|Parity| . none)                                                (|FlowControl| 1 17 19)                                                (|BitsPerSerialChar| . 8)                                                (|StopBits| . 1))))       (t (rs232c.init 9600 8 'none 1 '(1 17 19))))          (* \; "workaround per LMM 12/3/86")    nil))(4045xlp.init.tty  (lambda nil                                            (* \; "Edited  5-Mar-87 11:20 by ")(* |;;;| "init the tty port, loading the package if necessary.")    (filesload dltty)    (cond       (\\tty.ready (tty.set.parameters '((|BaudRate| . 9600)                                          (|Parity| . none)                                          (|FlowControl| 1 17 19)                                          (|BitsPerSerialChar| . 8)                                          (|StopBits| . 1))))       (t (tty.init 9600 8 'none 1 '(1 17 19))))))(4045xlp.init.centronics  (lambda nil                                            (* \; "Edited  5-Mar-87 11:20 by ")(* |;;;| "Init the centronics port, loading the package if not already done.")    (filesload centronics)    (centronics.reset)))(4045xlp.set.parameters  (lambda (parameters)                              (* \; "Edited 22-Jan-87 10:50 by snow.pasa")    (|for| param |in| parameters       |do| (let ((value (cdr param)))                     (selectq (car param)                         (port (and value (|freplace| (4045xlp.parameters port) |of|                                                                                      4045xlp.defaults                                             |with| value)))                         (language (and (fmemb value (list 630 2700))                                        (|freplace| (4045xlp.parameters language) |of|                                                                                      4045xlp.defaults                                           |with| value)))                         (messagestream (let ((stream (|if| (streamp value)                                                          |then| value                                                        |elseif| (windowp value)                                                          |then| (getstream value)                                                        |elseif| (null value)                                                          |then| nil)))                                             (|freplace| (4045xlp.parameters messagestream)                                                |of| 4045xlp.defaults |with| stream)))                         (printerrors (|freplace| (4045xlp.parameters printerrors) |of|                                                                                                                                                                            4045xlp.defaults                                         |with| (and value t)))                         (printheader (|freplace| (4045xlp.parameters printheader) |of|                                                                                                                                                                            4045xlp.defaults                                         |with| value))                         (windowtitle (|freplace| (4045xlp.parameters windowtitle) |of|                                                                                                                                                                            4045xlp.defaults                                         |with| value))                         (slug (|if| (or (numberp value)                                             (null value))                                   |then| (|freplace| (4045xlp.parameters slug) |of|                                                                                                                                                                             4045xlp.defaults                                                 |with| value)))                         (landscape (|freplace| (4045xlp.parameters landscape) |of|                                                                                      4045xlp.defaults                                       |with| (and value t)))                         (|printout| promptwindow "Unknown 4045xlp parameter: " param)                         (\\illegal.arg param))))    4045xlp.defaults))(4045xlp.get.parameters  (lambda (parameters)                              (* \; "Edited 22-Jan-87 11:16 by snow.pasa")    (cond       (parameters (|for| key |in| parameters |collect| (assoc key 4045xlp.defaults)))       (t 4045xlp.defaults)))))(DEFINEQ(4045xlp.change.mode  (lambda (mode)                                         (* \; "Edited 14-Jan-88 16:19 by Snow")                    (* |;;| "change the mode of the printer from international to USA and back")    (or mode (setq mode "USA"))    (cond       ((string-equal mode "USA")        (4045xlp.change.to.usa.mode))       ((string-equal mode "INTERNATIONAL")        (4045xlp.change.to.int.mode))       (t (cl:error "~s is not a valid mode.  USA or INTERNATIONAL are the valid values." mode)))))(4045xlp.setup-default-fonts  (lambda nil                                            (* \; "Edited  7-Mar-88 14:46 by Snow")                    (* |;;| "setup the defaultfonts for the 4045.")    (setq fontprofile (xcl:with-collection                       (cl:dolist (fc fontprofile)                              (let ((font (listget 4045xlp.fonts (car fc))))                                   (cond                                      ((and font (not (cl:member '4045xlp fc :test                                                             #'(lambda (a b)                                                                 (eq a (car b))))))                                       (xcl:collect (append fc (list (list '4045xlp font)))))                                      (t (xcl:collect fc)))))))    (fontprofile fontprofile))))(CL:DEFUN 4045XLP.CHANGE.TO.USA.MODE ()   (* |;;| "change all the parameters to the values for the USA version fonts.")   (SETQ 4045XLP-GO-TO-LANDSCAPE-COMMAND "+9XCP14iso-L")   (SETQ |4045XLPDefaultRegionLeft| 150)   (SETQ |4045XLPDefaultPageWidth| 2550)   (SETQ |4045XLPDefaultPageHeight| 3300)   (SETQ |4045XLPDefaultLineFeedHeight| 51)   (SETQ |4045XLPLandscapePageBMRaster| 102)   (SETQ |4045XLPLandscapePageBMWidth| 1632)   (SETQ |4045XLPLandscapePageBMHeight| 1275)   (SETQ |4045XLPDefaultLandscapeCharsPerLine| 150)   (SETQ |4045XLPDefaultLandscapeTop| 2400)   (SETQ |4045XLPDefaultLandscapeRight| 3150)   (SETQ |4045XLPLandscapeHeading| 2450)   (SETQ |4045XLPDefaultLandscapeRegion| (CREATEREGION 0 0 3300 2550))   (SETQ |4045XLPDefaultLandscapeFontHeight| 39)   (SETQ |4045XLPDefaultLandscapeFontAscent| 31)   (SETQ |4045XLPDefaultLandscapeFontDescent| 8)   (SETQ |4045XLPDefaultLandscapeFontBox| 22)   (SETQ |4045XLPDefaultLandscapeFontDX| 4)   (SETQ |4045XLPDefaultLandscapeFontWidths| (ARRAY 256 'WORD 22 0))   (SETQ |4045XLPPortraitHeading| 3150)   (SETQ |4045XLPPortraitPageBMRaster| 80)   (SETQ |4045XLPPortraitPageBMWidth| 1272)   (SETQ |4045XLPPortraitPageBMHeight| 1650)   (SETQ |4045XLPDefaultPortraitCharsPerLine| 115)   (SETQ |4045XLPDefaultPortraitTop| 3000)   (SETQ |4045XLPDefaultPortraitRight| 2400)   (SETQ |4045XLPDefaultPortraitRegion| (CREATEREGION 0 0 2550 3300))   (SETQ |4045XLPDefaultPortraitFontHeight| 50)   (SETQ |4045XLPDefaultPortraitFontAscent| 40)   (SETQ |4045XLPDefaultPortraitFontDescent| 10)   (SETQ |4045XLPDefaultPortraitFontBox| 32)   (SETQ |4045XLPDefaultPortraitFontDX| 4)   (SETQ |4045XLPDefaultPortraitFontWidths| (ARRAY 256 'WORD 30 0))   NIL)(CL:DEFUN 4045XLP.CHANGE.TO.INT.MODE ()   (* |;;| "Change all the parameters to the values necessary for the International version fonts.")   (SETQ 4045XLP-GO-TO-LANDSCAPE-COMMAND "+9XCP12.5iso-L")   (SETQ |4045XLPDefaultRegionLeft| 150)   (SETQ |4045XLPDefaultPageWidth| 2475)   (SETQ |4045XLPDefaultPageHeight| 3525)   (SETQ |4045XLPDefaultLineFeedHeight| 50)   (SETQ |4045XLPLandscapePageBMRaster| 110)   (SETQ |4045XLPLandscapePageBMWidth| 1752)   (SETQ |4045XLPLandscapePageBMHeight| 1237)   (SETQ |4045XLPDefaultLandscapeCharsPerLine| 140)   (SETQ |4045XLPDefaultLandscapeTop| 2325)   (SETQ |4045XLPDefaultLandscapeRight| 3375)   (SETQ |4045XLPLandscapeHeading| 2375)   (SETQ |4045XLPDefaultLandscapeRegion| (CREATEREGION 0 0 3525 2475))   (SETQ |4045XLPDefaultLandscapeFontHeight| 35)   (SETQ |4045XLPDefaultLandscapeFontAscent| 29)   (SETQ |4045XLPDefaultLandscapeFontDescent| 6)   (SETQ |4045XLPDefaultLandscapeFontBox| 24)   (SETQ |4045XLPDefaultLandscapeFontDX| 4)   (SETQ |4045XLPDefaultLandscapeFontWidths| (ARRAY 256 'WORD 24 0))   (SETQ |4045XLPPortraitHeading| 3375)   (SETQ |4045XLPPortraitPageBMRaster| 77)   (SETQ |4045XLPPortraitPageBMWidth| 1224)   (SETQ |4045XLPPortraitPageBMHeight| 1762)   (SETQ |4045XLPDefaultPortraitCharsPerLine| 93)   (SETQ |4045XLPDefaultPortraitTop| 3225)   (SETQ |4045XLPDefaultPortraitRight| 2325)   (SETQ |4045XLPDefaultPortraitRegion| (CREATEREGION 0 0 2475 3525))   (SETQ |4045XLPDefaultPortraitFontHeight| 49)   (SETQ |4045XLPDefaultPortraitFontAscent| 38)   (SETQ |4045XLPDefaultPortraitFontDescent| 11)   (SETQ |4045XLPDefaultPortraitFontBox| 25)   (SETQ |4045XLPDefaultPortraitFontDX| 4)   (SETQ |4045XLPDefaultPortraitFontWidths| (ARRAY 256 'WORD 25 0))   NIL)(* |;;;| "Records")(DECLARE\: EVAL@COMPILE(ASSOCRECORD 4045XLP.PARAMETERS (PORT LANGUAGE WINDOWTITLE MESSAGESTREAM PRINTERRORS PRINTHEADER                                          SLUG LANDSCAPE)))(DECLARE\: EVAL@LOAD DONTCOPY (DECLARE\: EVAL@COMPILE(BLOCKRECORD SIXEL ((ZERO BITS 6)                        (ONE BITS 6)                        (TWO.1 BITS 4)                        (TWO.2 BITS 2)                        (THREE BITS 6)                        (FOUR BITS 6)                        (FIVE.1 BITS 2)                        (FIVE.2 BITS 4)                        (SIX BITS 6)                        (SEVEN BITS 6))                       (ACCESSFNS SIXEL ((TWO (LOGOR (LLSH (|fetch| (SIXEL TWO.1) |of| DATUM)                                                           2)                                                     (|fetch| (SIXEL TWO.2) |of| DATUM))                                              (PROGN (|replace| (SIXEL TWO.1) |of| DATUM                                                        |with| (LOGAND (MASK.1\'S 0 4)                                                                          (LRSH DATUM 2)))                                                     (|replace| (SIXEL TWO.2) |of| DATUM                                                        |with| (LOGAND (MASK.1\'S 0 2)                                                                          DATUM))))                                         (FIVE (LOGOR (LLSH (|fetch| (SIXEL FIVE.1) |of|                                                                                        DATUM)                                                            4)                                                      (|fetch| (SIXEL FIVE.2) |of| DATUM))))))(DATATYPE 4045XLPDATA           ((4045XLPBOTTOM WORD)           (4045XLPTOP WORD)           (4045XLPRIGHT WORD)           (4045XLPLEFT WORD)           (4045XLPLINEFEED WORD)           (4045XLPOWNSBITMAPFLG FLAG)           4045XLPXPOS 4045XLPYPOS 4045XLPCLIPPINGREGION 4045XLPCHARSET 4045XLPCSTRANSTABLE            4045XLPNSTRANSTABLE 4045XLPWIDTHSCACHE 4045XLPSPACEWIDTH 4045XLPSPACEFACTOR 4045XLPFONT)          4045XLPBOTTOM _ |4045XLPDefaultRegionBottom| 4045XLPLEFT _ |4045XLPDefaultRegionLeft|           4045XLPLINEFEED _ |4045XLPDefaultLineFeedHeight| 4045XLPXPOS _ |4045XLPDefaultXPosition|           4045XLPYPOS _ |4045XLPDefaultYPosition| 4045XLPSPACEFACTOR _ |4045XLPDefaultSpaceFactor|)(RECORD 4045XLPBITMAP (BITMAPDIRTY MONITOR BITMAP BMSTREAM)))(/DECLAREDATATYPE '4045XLPDATA       '(WORD WORD WORD WORD WORD FLAG POINTER POINTER POINTER POINTER POINTER POINTER POINTER               POINTER POINTER POINTER)       '((4045XLPDATA 0 (BITS . 15))         (4045XLPDATA 1 (BITS . 15))         (4045XLPDATA 2 (BITS . 15))         (4045XLPDATA 3 (BITS . 15))         (4045XLPDATA 4 (BITS . 15))         (4045XLPDATA 5 (FLAGBITS . 0))         (4045XLPDATA 6 POINTER)         (4045XLPDATA 8 POINTER)         (4045XLPDATA 10 POINTER)         (4045XLPDATA 12 POINTER)         (4045XLPDATA 14 POINTER)         (4045XLPDATA 16 POINTER)         (4045XLPDATA 18 POINTER)         (4045XLPDATA 20 POINTER)         (4045XLPDATA 22 POINTER)         (4045XLPDATA 24 POINTER))       '26)(DEFMACRO |4045XLP.Set.Pagenumber| (|number| |stream|)   `(|freplace| (STREAM F3) |of| ,|stream| |with| ,|number|))(DEFMACRO |4045XLP.Set.Errorlist| (4045XLPSTREAM VALUE)   `(|freplace| (STREAM F2) |of| ,4045XLPSTREAM |with| ,VALUE))(DEFMACRO |4045XLP.Clear.Errorlist| (4045XLPSTREAM)   `(|freplace| (STREAM F2) |of| ,4045XLPSTREAM |with| NIL))(DEFMACRO |4045XLP.Set.LandscapeMode| (|stream| |value|)   `(|freplace| (STREAM F4) |of| ,|stream| |with| ,|value|))(DEFMACRO |4045XLP.Set.Heading| (|stream| |value|)   `(|freplace| (STREAM F5) |of| ,|stream| |with| ,|value|))(DEFMACRO |4045XLP.Get.Heading| (|stream|)   `(|ffetch| (STREAM F5) |of| ,|stream|))(DEFMACRO |\\4045XLPBackingStream| (4045XLPSTREAM)   `(|ffetch| (STREAM F1) |of| ,4045XLPSTREAM))(DEFMACRO 4045XLP.HAS.BITMAP (4045XLPDATA)   `(|ffetch| (4045XLPDATA 4045XLPOWNSBITMAPFLG) |of| ,4045XLPDATA))(DEFMACRO |4045XLPPage| (4045XLPSTREAM)   `(|fetch| (STREAM F3) |of| ,4045XLPSTREAM))(DEFMACRO |4045XLPGetErrors| (4045XLPSTREAM)   `(|fetch| (STREAM F2) |of| ,4045XLPSTREAM))(DEFMACRO |4045XLPLandscapeP| (4045XLPSTREAM)   `(|ffetch| (STREAM F4) |of| ,4045XLPSTREAM)))(/DECLAREDATATYPE '4045XLPDATA       '(WORD WORD WORD WORD WORD FLAG POINTER POINTER POINTER POINTER POINTER POINTER POINTER               POINTER POINTER POINTER)       '((4045XLPDATA 0 (BITS . 15))         (4045XLPDATA 1 (BITS . 15))         (4045XLPDATA 2 (BITS . 15))         (4045XLPDATA 3 (BITS . 15))         (4045XLPDATA 4 (BITS . 15))         (4045XLPDATA 5 (FLAGBITS . 0))         (4045XLPDATA 6 POINTER)         (4045XLPDATA 8 POINTER)         (4045XLPDATA 10 POINTER)         (4045XLPDATA 12 POINTER)         (4045XLPDATA 14 POINTER)         (4045XLPDATA 16 POINTER)         (4045XLPDATA 18 POINTER)         (4045XLPDATA 20 POINTER)         (4045XLPDATA 22 POINTER)         (4045XLPDATA 24 POINTER))       '26)(* |;;;| "Variables and initialization")(* |;;| "The NSTO4045Cxxx arrays contain the mappings from the charset specified by xxx to the (one) charset of 4045.0 C0 allows charcodes <32 for special commands ie.  esc's and LF's etc.")(RPAQ \\ASCIITOASCII (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 NIL))))(RPAQ \\NSTO4045NULL (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 NIL))))(RPAQ \\NSTO4045C41 (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 48 255 255 45 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 194 205 255 255 255 255 255 255 255 255 255 255 255 255 255 111 111 111 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 NIL))))(RPAQ \\NSTO4045C357 (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 32 45 45 45 45 45 39 186 170 171 187 32 32 32 32 255 255 60 62 174 172 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 111 111 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 124 45 43 124 45 43 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 NIL))))(RPAQ \\NSTO4045C356 (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 124 255 126 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 NIL))))(RPAQ \\NSTO4045C361 (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 49473 49729 49985 50241 50497 50753 51265 51777 52801 49731 49987 51011 52035 53059 53060 49477 49733 49989 50501 51013 51269 52805 53061 255 49991 50759 51015 52039 49992 49481 49737 49993 50249 50505 51017 51273 52809 49994 52043 49740 52044 53068 49742 50254 52046 53070 49487 49743 49999 50255 50511 51279 52559 49746 52050 53074 49747 50003 52051 53075 52052 53076 49493 49749 50005 50261 50517 50773 51285 51797 52565 52821 50007 49497 49753 50009 51289 49754 51034 53082 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 49505 49761 50017 50273 50529 50785 51297 51809 52833 49763 50019 51043 52067 53091 53092 49509 49765 50021 50533 51045 51301 52837 53093 49767 50023 50791 51047 255 50024 49513 49769 50025 50281 50537 255 51305 52841 50026 52075 49772 52076 53100 49774 50286 52078 53102 49519 49775 50031 50287 50543 51311 52591 49778 52082 53106 49779 50035 52083 53107 52084 53108 49525 49781 50037 50293 50549 50805 51317 51829 52597 52853 50039 49529 49785 50041 51321 49786 51066 53114 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 NIL))))(RPAQ \\NSTO4045C46 (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 65 66 255 255 255 69 255 70 90 72 255 73 75 255 77 78 255 79 255 255 80 255 255 84 89 255 88 255 255 255 255 255 97 251 255 121 255 255 255 255 255 255 255 105 107 255 255 118 255 111 255 255 112 255 255 255 117 255 120 255 119 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 NIL))))(RPAQ \\NSTO4045C0 (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (255 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 161 162 163 164 165 255 167 255 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 255 193 194 195 196 197 198 199 200 255 202 203 204 205 206 207 208 209 210 211 212 213 255 255 255 255 255 255 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 NIL))))(RPAQ \\4045WIDTHSARRAY (READARRAY-FROM-LIST 256 (QUOTE SMALLPOSP) 0 (QUOTE (30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 NIL))))(RPAQQ LINESPERPAGE 57)(RPAQQ 4045XLP.FONTS (DEFAULTFONT (TITAN 10)                                ITALICFONT                                (TITAN 10)                                BOLDFONT                                (TITAN 10 BRR)                                LITTLEFONT                                (TITAN 10)                                TINYFONT                                (TITAN 10)                                BIGFONT                                (TITAN 10 BRR)                                COMMENTFONT                                (TITAN 10)                                TEXTFONT                                (TITAN 10)))(RPAQ? 4045XLP.MONITOR (CREATE.MONITORLOCK '4045XLP))(RPAQ? \\4045XLP.BITMAPREC )(RPAQ? 4045XLP.DEFAULTS )(ADDTOVAR PRINTERTYPES ((4045XLP)                            (CANPRINT (4045XLP))                            (STATUS TRUE)                            (SEND 4045XLPPRINT)                            (HOSTNAMEP 4045XLP.HOSTNAMEP)                            (BITMAPSCALE 4045XLP.BITMAPSCALE)                            (BITMAPFILE (4045XLPBITMAPFILE FILE BITMAP SCALEFACTOR REGION ROTATION                                                TITLE))))(ADDTOVAR PRINTFILETYPES (4045XLP (TEST 4045XLPFILEP)                                    (EXTENSION (4045XLP))                                    (CONVERSION (TEXT 4045XLP.PRINTTEXT TEDIT                                                      (LAMBDA (FILE PFILE)                                                             (SETQ FILE (OPENTEXTSTREAM FILE))                                                             (TEDIT.FORMAT.HARDCOPY FILE PFILE T NIL                                                                    NIL NIL '4045XLP)                                                             (CLOSEF? FILE)                                                             PFILE)                                                      TEDIT \\TEDIT.HARDCOPY))))(* |;;;| "Initializing stuff")(DECLARE\: DOEVAL@COMPILE DONTCOPY(GLOBALVARS 4045XLP-GO-TO-LANDSCAPE-COMMAND |4045XLPDefaultRegionLeft| |4045XLPDefaultPageWidth|        |4045XLPDefaultPageHeight| |4045XLPDefaultLineFeedHeight| |4045XLPLandscapePageBMRaster|        |4045XLPLandscapePageBMWidth| |4045XLPLandscapePageBMHeight|        |4045XLPDefaultLandscapeCharsPerLine| |4045XLPDefaultLandscapeTop|        |4045XLPDefaultLandscapeRight| |4045XLPLandscapeHeading| |4045XLPDefaultLandscapeRegion|        |4045XLPDefaultLandscapeFontHeight| |4045XLPDefaultLandscapeFontAscent|        |4045XLPDefaultLandscapeFontDescent| |4045XLPDefaultLandscapeFontBox|        |4045XLPDefaultLandscapeFontDX| |4045XLPDefaultLandscapeFontWidths| |4045XLPPortraitHeading|        |4045XLPPortraitPageBMRaster| |4045XLPPortraitPageBMWidth| |4045XLPPortraitPageBMHeight|        |4045XLPDefaultPortraitCharsPerLine| |4045XLPDefaultPortraitTop| |4045XLPDefaultPortraitRight|       |4045XLPDefaultPortraitRegion| |4045XLPDefaultPortraitFontHeight|        |4045XLPDefaultPortraitFontAscent| |4045XLPDefaultPortraitFontDescent|        |4045XLPDefaultPortraitFontBox| |4045XLPDefaultPortraitFontDX|        |4045XLPDefaultPortraitFontWidths| |4045XLPPageBitmapPages|))(DECLARE\: EVAL@COMPILE DONTCOPY (DECLARE\: EVAL@COMPILE (RPAQ |4045XLPFileHeading| (CONCAT (CHARACTER (CHARCODE ESC))                                      "+P"                                      (CHARACTER (CHARCODE LF))                                      (CHARACTER (CHARCODE ESC))                                      "+P"                                      (CHARACTER (CHARCODE LF))                                      (CHARACTER (CHARCODE ESC))                                      "+X"                                      (CHARACTER (CHARCODE LF))))(RPAQ |4045XLPDefaultScale| (FQUOTIENT 300 72))(RPAQQ |4045XLPDefaultSpaceFactor| 1)(RPAQQ |4045XLPDefaultRegionBottom| 100)(RPAQQ |4045XLPDefaultXPosition| 0)(RPAQQ |4045XLPDefaultYPosition| 0)(RPAQQ |4045XLPPageBitmapPages| 533)(RPAQ 4045XLP.DOTSPERPOINT (FQUOTIENT 300 72))(RPAQQ 4045XLP.DOTSPERMICA 0.122449)(CONSTANTS (|4045XLPFileHeading| (CONCAT (CHARACTER (CHARCODE ESC))                                        "+P"                                        (CHARACTER (CHARCODE LF))                                        (CHARACTER (CHARCODE ESC))                                        "+P"                                        (CHARACTER (CHARCODE LF))                                        (CHARACTER (CHARCODE ESC))                                        "+X"                                        (CHARACTER (CHARCODE LF))))       (|4045XLPDefaultScale| (FQUOTIENT 300 72))       (|4045XLPDefaultSpaceFactor| 1)       (|4045XLPDefaultRegionBottom| 100)       (|4045XLPDefaultXPosition| 0)       (|4045XLPDefaultYPosition| 0)       (|4045XLPPageBitmapPages| 533)       (4045XLP.DOTSPERPOINT (FQUOTIENT 300 72))       4045XLP.DOTSPERMICA)))(DECLARE\: DONTEVAL@LOAD DOCOPY (\\4045XLPINIT)(|pushnew| DEFAULTPRINTINGHOST '4045XLP)(SETQ DEFAULTPRINTERTYPE '4045XLP))(PUTPROPS 4045XLPSTREAM FILETYPE :COMPILE-FILE)(PUTPROPS 4045XLPSTREAM COPYRIGHT ("Venue & Xerox Corporation" 1985 1986 1987 1988 1990 1993))(DECLARE\: DONTCOPY  (FILEMAP (NIL (10387 28512 (\\4045XLPINIT 10397 . 17981) (OPEN4045XLPSTREAM 17983 . 22660) (\\CLOSE4045XLPSTREAM 22662 . 23270) (4045.OUTCHARFN 23272 . 24582) (4045.OUTCHARFN1 24584 . 28510)) (28546 35530 (\\CREATE4045FONT 28556 . 31733) (\\CREATECHARSET.4045 31735 . 32894) (\\SEARCH4045FONTS 32896 . 34471) (\\CHANGECHARSET.4045XLP 34473 . 35528)) (35561 46480 (\\DSPXPOSITION.4045XLP 35571 . 36579) (\\DSPYPOSITION.4045XLP 36581 . 37351) (\\DSPBOTTOMMARGIN.4045XLP 37353 . 38129) (\\DSPTOPMARGIN.4045XLP 38131 . 38815) (\\DSPLEFTMARGIN.4045XLP 38817 . 39608) (\\DSPRIGHTMARGIN.4045XLP 39610 . 40444) (\\DSPCLIPPINGREGION.4045XLP 40446 . 41055) (\\DSPSPACEFACTOR.4045XLP 41057 . 42376) (\\DSPLINEFEED.4045XLP 42378 . 43056) (\\DSPFONT.4045 43058 . 46478)) (46531 56609 (BEGINPAGE.4045XLP 46541 . 47675) (ENDPAGE.4045XLP 47677 . 48660) (NEWPAGE.4045XLP 48662 . 48872) (NEWLINE.4045XLP 48874 . 49915) (SETXY.4045XLP 49917 . 52096) (\\MOVETO.4045XLP 52098 . 52269) (\\BOLDMODE.4045XLP 52271 . 52695) (\\MEDIUMMODE.4045XLP 52697 . 53124) (\\FIXLINELENGTH.4045XLP 53126 . 54847) (\\CHARWIDTH.4045XLP 54849 . 55702) (\\STRINGWIDTH.4045XLP 55704 . 56607)) (56654 63508 (|CreateImageData.4045XLP| 56664 . 57356) (|FixMargins.4045XLP| 57358 . 58208) (|4045XLP.Error| 58210 . 59091) (|4045XLPPageNumber| 59093 . 59522) (|4045XLPIn2700ModeP| 59524 . 59875) (\\SEND4045XLPCOMMAND 59877 . 60313) (|MakePosition.4045XLP| 60315 . 61037) (4045XLP.SCALEBRUSH 61039 . 62198) (|Landscape.4045XLP| 62200 . 62728) (|SendFileHeading.4045XLP| 62730 . 62956) (|4045XLP.Print.Heading| 62958 . 63506)) (63546 75097 (|4045XLP.EncodedSixelofBitmap| 63556 . 64647) (\\BLTSHADE.4045XLP 64649 . 65659) (\\4045XLP.ROUND.BITMAP 65661 . 66936) (\\SCALEDBITBLT.4045XLP 66938 . 68373) (\\GENERICBITBLT.4045XLP 68375 . 70418) (\\BITBLT.4045XLP 70420 . 71963) (\\BLACKBOX.4045XLP 71965 . 73828) (\\WINDOWCMD.4045XLP 73830 . 75095)) (75131 80596 (4045XLP.RESET 75141 . 76096) (4045XLP.GETBMSTR 76098 . 77450) (4045XLP.GET.BITMAP 77452 . 78075) (4045XLP.RELEASE.BITMAP 78077 . 78719) (|\\ScaledBltBigBitmap.4045XLP| 78721 . 79928) (|ChangePageBitmap.4045XLP| 79930 . 80594)) (80636 89718 (\\DRAWPOINT.4045XLP 80646 . 81261) (\\DRAWARC.4045XLP 81263 . 81922) (\\DRAWCIRCLE.4045XLP 81924 . 82556) (\\FILLCIRCLE.4045XLP 82558 . 82988) (\\DRAWPOLYGON.4045XLP 82990 . 83415) (\\FILLPOLYGON.4045XLP 83417 . 84166) (\\DRAWELLIPSE.4045XLP 84168 . 84825) (\\DRAWCURVE.4045XLP 84827 . 85694) (\\DRAWLINE.4045XLP 85696 . 86918) (\\DRAWLINE1.4045XLP 86920 . 89716)) (89761 106738 (4045XLPFILEP 89771 . 91293) (4045XLP.BITMAPSCALE 91295 . 91607) (4045XLPPRINT 91609 . 94302) (4045XLPBITMAPFILE 94304 . 96741) (4045XLP.PRINTTEXT 96743 . 99442) (4045XLP.HOSTNAMEP 99444 . 99633) (4045XLP.CHECK.OUTPUTFILE 99635 . 100003) (4045XLP.PRINTHEADERPAGE 100005 . 104261) (4045XLP.PRINT.ERRORPAGE 104263 . 106405) (4045XLP.PROMPT 106407 . 106736)) (106804 115983 (4045XLP.HELP.GET.PORT 106814 . 108791) (4045XLP.GET.PORT 108793 . 109171) (4045XLP.RELEASE.PORT 109173 . 109374) (4045XLP.INIT.PORT 109376 . 110655) (4045XLP.INIT.RS232 110657 . 111369) (4045XLP.INIT.TTY 111371 . 111965) (4045XLP.INIT.CENTRONICS 111967 . 112233) (4045XLP.SET.PARAMETERS 112235 . 115706) (4045XLP.GET.PARAMETERS 115708 . 115981)) (115984 117383 (4045XLP.CHANGE.MODE 115994 . 116522) (4045XLP.SETUP-DEFAULT-FONTS 116524 . 117381)))))STOP