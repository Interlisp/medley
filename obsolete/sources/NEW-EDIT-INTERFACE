(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "INTERLISP")(FILECREATED "25-Jan-91 16:57:19" |{DSK}<users>woz>SOURCES>NEW-EDIT-INTERFACE.;8| 6497         |changes| |to:|  (FUNCTIONS XCL::EDIT-EXPRESSION XCL::EDIT-DEFINITION XCL::EDIT                               SEDIT::EDIT-EXPRESSION SEDIT::MYED)                       (VARS NEW-EDIT-INTERFACECOMS)      |previous| |date:| " 3-Dec-90 18:01:41" |{DSK}<users>woz>SOURCES>NEW-EDIT-INTERFACE.;1|); Copyright (c) 1990, 1991 by Venue.  All rights reserved.(PRETTYCOMPRINT NEW-EDIT-INTERFACECOMS)(RPAQQ NEW-EDIT-INTERFACECOMS ((FUNCTIONS XCL::EDIT XCL::EDIT-DEFINITION XCL::EDIT-EXPRESSION)))(CL:DEFUN XCL::EDIT (CL:STRUCTURE XCL::PROPS XCL::OPTIONS)(* |;;;| "this is the new way to start the current editor, once you have all the props and options figured out.")   (CL:UNLESS (CL:LISTP XCL::OPTIONS)       (CL:SETQ XCL::OPTIONS (LIST XCL::OPTIONS)))   (CL:FUNCALL (EDITMODE)          CL:STRUCTURE XCL::PROPS XCL::OPTIONS))(CL:DEFUN XCL::EDIT-DEFINITION (XCL::NAME TYPE &OPTIONAL XCL::SOURCE XCL::OPTIONS XCL::PROPS)(* |;;;| "this is a new version of IL:EDITDEF, consistent with the new definition of how to start the current editor.  figure out how to get the definition (same as il:editdef), then build the necessary stuff to start the editor and have completion work properly.  since we have a \"definition\" there is no need for a root-changed-fn, because putdef will be handed the right structure on completion anyway.  Do not wait for completion, just return NAME.")   (CL:UNLESS (CL:LISTP XCL::OPTIONS)       (CL:SETQ XCL::OPTIONS (LIST XCL::OPTIONS)))   (LET* ((XCL::DEFINITION (COND                              (XCL::SOURCE (GETDEF XCL::NAME TYPE XCL::SOURCE '(EDIT NOCOPY)))                              ((GETDEF XCL::NAME TYPE 'CURRENT '(EDIT NOCOPY NOERROR)))                              ((GETDEF XCL::NAME TYPE 'SAVED '(EDIT NOCOPY NOERROR)))                              (T (LET ((XCL::FILES (WHEREIS XCL::NAME TYPE T)))                                      (CL:IF (NULL XCL::FILES)                                          (CL:FORMAT T "~S has no ~A definition.~%" XCL::NAME TYPE)                                          (LET ((XCL::FILE (PROGN (CL:FORMAT T                                                                        "~S is contained on~{ ~S~}.~%"                                                                         XCL::NAME XCL::FILES)                                                                  (CL:IF (CL:ENDP (CDR XCL::FILES))                                                                      (CL:IF (CL:Y-OR-N-P                                                                       "Shall I load this file PROP? "                                                                                    )                                                                             (CAR XCL::FILES))                                                                      (ASKUSER NIL NIL                                                                  "indicate which file to load PROP: "                                                                             (MAKEKEYLST XCL::FILES)                                                                             T)))))                                               (CL:WHEN XCL::FILE                                                   (LOAD XCL::FILE 'PROP)                                                   (GETDEF XCL::NAME TYPE '? '(EDIT NOCOPY)))))))))          (XCL::USER-COMPLETION (LISTGET XCL::PROPS :COMPLETION-FN))          (XCL::COMPLETION-FN #'(CL:LAMBDA (XCL::CONTEXT XCL::NEW-DEF XCL::CHANGED?)                                       (CL:WHEN XCL::USER-COMPLETION (CL:FUNCALL XCL::USER-COMPLETION                                                                            XCL::CONTEXT XCL::NEW-DEF                                                                            XCL::CHANGED?))                                       (CL:WHEN (EQ XCL::CHANGED? T)                                           (* |;;| "don't reinstall on :ABORT or NIL (no changes)")                                           (PUTDEF XCL::NAME TYPE XCL::NEW-DEF 'CHANGED)))))         (CL:WHEN XCL::DEFINITION             (XCL::EDIT XCL::DEFINITION (LIST :NAME XCL::NAME :TYPE TYPE :COMPLETION-FN                                                   XCL::COMPLETION-FN)                    XCL::OPTIONS))         XCL::NAME))(CL:DEFUN XCL::EDIT-EXPRESSION (XCL::EXPR &OPTIONAL XCL::OPTIONS XCL::PROPS)(* |;;;| "similar to ED, but just a one-time un-named edit of an expression.  start the editor with :close-on-completion, wait until the edit session completes, and return the structure.  Copy the expression before starting the editor so that changes won't be destructive, then recreate eqness on completion.  This way aborted changes will not be kept.")   (CL:UNLESS (CL:CONSP XCL::EXPR)       (CL:ERROR "~S - Not Editable.  Must be a list expression." XCL::EXPR)       (CL:RETURN-FROM XCL::EDIT-EXPRESSION NIL))   (CL:UNLESS (CL:LISTP XCL::OPTIONS)       (CL:SETQ XCL::OPTIONS (LIST XCL::OPTIONS)))   (LET* ((XCL::EVENT (CREATE.EVENT "EDIT-EXPRESSION Completion"))          (XCL::USER-COMPLETION (LISTGET XCL::PROPS :COMPLETION-FN))          (XCL::NEW-EXPR NIL)          (XCL::COMPLETION-FN #'(CL:LAMBDA (XCL::CONTEXT CL:STRUCTURE XCL::CHANGED?)                                       (CL:WHEN XCL::USER-COMPLETION (CL:FUNCALL XCL::USER-COMPLETION                                                                            XCL::CONTEXT CL:STRUCTURE                                                                            XCL::CHANGED?))                                       (CL:WHEN (EQ XCL::CHANGED? T)                                              (CL:SETQ XCL::NEW-EXPR CL:STRUCTURE))                                       (NOTIFY.EVENT XCL::EVENT))))         (XCL::EDIT (CL:COPY-TREE XCL::EXPR)                (LIST :COMPLETION-FN XCL::COMPLETION-FN)                (LIST* :CLOSE-ON-COMPLETION XCL::OPTIONS))         (CL:UNLESS (CL:MEMBER :DONTWAIT XCL::OPTIONS)                (AWAIT.EVENT XCL::EVENT))         (CL:IF (AND XCL::NEW-EXPR (CL:CONSP XCL::NEW-EXPR))             (RPLNODE2 XCL::EXPR (CL:COPY-TREE XCL::NEW-EXPR))             XCL::EXPR)))(PUTPROPS NEW-EDIT-INTERFACE COPYRIGHT ("Venue" 1990 1991))(DECLARE\: DONTCOPY  (FILEMAP (NIL)))STOP