(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 6-Oct-2022 15:06:35" {DSK}<home>larry>medley>sources>10MBDRIVER.;5 26944  

      :CHANGES-TO (FNS \10MB.STARTDRIVER)

      :PREVIOUS-DATE " 4-Oct-2022 20:52:50" {DSK}<home>larry>medley>sources>10MBDRIVER.;4)


(* ; "
Copyright (c) 1982-1988, 1990-1991 by Venue & Xerox Corporation.
")

(PRETTYCOMPRINT 10MBDRIVERCOMS)

(RPAQQ 10MBDRIVERCOMS
       ((COMS                                                (* ; "raw packet interface")
              (FNS \10MBGETPACKET \10MBSENDPACKET \10MBENCAPSULATE \10MB.BROADCASTP \10MBWATCHER))
        (COMS                                                (* ; "Machine independent part")
              (FNS \10MB.STARTDRIVER \10MB.CREATENDB \10MB.NOTESTAT)
              (INITVARS (\10MB.RCLK.BOX (CREATECELL \FIXP))
                     (\10MB.EXPECTED.RECEIVE.INTERVAL 60)
                     (\10MB.INPUT.TIMEOUT (TIMES \RCLKSECOND \10MB.EXPECTED.RECEIVE.INTERVAL))
                     (\10MB.INPUT.TIMER (SETUPTIMER 0)))
              (GLOBALVARS \10MB.RCLK.BOX \10MB.EXPECTED.RECEIVE.INTERVAL \10MB.INPUT.TIMEOUT 
                     \10MB.INPUT.TIMER))
        (COMS                                                (* ; "Buffer management")
              (FNS \RELEASE.IOCB \GET.IOCB \INIT.ETHER.BUFFER.POOL)
              (INITVARS (\10MBPACKETLENGTH 488)))
        (COMS                                                (* ; "Dolphin/Dlion head")
              (FNS \10MB.TURNOFFETHER \10MB.TURNONETHER \10MB.RESTART.ETHER))
        (COMS                                                (* ; "Misc")
              (FNS \10MB.PRINT.ENCAPSULATION)
              (FNS IOCBQLENGTH))
        (INITVARS \10MB.GETGARBAGE \10MB.COLLECTSTATS)
        [COMS                                                (* ; "PUP address resolution")
              (FNS \HANDLE.RAW.3TO10 \TRANSLATE.3TO10 PRINT3TO10 \NOTE.3TO10)
              (INITVARS (\10MBTYPE.PUP 512)
                     (\10MBTYPE.3TO10 513)
                     (\10MBTYPE.TRANSLATIONS))
              (GLOBALVARS \10MBTYPE.3TO10 \10MBTYPE.PUP \10MBTYPE.TRANSLATIONS)
              (CONSTANTS \EPT.3TO10)
              (ADDVARS (\PACKET.PRINTERS (513 . PRINT3TO10]
        (DECLARE%: EVAL@COMPILE DONTCOPY (LOCALVARS . T)
               (FILES (SOURCE)
                      10MBDECLS LLNSDECLS)
               (FILES (LOADCOMP)
                      LLETHER))))



(* ; "raw packet interface")

(DEFINEQ

(\10MBGETPACKET
  [LAMBDA NIL                                            (* ; "Edited 31-Mar-87 18:11 by bvm:")
    (LET (PACKET TYPE)
         (COND
            ((SETQ PACKET (\DEQUEUE \10MB.RAWPACKETQ))
             (replace EPTYPE of PACKET with (for PAIR in \10MBTYPE.TRANSLATIONS
                                                           bind (TYPE _ (fetch 10MBTYPE
                                                                               of PACKET))
                                                           when (EQ TYPE (CAR PAIR))
                                                           do 

                                 (* ;; "TYPE is the raw type of the etherpacket.  These do not always correspond one-to-one with the EPTYPE constants we use (in particular, for pups), so translate if necessary.")

                                                                 (RETURN (CDR PAIR))
                                                           finally (RETURN TYPE)))
             [COND
                (\RAWTRACING (\MAYBEPRINTPACKET PACKET 'RAWGET]
             PACKET])

(\10MBSENDPACKET
  [LAMBDA (NDB PACKET)                                       (* ; "Edited 31-Oct-89 14:10 by bvm")
    (PROG NIL
          [COND
             (\RAWTRACING (\MAYBEPRINTPACKET PACKET 'RAWPUT]
          [COND
             ((OR (fetch 10MBMULTICASTP of PACKET)
                  (EQNSADDRESS.HOST \MY.NSADDRESS (fetch 10MBDESTNSADDRESSBASE of PACKET)))
                                                             (* ; 
                                  "We would hear this packet if our hardware let us, so fake receipt")
              (PROG ((COPYPACKET (\ALLOCATE.ETHERPACKET)))
                    (\BLT (LOCF (fetch 10MBLENGTH of COPYPACKET))
                          (LOCF (fetch 10MBLENGTH of PACKET))
                          (ADD1 (fetch 10MBLENGTH of PACKET)))
                                                             (* ; 
                                                     "Copy all data that would have been transmitted")
                    (replace EPNETWORK of COPYPACKET with NDB)
                    (replace EPTYPE of COPYPACKET with (for PAIR in \10MBTYPE.TRANSLATIONS
                                                          bind (TYPE _ (fetch 10MBTYPE of PACKET))
                                                          when (EQ TYPE (CAR PAIR))
                                                          do 

                                 (* ;; "TYPE is the raw type of the etherpacket.  These do not always correspond one-to-one with the EPTYPE constants we use (in particular, for pups), so translate if necessary.")

                                                             (RETURN (CDR PAIR))
                                                          finally (RETURN TYPE)))
                    [COND
                       (\RAWTRACING (\MAYBEPRINTPACKET COPYPACKET 'RAWGET]
                    (\HANDLE.RAW.PACKET COPYPACKET]
          (UNINTERRUPTABLY
              (SUBRCALL ETHER-SEND (IMAX (fetch 10MBLENGTH of PACKET)
                                         \10MB.MINPACKETLENGTH)
                     (fetch 10MBPACKETBASE of PACKET))
              (replace EPNETWORK of PACKET with NIL)
              (\REQUEUE.ETHERPACKET PACKET))
          (RETURN T])

(\10MBENCAPSULATE
  [LAMBDA (NDB PACKET PDH LENGTH TYPE)                   (* ; "Edited 14-Jan-88 15:35 by bvm")

    (* ;; "Encapsulates PACKET for transmission on 10mb net NDB:  Fill in destination host (48 bits), source host (me, 48 bits), LENGTH (in bytes) and protocol TYPE.  PDH can be an NSHOSTNUMBER or any piece of storage resembling an NSADDRESS.")

    (if (type? NSHOSTNUMBER PDH)
        then (replace 10MBDESTHOST of PACKET with PDH)
      else                                               (* ; 
                                                   "PDH is an NSADDRESS object or piece of storage")
            (\BLT (fetch 10MBDESTHOSTBASE of PACKET)
                  (LOCF (FFETCH NSHNM0 OF PDH))
                  \10MBHOST.WORDS))
    (\BLT (fetch 10MBSOURCEHOSTBASE of PACKET)
          (LOCF (FFETCH NSHNM0 OF \MY.NSADDRESS))
          \10MBHOST.WORDS)
    (replace 10MBLENGTH of PACKET with (+ (FOLDHI LENGTH BYTESPERWORD)
                                                      \10MBENCAPSULATION.WORDS))
    (replace 10MBTYPE of PACKET with TYPE)
    PACKET])

(\10MB.BROADCASTP
  [LAMBDA (PACKET)                                       (* bvm%: "23-Apr-84 14:34")
    (fetch 10MBMULTICASTP of PACKET])

(\10MBWATCHER
  [LAMBDA (NDB)                                              (* ; "Edited  4-Oct-2022 13:30 by lmm")
                                                          (* ; "Edited 16-May-88 22:24 by MASINTER")

    (* ;; "merge message and packet reading")

    (PROG ((CNTR 0)
           MESSAGE-BUFFER MESSAGE-LENGTH PACKET)
      LP  (IF (SUBRCALL MESSAGE-READP)
              THEN (PROMPTPRINT (IF (SETQ MESSAGE-LENGTH (SUBRCALL MESSAGE-READ (OR MESSAGE-BUFFER
                                                                                    (SETQ 
                                                                                     MESSAGE-BUFFER
                                                                                     (ALLOCSTRING
                                                                                      1024)))
                                                                1024))
                                    THEN (SUBSTRING MESSAGE-BUFFER 1 MESSAGE-LENGTH)
                                  ELSE "?? system message: polling failed")))
          (UNINTERRUPTABLY
              (SUBRCALL ETHER-CHECK)
              (SETQ PACKET (\INPUT.INTERRUPT NDB)))
          [COND
             (PACKET (\HANDLE.RAW.PACKET PACKET)
                    (COND
                       ((ILESSP (add CNTR 1)
                               \MAXWATCHERGETS)
                        (GO LP]
          (BLOCK)
          (SETQ CNTR 0)
          (GO LP])
)



(* ; "Machine independent part")

(DEFINEQ

(\10MB.STARTDRIVER
  [LAMBDA (NDB RESTARTFLG MYNSNUMBER)                        (* ; "Edited  4-Oct-2022 20:37 by lmm")
                                                             (* ; "Edited  4-May-91 15:50 by jds")

    (* ;; "Start the %"driver%" for the 10MB ethernet on Sun Medley.  In particular, turn on the C ehternet code, queue up the first input packet, and start the \10MBWATCHER process.")

    (SUBRCALL ETHER-SUSPEND)
    (OR (\INIT.ETHER.BUFFER.POOL)
        (ERROR "Unable to create buffer pool"))
    (replace NDBTQ of NDB with (create SYSQUEUE))
    (SETQ \10MB.RAWPACKETQ (create SYSQUEUE))
    (SETQ \10MB.INPUT.TIMEOUT (TIMES \RCLKSECOND \10MB.EXPECTED.RECEIVE.INTERVAL))
    (SETQ \MAIKO.10MB.NDB NDB)
    (\10MB.TURNONETHER NDB NIL NIL (OR MYNSNUMBER T)
           0 0)
    (PROG ((CSB (fetch NDBCSB of NDB)))
          (OR \MAIKO.INPUT.PACKET (SETQ \MAIKO.INPUT.PACKET (\ALLOCATE.ETHERPACKET)))
          (replace DLFIRSTICB of (fetch NDBCSB of NDB) with \ES.PENDING)
          (AND (SUBRCALL ETHER-GET \10MBPACKETLENGTH (fetch 10MBPACKETBASE of \MAIKO.INPUT.PACKET))
               (\ETHER-INTERRUPT))

     (* ;; "Commented out the 10MBWATCHER adder, so this process never gets created.")

     (* ;; "(replace NDBWATCHER of NDB with (ADD.PROCESS (LIST '\10MBWATCHER (KWOTE NDB)) 'RESTARTABLE 'SYSTEM 'AFTEREXIT 'DELETE))")

          (RETURN NDB])

(\10MB.CREATENDB
  [LAMBDA (ETHERTASK#)                                       (* ; "Edited  4-Oct-2022 15:37 by lmm")
                                                             (* ; "Edited 31-Mar-87 19:33 by bvm:")

    (* ;; "If using new ethernet style pups, set up translation list")

    (if (NEQ \10MBTYPE.PUP \EPT.PUP)
        then (CL:PUSHNEW (CONS \10MBTYPE.PUP \EPT.PUP)
                    \10MBTYPE.TRANSLATIONS :TEST 'EQUAL))
    (if (NEQ \10MBTYPE.3TO10 \EPT.3TO10)
        then (CL:PUSHNEW (CONS \10MBTYPE.3TO10 \EPT.3TO10)
                    \10MBTYPE.TRANSLATIONS :TEST 'EQUAL))
    (\10MB.STARTDRIVER (create NDB
                              NDBNSNET# _ 0
                              NDBPUPNET# _ 0
                              NETTYPE _ 10
                              NDBPUPTYPE _ \10MBTYPE.PUP
                              NDBTRANSMITTER _ (FUNCTION \10MBSENDPACKET)
                              NDBENCAPSULATOR _ (FUNCTION \10MBENCAPSULATE)
                              NDBBROADCASTP _ (FUNCTION \10MB.BROADCASTP)
                              NDBTASK# _ ETHERTASK#
                              NDBETHERFLUSHER _ (FUNCTION \10MB.TURNOFFETHER)
                              NDBCANHEARSELF _ NIL])

(\10MB.NOTESTAT
  [LAMBDA (STATUS BUF USE)                               (* bvm%: "15-JUL-82 14:43")

    (* ;; "Increment counter associated with this status")

    NIL])
)

(RPAQ? \10MB.RCLK.BOX (CREATECELL \FIXP))

(RPAQ? \10MB.EXPECTED.RECEIVE.INTERVAL 60)

(RPAQ? \10MB.INPUT.TIMEOUT (TIMES \RCLKSECOND \10MB.EXPECTED.RECEIVE.INTERVAL))

(RPAQ? \10MB.INPUT.TIMER (SETUPTIMER 0))
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS \10MB.RCLK.BOX \10MB.EXPECTED.RECEIVE.INTERVAL \10MB.INPUT.TIMEOUT \10MB.INPUT.TIMER)
)



(* ; "Buffer management")

(DEFINEQ

(\RELEASE.IOCB
(LAMBDA (IOCB USE) (* bvm%: " 3-MAR-83 16:17") (* ;; "Returns an IOCB to the free pool.  USE is INPUT or OUTPUT, according to which side should be credited.  Must be called uninterruptably") (COND ((NOT (AND IOCB (EMADDRESSP IOCB))) (ERROR "ARG NOT IOCB" IOCB)) (T (SELECTQ USE (INPUT (add \IOCB.INPUT.ALLOC 1)) (OUTPUT (add \IOCB.OUTPUT.ALLOC 1)) (\ILLEGAL.ARG USE)) (replace D0NEXTIOCB of IOCB with (\LOLOC \IOCBFREELIST)) (* ; "(\LOLOC NIL) = 0 works also") (SETQ \IOCBFREELIST IOCB) NIL)))
)

(\GET.IOCB
(LAMBDA (USE) (* edited%: "14-Aug-85 16:46") (* ;; "returns a IOCB for INPUT or OUTPUT use, or NIL if none is available.  This must be called uninterruptably, since we don't have any easy way of GCing these guys") (DECLARE (GLOBALVARS \10MBLOCALNDB)) (COND ((AND \IOCBFREELIST (IGREATERP (SELECTQ USE (INPUT \IOCB.INPUT.ALLOC) (OUTPUT \IOCB.OUTPUT.ALLOC) (\ILLEGAL.ARG USE)) 0)) (SELECTQ USE (INPUT (add \IOCB.INPUT.ALLOC -1)) (add \IOCB.OUTPUT.ALLOC -1)) (* ;; "I removed the call to HELP that used to be in here.  If the IOCB freelist goes NIL, the packet is dropped on the floor") (PROG1 \IOCBFREELIST (SETQ \IOCBFREELIST (EMPOINTER (fetch D0NEXTIOCB of \IOCBFREELIST))) (* ; "Note that (EMPOINTER 0) = NIL, so this works even when free list runs out")))))
)

(\INIT.ETHER.BUFFER.POOL
  [LAMBDA NIL                                                (* ; "Edited  4-Oct-2022 15:40 by lmm")
                                                             (* ejs%: "26-Jul-85 23:14")

    (* ;; "Divides up the zone bcpl reserved for us into IOCB's used for sending/receiving ether packets.  The IOCB's must be quad-aligned.  When an ether packet is to be sent, or prepared for receiving, an IOCB is assigned to it.  The IOCB contains length and status info and a pointer to the ether packet buffer in Lisp space.  The IOCB's are chained for the microcode, and the packets are chained independently in Lisp space so that we can keep track of them after the microcode finishes.  \IOCBFREELIST points at the first IOCB;  there are a total of \IOCBTOTAL of them.")

    (PROG (LASTBUF BUFFER ZONE ZONELENGTH)
          (COND
             ((EQ (SETQ ZONELENGTH (fetch (IFPAGE MDSZoneLength) of \InterfacePage))
                  0)                                         (* ; 
                                                       "Bcpl was unable to allocate any space for us")
              (SETQ \IOCBFREELIST NIL)
              (SETQ \IOCBTOTAL 0)
              (RETURN))
             (T (SETQ ZONE (fetch (IFPAGE MDSZone) of \InterfacePage))
                [SETQ ZONELENGTH (IDIFFERENCE ZONELENGTH (IDIFFERENCE ZONE (SETQ ZONE
                                                                            (CEIL ZONE
                                                                                  (ITIMES 2 
                                                                                         WORDSPERQUAD
                                                                                         ]
                                                             (* ; 
         "8-align the zone, in case the microcode cares, and adjust the length downward if necessary")
                (SETQ ZONE (EMPOINTER ZONE))                 (* ; "Make an actual pointer")
                ))
          (SETQ \IOCBTOTAL (IMIN (IQUOTIENT (IDIFFERENCE ZONELENGTH 3)
                                        \IOCB.LENGTH)
                                 \MAXIOCBS))
          (SETQ \IOCBFREELIST ZONE)
          (to \IOCBTOTAL do                                  (* ; 
                                                "Link the idle IOCB's together using short addresses")
                            [replace D0NEXTIOCB of ZONE with (\LOLOC (SETQ ZONE (\ADDBASE ZONE 
                                                                                       \IOCB.LENGTH]
             finally (replace D0NEXTIOCB of ZONE with 0))
          [SETQ \TELERAIDIOCB (PROG1 \IOCBFREELIST
                                  (SETQ \IOCBFREELIST (EMPOINTER (fetch D0NEXTIOCB of \IOCBFREELIST))
                                   ))]                       (* ; "Pop one off for TeleRaid")
          (add \IOCBTOTAL -1)
          [SETQ \IOCB.INPUT.ALLOC (SETQ \IOCB.INPUT.TOTAL (SETQ \IOCB.OUTPUT.ALLOC
                                                           (SETQ \IOCB.OUTPUT.TOTAL
                                                            (IQUOTIENT (ITIMES \IOCBTOTAL 2)
                                                                   3]
          (SETQ \10MB.IDEAL.INPUT.LENGTH (IMIN \10MB.MAX.INPUT.LENGTH (IQUOTIENT \IOCBTOTAL 2)))
          (RETURN \IOCBTOTAL])
)

(RPAQ? \10MBPACKETLENGTH 488)



(* ; "Dolphin/Dlion head")

(DEFINEQ

(\10MB.TURNOFFETHER
  [LAMBDA NIL                                             (* ; "Edited 11-May-88 16:11 by MASINTER")
    (SUBRCALL ETHER-SUSPEND])

(\10MB.TURNONETHER
  [LAMBDA (NDB SMASHSTATE NEWSTATE NSHOSTNUMBER ININTERRUPT OUTINTERRUPT)
                                                             (* ; "Edited  4-Oct-2022 13:24 by lmm")
                                                          (* ; "Edited 11-May-88 16:08 by MASINTER")

(* ;;; "Reset and activate ether associated with NDB.  If SMASHSTATE is given, it is a CSB-length block into which state is saved for later restoration by passing as the NEWSTATE arg.  If NEWSTATE is NIL, then the remaining non-NIL args give parameters for this activation: the host number for microcode to watch for, T meaning my own number;  and interrupt masks for when a packet arrives or finishes transmitting")

    (* ;; "For Daybreak, SMASHSTATE and NEWSTATE must be NIL")

    (PROG ((CSB (fetch NDBCSB of NDB)))
          (\10MB.TURNOFFETHER)
          [OR CSB (replace NDBCSB of NDB with (SETQ CSB (LOCF (fetch DLETHERNET of \IOPAGE]
          (replace DLFIRSTOCB of CSB with 0)
          (replace DLFIRSTICB of CSB with 0)
          [AND NSHOSTNUMBER (COND
                               ((EQ NSHOSTNUMBER T)
                                (\BLT (LOCF (fetch DLLOCALHOST0 of CSB))
                                      (LOCF (fetch (IFPAGE NSHost0) of \InterfacePage))
                                      \#WDS.NSHOSTNUMBER))
                               (T (\STORENSHOSTNUMBER (LOCF (fetch DLLOCALHOST0 of CSB))
                                         NSHOSTNUMBER]
          (AND OUTINTERRUPT (replace DLOUTPUTMASK of CSB with OUTINTERRUPT))
          (AND ININTERRUPT (replace DLINPUTMASK of CSB with ININTERRUPT))
          (replace DLMISSEDPACKETS of CSB with 0)
          (replace DLLASTICB of CSB with 0)
          (replace DLLASTOCB of CSB with 0)
          (SUBRCALL ETHER-RESET)
          (SUBRCALL ETHER-RESUME)
          (RETURN NDB])

(\10MB.RESTART.ETHER
  [LAMBDA NIL                                             (* ; "Edited 11-May-88 16:09 by MASINTER")
    (SUBRCALL ETHER-RESUME])
)



(* ; "Misc")

(DEFINEQ

(\10MB.PRINT.ENCAPSULATION
(LAMBDA (PACKET CALLER STREAM) (* ; "Edited 17-Dec-86 19:07 by bvm:") (FRESHLINE STREAM) (AND CALLER (printout STREAM CALLER ": ")) (PRIN1 "From host " STREAM) (PRINTNSHOSTNUMBER (fetch 10MBSOURCEHOST of PACKET) STREAM) (PRIN1 " to " STREAM) (PRINTNSHOSTNUMBER (fetch 10MBDESTHOST of PACKET) STREAM) (TERPRI STREAM) PACKET)
)
)
(DEFINEQ

(IOCBQLENGTH
(LAMBDA (FIRSTIOCB) (* bvm%: " 2-MAR-83 17:52") (OR FIRSTIOCB (SETQ FIRSTIOCB \IOCBFREELIST)) (while FIRSTIOCB sum (PROGN (SETQ FIRSTIOCB (EMPOINTER (fetch D0NEXTIOCB of FIRSTIOCB))) 1)))
)
)

(RPAQ? \10MB.GETGARBAGE NIL)

(RPAQ? \10MB.COLLECTSTATS NIL)



(* ; "PUP address resolution")

(DEFINEQ

(\HANDLE.RAW.3TO10
  [LAMBDA (PACKET TYPE)                                  (* ; "Edited 26-Feb-91 11:48 by jds")

    (* ;; "Called when a TRANSLATION packet is received.  This is either a packet requesting a 10-to-3 translation, in which case we respond if it is asking about us;  or it is a response to a request of ours, in which case we store the info in the cache")

    (COND
       ((EQ TYPE \EPT.3TO10)
        (PROG ((NDB (fetch EPNETWORK of PACKET))
               ADDR)
              (AND XIPTRACEFLG (\MAYBEPRINTPACKET PACKET 'GET))
              (AND NDB (SELECTC (fetch TRANSOPERATION of PACKET)
                           (\TRANS.OP.REQUEST 
                                (COND
                                   ([AND (EQ (fetch TRANSPUPHOST of PACKET)
                                             (fetch NDBPUPHOST# of NDB))
                                         (>= (fetch 10MBLENGTH of PACKET)
                                             (+ \10MBENCAPSULATION.WORDS (FOLDHI \TRANS.DATALENGTH 
                                                                                BYTESPERWORD]
                                                             (* ; 
                                                           "It's for us, and it's big enough")
                                    (\BLT [LOCF (fetch NSHNM0 of (SETQ ADDR (create
                                                                                     NSADDRESS]
                                          (LOCF (fetch BASETRANSSENDERNSHOST of PACKET))
                                          3)
                                    (\NOTE.3TO10 ADDR (fetch TRANSSENDERPUPHOST of PACKET
                                                                 )
                                           NDB)              (* ; "Add sender's address to cache")
                                    (\BLT (LOCF (fetch BASETRANSNSHOST of PACKET))
                                          (LOCF (fetch NSHNM0 of \MY.NSADDRESS))
                                          3)                 (* ; "Add in the information he wants")
                                    (replace TRANSOPERATION of PACKET with 
                                                                                   \TRANS.OP.RESPONSE
                                           )
                                    (ENCAPSULATE.ETHERPACKET NDB PACKET ADDR \TRANS.DATALENGTH 
                                           \10MBTYPE.3TO10)  (* ; "Send back the response")
                                    (AND XIPTRACEFLG (NOT (MEMB 'TRANS XIPIGNORETYPES))
                                         (PRINT3TO10 PACKET 'PUT XIPTRACEFILE))
                                    (replace EPREQUEUE of PACKET with 'FREE)
                                    (TRANSMIT.ETHERPACKET NDB PACKET)
                                    (RETURN))))
                           (\TRANS.OP.RESPONSE               (* ; 
                                                           "Add the information to the cache")
                                (\BLT [LOCF (fetch NSHNM0 of (SETQ ADDR (create NSADDRESS
                                                                                       ]
                                      (LOCF (fetch BASETRANSNSHOST of PACKET))
                                      3)
                                (\NOTE.3TO10 ADDR (fetch TRANSPUPHOST of PACKET)
                                       NDB))
                           NIL))
              (\RELEASE.ETHERPACKET PACKET))
        T])

(\TRANSLATE.3TO10
(LAMBDA (PUPHOSTNUMBER NDB) (* ; "Edited 15-Jan-88 00:49 by bvm") (* ;; "Translate from an PUPHOSTNUMBER to a NSHOSTNUMBER for the indicated network.  If we don't have the translation, we initiate a probe for it and return NIL") (OR (CADR (ASSOC PUPHOSTNUMBER (ffetch NDBTRANSLATIONS of (\DTEST NDB (QUOTE NDB))))) (PROG ((MYPUPHOSTNUMBER (ffetch NDBPUPHOST# of NDB)) PACKET) (COND ((EQ MYPUPHOSTNUMBER 0) (* ; "We don't know who we are yet") (RETURN))) (SETQ PACKET (\ALLOCATE.ETHERPACKET)) (replace EPTYPE of PACKET with \EPT.3TO10) (freplace TRANSOPERATION of PACKET with \TRANS.OP.REQUEST) (freplace TRANSPUPHOST of PACKET with PUPHOSTNUMBER) (\BLT (LOCF (FETCH BASETRANSSENDERNSHOST of PACKET)) (LOCF (FETCH NSHNM0 OF \MY.NSADDRESS)) 3) (freplace TRANSSENDERPUPHOST of PACKET with MYPUPHOSTNUMBER) (ENCAPSULATE.ETHERPACKET NDB PACKET BROADCASTNSHOSTNUMBER \TRANS.DATALENGTH \10MBTYPE.3TO10) (AND XIPTRACEFLG (\MAYBEPRINTPACKET PACKET (QUOTE PUT))) (freplace EPREQUEUE of PACKET with (QUOTE FREE)) (TRANSMIT.ETHERPACKET NDB PACKET) (* ; "We didn't find out this time, but we will later on") (RETURN))))
)

(PRINT3TO10
(LAMBDA (EPKT CALLER FILE PRE.NOTE DOFILTER) (* bvm%: "14-Feb-85 21:21") (COND ((OR (NOT DOFILTER) (NOT (MEMB (QUOTE TRANS) XIPIGNORETYPES))) (OR FILE (SETQ FILE XIPTRACEFILE)) (FRESHLINE FILE) (COND (PRE.NOTE (PRIN1 PRE.NOTE FILE))) (SELECTC (fetch TRANSOPERATION of EPKT) (\TRANS.OP.REQUEST (printout FILE CALLER " 3:10 trans request for " (fetch TRANSPUPHOST of EPKT) " from " (fetch TRANSSENDERPUPHOST of EPKT) " = ") (PRINTNSHOSTNUMBER (fetch TRANSSENDERNSHOST of EPKT) FILE)) (\TRANS.OP.RESPONSE (printout FILE CALLER " 3:10 trans response: " (fetch TRANSPUPHOST of EPKT) " = ") (PRINTNSHOSTNUMBER (fetch TRANSNSHOST of EPKT) FILE)) (printout FILE CALLER " unknown 10 to 3 translation operation " (fetch TRANSOPERATION of EPKT))) (TERPRI FILE))))
)

(\NOTE.3TO10
(LAMBDA (NSADDR PUPHOST NDB) (* ; "Edited 15-Jan-88 00:47 by bvm") (* ;; "Update cache to include this pairing") (PROG ((A (ASSOC PUPHOST (ffetch NDBTRANSLATIONS of (\DTEST NDB (QUOTE NDB)))))) (COND (A (RPLACA (CDR A) NSADDR)) (T (push (ffetch NDBTRANSLATIONS of NDB) (LIST PUPHOST NSADDR (CLOCK 0)))))))
)
)

(RPAQ? \10MBTYPE.PUP 512)

(RPAQ? \10MBTYPE.3TO10 513)

(RPAQ? \10MBTYPE.TRANSLATIONS )
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(GLOBALVARS \10MBTYPE.3TO10 \10MBTYPE.PUP \10MBTYPE.TRANSLATIONS)
)
(DECLARE%: EVAL@COMPILE 

(RPAQQ \EPT.3TO10 513)


(CONSTANTS \EPT.3TO10)
)

(ADDTOVAR \PACKET.PRINTERS (513 . PRINT3TO10))
(DECLARE%: EVAL@COMPILE DONTCOPY 
(DECLARE%: DOEVAL@COMPILE DONTCOPY

(LOCALVARS . T)
)


(FILESLOAD (SOURCE)
       10MBDECLS LLNSDECLS)


(FILESLOAD (LOADCOMP)
       LLETHER)
)
(PUTPROPS 10MBDRIVER COPYRIGHT ("Venue & Xerox Corporation" 1982 1983 1984 1985 1986 1987 1988 1990 
1991))
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (2517 8949 (\10MBGETPACKET 2527 . 3686) (\10MBSENDPACKET 3688 . 6065) (\10MBENCAPSULATE 
6067 . 7255) (\10MB.BROADCASTP 7257 . 7417) (\10MBWATCHER 7419 . 8947)) (8991 11944 (\10MB.STARTDRIVER
 9001 . 10474) (\10MB.CREATENDB 10476 . 11753) (\10MB.NOTESTAT 11755 . 11942)) (12341 17144 (
\RELEASE.IOCB 12351 . 12865) (\GET.IOCB 12867 . 13643) (\INIT.ETHER.BUFFER.POOL 13645 . 17142)) (17215
 19583 (\10MB.TURNOFFETHER 17225 . 17387) (\10MB.TURNONETHER 17389 . 19417) (\10MB.RESTART.ETHER 19419
 . 19581)) (19605 19973 (\10MB.PRINT.ENCAPSULATION 19615 . 19971)) (19974 20192 (IOCBQLENGTH 19984 . 
20190)) (20302 26296 (\HANDLE.RAW.3TO10 20312 . 24064) (\TRANSLATE.3TO10 24066 . 25196) (PRINT3TO10 
25198 . 25968) (\NOTE.3TO10 25970 . 26294)))))
STOP
