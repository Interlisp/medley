(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)
(FILECREATED "16-May-90 16:26:16" 
|{DSK}<usr>local>lde>lispcore>sources>ERROR-RUNTIME-AFTER-FASL.;2| 2531   

      |changes| |to:|  (VARS ERROR-RUNTIME-AFTER-FASLCOMS)

      |previous| |date:| " 4-Feb-88 19:01:54" 
|{DSK}<usr>local>lde>lispcore>sources>ERROR-RUNTIME-AFTER-FASL.;1|)


; Copyright (c) 1987, 1988, 1990 by Venue & Xerox Corporation.  All rights reserved.

(PRETTYCOMPRINT ERROR-RUNTIME-AFTER-FASLCOMS)

(RPAQQ ERROR-RUNTIME-AFTER-FASLCOMS ((PROP FILETYPE ERROR-RUNTIME-AFTER-FASL)
                                         

(* |;;;| "These functions must be PavCompiled.")

                                         (FUNCTIONS SI::CREATE-CONDITION-CASE-LITERALS)
                                         

(* |;;;| "These don't need to be, but depend on the previous stuff.")

                                         (FUNCTIONS ABORT CONDITIONS:CONTINUE 
                                                CONDITIONS:MUFFLE-WARNING USE-VALUE STORE-VALUE)))

(PUTPROPS ERROR-RUNTIME-AFTER-FASL FILETYPE :COMPILE-FILE)



(* |;;;| "These functions must be PavCompiled.")


(CL:DEFUN SI::CREATE-CONDITION-CASE-LITERALS (SI::TYPE-LIST)
   (LET ((SI::CATCH-TAG (LIST NIL)))                         (* \; "use a separate CONS for the catch tag so that you don't get a circular structure (you could save one by making the tag be the handler binding itself, then smashing its CDR with the closure).")
        (LIST* SI::CATCH-TAG SI::TYPE-LIST #'(CL:LAMBDA (SI::CONDITION)
                                                    (CL:THROW SI::CATCH-TAG SI::CONDITION)))))



(* |;;;| "These don't need to be, but depend on the previous stuff.")


(DEFINE-PROCEED-FUNCTION ABORT :REPORT "Abort"
   (CONDITION XCL:*CURRENT-CONDITION*))

(CL:DEFUN CONDITIONS:CONTINUE ()
   (LET ((CONDITIONS::R (CONDITIONS:FIND-RESTART 'CONDITIONS:CONTINUE)))
        (CL:WHEN CONDITIONS::R (CONDITIONS:INVOKE-RESTART CONDITIONS::R))))

(CL:DEFUN CONDITIONS:MUFFLE-WARNING ()
   (LET ((CONDITIONS::R (CONDITIONS:FIND-RESTART 'CONDITIONS:MUFFLE-WARNING)))
        (CL:WHEN CONDITIONS::R (CONDITIONS:INVOKE-RESTART CONDITIONS::R))))

(DEFINE-PROCEED-FUNCTION USE-VALUE :REPORT "Use a different value"
   XCL::VALUE)

(DEFINE-PROCEED-FUNCTION STORE-VALUE :REPORT "Store a new value and use it"
   XCL::VALUE)
(PUTPROPS ERROR-RUNTIME-AFTER-FASL COPYRIGHT ("Venue & Xerox Corporation" 1987 1988 1990))
(DECLARE\: DONTCOPY
  (FILEMAP (NIL)))
STOP
