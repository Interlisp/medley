(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 2-Jun-2025 12:46:07" {WMEDLEY}<sources>MCCS.;61 41922  

      :EDIT-BY rmk

      :CHANGES-TO (VARS SIGMATOMCCS)
                  (FNS \ASCIIMAPARRAY)

      :PREVIOUS-DATE " 2-Jun-2025 10:58:20" {WMEDLEY}<sources>MCCS.;58)


(PRETTYCOMPRINT MCCSCOMS)

(RPAQQ MCCSCOMS
       (
        (* ;; "Stringlet number encoding common to MCCS and XCCS")

        (FNS \MCCSINCCODE \MCCSPEEKCCODE \MCCSOUTCHAR \MCCSBACKCCODE \MCCSFORMATBYTESTREAM 
             \MCCSCHARSETFN)
        (FNS \CREATE.MCCS.EXTERNALFORMAT)
        (FNS \MCCS.24BITENCODING.ERROR)
        (INITVARS (*SIGNAL-MCCS.24BITENCODING.ERROR*))
        (DECLARE%: EVAL@COMPILE DONTCOPY (EXPORT (CONSTANTS (\NORUNCODE 255)
                                                        (NSCHARSETSHIFT 255))
                                                (MACROS \RUNCODED)))
        (DECLARE%: DONTEVAL@LOAD DOCOPY (P (\CREATE.MCCS.EXTERNALFORMAT :MCCS)
                                           (\CREATE.MCCS.EXTERNALFORMAT :XCCS)))
        
        (* ;; "")

        
        (* ;; "Assignment of MCCS characters")

        (ALISTS (CHARACTERNAMES Lowline Caret Currency Leftarrow Uparrow Dollar))
        [DECLARE%: EVAL@COMPILE DONTCOPY (CONSTANTS (MTOXCODEMAP (CHARCODE (($ "0,244")
                                                                            (^ "0,255")
                                                                            (_ "0,254")
                                                                            (Currency "0,44")
                                                                            (Lowline "0,137")
                                                                            (Caret "0,136"]
        
        (* ;; "Mapping between true XCCS and MCCS codes")

        (FNS MTOXCODE XTOMCODE)
        (FNS MTOXCODE$ XTOMCODE$)
        (COMS                                                (* ; 
                                                        "From INTERPRESS:  Mapping functions to MCCS")
              (INITVARS (ASCIITONSTRANSLATIONS))
              
              (* ;; "Currently used by \TEDIT.TRANSLATE.ASCIICHARS \CREATEINTERPRESSFONTS.")

              
              (* ;; "These are in priority order:  if an early one doesn't find a font for a family, the later ones are tried (essentially going to MODERN as the default).")

              
              (* ;; "Not clear whether/how these relate to DISPLAYFONTCOERCIONS:  TBD.")

              (ADDVARS (ASCIITONSTRANSLATIONS (TIMESROMAN NIL CLASSIC)
                              (GACHA NIL TERMINAL)
                              (HELVETICA NIL MODERN)
                              (CLASSIC NIL MODERN)
                              (GACHA NIL MODERN)
                              (TIMESROMAN NIL MODERN)
                              (LOGO NIL LOGOTYPES)
                              (HIPPO HIPPOTONSARRAY CLASSIC)
                              (CYRILLIC CYRILLICTONSARRAY CLASSIC)
                              (SYMBOL SYMBOLTONSARRAY MODERN)
                              (MATH MATHTONSARRAY CLASSIC)
                              (SIGMA SIGMATOMCCSARRAY MODERN)))
              (FNS \COERCEASCIITONSFONT)
              (VARS ASCIITOMCCS SYMBOLTOMCCS SIGMATOMCCS HIPPOTOMCCS CYRILLICTOMCCS MATHTOMCCS)
              (FNS \ASCIIMAPARRAY)
                                                             (* ; 
                                   "The arrays may not be useful--can be constructed when/if needed?")
              (INITVARS (\ASCII2MCCS (\ASCIIMAPARRAY 'MCCS))
                     (\ASCII2XCCS (\ASCIIMAPARRAY 'XCCS))
                     (SYMBOLTONSARRAY (\ASCIIMAPARRAY SYMBOLTOMCCS))
                     (HIPPOTONSARRAY (\ASCIIMAPARRAY HIPPOTOMCCS))
                     (CYRILLICTONSARRAY (\ASCIIMAPARRAY CYRILLICTOMCCS))
                     (\MATHTONSARRAY (\ASCIIMAPARRAY MATHTOMCCS))
                     (SIGMATONSARRAY (\ASCIIMAPARRAY SIGMATOMCCS)))
              (FNS MCCSCODEMAP ATOMCODE SYMBOLTOMCODE SIGMATOMCODE MATHTOMCODE HTOMCODE CTOMCODE 
                   ATOXCODE))))



(* ;; "Stringlet number encoding common to MCCS and XCCS")

(DEFINEQ

(\MCCSINCCODE
  [LAMBDA (STREAM COUNTP)                                    (* ; "Edited  8-Dec-2023 15:28 by rmk")
                                                            (* ; "Edited  6-Aug-2021 15:57 by rmk:")

(* ;;; "Returns a 16 bit character code.  SHIFTEDCSET is STREAM's char set left shifted 8.")

(* ;;; "If COUNTP is non-NIL, the variable *BYTECOUNTER* is set freely to the number of bytes read.")

(* ;;; "This doesn't do  EOL conversion, \INCHAR does that")

    (DECLARE (USEDFREE *BYTECOUNTER*))
    (\DTEST STREAM 'STREAM)
    (LET (NUMBYTES (CSET (ffetch (STREAM CHARSET) of STREAM))
                (CHAR (\BIN STREAM)))                        (* ; 
                                             "Error on EOF unless ENDOFSTREAMOP does something else.")

         (* ;; " NUMBYTES tracks the number of \BINs.  ")

         (IF (EQ CHAR NSCHARSETSHIFT)
             THEN                                            (* ; 
                                                             "Shifting character sets, toss CHAR")
                  (SETQ CSET (\BIN STREAM))
                  (IF (NEQ NSCHARSETSHIFT CSET)
                      THEN                                   (* ; 
                                                             "Shift to new runcode CSET: SH CS CH")
                           (SETQ CHAR (\BIN STREAM))
                           (SETQ NUMBYTES 3)
                           (freplace (STREAM CHARSET) of STREAM with CSET)
                    ELSEIF (EQ 0 (\BIN STREAM))
                      THEN                                   (* ; "SH SH CSH  CS CH where CSH is 0")

                           (* ;; 
    "The high-order character set byte must be 0, because we don't support obese characters (24 bit)")

                           (SETQ CSET (\BIN STREAM))
                           (SETQ CHAR (\BIN STREAM))         (* ; "To align with below")
                           (SETQ NUMBYTES 5)
                           (freplace (STREAM CHARSET) of STREAM with \NORUNCODE)
                    ELSE (\NSIN.24BITENCODING.ERROR STREAM)) 

                  (* ;; "The stream now knows the new character set, runcoded or not.")

           ELSEIF (EQ CSET \NORUNCODE)
             THEN                                            (* ; "2-bytes")
                  (SETQ CSET CHAR)
                  (SETQ CHAR (\BIN STREAM))
                  (SETQ NUMBYTES 2)
           ELSE 
                (* ;; "Runcoded CSET and CHAR")

                (SETQ NUMBYTES 1))
         (CL:WHEN COUNTP (SETQ *BYTECOUNTER* NUMBYTES))
         (CL:WHEN CHAR                                       (* ; 
                                                "Typically NIL if ENDOFSTREAMOP returned NIL at EOF ")
             (LOGOR (UNFOLD CSET 256)
                    CHAR))])

(\MCCSPEEKCCODE
  [LAMBDA (STREAM NOERROR)                                   (* ; "Edited 23-Apr-2025 14:16 by rmk")
                                                             (* ; "Edited  8-Dec-2023 15:32 by rmk")
                                                            (* ; "Edited 21-Jun-2021 23:44 by rmk:")

    (* ;; 
   "Modeled on \MCCSINCCODE, but peeks at the last byte in the sequence, leaves the stream unchanged")

    (\DTEST STREAM 'STREAM)
    (LET ((CSET (ffetch (STREAM CHARSET) of STREAM))
          (CHAR (\PEEKBIN STREAM NOERROR)))

         (* ;; "Returns a 16 bit character code.  Doesn't do EOL conversion--\PEEKCCODE does that.  ")

         (* ;; "We don't change the charset in the stream, put the file ptr back the way it was.")

         (CL:WHEN CHAR
             (IF (EQ CHAR NSCHARSETSHIFT)
                 THEN (\BIN STREAM)                          (* ; "Read the peeked shifting byte")
                      (SETQ CSET (\BIN STREAM))              (* ; "Consume the char shift byte")
                      (IF (NEQ CSET NSCHARSETSHIFT)
                          THEN 
                               (* ;; 
           "Shift to new runcode CSET: SH CS CH.  We have to BIN what we peeked, BIN, and peek again")

                               (SETQ CHAR (\PEEKBIN STREAM NOERROR))
                               (\BACKFILEPTR STREAM)
                               (\BACKFILEPTR STREAM)
                        ELSEIF (EQ 0 (\BIN STREAM))
                          THEN                               (* ; "SH SH CSH  CS CH where CSH is 0")

                               (* ;; 
       "Note: no eof error check on this \BIN -- an eof in the middle of a charset shift is an error")

                               (SETQ CSET (\BIN STREAM))
                               (SETQ CHAR (\PEEKBIN STREAM NOERROR))
                               (\BACKFILEPTR STREAM)
                               (\BACKFILEPTR STREAM)
                               (\BACKFILEPTR STREAM)
                               (\BACKFILEPTR STREAM)
                        ELSE (\NSIN.24BITENCODING.ERROR STREAM))
               ELSEIF (EQ CSET \NORUNCODE)
                 THEN                                        (* ; "2 byte runs, BIN/PEEK/BACK")
                      (SETQ CSET CHAR)
                      (\BIN STREAM)
                      (SETQ CHAR (\PEEKBIN STREAM NOERROR))  (* ; "One BACKFILEPTR seems OK")
                      (\BACKFILEPTR STREAM))

             (* ;; "No need to back up for the runcoded case")

             (CL:WHEN CHAR
                 (LOGOR (UNFOLD CSET 256)
                        CHAR)))])

(\MCCSOUTCHAR
  [LAMBDA (STREAM CHARCODE)                                  (* ; "Edited 23-Apr-2025 14:16 by rmk")
                                                            (* ; "Edited 13-Aug-2021 10:24 by rmk:")

    (* ;; "Closed function for the :MCCS external format")

    (COND
       ((EQ CHARCODE (CHARCODE EOL))
        (FREPLACE (STREAM CHARPOSITION) OF STREAM WITH 0)
        [COND
           [(NOT (\RUNCODED STREAM))                         (* ; 
                                           "Charset is a constant 0, we put out the high-order byte.")
            (\BOUT STREAM (\CHARSET (CHARCODE EOL]
           ((EQ (\CHARSET (CHARCODE EOL))
                (ffetch (STREAM CHARSET) of STREAM)))
           (T                                                (* ; 
                                        "We are runcoded, and not in character set 0, have to shift.")
              (\BOUT STREAM NSCHARSETSHIFT)
              (\BOUT STREAM (freplace (STREAM CHARSET) of STREAM with (\CHARSET (CHARCODE EOL]

        (* ;; "We are now in the right charset (0) for the first EOL byte.  For CRLF, the CR is immediately followed by the LF byte, without the prefix 0 byte even if not runcoded, i.e. the 2 bytes are though of as a composite.  The stream is left in CSET0 (the freplace above), read for another shift according to the next shift in a runcoded file.")

        (\BOUTEOL STREAM))
       (T (CHANGE (FFETCH (STREAM CHARPOSITION) OF STREAM)
                 (IPLUS16 1 DATUM))
          (COND
             ((NOT (\RUNCODED STREAM))
              (\BOUT STREAM (\CHARSET CHARCODE))
              (\BOUT STREAM (\CHAR8CODE CHARCODE)))
             ((EQ (\CHARSET CHARCODE)
                  (ffetch (STREAM CHARSET) of STREAM))
              (\BOUT STREAM (\CHAR8CODE CHARCODE)))
             (T (\BOUT STREAM NSCHARSETSHIFT)
                (\BOUT STREAM (freplace (STREAM CHARSET) of STREAM with (\CHARSET CHARCODE)))
                (\BOUT STREAM (\CHAR8CODE CHARCODE])

(\MCCSBACKCCODE
  [LAMBDA (STREAM COUNTP)                                    (* ; "Edited  8-Dec-2023 15:34 by rmk")
                                                             (* ; "Edited 19-Jul-2022 17:12 by rmk")
                                                            (* ; "Edited 13-Aug-2021 14:08 by rmk:")
    (DECLARE (USEDFREE *BYTECOUNTER*))
    (LET ((BYTE (AND (\BACKFILEPTR STREAM)
                     (\PEEKBIN STREAM)))
          (CSET (fetch (STREAM CHARSET) of STREAM)))
         (CL:WHEN BYTE

             (* ;; "The immediately preceding byte must be a character byte. If it is a byte in a runcode, then we are done, even if the byte before is part of a shift sequence.")

             (* ;; "But if we are currently in a nonruncoded file, we have to go back one more to get the character set byte.")

             (* ;; "If we can't back up, we are already at the beginning.")

             (IF (EQ \NORUNCODE CSET)
                 THEN (IF (\BACKFILEPTR STREAM)
                          THEN (CL:WHEN COUNTP (SETQ *BYTECOUNTER* -2))
                               (LOGOR (UNFOLD (\PEEKBIN STREAM)
                                             256)
                                      BYTE)
                        ELSE (CL:WHEN COUNTP (SETQ *BYTECOUNTER* -1))
                             NIL)
               ELSE (CL:WHEN COUNTP (SETQ *BYTECOUNTER* -1))
                    (LOGOR (UNFOLD CSET 256)
                           BYTE)))])

(\MCCSFORMATBYTESTREAM
  [LAMBDA (STREAM BYTESTREAM)                                (* ; "Edited 27-May-2025 23:42 by rmk")
                                                             (* ; "Edited 26-Mar-2024 11:00 by rmk")
                                                             (* ; "Edited 19-Mar-2024 16:02 by rmk")
    (\EXTERNALFORMAT BYTESTREAM (\EXTERNALFORMAT STREAM))

    (* ;; "This stream may be read as a continuation of STREAM (TTYIN, LAFITE?), and we want to make sure that the bytes are encoded properly.  So let's assert (and possibly mark) that that's its current situation.")

    (\MCCSCHARSETFN BYTESTREAM (fetch (STREAM CHARSET) of STREAM))
    BYTESTREAM])

(\MCCSCHARSETFN
  [LAMBDA (STREAM CHARSET DONTMARKSTREAM)                    (* ; "Edited  9-Dec-2023 11:18 by rmk")

    (* ;; "This differs from  \GENERIC.CHARSET in that it actually writes the shifting bytes into an output stream, unless DONTMARKSTREAM.  It will do write the shifts, even if it just replicates the situation that is already there (presumably CHARSET = the old CHARSET).  The client should test and avoid calling if useless shifts are not desired.")

    (LET [(CSET (ffetch (STREAM CHARSET) of (\DTEST STREAM 'STREAM]
         (CL:WHEN CHARSET
             (CL:WHEN (EQ CHARSET T)
                    (SETQ CHARSET \NORUNCODE))
             (CL:UNLESS (EQ CHARSET CSET)
                 (freplace (STREAM CHARSET) of STREAM with CHARSET)
                 (CL:UNLESS DONTMARKSTREAM
                     (CL:WHEN (\IOMODEP STREAM 'OUTPUT T)
                         (\BOUT STREAM NSCHARSETSHIFT)
                         (if (EQ CHARSET \NORUNCODE)
                             then (\BOUT STREAM \NORUNCODE)
                                  (\BOUT STREAM 0)
                           else (\BOUT STREAM CHARSET))))))
         CSET])
)
(DEFINEQ

(\CREATE.MCCS.EXTERNALFORMAT
  [LAMBDA (NAME EOL)                                         (* ; "Edited 23-Apr-2025 14:19 by rmk")
                                                             (* ; "Edited  7-Dec-2023 23:03 by rmk")
                                                             (* ; "Edited 30-Jun-2022 18:08 by rmk")
                                                            (* ; "Edited 10-Sep-2021 19:49 by rmk:")

(* ;;; "Create the :MCCS external format.  Stream's EOL overrides the (vacuous) default here")

    (MAKE-EXTERNALFORMAT (OR NAME :MCCS)
           (FUNCTION \MCCSINCCODE)
           (FUNCTION \MCCSPEEKCCODE)
           (FUNCTION \MCCSBACKCCODE)
           (FUNCTION \MCCSOUTCHAR)
           (FUNCTION \MCCSFORMATBYTESTREAM)
           (OR EOL 'LF)
           T NIL NIL (FUNCTION \MCCSCHARSETFN])
)
(DEFINEQ

(\MCCS.24BITENCODING.ERROR
  [LAMBDA (STREAM)                                           (* ; "Edited 23-Apr-2025 14:34 by rmk")
                                                             (* bvm%: "12-Mar-86 15:35")
    (DECLARE (USEDFREE *SIGNAL-MCCS.24BITENCODING.ERROR*))

(* ;;; "Called if we see the sequence shift,shift on STREAM -- means shift to 24-bit character set, which we don't support.  Usually this just means we're erroneously reading a binary file as text.  If this function returns, its value is taken as a character set to shift to")

    (CL:WHEN *SIGNAL-MCCS.24BITENCODING.ERROR*               (* ; 
                                                             "Only cause error if user/reader cares")
        (ERROR "24-bit NS encoding not supported" STREAM))   (* ; "Return charset zero")
    0])
)

(RPAQ? *SIGNAL-MCCS.24BITENCODING.ERROR* )
(DECLARE%: EVAL@COMPILE DONTCOPY 
(* "FOLLOWING DEFINITIONS EXPORTED")(DECLARE%: EVAL@COMPILE 

(RPAQQ \NORUNCODE 255)

(RPAQQ NSCHARSETSHIFT 255)


(CONSTANTS (\NORUNCODE 255)
       (NSCHARSETSHIFT 255))
)
(DECLARE%: EVAL@COMPILE 

(PUTPROPS \RUNCODED MACRO (OPENLAMBDA (STREAM)

                            (* ;; "returns NIL is the stream is not runcoded, that is, if the stream has 16 bit bytes explicitly represented")
                                                             (* ; 
                                        "note that neq is ok since charsets are known to be SMALLP's")
                            (NEQ (fetch CHARSET of STREAM)
                                 \NORUNCODE)))
)

(* "END EXPORTED DEFINITIONS")

)
(DECLARE%: DONTEVAL@LOAD DOCOPY 

(\CREATE.MCCS.EXTERNALFORMAT :MCCS)

(\CREATE.MCCS.EXTERNALFORMAT :XCCS)
)



(* ;; "")




(* ;; "Assignment of MCCS characters")


(ADDTOVAR CHARACTERNAMES (Lowline "0,254")
                         (Caret "0,255")
                         (Currency "0,244")
                         (Leftarrow "_")
                         (Uparrow "^")
                         (Dollar $))
(DECLARE%: EVAL@COMPILE DONTCOPY 
(DECLARE%: EVAL@COMPILE 

(RPAQ MTOXCODEMAP (CHARCODE (($ "0,244")
                             (^ "0,255")
                             (_ "0,254")
                             (Currency "0,44")
                             (Lowline "0,137")
                             (Caret "0,136"))))


[CONSTANTS (MTOXCODEMAP (CHARCODE (($ "0,244")
                                   (^ "0,255")
                                   (_ "0,254")
                                   (Currency "0,44")
                                   (Lowline "0,137")
                                   (Caret "0,136"]
)
)



(* ;; "Mapping between true XCCS and MCCS codes")

(DEFINEQ

(MTOXCODE
  [LAMBDA (MCODE)                                            (* ; "Edited  1-May-2025 20:05 by rmk")
                                                             (* ; "Edited 27-Apr-2025 13:42 by rmk")
                                                             (* ; "Edited 23-Apr-2025 14:13 by rmk")
    (OR (CADR (FASSOC MCODE MTOXCODEMAP))
        MCODE])

(XTOMCODE
  [LAMBDA (XCODE)                                            (* ; "Edited 11-May-2025 19:21 by rmk")
                                                             (* ; "Edited  1-May-2025 18:57 by rmk")
                                                             (* ; "Edited 27-Apr-2025 13:42 by rmk")
                                                             (* ; "Edited 23-Apr-2025 14:13 by rmk")
    (OR [CAR (find PAIR in MTOXCODEMAP suchthat (EQ XCODE (CADR PAIR]
        XCODE])
)
(DEFINEQ

(MTOXCODE$
  [LAMBDA (MCODE)                                            (* ; "Edited 11-May-2025 16:54 by rmk")

    (* ;; "For the variant of XCCS where $ is at 44Q and currency is at 244Q")

    (SELCHARQ MCODE
         (($ Currency) 
              MCODE)
         (MTOXCODE MCODE])

(XTOMCODE$
  [LAMBDA (XCODE)                                            (* ; "Edited 11-May-2025 16:54 by rmk")

    (* ;; "For the variant of XCCS where $ is at 44Q and currency is at 244Q")

    (SELCHARQ XCODE
         (($ Currency) 
              XCODE)
         (XTOMCODE XCODE])
)



(* ; "From INTERPRESS:  Mapping functions to MCCS")


(RPAQ? ASCIITONSTRANSLATIONS )



(* ;; "Currently used by \TEDIT.TRANSLATE.ASCIICHARS \CREATEINTERPRESSFONTS.")




(* ;; 
"These are in priority order:  if an early one doesn't find a font for a family, the later ones are tried (essentially going to MODERN as the default)."
)




(* ;; "Not clear whether/how these relate to DISPLAYFONTCOERCIONS:  TBD.")


(ADDTOVAR ASCIITONSTRANSLATIONS
          (TIMESROMAN NIL CLASSIC)
          (GACHA NIL TERMINAL)
          (HELVETICA NIL MODERN)
          (CLASSIC NIL MODERN)
          (GACHA NIL MODERN)
          (TIMESROMAN NIL MODERN)
          (LOGO NIL LOGOTYPES)
          (HIPPO HIPPOTONSARRAY CLASSIC)
          (CYRILLIC CYRILLICTONSARRAY CLASSIC)
          (SYMBOL SYMBOLTONSARRAY MODERN)
          (MATH MATHTONSARRAY CLASSIC)
          (SIGMA SIGMATOMCCSARRAY MODERN))
(DEFINEQ

(\COERCEASCIITONSFONT
  [LAMBDA (MAPARRAY ASCIIFAMILY NSFAMILY SIZE FONTFACE ROTATION DEVICE)
                                                             (* ; "Edited 24-May-2025 20:04 by rmk")
                                                             (* ; "Edited 20-Dec-2024 13:37 by rmk")
                                                             (* gbn "12-Sep-85 15:10")

    (* ;; "Produces an ascii font with the proper widths for the ns-character correspondences defined by \ASCII2XCCS")

    (PROG (CHARSETDIR (FD (\CREATESTARFONT NSFAMILY SIZE FONTFACE ROTATION DEVICE)))
          (OR FD (RETURN NIL))
          [SETQ CHARSETDIR (CONS (CONS 0 (\GETCHARSETINFO 0 FD]
          [bind NSCODE CS for I from 0 to 255 unless (OR (EQ I (SETQ NSCODE (ELT MAPARRAY I)))
                                                         (ASSOC (SETQ CS (\CHARSET NSCODE))
                                                                CHARSETDIR))
             do                                              (* ; 
    "Run thru the translate table looking for non-0 charsets.  Add their width info to the directory")
                (push CHARSETDIR (CONS CS
                                       (COND
                                          ((\GETCHARSETINFO CS FD))
                                          (T                 (* ; 
                              "There isn't any info for that character.  Warn the guy, but continue.")
                                             (FRESHLINE PROMPTWINDOW)
                                             (printout PROMPTWINDOW 
                                                    "Warning:  Information about character set " 
                                                    .I3.8 CS " missing from font " ASCIIFAMILY %, 
                                                    SIZE ".")
                                             NIL]            (* ; 
                                                       "Return if one of the fonts couldn't be found")
          [bind CHARSETINFO NSCODE (WIDTHS _ (fetch (CHARSETINFO WIDTHS) of (\GETCHARSETINFO 0 FD)))
             for I from 0 to 255 unless (EQ I (SETQ NSCODE (ELT MAPARRAY I)))
             when (SETQ CHARSETINFO (CDR (ASSOC (\CHARSET NSCODE)
                                                CHARSETDIR)))
             do                                              (* ; 
 "For each non-ASCII character, look for width info in the right NS place.  If none, use zero width.")
                (\FSETWIDTH WIDTHS I (\FGETWIDTH (fetch (CHARSETINFO WIDTHS) of CHARSETINFO)
                                            (\CHAR8CODE NSCODE]
          (replace OTHERDEVICEFONTPROPS of FD with MAPARRAY)
          [COND
             ((NEQ NSFAMILY ASCIIFAMILY)

              (* ;; "Update the font deacriptor so it looks like it's really for the family the guy wanted.  Also save the info we used to get here.")

              (replace FONTFAMILY of FD with ASCIIFAMILY)
              (replace FONTDEVICESPEC of FD with (LIST NSFAMILY SIZE FONTFACE ROTATION DEVICE]
          (RETURN FD])
)

(RPAQQ ASCIITOMCCS
       ((2 191)
        (4 200)
        (7 185)
        (8 161)
        (11 194)
        (14 197)
        (15 61229)
        (19 61221)
        (22 61220)
        (24 45)
        (25 61230)
        (28 61228)
        (30 184)
        (96 169)
        (155 61220)
        (156 61221)))

(RPAQQ SYMBOLTOMCCS
       ((1 0)
        (2 180)
        (3 8546)
        (4 0)
        (5 8574)
        (6 177)
        (7 61309)
        (8 61282)
        (9 61283)
        (10 61284)
        (11 61285)
        (12 0)
        (13 184)
        (14 0)
        (15 0)
        (16 61296)
        (17 61298)
        (18 61273)
        (19 61272)
        (20 8549)
        (21 8550)
        (22 0)
        (23 0)
        (24 61054)
        (25 61305)
        (26 61275)
        (27 61274)
        (28 8546)
        (29 61299)
        (30 0)
        (31 0)
        (32 0)
        (33 174)
        (34 173)
        (35 175)
        (36 61266)
        (37 61250)
        (38 61251)
        (39 61303)
        (40 61261)
        (41 61263)
        (42 0)
        (43 0)
        (44 61262)
        (45 0)
        (46 0)
        (47 0)
        (48 0)
        (49 8551)
        (50 61258)
        (51 61259)
        (52 61281)
        (53 0)
        (54 61292)
        (55 172)
        (56 61365)
        (57 61364)
        (58 61290)
        (59 61351)
        (60 0)
        (61 0)
        (62 0)
        (63 47)
        (64 0)
        (91 61271)
        (92 61270)
        (93 0)
        (94 61366)
        (95 61367)
        (96 61238)
        (97 61239)
        (98 61362)
        (99 61363)
        (100 61360)
        (101 61361)
        (102 123)
        (103 125)
        (104 61234)
        (105 61235)
        (106 61052)
        (107 8514)
        (108 61243)
        (109 61242)
        (110 8740)
        (111 8742)
        (112 61308)
        (113 8546)
        (114 0)
        (115 61301)
        (116 0)
        (117 0)
        (118 0)
        (119 0)
        (120 167)
        (121 61232)
        (122 61233)
        (123 182)
        (124 64)
        (125 211)
        (126 163)
        (127 36)
        (128 0)
        (129 0)
        (130 0)
        (131 0)
        (132 0)
        (133 0)
        (134 0)
        (135 0)
        (136 0)
        (137 0)
        (138 0)
        (139 0)
        (140 0)
        (141 0)
        (142 0)
        (143 0)
        (144 0)
        (145 0)
        (146 0)
        (147 0)
        (148 0)
        (149 0)
        (150 0)
        (151 0)
        (152 0)
        (153 0)
        (154 0)
        (155 0)
        (156 0)
        (157 0)
        (158 0)
        (159 0)
        (160 0)
        (161 0)
        (162 0)
        (163 0)
        (164 0)
        (165 0)
        (166 0)
        (167 0)
        (168 0)
        (169 0)
        (170 0)
        (171 0)
        (172 0)
        (173 0)
        (174 0)
        (175 0)
        (176 0)
        (177 0)
        (178 0)
        (179 0)
        (180 0)
        (181 0)
        (182 0)
        (183 0)
        (184 0)
        (185 0)
        (186 0)
        (187 0)
        (188 0)
        (189 0)
        (190 0)
        (191 0)
        (192 0)
        (193 0)
        (194 0)
        (195 0)
        (196 0)
        (197 0)
        (198 0)
        (199 0)
        (200 0)
        (201 0)
        (202 0)
        (203 0)
        (204 0)
        (205 0)
        (206 0)
        (207 0)
        (208 0)
        (209 0)
        (210 0)
        (211 0)
        (212 0)
        (213 0)
        (214 0)
        (215 0)
        (216 0)
        (217 0)
        (218 0)
        (219 0)
        (220 0)
        (221 0)
        (222 0)
        (223 0)
        (224 0)
        (225 0)
        (226 0)
        (227 0)
        (228 0)
        (229 0)
        (230 0)
        (231 0)
        (232 0)
        (233 0)
        (234 0)
        (235 0)
        (236 0)
        (237 0)
        (238 0)
        (239 0)
        (240 0)
        (241 0)
        (242 0)
        (243 0)
        (244 0)
        (245 0)
        (246 0)
        (247 0)
        (248 0)
        (249 0)
        (250 0)
        (251 0)
        (252 0)
        (253 0)
        (254 0)
        (255 0)))

(RPAQQ SIGMATOMCCS
       ((65 65 low squaredot not in XCCS)
        (67 61302 "357,166" contourintegral)
        (73 61270 "357,126" intersection)
        (76 61366 "357,266" and)
        (77 61306 "357,172" Summation)
        (80 61307 "357,173" Product)
        (82 61308 "357,174" radical)
        (83 61301 "357,165" integral)
        (85 61271 "357,127" union)
        (86 61367 "357,267" or)))

(RPAQQ HIPPOTOMCCS
       ((14 60973)
        (15 61229)
        (19 61221)
        (22 61220)
        (24 60973)
        (25 61228)
        (65 9793)
        (66 9794)
        (67 9809)
        (68 9797)
        (69 9798)
        (70 9818)
        (71 9796)
        (72 9802)
        (73 9804)
        (75 9805)
        (76 9806)
        (77 9807)
        (78 9808)
        (79 9810)
        (80 9811)
        (81 9803)
        (82 9813)
        (83 9814)
        (84 9816)
        (85 9817)
        (87 9821)
        (88 9819)
        (89 9820)
        (90 9801)
        (94 173)
        (95 172)
        (97 9825)
        (98 9826)
        (99 9841)
        (100 9829)
        (101 9830)
        (102 9850)
        (103 9828)
        (104 9834)
        (105 9836)
        (107 9837)
        (108 9838)
        (109 9839)
        (110 9840)
        (111 9842)
        (112 9843)
        (113 9835)
        (114 9845)
        (115 9846)
        (116 9848)
        (117 9849)
        (119 9853)
        (120 9851)
        (121 9852)
        (122 9833)
        (155 61220)
        (156 61221)
        (183 61286)))

(RPAQQ CYRILLICTOMCCS
       ((36 10023)
        (42 10041)
        (45 8510)
        (50 10095)
        (52 10071)
        (54 10088)
        (56 10089)
        (60 171)
        (62 187)
        (64 10047)
        (65 10017)
        (66 10018)
        (67 10046)
        (68 10021)
        (69 10022)
        (70 10038)
        (71 10020)
        (72 10049)
        (73 10026)
        (74 10027)
        (75 10028)
        (76 10029)
        (77 10030)
        (78 10031)
        (79 10032)
        (80 10033)
        (81 10039)
        (82 10034)
        (83 10035)
        (84 10036)
        (85 10037)
        (86 10019)
        (87 10024)
        (88 10045)
        (89 10048)
        (90 10025)
        (91 10090)
        (92 9984)
        (93 10091)
        (94 10044)
        (95 10092)
        (96 9984)
        (97 10065)
        (98 10066)
        (99 10110)
        (100 10069)
        (101 10070)
        (102 10086)
        (103 10068)
        (104 10097)
        (105 10074)
        (106 10075)
        (107 10076)
        (108 10077)
        (109 10078)
        (110 10079)
        (111 10080)
        (112 10081)
        (113 10087)
        (114 10082)
        (115 10083)
        (116 10084)
        (117 10085)
        (118 10067)
        (119 10072)
        (120 10093)
        (121 10096)
        (122 10073)
        (123 10042)
        (124 9984)
        (125 10043)
        (126 10040)
        (127 9984)
        (143 10094)
        (155 61220)
        (156 61221)
        (183 61286)))

(RPAQQ MATHTOMCCS
       ((1 61307)
        (2 61234)
        (3 61235)
        (4 0)
        (5 163)
        (6 61301)
        (7 61302)
        (8 0)
        (9 0)
        (10 0)
        (11 182)
        (12 0)
        (13 0)
        (14 0)
        (15 61286)
        (16 0)
        (17 0)
        (18 0)
        (19 61306)
        (20 0)
        (21 0)
        (22 61295)
        (23 0)
        (24 0)
        (25 0)
        (26 0)
        (27 0)
        (28 0)
        (29 0)
        (30 0)
        (31 0)
        (33 61232)
        (34 61287)
        (35 8551)
        (36 162)
        (37 184)
        (38 61366)
        (39 61299)
        (40 194)
        (41 61308)
        (42 199)
        (43 177)
        (44 61260)
        (45 61309)
        (46 8552)
        (47 61285)
        (48 61287)
        (49 8738)
        (50 8740)
        (51 8574)
        (52 61282)
        (53 61283)
        (54 61284)
        (55 61292)
        (56 8570)
        (57 199)
        (58 167)
        (59 0)
        (60 8549)
        (61 8546)
        (62 8550)
        (63 191)
        (64 61248)
        (65 61365)
        (66 61258)
        (67 61356)
        (68 61369)
        (69 61364)
        (70 61233)
        (71 61275)
        (72 61279)
        (73 61273)
        (74 61274)
        (75 61278)
        (76 61272)
        (77 61629)
        (78 61259)
        (79 61281)
        (80 61297)
        (81 61265)
        (82 61358)
        (83 61305)
        (84 61296)
        (85 61271)
        (86 61367)
        (87 61298)
        (88 180)
        (89 61626)
        (90 61368)
        (91 0)
        (92 0)
        (93 0)
        (94 175)
        (95 174)
        (96 0)
        (97 61351)
        (98 61267)
        (99 211)
        (100 61370)
        (101 61303)
        (102 61266)
        (103 61263)
        (104 61288)
        (105 61360)
        (106 61361)
        (107 61362)
        (108 61363)
        (109 61256)
        (110 61290)
        (111 61287)
        (112 61238)
        (113 61240)
        (114 210)
        (115 61246)
        (116 61244)
        (117 61247)
        (118 61245)
        (119 61250)
        (120 61251)
        (121 61270)
        (122 61239)
        (123 188)
        (124 189)
        (125 190)
        (126 61264)
        (127 0)
        (128 0)
        (129 0)
        (130 0)
        (131 0)
        (132 0)
        (133 0)
        (134 0)
        (135 0)
        (136 0)
        (137 0)
        (138 0)
        (139 0)
        (140 0)
        (141 0)
        (142 0)
        (143 0)
        (144 0)
        (145 0)
        (146 0)
        (147 0)
        (148 0)
        (149 0)
        (150 0)
        (151 0)
        (152 0)
        (153 0)
        (154 0)
        (155 0)
        (156 0)
        (157 0)
        (158 0)
        (159 0)
        (160 0)
        (161 0)
        (162 0)
        (163 0)
        (164 0)
        (165 0)
        (166 0)
        (167 0)
        (168 0)
        (169 0)
        (170 0)
        (171 0)
        (172 0)
        (173 0)
        (174 0)
        (175 0)
        (176 0)
        (177 0)
        (178 0)
        (179 0)
        (180 0)
        (181 0)
        (182 0)
        (183 0)
        (184 0)
        (185 0)
        (186 0)
        (187 0)
        (188 0)
        (189 0)
        (190 0)
        (191 0)
        (192 0)
        (193 0)
        (194 0)
        (195 0)
        (196 0)
        (197 0)
        (198 0)
        (199 0)
        (200 0)
        (201 0)
        (202 0)
        (203 0)
        (204 0)
        (205 0)
        (206 0)
        (207 0)
        (208 0)
        (209 0)
        (210 0)
        (211 0)
        (212 0)
        (213 0)
        (214 0)
        (215 0)
        (216 0)
        (217 0)
        (218 0)
        (219 0)
        (220 0)
        (221 0)
        (222 0)
        (223 0)
        (224 0)
        (225 0)
        (226 0)
        (227 0)
        (228 0)
        (229 0)
        (230 0)
        (231 0)
        (232 0)
        (233 0)
        (234 0)
        (235 0)
        (236 0)
        (237 0)
        (238 0)
        (239 0)
        (240 0)
        (241 0)
        (242 0)
        (243 0)
        (244 0)
        (245 0)
        (246 0)
        (247 0)
        (248 0)
        (249 0)
        (250 0)
        (251 0)
        (252 0)
        (253 0)
        (254 0)
        (255 0)))
(DEFINEQ

(\ASCIIMAPARRAY
  [LAMBDA (MAP)                                              (* ; "Edited  2-Jun-2025 11:45 by rmk")
                                                             (* ; "Edited  1-Jun-2025 07:26 by rmk")
                                                             (* ; "Edited 24-May-2025 12:22 by rmk")
                                                             (* ; "Edited 21-Dec-2024 18:57 by rmk")

    (* ;; "Atom cases for loadup")

    (SELECTQ MAP
        (:XCCS (SETQ MAP (CONSTANT (APPEND MTOXCODEMAP ASCIITOMCCS))))
        (:MCCS (SETQ MAP (CONSTANT ASCIITOMCCS)))
        NIL)
    (LET ((TABLE (ARRAY (ADD1 \MAXTHINCHAR)
                        'WORD 0 0)))
         (for I from 0 to \MAXTHINCHAR do (SETA TABLE I I))
         [for X FROMCODE in MAP when (SETQ FROMCODE (CL:IF (CHARCODEP (CAR X))
                                                        (CAR X)
                                                        (CHARCODE.DECODE (CAR X)
                                                               T)))
            do (SETA TABLE FROMCODE (CL:IF (CHARCODEP (CADR X))
                                        (CADR X)
                                        (CHARCODE.DECODE (CADR X)))]
         TABLE])
)



(* ; "The arrays may not be useful--can be constructed when/if needed?")


(RPAQ? \ASCII2MCCS (\ASCIIMAPARRAY 'MCCS))

(RPAQ? \ASCII2XCCS (\ASCIIMAPARRAY 'XCCS))

(RPAQ? SYMBOLTONSARRAY (\ASCIIMAPARRAY SYMBOLTOMCCS))

(RPAQ? HIPPOTONSARRAY (\ASCIIMAPARRAY HIPPOTOMCCS))

(RPAQ? CYRILLICTONSARRAY (\ASCIIMAPARRAY CYRILLICTOMCCS))

(RPAQ? \MATHTONSARRAY (\ASCIIMAPARRAY MATHTOMCCS))

(RPAQ? SIGMATONSARRAY (\ASCIIMAPARRAY SIGMATOMCCS))
(DEFINEQ

(MCCSCODEMAP
  [LAMBDA (FROMENCODING NONIDENTITY)                         (* ; "Edited 27-May-2025 23:02 by rmk")
                                                             (* ; "Edited 24-May-2025 10:55 by rmk")
    (LET ((FN (SELECTQ FROMENCODING
                  (XCCS$ (FUNCTION XTOMCODE$))
                  (ALTOTEXT (FUNCTION ATOMCODE))
                  (SYMBOL (FUNCTION STOMCODE))
                  (MATH (FUNCTION MTOMCODE))
                  (HIPPO (FUNCTION HTOMCODE))
                  (CYRILLIC (FUNCTION CTOMCODE))
                  NIL)))
         (CL:WHEN FN
             (for C M from 0 to \MAXCHAR when (SETQ M (APPLY* FN C NONIDENTITY))
                collect (LIST C M)))])

(ATOMCODE
  [LAMBDA (CCODE NOIDENTITY)                                 (* ; "Edited 24-May-2025 09:41 by rmk")
    (LET ((MCODE (CL:IF (ILEQ CCODE \MAXTHINCHAR)
                     (ELT \ASCII2MCCS CCODE)
                     CCODE)))
         (CL:IF (AND (EQ CCODE MCODE)
                     NOIDENTITY)
             NIL
             MCODE)])

(SYMBOLTOMCODE
  [LAMBDA (CCODE NOIDENTITY)                                 (* ; "Edited  1-Jun-2025 07:02 by rmk")
                                                             (* ; "Edited 24-May-2025 10:54 by rmk")
    (LET ((MCODE (CL:IF (ILEQ CCODE \MAXTHINCHAR)
                     (ELT SYMBOLTONSARRAY CCODE)
                     CCODE)))
         (CL:IF (AND (EQ CCODE MCODE)
                     NOIDENTITY)
             NIL
             MCODE)])

(SIGMATOMCODE
  [LAMBDA (CCODE NOIDENTITY)                                 (* ; "Edited  1-Jun-2025 07:02 by rmk")
                                                             (* ; "Edited 24-May-2025 10:54 by rmk")
    (LET ((MCODE (CL:IF (ILEQ CCODE \MAXTHINCHAR)
                     (ELT SIGMATOMCCSARRAY CCODE)
                     CCODE)))
         (CL:IF (AND (EQ CCODE MCODE)
                     NOIDENTITY)
             NIL
             MCODE)])

(MATHTOMCODE
  [LAMBDA (CCODE NOIDENTITY)                                 (* ; "Edited  1-Jun-2025 07:02 by rmk")
                                                             (* ; "Edited 24-May-2025 10:58 by rmk")
    (LET ((MCODE (CL:IF (ILEQ CCODE \MAXTHINCHAR)
                     (ELT MATHTONSARRAY CCODE)
                     CCODE)))
         (CL:IF (AND (EQ CCODE MCODE)
                     NOIDENTITY)
             NIL
             MCODE)])

(HTOMCODE
  [LAMBDA (CCODE NOIDENTITY)                                 (* ; "Edited 24-May-2025 09:40 by rmk")
    (LET ((MCODE (CL:IF (ILEQ CCODE \MAXTHINCHAR)
                     (ELT HIPPOTONSARRAY CCODE)
                     CCODE)))
         (CL:IF (AND (EQ CCODE MCODE)
                     NOIDENTITY)
             NIL
             MCODE)])

(CTOMCODE
  [LAMBDA (CCODE NOIDENTITY)                                 (* ; "Edited 24-May-2025 09:38 by rmk")
    (LET ((MCODE (CL:IF (ILEQ CCODE \MAXTHINCHAR)
                     (ELT CYRILLICTONSARRAY CCODE)
                     CCODE)))
         (CL:IF (AND (EQ CCODE MCODE)
                     NOIDENTITY)
             NIL
             MCODE)])

(ATOXCODE
  [LAMBDA (CODE NONIDENTITY)                                 (* ; "Edited 24-May-2025 09:45 by rmk")
    (MTOXCODE (ATOMCODE CODE)
           NONIDENTITY])
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (4294 15647 (\MCCSINCCODE 4304 . 7283) (\MCCSPEEKCCODE 7285 . 10063) (\MCCSOUTCHAR 10065
 . 12164) (\MCCSBACKCCODE 12166 . 13710) (\MCCSFORMATBYTESTREAM 13712 . 14442) (\MCCSCHARSETFN 14444
 . 15645)) (15648 16530 (\CREATE.MCCS.EXTERNALFORMAT 15658 . 16528)) (16531 17399 (
\MCCS.24BITENCODING.ERROR 16541 . 17397)) (19345 20304 (MTOXCODE 19355 . 19753) (XTOMCODE 19755 . 
20302)) (20305 20927 (MTOXCODE$ 20315 . 20619) (XTOMCODE$ 20621 . 20925)) (21837 25112 (
\COERCEASCIITONSFONT 21847 . 25110)) (36655 37978 (\ASCIIMAPARRAY 36665 . 37976)) (38448 41899 (
MCCSCODEMAP 38458 . 39197) (ATOMCODE 39199 . 39556) (SYMBOLTOMCODE 39558 . 40033) (SIGMATOMCODE 40035
 . 40510) (MATHTOMCODE 40512 . 40983) (HTOMCODE 40985 . 41345) (CTOMCODE 41347 . 41710) (ATOXCODE 
41712 . 41897)))))
STOP
