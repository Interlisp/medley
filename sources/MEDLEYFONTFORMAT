(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "25-May-2025 21:26:22" {WMEDLEY}<sources>MEDLEYFONTFORMAT.;152 41336  

      :EDIT-BY rmk

      :CHANGES-TO (FNS MEDLEYFONT.FILENAME MEDLEYFONT.GETCHARSET MEDLEYFONT.CHARSET? 
                       MEDLEYFONT.GETFILEPROP MEDLEYFONT.FILEP MEDLEYFONT.READ.FONT 
                       MEDLEYFONT.READ.CHARSET MEDLEYFONT.READ.ITEM MEDLEYFONT.READ.FONTPROPS 
                       MEDLEYFONT.WRITE.HEADER MEDLEYFONT.WRITE.FONT MEDLEYFONT.WRITE.CHARSET 
                       MEDLEYFONT.WRITE.DATA MEDLEYFONT.WRITE.ITEM MEDLEYFONT.WRITE.FONTPROPS 
                       MEDLEYFONT.READ.DATA)
                  (VARS MEDLEYFONTFORMATCOMS)

      :PREVIOUS-DATE "25-May-2025 09:27:40" {WMEDLEY}<sources>MEDLEYFONTFORMAT.;144)


(PRETTYCOMPRINT MEDLEYFONTFORMATCOMS)

(RPAQQ MEDLEYFONTFORMATCOMS
       [
        (* ;; "Eventually, MEDLEYFONT should be a package")

        
        (* ;; "Main public entries")

        (FNS MEDLEYFONT.WRITE.FONT MEDLEYFONT.GETCHARSET MEDLEYFONT.CHARSET? MEDLEYFONT.GETFILEPROP 
             MEDLEYFONT.FILEP)
        
        (* ;; "Reading")

        (FNS MEDLEYFONT.READ.FONT MEDLEYFONT.READ.CHARSET MEDLEYFONT.READ.ITEM 
             MEDLEYFONT.READ.FONTPROPS MEDLEYFONT.READ.VERIFIEDFONT)
        
        (* ;; "Writing")

        (FNS MEDLEYFONT.WRITE.CHARSET MEDLEYFONT.WRITE.ITEM MEDLEYFONT.WRITE.FONTPROPS 
             MEDLEYFONT.WRITE.HEADER)
        (FNS MEDLEYFONT.FILENAME)
        (ADDVARS (DISPLAYFONTEXTENSIONS MEDLEYDISPLAYFONT)
               (INTERPRESSFONTEXTENSIONS MEDLEYINTERPRESSFONT))
        (DECLARE%: EVAL@COMPILE DONTCOPY (CONSTANTS (PRINTDATA 0)
                                                (SMALLPDATA 1)
                                                (BITMAPDATA 2)
                                                (WORDBLOCKDATA 3)
                                                (CLARRAYDATA 4)
                                                (FIXPDATA 5)
                                                (ILARRAYDATA 6)
                                                (HPRINTDATA 7)
                                                (ALISTDATA 8)
                                                (PLISTDATA 9)
                                                (LISTDATA 10])



(* ;; "Eventually, MEDLEYFONT should be a package")




(* ;; "Main public entries")

(DEFINEQ

(MEDLEYFONT.WRITE.FONT
  [LAMBDA (FONT FILE CHARSETNOS OTHERFONTPROPS)              (* ; "Edited 25-May-2025 20:48 by rmk")
                                                             (* ; "Edited 23-May-2025 14:59 by rmk")
                                                             (* ; "Edited 22-May-2025 09:58 by rmk")
                                                             (* ; "Edited 16-May-2025 20:17 by rmk")
                                                             (* ; "Edited 14-May-2025 17:45 by rmk")
    (SETQ FONT (FONTCREATE FONT))
    (CL:UNLESS FILE
        (SETQ FILE (MEDLEYFONT.FILENAME FONT CHARSETNOS)))
    (SETQ CHARSETNOS (SORT (MKLIST CHARSETNOS)))
    (CL:WITH-OPEN-FILE (STREAM FILE :DIRECTION :OUTPUT :IF-EXISTS :NEW-VERSION)
           (MEDLEYFONT.WRITE.HEADER STREAM OTHERFONTPROPS)
           (LET ((CHARSETLOCS (CL:MAKE-ARRAY 256 :INITIAL-ELEMENT 0))
                 (FONTCHARENCODING (FONTPROP FONT 'CHARENCODING))
                 (*READTABLE* (FIND-READTABLE "INTERLISP"))
                 CSVECTORPTRLOC CSVECTORLOC FILECHARSETS)

                (* ;; "Figure out the actual non empty/sluggish charsets that will be wrtitten.")

                (SETQ FILECHARSETS (for CSNO CSINFO from 0 to \MAXCHARSET
                                      when (OR (NULL CHARSETNOS)
                                               (MEMB CSNO CHARSETNOS))
                                      when (SETQ CSINFO (\XGETCHARSETINFO FONT CSNO))
                                      unless (fetch (CHARSETINFO CSSLUGP) of CSINFO) collect CSNO))

                (* ;; "Right after the header, leave 4 bytes for the pointer to the charset dispatch vector. If writing a single charset, we store the negative of the byte location so we can still easily skip the font properties without writing the whole vector.")

                (* ;; "")

                (SETQ CSVECTORPTRLOC (GETFILEPTR STREAM))    (* ; 
                                                      "Ptr is before fontproperties, vector is after")
                (\FIXPOUT STREAM 0)
                (MEDLEYFONT.WRITE.ITEM STREAM 'FILECHARSETS (OR CHARSETNOS 'ALL))
                (MEDLEYFONT.WRITE.FONTPROPS STREAM FONT)
                (CL:WHEN (CDR FILECHARSETS)                  (* ; 
                                                             "Allocate the vector space if multiple")
                    (PRINTOUT STREAM "CHARSET LOCATIONS" T)
                    (SETQ CSVECTORLOC (GETFILEPTR STREAM))
                    (for I from 0 to \MAXCHARSET do (\FIXPOUT STREAM 0))
                    (TERPRI STREAM))
                (for CSNO in FILECHARSETS do 
                                             (* ;; 
    "LOC remains zero for missing charsets, slug properties are determined by font-level properties.")

                                             (CL:SETF (CL:SVREF CHARSETLOCS CSNO)
                                                    (GETFILEPTR STREAM))
                                             (MEDLEYFONT.WRITE.CHARSET FONT CSNO STREAM 
                                                    FONTCHARENCODING))
                [if (CDR FILECHARSETS)
                    then 
                         (* ;; "More than one, fill in the vector")

                         (SETFILEPTR STREAM CSVECTORLOC)
                         (for CSNO from 0 to \MAXCHARSET do (\FIXPOUT STREAM (CL:SVREF CHARSETLOCS 
                                                                                    CSNO)))
                  else 
                       (* ;; "Minus means direct for one charset, no need for the dispatch vector.")

                       (SETQ CSVECTORLOC (IMINUS (CL:SVREF CHARSETLOCS (CAR FILECHARSETS]
                (SETFILEPTR STREAM CSVECTORPTRLOC)
                (\FIXPOUT STREAM CSVECTORLOC)                (* ; 
             "Pointer to the charset dispatch vector--or negative of actual location for a singleton")
                (FULLNAME STREAM])

(MEDLEYFONT.GETCHARSET
  [LAMBDA (STREAM FAMILY SIZE FACE ROTATION DEVICE CHARSET)  (* ; "Edited 25-May-2025 20:52 by rmk")
                                                             (* ; "Edited 21-May-2025 11:35 by rmk")
                                                             (* ; "Edited 17-May-2025 00:45 by rmk")
                                                             (* ; "Edited 14-May-2025 17:46 by rmk")

    (* ;; "Assume that the initial Me etc. has been checked, and we are positioned after the header information")

    (CL:WITH-OPEN-STREAM (STREAM STREAM)
           (PROG ((CSVECTORLOC (\FIXPIN STREAM))
                  (FILECHARSETS (MEDLEYFONT.READ.ITEM STREAM 'FILECHARSETS))
                  FONTPROPS CSLOC)
                 (CL:UNLESS (OR (EQ FILECHARSETS 'ALL)
                                (MEMB CHARSET FILECHARSETS))
                        (RETURN NIL))

            (* ;; "We know now that this file has information about the requested charset, including NIL entries for empty/slugglish ones in the middle of populated ones.  A file that would have contain a single empty/sluggish charset cannot be created--the caller would recognize the case of a missing file and provide either NIL or a slug-vector.")

                 (SETQ FONTPROPS (MEDLEYFONT.READ.FONTPROPS STREAM))
                 (if (ILESSP CSVECTORLOC 0)
                     then 
                          (* ;; "File contains only one charset and it's the one we want. If the intended charset is empty/sluggish, the file would not have been constructed and we wouldn't be here.")

                          (SETFILEPTR STREAM (IMINUS CSVECTORLOC))
                   else 
                        (* ;; "The vector-entry points to the one we want")

                        (SETFILEPTR STREAM (IPLUS CSVECTORLOC (UNFOLD CHARSET BYTESPERCELL)))
                        (CL:WHEN (EQ 0 (SETQ CSLOC (\FIXPIN STREAM)))
                               (RETURN NIL))
                        (SETFILEPTR STREAM CSLOC))
                 (RETURN (CADR (MEDLEYFONT.READ.CHARSET STREAM])

(MEDLEYFONT.CHARSET?
  [LAMBDA (FILE CHARSET)                                     (* ; "Edited 25-May-2025 20:53 by rmk")
                                                             (* ; "Edited 21-May-2025 11:35 by rmk")
                                                             (* ; "Edited 17-May-2025 11:29 by rmk")
                                                             (* ; "Edited 14-May-2025 17:46 by rmk")

    (* ;; "If CHARSET, returns T if FILE contains a non-slug entry for CHARSET.  If not CHARSET, returns the list of non-slug charsets in FILE.")

    (CL:WITH-OPEN-FILE (STREAM FILE :DIRECTION :INPUT)
           (CL:UNLESS (MEDLEYFONT.FILEP STREAM)
                  (ERROR "Not a MEDLEYFONT file" FILE))
           (LET [(CSVECTORLOC (\FIXPIN STREAM))
                 (FILECHARSETS (MEDLEYFONT.READ.ITEM STREAM 'FILECHARSETS]
                (if (EQ FILECHARSETS 'ALL)
                    then (if CHARSET
                             then (SETFILEPTR STREAM (IPLUS CSVECTORLOC (UNFOLD CHARSET BYTESPERCELL)
                                                            ))
                                  (NEQ 0 (\FIXPIN STREAM))
                           else (SETFILEPTR STREAM CSVECTORLOC)
                                (for CS from 0 to \MAXCHARSET unless (EQ 0 (\FIXPIN STREAM))
                                   collect CS))
                  elseif CHARSET
                    then (MEMB CHARSET FILECHARSETS])

(MEDLEYFONT.GETFILEPROP
  [LAMBDA (FILE PROP)                                        (* ; "Edited 25-May-2025 20:53 by rmk")
                                                             (* ; "Edited 21-May-2025 11:36 by rmk")
                                                             (* ; "Edited 17-May-2025 19:07 by rmk")
                                                             (* ; "Edited 14-May-2025 17:46 by rmk")
    (CL:WITH-OPEN-FILE (STREAM FILE :DIRECTION :INPUT)
           (LET (HEADERPROPS CSVECTORLOC FILECHARSETS)
                (CL:UNLESS (SETQ HEADERPROPS (MEDLEYFONT.FILEP STREAM))
                       (ERROR "Not a MEDLEYFONT file" FILE))
                (SETQ CSVECTORLOC (\FIXPIN STREAM))
                (SETQ FILECHARSETS (MEDLEYFONT.READ.ITEM STREAM 'FILECHARSETS))
                (SELECTQ PROP
                    (OTHERPROPS (CDDR HEADERPROPS))
                    (DATE (CADR HEADERPROPS))
                    (FONTPROPS (MEDLEYFONT.READ.FONTPROPS STREAM))
                    (CHARSETS (if (EQ FILECHARSETS 'ALL)
                                  then (SETFILEPTR STREAM CSVECTORLOC)
                                       (for CS from 0 to \MAXCHARSET unless (EQ 0 (\FIXPIN STREAM))
                                          collect CS)
                                else FILECHARSETS))
                    (ERROR "Unknown MEDLEYFONT property"])

(MEDLEYFONT.FILEP
  [LAMBDA (FILE)                                             (* ; "Edited 25-May-2025 20:54 by rmk")
                                                             (* ; "Edited 21-May-2025 11:37 by rmk")
                                                             (* ; "Edited 16-May-2025 21:58 by rmk")
                                                             (* ; "Edited 14-May-2025 17:00 by rmk")

    (* ;; "Me in first 2 bytes distinguishes MEDLEYFONT format from others.  This may be called after the first 2 bytes have been read to verify the %"Me%", if not we skip over it here.")

    (* ;; "For a valid file, returns (fullname date)")

    (* ;; "If FILE is an open stream, it is left open.  Otherwise it is opened and closed.")

    (RESETLST
        [PROG (STREAM VERSION DATE)
              [if (\GETSTREAM FILE 'INPUT T)
                  then (SETQ STREAM FILE)
                else (RESETSAVE (SETQ STREAM (OPENSTREAM FILE 'INPUT))
                            `(PROGN (CLOSEF? OLDVALUE]
              (CL:WHEN (ZEROP (GETFILEPTR STREAM))
                  (CL:UNLESS (EQ (LOGOR (LLSH (CHARCODE M)
                                              8)
                                        (CHARCODE e))
                                 (\WIN STREAM))
                         (RETURN NIL)))
              (CL:UNLESS (STREQUAL "dley font" (CL:READ-LINE STREAM))
                     (RETURN NIL))
              (SETQ VERSION (MEDLEYFONT.READ.ITEM STREAM 'VERSION))
              (CL:UNLESS (EQ 0 VERSION)
                     (RETURN NIL))
              (RETURN `(,(FULLNAME STREAM)
                        ,(MEDLEYFONT.READ.ITEM STREAM 'DATE)
                        ,VERSION
                        ,@(MEDLEYFONT.READ.ITEM STREAM 'OTHERFONTPROPS])])
)



(* ;; "Reading")

(DEFINEQ

(MEDLEYFONT.READ.FONT
  [LAMBDA (FILE CHARSETNOS FONT)                             (* ; "Edited 25-May-2025 20:54 by rmk")
                                                             (* ; "Edited 24-May-2025 08:24 by rmk")
                                                             (* ; "Edited 21-May-2025 22:59 by rmk")
                                                             (* ; "Edited 19-May-2025 18:01 by rmk")
                                                             (* ; "Edited 16-May-2025 20:23 by rmk")
                                                             (* ; "Edited 14-May-2025 17:46 by rmk")
    (CL:WHEN (type? FONTDESCRIPTOR FILE)
        (CL:UNLESS FONT (SETQ FONT FILE))
        (SETQ FILE (MEDLEYFONT.FILENAME FONT)))
    (CL:WITH-OPEN-FILE
     (STREAM FILE :DIRECTION :INPUT)
     (CL:UNLESS (MEDLEYFONT.FILEP STREAM)
         (ERROR "NOT A MEDLEYFONT FILE" (FULLNAME STREAM)))
     (LET ((*READTABLE* (FIND-READTABLE "INTERLISP"))
           FONTCHARSETVECTOR CSVECTORLOC FILECHARSETS)
          (SETQ CHARSETNOS (SORT (MKLIST CHARSETNOS)))       (* ; "The request")
          (SETQ CSVECTORLOC (\FIXPIN STREAM))                (* ; 
                                                       "Byte location of the charset dispatch vector")
          (SETQ FILECHARSETS (MEDLEYFONT.READ.ITEM STREAM 'FILECHARSETS))
          (CL:UNLESS (OR (EQ FILECHARSETS 'ALL)
                         (NULL (LDIFFERENCE CHARSETNOS FILECHARSETS)))
              [ERROR FILE (CONCAT " does not contain information for charsets "
                                 (SORT (LDIFFERENCE CHARSETNOS FILECHARSETS])

          (* ;; "We know now that this file has information about all requested charsets, including NIL entries for empty/slugglish ones in the middle of populated ones.  A file that would have contain a single empty/sluggish charset cannot be created--the caller would recognize the case of a missing file and provide either NIL or a slug-vector.")

          (SETQ FONT (MEDLEYFONT.READ.VERIFIEDFONT STREAM FONT))
          (SETQ FONTCHARSETVECTOR (fetch (FONTDESCRIPTOR FONTCHARSETVECTOR) of FONT))
          [if (ILESSP CSVECTORLOC 0)
              then 
                   (* ;; "File contains only one charset and it's the one we want. If the intended charset is empty/sluggish, the file would not have been constructed and we wouldn't be here.")

                   (SETFILEPTR STREAM (IMINUS CSVECTORLOC))
                   (\SETCHARSETINFO FONTCHARSETVECTOR (CAR CHARSETNOS)
                          (CADR (MEDLEYFONT.READ.CHARSET STREAM FONT)))
            else 
                 (* ;; "Gather all of the CSLOCS before reading, so that we always move forward")

                 (for CSNO CSLOC inside (OR CHARSETNOS (for I from 0 to \MAXCHARSET collect I))
                    eachtime (SETFILEPTR STREAM (IPLUS CSVECTORLOC (UNFOLD CSNO BYTESPERCELL)))
                          (SETQ CSLOC (\FIXPIN STREAM)) unless (ZEROP CSLOC)
                    collect (CONS CSNO CSLOC)
                    finally (for X CS in $$VAL do (SETQ CSNO (CAR X))
                                                  (SETFILEPTR STREAM (CDR X))
                                                  (SETQ CS (MEDLEYFONT.READ.CHARSET STREAM))
                                                  (CL:WHEN CS
                                                      (CL:UNLESS (EQ CSNO (CAR CS))
                                                          (ERROR "MISMATCHED CHARSET NUMBERS"
                                                                 (LIST CSNO (CAR CS)))))
                                                  (\SETCHARSETINFO FONTCHARSETVECTOR CSNO
                                                         (CADR CS]
          FONT])

(MEDLEYFONT.READ.CHARSET
  [LAMBDA (STREAM)                                           (* ; "Edited 25-May-2025 20:54 by rmk")
                                                             (* ; "Edited 23-May-2025 11:01 by rmk")
                                                             (* ; "Edited 21-May-2025 16:25 by rmk")
                                                             (* ; "Edited 16-May-2025 20:19 by rmk")
                                                             (* ; "Edited 14-May-2025 10:43 by rmk")
                                                             (* ; "Edited 12-May-2025 07:55 by rmk")
    (LET (CHARSETNO CSINFO)
         (MEDLEYFONT.READ.ITEM STREAM 'CHARSETSTRING)        (* ; 
                                                             "Throwaway for looking with text editor")
         (SETQ CHARSETNO (MEDLEYFONT.READ.ITEM STREAM 'CHARSETNO))
         (SETQ CSINFO (create CHARSETINFO
                             WIDTHS _ NIL
                             OFFSETS _ NIL))                 (* ; 
                                                     "Wait until we see the vectors, like the others")
         (bind PAIR LABEL DATA eachtime (SETQ PAIR (MEDLEYFONT.READ.ITEM STREAM))
                                     (SETQ LABEL (CAR PAIR))
                                     (SETQ DATA (CADR PAIR)) until (EQ LABEL 'STOP)
            do (SELECTQ LABEL
                   (WIDTHS (replace (CHARSETINFO WIDTHS) of CSINFO with DATA))
                   (OFFSETS (replace (CHARSETINFO OFFSETS) of CSINFO with DATA))
                   (IMAGEWIDTHS (replace (CHARSETINFO IMAGEWIDTHS) of CSINFO with DATA))
                   (YWIDTHS (replace (CHARSETINFO YWIDTHS) of CSINFO with DATA))
                   (ASCENT (replace (CHARSETINFO CHARSETASCENT) of CSINFO with DATA))
                   (DESCENT (replace (CHARSETINFO CHARSETDESCENT) of CSINFO with DATA))
                   (LEFTKERN (replace (CHARSETINFO LEFTKERN) of CSINFO with DATA))
                   (BITMAP (replace (CHARSETINFO CHARSETBITMAP) of CSINFO with DATA))
                   (CSINFOPROPS (replace (CHARSETINFO CSINFOPROPS) of CSINFO with DATA))
                   (CSCOMPLETEP (replace (CHARSETINFO CSCOMPLETEP) of CSINFO with DATA))
                   (SHOULDNT "Unrecognized charsetinfo label'")))
         (CL:UNLESS (fetch (CHARSETINFO IMAGEWIDTHS) of CSINFO)
             (replace (CHARSETINFO IMAGEWIDTHS) of CSINFO with (fetch (CHARSETINFO WIDTHS)
                                                                  of CSINFO)))
         (LIST CHARSETNO CSINFO])

(MEDLEYFONT.READ.ITEM
  [LAMBDA (STREAM LABEL?)                                    (* ; "Edited 25-May-2025 20:55 by rmk")
                                                             (* ; "Edited 23-May-2025 10:57 by rmk")
                                                             (* ; "Edited 21-May-2025 23:12 by rmk")
                                                             (* ; "Edited 17-May-2025 10:12 by rmk")
                                                             (* ; "Edited 13-May-2025 11:36 by rmk")

    (* ;; "Reads and returns the (label data) that starts at the current position in STREAM according to its storage type.  If LABEL? is provided, error if the data read does not have that label. ")

    (LET ((*READTABLE* (FIND-READTABLE 'INTERLISP))
          LABEL ITEM NWORDS NELTS)
         (SETQ LABEL (PROG1 (RATOM STREAM)
                            (READCCODE STREAM)))
         (CL:WHEN (AND LABEL? (NEQ LABEL? LABEL))
                (ERROR LABEL " data not found" LABEL))
         (SETQ ITEM (SELECTC (BIN STREAM)
                        (SMALLPDATA (\WIN STREAM))
                        (FIXPDATA (\FIXPIN STREAM))
                        (PRINTDATA (READ STREAM))
                        (ALISTDATA (bind X until [EQ 'STOP (CAR (SETQ X (MEDLEYFONT.READ.ITEM STREAM]
                                      collect (CONS (CAR X)
                                                    (CADR X))))
                        (PLISTDATA (bind X until [EQ 'STOP (CAR (SETQ X (MEDLEYFONT.READ.ITEM STREAM]
                                      join X))
                        (LISTDATA (bind ELT until [EQ 'STOP (CAR (SETQ ELT (MEDLEYFONT.READ.ITEM
                                                                            STREAM]
                                     collect (CADR ELT) finally (CL:WHEN (CADR ELT)
                                                                       (NCONC $$VAL ELT))))
                        (BITMAPDATA (\READBINARYBITMAP STREAM))
                        (CLARRAYDATA (LET [[ARRAY (CL:MAKE-ARRAY (READ STREAM)
                                                         :ELEMENT-TYPE
                                                         (MEDLEYFONT.READ.ITEM STREAM 'ELEMENT-TYPE]
                                           (ALLFIXED (EQ 1 (BIN STREAM]
                                          (for I from 0 to (\FIXPIN STREAM)
                                             do [CL:SETF (XCL:ROW-MAJOR-AREF ARRAY I)
                                                       (CL:IF ALLFIXED
                                                           (\FIXPIN STREAM)
                                                           (CADR (MEDLEYFONT.READ.ITEM STREAM)))]
                                             finally (RETURN ARRAY))))
                        (ILARRAYDATA (LET [(NELTS (\FIXPIN STREAM))
                                           (ORIG (BIN STREAM))
                                           (ALLFIXED (EQ 1 (BIN STREAM]
                                          (for I (ARRAY _ (ARRAY NELTS NIL ORIG)) from ORIG
                                             to (CL:IF (EQ ORIG 1)
                                                    NELTS
                                                    (SUB1 NELTS))
                                             do (SETA ARRAY I (CL:IF ALLFIXED
                                                                  (\FIXPIN STREAM)
                                                                  (MEDLEYFONT.READ.ITEM STREAM I)))
                                             finally (RETURN ARRAY))))
                        (WORDBLOCKDATA (SETQ NWORDS (\FIXPIN STREAM))
                                       (for I (BLOCK _ (\ALLOCBLOCK (FOLDHI NWORDS WORDSPERCELL)))
                                          from 0 to (SUB1 NWORDS) do (\PUTBASE BLOCK I (\WIN STREAM))
                                          finally (RETURN BLOCK)))
                        (HPRINTDATA (HREAD STREAM))
                        (SHOULDNT "UNKNOWN MEDLEYFONT DATA TYPE")))
         (READCCODE STREAM)                                  (* ; "Skip the EOL")
         (CL:IF LABEL?
             ITEM
             (LIST LABEL ITEM))])

(MEDLEYFONT.READ.FONTPROPS
  [LAMBDA (STREAM)                                           (* ; "Edited 25-May-2025 20:55 by rmk")
                                                             (* ; "Edited 16-May-2025 21:58 by rmk")
                                                             (* ; "Edited 14-May-2025 09:11 by rmk")
    (bind PAIR until [EQ 'STOP (CAR (SETQ PAIR (MEDLEYFONT.READ.ITEM STREAM] collect PAIR])

(MEDLEYFONT.READ.VERIFIEDFONT
  [LAMBDA (STREAM FONT)                                      (* ; "Edited 21-May-2025 22:55 by rmk")
                                                             (* ; "Edited 19-May-2025 17:42 by rmk")
                                                             (* ; "Edited 16-May-2025 10:28 by rmk")
    (LET ((FONTPROPS (MEDLEYFONT.READ.FONTPROPS STREAM)))
         [if FONT
             then                                            (* ; "compare/verify")
                  (for P in FONTPROPS unless (EQUAL (CADR P)
                                                    (RECORDACCESS (CAR P)
                                                           FONT NIL 'FETCH))
                     do (ERROR "Mismatching font property" P))
           else (SETQ FONT (create FONTDESCRIPTOR))          (* ; "Construct")
                (for P in FONTPROPS do (RECORDACCESS (CAR P)
                                              FONT NIL 'REPLACE (CADR P]
         FONT])
)



(* ;; "Writing")

(DEFINEQ

(MEDLEYFONT.WRITE.CHARSET
  [LAMBDA (FONT CHARSETNO STREAM FONTCHARENCODING)           (* ; "Edited 25-May-2025 20:49 by rmk")
                                                             (* ; "Edited 22-May-2025 09:58 by rmk")
                                                             (* ; "Edited 16-May-2025 20:18 by rmk")
                                                             (* ; "Edited 13-May-2025 23:26 by rmk")

    (* ;; "This outputs")

    (LET ((CSINFO (\INSURECHARSETINFO CHARSETNO FONT))
          CSCHARENCODING)
         (MEDLEYFONT.WRITE.ITEM STREAM 'CHARSETSTRING (MKSTRING CHARSETNO))
                                                             (* ; "For human file-scan")
         (MEDLEYFONT.WRITE.ITEM STREAM 'CHARSETNO CHARSETNO)
         (CL:UNLESS (OR (NULL CSINFO)
                        (fetch (CHARSETINFO CSSLUGP) of CSINFO))
                                                             (* ; 
                                                         "Slug info is determined by FONT properties")

             (* ;; "Copy the fonts charencoding down to each charset info so that it is availble when the charsetinfo is read.  The fontdescriptor isn't available at that point and coercion could lead to fonts of different encodings.  At least this would make it possible to fix things up.")

             (SETQ CSCHARENCODING (ASSOC 'CSCHARENCODING (fetch (CHARSETINFO CSINFOPROPS)
                                                            of CSINFO)))
             (if (EQ FONTCHARENCODING (CDR CSCHARENCODING))
               elseif (NULL CSCHARENCODING)
                 then (CL:WHEN FONTCHARENCODING
                          (push (fetch (CHARSETINFO CSINFOPROPS) of CSINFO)
                                (CONS 'CSCHARENCODING FONTCHARENCODING)))
               elseif FONTCHARENCODING
                 then (ERROR "Charencoding of character set " CHARSETNO 
                             " disagrees with font charencoding"))
             (CL:WHEN (fetch (CHARSETINFO CSINFOPROPS) of CSINFO)
                 (MEDLEYFONT.WRITE.ITEM STREAM 'CSINFOPROPS (fetch (CHARSETINFO CSINFOPROPS)
                                                               of CSINFO)
                        NIL
                        'ALIST))
             (MEDLEYFONT.WRITE.ITEM STREAM 'WIDTHS (fetch (CHARSETINFO WIDTHS) of CSINFO))
             (CL:UNLESS [OR (EQ (fetch (CHARSETINFO IMAGEWIDTHS) of CSINFO)
                                (fetch (CHARSETINFO WIDTHS) of CSINFO))
                            (for I (W _ (fetch (CHARSETINFO WIDTHS) of CSINFO))
                                 (IM _ (fetch (CHARSETINFO IMAGEWIDTHS) of CSINFO)) from 0
                               to (SUB1 (IPLUS \MAXTHINCHAR 3)) always (EQ (\GETBASE W I)
                                                                           (\GETBASE IM I]
                 (MEDLEYFONT.WRITE.ITEM STREAM 'IMAGEWIDTHS (fetch (CHARSETINFO IMAGEWIDTHS)
                                                               of CSINFO)))
             (MEDLEYFONT.WRITE.ITEM STREAM 'OFFSETS (fetch (CHARSETINFO OFFSETS) of CSINFO))
             (MEDLEYFONT.WRITE.ITEM STREAM 'YWIDTHS (fetch (CHARSETINFO YWIDTHS) of CSINFO))
             (MEDLEYFONT.WRITE.ITEM STREAM 'ASCENT (fetch (CHARSETINFO CHARSETASCENT) of CSINFO))
             (MEDLEYFONT.WRITE.ITEM STREAM 'DESCENT (fetch (CHARSETINFO CHARSETDESCENT) of CSINFO))
             (MEDLEYFONT.WRITE.ITEM STREAM 'LEFTKERN (fetch (CHARSETINFO LEFTKERN) of CSINFO))
             (MEDLEYFONT.WRITE.ITEM STREAM 'BITMAP (fetch (CHARSETINFO CHARSETBITMAP) of CSINFO))
             (MEDLEYFONT.WRITE.ITEM STREAM 'CSCOMPLETEP (fetch (CHARSETINFO CSCOMPLETEP) of CSINFO)))
         (MEDLEYFONT.WRITE.ITEM STREAM 'STOP T])

(MEDLEYFONT.WRITE.ITEM
  [LAMBDA (STREAM LABEL ITEM EVENIFNIL TYPE BLOCKNELTS)      (* ; "Edited 25-May-2025 20:48 by rmk")
                                                             (* ; "Edited 23-May-2025 10:58 by rmk")
                                                             (* ; "Edited 22-May-2025 10:31 by rmk")
                                                             (* ; "Edited 17-May-2025 10:10 by rmk")
                                                             (* ; "Edited 14-May-2025 00:07 by rmk")

    (* ;; "Writes ITEM preceded by LABEL.    BLOCKNELTS overrides the default for array blocks, because of the uncertainty/complexity in determining arrayblock length.")

    (CL:WHEN (OR ITEM EVENIFNIL)
        (PRIN2 LABEL STREAM (FIND-READTABLE "INTERLISP"))
        (PRIN1 " " STREAM)
        (SELECTQ (OR TYPE (TYPENAME ITEM))
            (SMALLP (BOUT STREAM SMALLPDATA)
                    (\WOUT STREAM ITEM))
            (FIXP                                            (* ; "Must come after SMALLP")
                  (BOUT STREAM FIXPDATA)
                  (\FIXPOUT STREAM ITEM))
            ((LITATOM STRINGP PRINT) 
                 (BOUT STREAM PRINTDATA)                     (* ; 
                                                             "A printable Lisp object, even a list")
                 (PRIN2 ITEM STREAM (FIND-READTABLE 'INTERLISP)))
            (ALIST 
                   (* ;; 
                   " This could be done as LISTDATA, but this way it uses the alist keys as labels.")

                   (BOUT STREAM ALISTDATA)
                   (for X KEY in ITEM do (SETQ KEY (CAR X))
                                         (CL:UNLESS (OR (LITATOM KEY)
                                                        (SMALLP KEY))
                                                (ERROR "NOT AN ALIST" ITEM))
                                         (MEDLEYFONT.WRITE.ITEM STREAM KEY (CDR X)
                                                EVENIFNIL))
                   (MEDLEYFONT.WRITE.ITEM STREAM 'STOP T))
            (PLIST (BOUT STREAM PLISTDATA)
                   (for DTAIL KEY on ITEM by (CDDR DTAIL) do (SETQ KEY (CAR DTAIL))
                                                             (CL:UNLESS (OR (LITATOM KEY)
                                                                            (SMALLP KEY))
                                                                    (ERROR "NOT A PLIST" ITEM))
                                                             (MEDLEYFONT.WRITE.ITEM STREAM KEY
                                                                    (CADR DTAIL)
                                                                    EVENIFNIL))
                   (MEDLEYFONT.WRITE.ITEM STREAM 'STOP T))
            (LISTP (BOUT STREAM LISTDATA)
                   (for TAIL on ITEM as I from 1 do (MEDLEYFONT.WRITE.ITEM STREAM I (CAR TAIL)
                                                           T)
                                                    (CL:UNLESS (LISTP (CDR TAIL))
                                                        (MEDLEYFONT.WRITE.ITEM STREAM 'STOP
                                                               (CDR TAIL)
                                                               T)
                                                        (RETURN))))
            (BITMAP (BOUT STREAM BITMAPDATA)
                    (\PRINTBINARYBITMAP ITEM STREAM))
            ((ONED-ARRAY TWOD-ARRAY GENERAL-ARRAY) 
                 (BOUT STREAM CLARRAYDATA)
                 (PRIN2 (CL:ARRAY-DIMENSIONS ITEM)
                        STREAM)
                 (MEDLEYFONT.WRITE.ITEM STREAM 'ELEMENT-TYPE (CL:ARRAY-ELEMENT-TYPE ITEM))
                 (for I ALLFIXED ELT from 0 to (SUB1 (CL:ARRAY-TOTAL-SIZE ITEM))
                    first [SETQ ALLFIXED (for I from 0 to (SUB1 (CL:ARRAY-TOTAL-SIZE ITEM))
                                            always (FIXP (XCL:ROW-MAJOR-AREF ITEM I]
                          (BOUT STREAM (CL:IF ALLFIXED
                                           1
                                           0))
                          (\FIXPOUT STREAM (SUB1 (CL:ARRAY-TOTAL-SIZE ITEM)))
                    do (SETQ ELT (XCL:ROW-MAJOR-AREF ITEM I))
                       (CL:IF ALLFIXED
                           (\FIXPOUT STREAM ELT)
                           (MEDLEYFONT.WRITE.ITEM STREAM I ELT T))))
            (ARRAYP (BOUT STREAM ILARRAYDATA)
                    (\FIXPOUT STREAM (ARRAYSIZE ITEM))
                    (BOUT STREAM (ARRAYORIG ITEM))
                    (for I ALLFIXED from (ARRAYORIG ITEM) to (IDIFFERENCE (ARRAYSIZE ITEM)
                                                                    (ARRAYORIG ITEM))
                       first [SETQ ALLFIXED (for I from 1 to (ARRAYSIZE ITEM)
                                               always (FIXP (ELT ITEM I]
                             (BOUT STREAM (CL:IF ALLFIXED
                                              1
                                              0)) do (CL:IF ALLFIXED
                                                         (\FIXPOUT STREAM (ELT ITEM I))
                                                         (MEDLEYFONT.WRITE.ITEM STREAM I
                                                                (ELT ITEM I)
                                                                T))))
            (if (\BLOCKDATAP ITEM)
                then 
                     (* ;; "This assumes word-element blocks. We can distinguish pointer blocks (from the DTD, see BLOCKEQUALP), caller would have to tell us (a different TYPE?) whether we are looking at full integer or word blocks--how to interpret NELTS")

                     (BOUT STREAM WORDBLOCKDATA)
                     (CL:UNLESS BLOCKNELTS                   (* ; "Why 3 ?")
                         (SETQ BLOCKNELTS (IPLUS \MAXTHINCHAR 3)))
                     (\FIXPOUT STREAM BLOCKNELTS)
                     (for I from 1 to BLOCKNELTS do (\WOUT STREAM (\GETBASE ITEM I)))
              else (BOUT STREAM HPRINTDATA)                  (* ; "A datatype?")
                   (HPRINT ITEM STREAM T T)))

        (* ;; "Terpri to make sure ratom is OK, also looks better")

        (TERPRI STREAM))])

(MEDLEYFONT.WRITE.FONTPROPS
  [LAMBDA (STREAM FONT)                                      (* ; "Edited 25-May-2025 20:50 by rmk")
                                                             (* ; "Edited 22-May-2025 10:31 by rmk")
                                                             (* ; "Edited 19-May-2025 10:42 by rmk")
                                                             (* ; "Edited 14-May-2025 17:26 by rmk")
    (for F in (RECORDFIELDNAMES 'FONTDESCRIPTOR) unless (MEMB F '(FONTDEVICESPEC \SFFACECODE 
                                                                        FONTCHARSETVECTOR))
       do 
          (* ;; "Write even NIL values, for default override.  ")

          (MEDLEYFONT.WRITE.ITEM STREAM F (RECORDACCESS F FONT)
                 T))
    (MEDLEYFONT.WRITE.ITEM STREAM 'STOP T])

(MEDLEYFONT.WRITE.HEADER
  [LAMBDA (STREAM OTHERFONTPROPS)                            (* ; "Edited 25-May-2025 20:51 by rmk")
                                                             (* ; "Edited 16-May-2025 20:20 by rmk")
                                                             (* ; "Edited 14-May-2025 17:01 by rmk")

    (* ;; "Me in first 2 bytes distinguishes MEDLEYFONT format from others")

    (PRINTOUT STREAM "Medley font" T)
    (MEDLEYFONT.WRITE.ITEM STREAM 'VERSION 0)
    (MEDLEYFONT.WRITE.ITEM STREAM 'DATE (DATE))
    (MEDLEYFONT.WRITE.ITEM STREAM 'OTHERFONTPROPS OTHERFONTPROPS T])
)
(DEFINEQ

(MEDLEYFONT.FILENAME
  [LAMBDA (FONT CHARSET EXTENSION FILE)                      (* ; "Edited 25-May-2025 21:25 by rmk")
                                                             (* ; "Edited 19-May-2025 17:42 by rmk")
                                                             (* ; "Edited 16-May-2025 14:09 by rmk")

    (* ;; "If EXTENSION and FILE are NIL, puts the file in the MEDLEYDIR fonts/medley[device]fonts/ directory with extension MEDLEY[device]FONT.  If CHARSET, goes in the CHARSET subdirectory.")

    (CL:WHEN (AND (LISTP CHARSET)
                  (NULL (CDR CHARSET)))
        (SETQ CHARSET (CAR CHARSET)))                        (* ; "Edited 14-May-2025 12:02 by rmk")
    (LET ((FAMILY (FONTPROP FONT 'FAMILY))
          (SIZE (FONTPROP FONT 'SIZE))
          (FACE (FONTPROP FONT 'FACE))
          FILENAME)
         (CL:UNLESS EXTENSION
             (SETQ EXTENSION (CONCAT "MEDLEY" (FONTPROP FONT 'DEVICE)
                                    "FONT"))
             (CL:UNLESS FILE
                 [SETQ FILE (PSEUDOFILENAME (MEDLEYDIR (CONCAT "fonts/" (L-CASE EXTENSION)
                                                              "s"]))
         (SETQ FILENAME (PACK* FAMILY (CL:IF (ILEQ SIZE 9)
                                          "0"
                                          "")
                               SIZE "-" (NTHCHAR (CAR FACE)
                                               1)
                               (NTHCHAR (CADR FACE)
                                      1)
                               (NTHCHAR (CADDR FACE)
                                      1)
                               (CL:IF (SMALLP CHARSET)
                                   (CONCAT "-C" (OCTALSTRING CHARSET))
                                   "")
                               "." EXTENSION))
         (PACKFILENAME 'BODY FILE 'BODY FILENAME])
)

(ADDTOVAR DISPLAYFONTEXTENSIONS MEDLEYDISPLAYFONT)

(ADDTOVAR INTERPRESSFONTEXTENSIONS MEDLEYINTERPRESSFONT)
(DECLARE%: EVAL@COMPILE DONTCOPY 
(DECLARE%: EVAL@COMPILE 

(RPAQQ PRINTDATA 0)

(RPAQQ SMALLPDATA 1)

(RPAQQ BITMAPDATA 2)

(RPAQQ WORDBLOCKDATA 3)

(RPAQQ CLARRAYDATA 4)

(RPAQQ FIXPDATA 5)

(RPAQQ ILARRAYDATA 6)

(RPAQQ HPRINTDATA 7)

(RPAQQ ALISTDATA 8)

(RPAQQ PLISTDATA 9)

(RPAQQ LISTDATA 10)


(CONSTANTS (PRINTDATA 0)
       (SMALLPDATA 1)
       (BITMAPDATA 2)
       (WORDBLOCKDATA 3)
       (CLARRAYDATA 4)
       (FIXPDATA 5)
       (ILARRAYDATA 6)
       (HPRINTDATA 7)
       (ALISTDATA 8)
       (PLISTDATA 9)
       (LISTDATA 10))
)
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (2451 13702 (MEDLEYFONT.WRITE.FONT 2461 . 6656) (MEDLEYFONT.GETCHARSET 6658 . 8821) (
MEDLEYFONT.CHARSET? 8823 . 10369) (MEDLEYFONT.GETFILEPROP 10371 . 11841) (MEDLEYFONT.FILEP 11843 . 
13700)) (13728 26485 (MEDLEYFONT.READ.FONT 13738 . 17679) (MEDLEYFONT.READ.CHARSET 17681 . 20520) (
MEDLEYFONT.READ.ITEM 20522 . 24934) (MEDLEYFONT.READ.FONTPROPS 24936 . 25401) (
MEDLEYFONT.READ.VERIFIEDFONT 25403 . 26483)) (26511 38666 (MEDLEYFONT.WRITE.CHARSET 26521 . 30570) (
MEDLEYFONT.WRITE.ITEM 30572 . 37121) (MEDLEYFONT.WRITE.FONTPROPS 37123 . 38011) (
MEDLEYFONT.WRITE.HEADER 38013 . 38664)) (38667 40599 (MEDLEYFONT.FILENAME 38677 . 40597)))))
STOP
