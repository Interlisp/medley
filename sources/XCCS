(DEFINE-FILE-INFO READTABLE "INTERLISP" PACKAGE "INTERLISP")(FILECREATED "15-Jun-2021 13:22:10" {DSK}<Users>kaplan>Local>medley3.5>git-medley>sources>XCCS.;13 11589        changes to%:  (FNS \XCCSPEEKCCODE)      previous date%: "15-Jun-2021 12:37:01" {DSK}<Users>kaplan>Local>medley3.5>git-medley>sources>XCCS.;12)(PRETTYCOMPRINT XCCSCOMS)(RPAQQ XCCSCOMS       [(FNS ACCESS-CHARSET)        (FNS \XCCSINCCODE \XCCSPEEKCCODE \XCCSOUTCHAR \XCCSBACKCHAR)        (FNS \CREATE.XCCS.EXTERNALFORMAT)        (FNS \NSIN.24BITENCODING.ERROR)        (GLOBALVARS \DEFAULTINCCODE \DEFAULTOUTCHAR \DEFAULTBACKCHAR \DEFAULTPEEKCCODE)                (* ;; "These could become constants")        (INITVARS (\DEFAULTINCCODE '\XCCSINCCODE)               (\DEFAULTOUTCHAR '\XCCSOUTCHAR)               (\DEFAULTBACKCHAR '\XCCSBACKCHAR)               (\DEFAULTPEEKCCODE '\XCCSPEEKCCODE))        (DECLARE%: EVAL@COMPILE DONTCOPY (EXPORT (OPTIMIZERS ACCESS-CHARSET)))        (DECLARE%: DONTEVAL@LOAD DOCOPY (P (\CREATE.XCCS.EXTERNALFORMAT])(DEFINEQ(ACCESS-CHARSET
  [LAMBDA (STREAM NEWVALUE)                              (* ; "Edited 11-Sep-87 15:46 by bvm:")
    (FDEVOP 'CHARSETFN (fetch (STREAM DEVICE) of STREAM)
           STREAM NEWVALUE]))(DEFINEQ(\XCCSINCCODE  [LAMBDA (STREAM BYTECOUNTVAR BYTECOUNTVAL)            (* ; "Edited 15-Jun-2021 10:24 by rmk:")(* ;;; "Returns a 16 bit character code.  SHIFTEDCSET is STREAM's char set left shifted 8.")(* ;;; "If BYTECOUNTVAR is non-NIL, it is freely incremented by number of bytes read.  If BYTECOUNTVAL is given it is the current value, saves the call to EVAL.")(* ;;; "This doesn't do  EOL conversion, \INCHAR does that")    (LET (NUMBYTES (CSET (ACCESS-CHARSET STREAM))                (CHAR (\BIN STREAM)))         (* ;; " NUMBYTES tracks the number of \BINs.  ")         (IF (EQ CHAR NSCHARSETSHIFT)             THEN                                        (* ;                                                            "Shifting character sets, toss CHAR")                   (SETQ CSET (\BIN STREAM))                   (IF (NEQ NSCHARSETSHIFT CSET)                       THEN                              (* ;                                                            "Shift to new runcode CSET: SH CS CH")                             (ACCESS-CHARSET STREAM CSET)                             (SETQ CHAR (\BIN STREAM))                             (SETQ NUMBYTES 3)                     ELSEIF (EQ 0 (\BIN STREAM))                       THEN                              (* ; "SH SH CSH  CS CH where CSH is 0")                             (* ;;   "The high-order character set byte must be 0, because we don't support obese characters (24 bit)")                             (SETQ CSET (\BIN STREAM))                             (SETQ CHAR (\BIN STREAM))       (* ; "To align with below")                             (SETQ NUMBYTES 5)                             (ACCESS-CHARSET STREAM \NORUNCODE)                     ELSE (\NSIN.24BITENCODING.ERROR STREAM))                    (* ;; "The stream now knows the new character set, runcoded or not.")           ELSEIF (EQ CSET \NORUNCODE)             THEN                                        (* ; "2-bytes")                   (SETQ CSET CHAR)                   (SETQ CHAR (\BIN STREAM))                   (SETQ NUMBYTES 2)           ELSE                  (* ;; "Runcoded CSET and CHAR")                 (SETQ NUMBYTES 1))         (AND BYTECOUNTVAR (SET BYTECOUNTVAR (IDIFFERENCE BYTECOUNTVAL NUMBYTES)))         (LOGOR (UNFOLD CSET 256)                CHAR])(\XCCSPEEKCCODE  [LAMBDA (STREAM NOERROR)                              (* ; "Edited 15-Jun-2021 13:21 by rmk:")    (* ;;  "Modeled on \XCCSINCCODE, but peeks at the last byte in the sequence, leaves the stream unchanged")    (LET ((CSET (ACCESS-CHARSET STREAM))          (CHAR (\PEEKBIN STREAM NOERROR)))         (* ;;        "Returns a 16 bit character code.  Doesn't do EOL conversion--\PEEKCCODE does that.  ")         (* ;; "We don't change the charset in the stream, put the file ptr back the way it was.")         (CL:WHEN CHAR             (IF (EQ CHAR NSCHARSETSHIFT)                 THEN (\BIN STREAM)                      (* ; "Read the peeked shifting byte")                       (SETQ CSET (\BIN STREAM))             (* ; "Consume the char shift byte")                       (IF (NEQ CSET NSCHARSETSHIFT)                           THEN                                  (* ;;          "Shift to new runcode CSET: SH CS CH.  We have to BIN what we peeked, BIN, and peek again")                                 (SETQ CHAR (\PEEKBIN STREAM NOERROR))                                 (\BACKFILEPTR STREAM)                                 (\BAACKFILEPTR STREAM)                         ELSEIF (EQ 0 (\BIN STREAM))                           THEN                          (* ; "SH SH CSH  CS CH where CSH is 0")                                 (* ;;      "Note: no eof error check on this \BIN -- an eof in the middle of a charset shift is an error")                                 (SETQ CSET (\BIN STREAM))                                 (SETQ CHAR (\PEEKBIN STREAM NOERROR))                                 (\BACKFILEPTR STREAM)                                 (\BACKFILEPTR STREAM)                                 (\BACKFILEPTR STREAM)                                 (\BACKFILEPTR STREAM)                         ELSE (\NSIN.24BITENCODING.ERROR STREAM))               ELSEIF (EQ CSET \NORUNCODE)                 THEN                                    (* ; "2 byte runs, BIN/PEEK/BACK")                       (SETQ CSET CHAR)                       (\BIN STREAM)                       (SETQ CHAR (\PEEKBIN STREAM NOERROR)) (* ; "One BACKFILEPTR seems OK")                       (\BACKFILEPTR STREAM))             (* ;; "No need to back up for the runcoded case")             (CL:WHEN CHAR                 (LOGOR (UNFOLD CSET 256)                        CHAR)))])(\XCCSOUTCHAR
  [LAMBDA (STREAM CHARCODE)                             (* ; "Edited 14-Jun-2021 16:45 by rmk:")

    (* ;; "Closed function for the :XCCS external format, also called when :XCCS is the default")

    (COND
       ((EQ CHARCODE (CHARCODE EOL))
        [COND
           [(NOT (\RUNCODED STREAM))                         (* ; "Charset is a constant 0")
            (\BOUT STREAM (\CHARSET (CHARCODE EOL]
           ((EQ (\CHARSET (CHARCODE EOL))
                (ffetch (STREAM CHARSET) of STREAM)))
           (T (\BOUT STREAM NSCHARSETSHIFT)
              (\BOUT STREAM (freplace (STREAM CHARSET) of STREAM with (\CHARSET
                                                                                   (CHARCODE EOL]
        (\BOUTEOL STREAM)
        (freplace CHARPOSITION of STREAM with 0))
       (T [COND
             ((NOT (\RUNCODED STREAM))
              (\BOUT STREAM (\CHARSET CHARCODE))
              (\BOUT STREAM (\CHAR8CODE CHARCODE)))
             ((EQ (\CHARSET CHARCODE)
                  (ffetch (STREAM CHARSET) of STREAM))
              (\BOUT STREAM (\CHAR8CODE CHARCODE)))
             (T (\BOUT STREAM NSCHARSETSHIFT)
                (\BOUT STREAM (freplace (STREAM CHARSET) of STREAM with (\CHARSET 
                                                                                           CHARCODE))
                       )
                (\BOUT STREAM (\CHAR8CODE CHARCODE]
          (freplace CHARPOSITION of STREAM with (PROGN 
                                                             (* ; "Ugh.  Don't overflow")
                                                                   (IPLUS16 (ffetch CHARPOSITION
                                                                               of STREAM)
                                                                          1])(\XCCSBACKCHAR  [LAMBDA (STREAM BYTECOUNTVAR BYTECOUNTVAL)            (* ; "Edited 15-Jun-2021 10:26 by rmk:")    (CL:WHEN (\BACKFILEPTR STREAM)        (* ;; "The immediately preceding byte must be a character byte. If it is a byte in a runcode, then we are done, even if the byte before is part of a shift sequence.")        (* ;; "But if we are currently in a nonruncoded file, we have to go back one more to get the character set byte.")        (* ;; "If we can't back up, we are already at the beginning.")        [COND           [(EQ \NORUNCODE (ACCESS-CHARSET STREAM))            (COND               ((\BACKFILEPTR STREAM)                (AND BYTECOUNTVAR (SET BYTECOUNTVAR (IPLUS BYTECOUNTVAL 2)))                T)               (BYTECOUNTVAR (SET BYTECOUNTVAR (ADD1 BYTECOUNTVAL]           (BYTECOUNTVAR (SET BYTECOUNTVAR (ADD1 BYTECOUNTVAL])]))(DEFINEQ(\CREATE.XCCS.EXTERNALFORMAT
  [LAMBDA NIL                                           (* ; "Edited 14-Jun-2021 16:08 by rmk:")

(* ;;; "Create the :XCCS external format.  Stream's EOL overrides the (vacuous) default here")

    (\INSTALL.EXTERNALFORMAT (create EXTERNALFORMAT
                                    NAME _ :XCCS
                                    INCCODEFN _ (FUNCTION \XCCSINCCODE)
                                    PEEKCCODEFN _ (FUNCTION \XCCSPEEKCCODE)
                                    BACKCHARFN _ (FUNCTION \XCCSBACKCHAR)
                                    OUTCHARFN _ (FUNCTION \XCCSOUTCHAR)
                                    EOL _ LF.EOLC]))(DEFINEQ(\NSIN.24BITENCODING.ERROR
  [LAMBDA (STREAM)                                       (* bvm%: "12-Mar-86 15:35")
    (DECLARE (USEDFREE *SIGNAL-24BIT-NSENCODING-ERROR*))

(* ;;; "Called if we see the sequence shift,shift on STREAM -- means shift to 24-bit character set, which we don't support.  Usually this just means we're erroneously reading a binary file as text.  If this function returns, its value is taken as a character set to shift to")

    (COND
       (*SIGNAL-24BIT-NSENCODING-ERROR*                      (* ; 
                                                           "Only cause error if user/reader cares")
              (ERROR "24-bit NS encoding not supported" STREAM)))
                                                             (* ; "Return charset zero")
    0]))(DECLARE%: DOEVAL@COMPILE DONTCOPY(GLOBALVARS \DEFAULTINCCODE \DEFAULTOUTCHAR \DEFAULTBACKCHAR \DEFAULTPEEKCCODE))(* ;; "These could become constants")(RPAQ? \DEFAULTINCCODE '\XCCSINCCODE)(RPAQ? \DEFAULTOUTCHAR '\XCCSOUTCHAR)(RPAQ? \DEFAULTBACKCHAR '\XCCSBACKCHAR)(RPAQ? \DEFAULTPEEKCCODE '\XCCSPEEKCCODE)(DECLARE%: EVAL@COMPILE DONTCOPY (* "FOLLOWING DEFINITIONS EXPORTED")(DEFOPTIMIZER ACCESS-CHARSET (STREAM &OPTIONAL NEWVALUE)                                 `((OPENLAMBDA (STRM)                                     (FDEVOP 'CHARSETFN (fetch (STREAM DEVICE) of STRM)                                            STRM                                            ,NEWVALUE))                                   ,STREAM))(* "END EXPORTED DEFINITIONS"))(DECLARE%: DONTEVAL@LOAD DOCOPY (\CREATE.XCCS.EXTERNALFORMAT))(DECLARE%: DONTCOPY  (FILEMAP (NIL (1057 1286 (ACCESS-CHARSET 1067 . 1284)) (1287 9153 (\XCCSINCCODE 1297 . 3785) (\XCCSPEEKCCODE 3787 . 6324) (\XCCSOUTCHAR 6326 . 8251) (\XCCSBACKCHAR 8253 . 9151)) (9154 9855 (\CREATE.XCCS.EXTERNALFORMAT 9164 . 9853)) (9856 10687 (\NSIN.24BITENCODING.ERROR 9866 . 10685)))))STOP