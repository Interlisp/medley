;; Being tested:    SEdit
;;
;; Source:          {ERIS}<LispCore>DOC>SEDIT>SEDIT.TEDIT
;;
;; Created By:      Henry Cate III
;;
;; Creation Date:   February 17, 1987
;;
;; Last Update:
;;
;; Filed As:        {eris}<lispcore>test>SEdit>command-undo-redo.u
;;
;;
;;


(do-test "load the functions for the prompter for interactive tests"
  (if (not (fboundp 'do-test-menu-setup))
	(load "{ERINYES}<test>TOOLS>DO-TEST-MENU.dfasl"))
  T)


(do-test-group  "Undo/Redo"
	:before (progn
	(setq window-list (do-test-menu-Setup "Undo/Redo")))

	:after (progn
	(do-test-menu-Cleanup window-list))


(do-test "Undo: no selection/no caret"
  (let* (( user-result(do-test-menu-Message window-list 'high 
"     Testing Undo
If there is no free Xerox Common Lisp exec, bring up a another one and type: \"(cl:in-package 'xcl-test)\"
In the exec type:

(setq tempx '(1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))) 
(ed 'tempx) 

Select Undo from the popup menu. 
Does it respond with:
     \"Nothing to Undo\"?  "))
	    (good-value (equal '(1 2 4.5 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo: no selection/no caret"
  (do-test-menu-Message window-list 'high 
"     Testing Redo
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select DONE from the popup menu.
Select Redo from the popup menu. 
Does it respond with:
     \"No Undo to Undo\"?  "))


(do-test "Undo:  no selection/edit caret"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: no selection/edit caret
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"4.5\" and press the delete key.
Want to place the edit caret right after the 1 without selecting it.  Do this by pressing the left mouse button with the mouse cursor just to the right of the 1.
Type meta-U.  
Were you able to get this far?   "))
	    (good-value (equal '(1 2 4.5 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  no selection/edit caret"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: no selection/edit caret
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Want to place the edit caret right after the 1 without selecting it.  Do this by pressing the left mouse button with the mouse cursor just to the right of the 1.
Type meta-R.  
Were you able to get this far?   "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  no selection/structure caret"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: no selection/structure caret
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Want to place the structure caret right between \"b\" and \"cd\" without selecting either item.  Do this by positioning the mouse cursor between the two items and press the middle button.
Type meta-U. 
Were you able to get this far? "))
	    (good-value (equal '(1 2 4.5 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  no selection/structure caret"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: no selection/structure caret
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Place the structure caret between \"b\" and \"cd\".
Type meta-R. 
Were you able to get this far? "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  select a litatom"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a litatom
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the third litatom \"cd\" as a structure, by pressing the left mouse button twice with the cursor over the litatom.
Type meta-U. 
Were you able to get this far? "))
	    (good-value (equal '(1 2 4.5 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select a litatom"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a litatom
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the fourth litatom \"efg\" as a structure.
Type meta-R. 
Were you able to get this far? "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  select a string"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a string
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hello\" as a structure, by pressing the left mouse button twice with the cursor over the string.
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 4.5 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select a string"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a string
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hello\" as a structure.
Type meta-R.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  select a number"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a number
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"6/7\" as a structure, by pressing the left mouse button twice with the cursor over the number.
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 4.5 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select a number"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a number
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"4.5\" as a structure, by pressing the left mouse button twice with the cursor over the number.
Type meta-R.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  select a list"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a list
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the list \"(bye)\" as a structure, by pressing the left mouse button three times with the cursor over the \"y\".
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 4.5 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select a list"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a list
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 4.5 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the list \"(bye)\" as a structure.
Type meta-R.  
Select the string \"BYE\" and press the delete key.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  select a comment"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select a comment
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" (bye) (\"hi\" b cd 4))
Place the edit caret after the number 1 and type \"; hello\", then select this as a structure. 
Type meta-U three times.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select a comment"
  (do-test-menu-Message window-list 'low 
"     Testing: select a comment
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Place the edit caret after the number 2 and type \"; bye\", then select this as a structure. 
Type meta-R.
Does SEdit display in the SEdit prompt window:
	\"No Undo to Undo\"?  "))


(do-test "Undo:  select part of a litatom"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select part of a litatom
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 ; bye 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the comment as a structure and press the delete key.
Type control-x.
Place the strcuture caret after the litatom \"efg\"
Type: \"(Have a nice day please)\"
Select the \"d\" in the first litatom \"cd\".
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select part of a litatom"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select part of a litatom
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the \"f\" in the litatom \"efg\".
Type meta-R twice.  
Does SEdit display in the SEdit prompt window:
     \"No Undo to Undo.\"?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day please) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  select part of a string"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select part of a string
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day please) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the \"h\" in the string \"hello\".
Type meta-U three times.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select part of a string"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select part of a string
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the \"B\" in the string \"BYE\".
Type meta-R twice.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  select part of a number"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select part of a number
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the \"7\" in the number \"6/7\". 
Type meta-U four times.   
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg () "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  select part of a number"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: select part of a number
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg () \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the \"6\" in the number \"6/7\". 
Type meta-R.   
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  pending delete of a litatom"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of litatom
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the litatom \"cd\" in pending delete mode by first pressing the left button of the mouse with the cursor on the \"c\" and then pressing the right button withe the cursor on the \"d\".  This should create a box around the litatom \"cd\".
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg () "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  pending delete of a litatom"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of litatom
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg () \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the litatom \"efg\" in pending delete mode.
Type meta-R four times.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  pending delete of a string"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of a string
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hello\" in pending delete mode bye clicking on the \"h\", then pressing the right mouse button with the cursor to the right of the string.
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  pending delete of a string"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of a string
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hello\" in pending delete mode.
Type meta-R twice.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day please) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  pending delete a number"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of a number
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day please) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"6/7\" in pending delete mode.
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  pending delete a number"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of a number
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"6/7\" in pending delete mode.
Type meta-R.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day please) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  pending delete of a list"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of a list 
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day please) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the list \"(bye)\" in pending delete mode.
Type meta-U.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  pending delete of a list"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: pending delete of a list 
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the list \"(bye)\" in pending delete mode.
Type meta-R.  
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg (Have a nice day please) "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  extended selection of litatoms"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: try extended selection of litatoms
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg (Have a nice day please) \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the list \"(Have a nice day please)\" and press the delete key.
Type control-x.
Select the litatom \"cd\" as a structure, and extend the selection to include the next litatom, type \"defgh\".
Select the litatom \"a\" and extend the selection to include the next two litatoms.
Type meta-U.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  extended selection of litatoms"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: try extended selection of litatoms
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the litatom \"a\" as a structure, and extend the selection to include the next two litatoms.
Type meta-R
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  extended selection of strings"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of strings
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b defgh \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hello\" as a structure, and extend the selection to include the second string.
Type meta-U
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  extended selection of strings"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of strings
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Now select the string \"hello\" as a structure, and extend the selection to include the second string.
Type meta-R
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  extended selection of numbers"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of numbers
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b defgh \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"1\" as a structure, and extend the selection to include the next two numbers.
Type meta-U.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  extended selection of numbers"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of numbers
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"1\" as a structure, and extend the selection to include the next number.
Type meta-R.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  extended selection of lists"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of lists
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b defgh \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the list \"(bye)\" as a structure, and extend the selection to include the next list.
Type meta-U.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  extended selection of lists"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of lists
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hi\" as a structure, and extend the selection to include the previous list.
Type meta-R.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  extended selection of litatoms and numbers"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of litatoms and numbers
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b defgh \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"1\" as a structure, and extend the selection to include the next five items.
Type meta-U.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  extended selection of litatoms and numbers"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of litatoms and numbers
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"1\" as a structure, and extend the selection to include the next five items.
Type meta-R.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  extended selection of strings and lists"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of strings and lists
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b defgh \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hello\" as a structure, and extend the selection to include the next three items.
Type meta-U.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  extended selection of strings and lists"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of strings and lists
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the string \"hello\" as a structure, and extend the selection to include the next three items.
Type meta-R.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  extended selection of several things"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of several things
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b defgh \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"1\" as a structure, and extend the selection to include the rest.
Type meta-U.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Redo:  extended selection of several things"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: extended selection of several things
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the number \"1\" as a structure, and extend the selection to include the rest.
Type meta-R.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Undo:  selection of entire structure"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: selection of entire structure
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b defgh \"hello\" \"BYE\" (bye) (\"hi\" b cd 4))
Select the entire structure.
Type meta-U.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b cd efg "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))

(do-test "Redo:  selection of entire structure"
  (let* ((user-result (do-test-menu-Message window-list 'low 
"     Testing: selection of entire structure
Assuming SEdit is editing the variable tempx which currently equals:
     (1 2 6/7 a b cd efg \"hello\" \"BYE\" (bye) (\"hi\" b cd 4)
Select the entire structure.
Type meta-R.
Were you able to get this far?  "))
	    (good-value (equal '(1 2 6/7 a b defgh "hello" "BYE" (bye) ("hi" b cd 4)) tempx)))
	(and user-result (if (eq t user-result) good-value T))
  ))


(do-test "Clean up"
  (do-test-menu-message window-list 'high
"Close the SEdit window by selecting Close from the window popup menu."))

)	; end of do-test-group


STOP
