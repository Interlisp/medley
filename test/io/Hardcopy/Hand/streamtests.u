(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "XCL-USER")
(il:filecreated "28-Feb-88 14:22:53" il:{eris}<test>i/o>hardcopy>hand>testfiles>streamtests.u\;1 7304   

      il:|changes| il:|to:|  (il:functions sendfiles)
                             (il:vars il:streamtestscoms)
                             (file-environments "STREAMTESTS.U" "STREAMTESTS")
                             (il:fns sendfiles stresstest)

      il:|previous| il:|date:| "28-Feb-88 13:45:44" il:{eris}<test>i/o>hardcopy>hand>streamtests.u\;4
)


; Copyright (c) 1987, 1988 by XEROX Corporation.  All rights reserved.

(il:prettycomprint il:streamtestscoms)

(il:rpaqq il:streamtestscoms 
          ((file-environments "STREAMTESTS.U")
           (il:fns squash lister tedstream setq80 80set defprint pusher 4045set set4045 stresstest 
                  setprinters)
           (il:functions sendfiles)
           (il:vars tedlist sketchlist rs232 tty fastfx80list fast hq fastfx80 hqfx80 4045xlp)
           (il:declare\: il:donteval@load il:doeval@compile il:dontcopy il:compilervars
                  (il:addvars (il:nlama)
                         (il:nlaml)
                         (il:lama stresstest set4045 4045set pusher defprint 80set setq80 tedstream 
                                lister squash)))))

(define-file-environment "STREAMTESTS.U" :package "XCL-USER" :readtable "XCL" :compiler 
                                                   :compile-file)

(il:defineq

(squash
  (lambda (prefix suffix)
         (block squash (make-symbol (concatenate 'simple-string (symbol-name prefix)
                                           (symbol-name suffix))))))

(lister
  (lambda (names extension)
         (block lister (mapcar 'squash names (make-list (length names)
                                                    :initial-element extension)))))

(tedstream
  (lambda (file)
         (block tedstream (let ((stream (il:opentextstream file)))
                               (il:tedit.hardcopy stream)
                               (close stream)))))

(setq80
  (lambda (string)
         (block setq80 (setq il:fastfx80-default-destination string il:hqfx80-default-destination 
                             string))))

(80set
  (lambda (&optional port)                        (il:* il:\; "Edited  6-Mar-87 15:50 by reidy")

         (block 80set (cond
                         ((null port)
                          (print 'fastfx80)
                          (prin1 il:fastfx80-default-destination)
                          (print 'hqfx80)
                          (prin1 il:hqfx80-default-destination)
                          (values))
                         ((stringp port)
                          (setq80 port))
                         ((equal port tty)
                          (setq80 "{TTY}"))
                         ((or (equal port rs232)
                              (equal port 232))
                          (setq80 "{RS232}"))
                         (t (setq80 (symbol-name port)))))))

(defprint
  (lambda (&optional printer)                     (il:* il:\; "Edited  6-Mar-87 15:38 by reidy")

         (block defprint (cond
                            ((null printer)
                             (car il:defaultprintinghost))
                            ((equal printer hqfx80)
                             (pusher '(il:hqfx80 il:hqfx80)))
                            ((equal printer fastfx80)
                             (pusher '(il:fastfx80 il:fastfx80)))
                            ((or (equal printer 4045)
                                 (equal printer 4045xlp))
                             (pusher 'il:4045xlp))
                            (t (pusher printer))))))

(pusher
  (lambda (arg)                                (il:* il:\; "Edited 24-Feb-87 21:06 by James.pa")

         (block pusher (cond
                          ((equal arg (car il:defaultprintinghost))
                           il:defaultprintinghost)
                          (t (push arg il:defaultprintinghost))))))

(4045set
  (lambda (&optional (port nil))                  (il:* il:\; "Edited 12-Mar-87 16:18 by Reidy")

         (block 4045set (cond
                           ((null port)
                            (il:4045xlp.get.parameters '(il:port)))
                           ((equal port 'tty)
                            (set4045 tty))
                           ((or (equal port 'rs232)
                                (equal port '232))
                            (set4045 rs232))
                           (t (set4045 port))))))

(set4045
  (lambda (port)                               (il:* il:\; "Edited 26-Feb-87 12:55 by James.pa")

         (block set4045 (il:4045xlp.set.parameters (list (cons 'il:port port))))))

(stresstest
  (lambda nil                                      (il:* il:\; "Edited 28-Feb-88 13:27 by Snow")

         (block stresstest (il:send.file.to.printer 
                                  "{eris}<test>i/o>hardcopy>hand>stresstest>stresstest.tedit"))))

(setprinters
  (il:lambda nil                                  (il:* il:\; "Edited 17-Mar-87 14:35 by REIDY")

    "Set PRESSPRINTER and IPPRINTER to the first Press and Interpress printers on il:defaultprintinghost"
    (let ((ppos (position 'il:press (mapcar 'il:printertype il:defaultprintinghost)))
          (ippos (position 'il:interpress (mapcar 'il:printertype il:defaultprintinghost))))
         (cond
            (ppos (setq pressprinter (elt il:defaultprintinghost ppos)))
            (t (setq pressprinter nil)))
         (cond
            (ippos (setq ipprinter (elt il:defaultprintinghost ippos)))
            (t (setq ipprinter nil))))
    (princ '|PRESSPRINTER: |)
    (prin1 pressprinter)
    (terpri)
    (princ '|IPPRINTER: |)
    (prin1 ipprinter)
    (values)))
)

(defun sendfiles (&optional host) (mapcar '(lambda (file)
                                                      (il:send.file.to.printer file host))
                                             (il:directory "{eris}<test>i/o>hardcopy>hand>testfiles>"
                                                    'il:collect)))


(il:rpaqq tedlist (il:01ur.tedit il:02looks.tedit il:03fonts.tedit il:04para.tedit 
                             il:05page.tedit il:06line.tedit il:07ns.tedit il:08imob.tedit))

(il:rpaqq sketchlist (il:10mixed.sketch il:11straight.sketch il:12curve.sketch il:13change.sketch 
                                il:14text.sketch il:15reverse.sketch))

(il:rpaqq rs232 il:rs232)

(il:rpaqq tty il:tty)

(il:rpaqq fastfx80list (il:00plaintext.tedit il:01ur.tedit))

(il:rpaqq fast il:fastfx80)

(il:rpaqq hq il:hqfx80)

(il:rpaqq fastfx80 il:fastfx80)

(il:rpaqq hqfx80 il:hqfx80)

(il:rpaqq 4045xlp il:4045xlp)
(il:declare\: il:donteval@load il:doeval@compile il:dontcopy il:compilervars 

(il:addtovar il:nlama )

(il:addtovar il:nlaml )

(il:addtovar il:lama stresstest set4045 4045set pusher defprint 80set setq80 tedstream lister 
                               squash)
)
(il:putprops il:streamtests.u il:copyright ("XEROX Corporation" 1987 1988))
(il:declare\: il:dontcopy
  (il:filemap (nil (1458 5950 (squash 1471 . 1662) (lister 1664 . 1858) (tedstream 1860 . 2066) (setq80 
2068 . 2237) (80set 2239 . 3062) (defprint 3064 . 3783) (pusher 3785 . 4118) (4045set 4120 . 4675) (
set4045 4677 . 4878) (stresstest 4880 . 5152) (setprinters 5154 . 5948)))))
il:stop
