;; Function To Be Tested: unintern
;;
;; Source: Guy L Steele's CLTL
;; Section: 11.7 Package System Functions and Variables
;; Page: 185
;;
;; ReCreated By:   Ron Fischer
;;
;; Creation Date: Oct 22, 1986
;;
;; Last Update:  Mar 24, 1987 
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>11-7-unintern.test
;;
;;
;; Syntax:        (unintern string &optional package)
;;
;; Function Description: If the specified symbol is present in the specified package, 
;; it is removed from that package and also from the package's shadowing-symbols list
;; if it is present there.  Moreover, if the package is the home package for the symbol,
;; the symbol is made to have no home package.  Note that in some circumstances the
;; symbol may continue to be accessible in the specified package by inheritance.  
;;   
;; 
;; Argument(s):   package
;;			  
;; Returns: unintern returns t if it actually removed a symbol, and nil otherwise.     
;;
;; Constraints/Limitations: none



(do-test-group
("unintern"
	:before (progn
		(make-package 'hurm :use nil)
		(intern "HURM" 'hurm)
	)
	:after (delete-package 'hurm)
)
	(do-test "symbol interned"
		(and (string= "HURM" (find-symbol "HURM" 'hurm))
			(eq :internal
				(second (multiple-value-list (find-symbol "HURM" 'hurm)))
			)
		)
	)
	(do-test "uninterning symbol"
		(unintern (find-symbol "HURM" 'hurm) 'hurm)
	)
	(do-test "unintern returns NIL for symbol not in package"
		(null (unintern 'lisp:car 'hurm))
	)
	(do-test "symbol uninterned"
		(null (find-symbol "HURM" 'hurm))
	)
)

STOP


