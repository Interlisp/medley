;; Function To Be Tested: 1-
;;
;; Source: Guy L Steele's CLTL
;; Section: 12.4 Arithmetic Operations
;; Page: 200
;;
;; Created By:    Kelly Roach
;;
;; Creation Date: July 12,1986
;;
;; Last Update:   July 12,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>12-4-SUB1.TEST
;;
;;
;; Syntax:        (1- NUMBER)
;;
;; Function Description:
;; (1+ X) is the same as (+ X 1).
;; 
;; (1- X) is the same as (- X 1).
;; Note that the short name may be confusing: (1- X) does NOT mean
;; 1-X; rather, it means X-1.
;; Rationale: These are included primarily for compatibility with Maclisp
;; and Zetalisp.  Some programmers prefer always to write (+ X 1) and
;; (- X 1) instead of (1+ X) and (1- X).
;; Implementation note: Compiler writers are very strongly encouraged to ensure
;; that (1+ X) and (+ X 1) compile into identical code, and
;; similarly for (1- X) and (- X 1), to avoid pressure on a Lisp
;; programmer to write possibly less clear code for the sake of efficiency.
;; This can easily be done as a source-language transformation.
;; 
;; Argument(s):   NUMBER - a number
;;
;; Returns:       a number
;;



(do-test sub1-test
         (and (equalp (1- 3) 2)
              (equalp (1- 7.0) 6.0)
              (zerop (1- 1))))

STOP
