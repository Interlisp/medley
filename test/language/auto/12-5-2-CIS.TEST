;; Function To Be Tested: CIS
;;
;; Source: Guy L Steele's CLTL
;; Section: 12.5.2 Trigonometric and Related Functions
;; Page: 207
;;
;; Created By:    Kelly Roach and John Park
;;
;; Creation Date: July 29,1986
;;
;; Last Update:   July 12,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>12-5-2-CIS.TEST
;;
;;
;; Syntax:        (CIS RADIANS)
;;
;; Function Description:
;; This computes E^i*^radians.
;; The name CIS means ``cos + I sin,'' because
;; E^iq = cos q + I sin q.
;; The argument is in
;; radians and may be any non-complex number.  The result is a complex
;; number whose real part is the cosine of the argument and whose imaginary
;; part is the sine.  Put another way, the result is a complex number whose
;; phase is the equal to the argument (mod 2Sail)
;; and whose magnitude is unity.
;; Implementation note: Often it is cheaper to calculate the sine and cosine
;; of a single angle together than to perform two disjoint calculations.
;; 
;; Argument(s):   RADIANS - a real
;;
;; Returns:       a number
;;

(do-test-group cis-setup
	:before (progn
		(setq cis-tolerance 0.00001)
		(setq cis-test-cases
			'(0.0 (/ PI 6) (/ PI 3) (/ PI 2) (/(* 2 PI) 3) (/(* 5 PI) 6)
			 PI (/(* 7 PI) 6) (/(* 4 PI) 3)(/(* 3 PI) 2) (/(* 5 PI) 3)
			(/(* 11 PI) 6) (* 2 PI)))

		(setq correct-cis 
				(mapcar #'(lambda (x) (complex (cos x) (sin x)))
				 	(mapcar #'eval cis-test-cases)))
				

		(defun cis-test (pairs) ; pairs: paired result (calulated vs correct)
		   (cond ((and (complexp (car pairs))
				 	(< (abs (/ (- (realpart (car pairs)) 
						 (realpart (cdr pairs)))(realpart (cdr pairs)))) 
					    cis-tolerance)
					(< (abs (/ (- (imagpart (car pairs)) 
						 (imagpart (cdr pairs)))(imagpart (cdr pairs))))
					    cis-tolerance))t)))) 
 
 	(do-test cis-test
		(and (setq calculated-cis  (mapcar #'cis
				(mapcar #'eval cis-test-cases)))
			(setq calculated-expected
				(pairlis calculated-cis correct-cis))
			(or (equal calculated-cis correct-cis)
				(notany 'null (mapcar #'cis-test calculated-expected))))))
									 
STOP



