;; Function To Be Tested: SIN
;;
;; Source: Guy L Steele's CLTL
;; Section: 12.5.2 Trigonometric and Related Functions
;; Page: 207
;;
;; Created By:    Kelly Roach and John Park
;;
;; Creation Date: July 12,1986
;;
;; Last Update:   Oct 9, 1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>12-5-2-SIN.TEST
;;
;;
;; Syntax:        (SIN RADIANS)
;;
;; Function Description:
;; SIN returns the sine of the argument, COS the cosine,
;; and TAN the tangent.  The argument is in radians.
;; The argument may be complex.
;; 
;; Argument(s):   RADIANS - a real
;;
;; Returns:       a number
;;
;; Constraints/Limitations

(do-test-group (sin-setup
	:before (progn
		(setq sin-tolerance 0.00001)
		(setq sin-test-cases
			'(0 (/ PI 6) (/ PI 3) (/ PI 2) (/(* 2 PI) 3) (/(* 5 PI) 6)
			 PI (/(* 7 PI) 6) (/(* 4 PI) 3)(/(* 3 PI) 2) (/(* 5 PI) 3)
			(/(* 11 PI) 6) (* 2 PI)))

		(setq expected-value 
			'(0.0 0.5 (/(sqrt 3) 2) 1.0 (/(sqrt 3) 2) 0.5 0.0 -0.5
				 (-(/(sqrt 3) 2)) -1.0 (-(/(sqrt 3) 2)) -0.5 0.0))

		(defun sin-test (pairs) ; pairs: paired result (calulated vs result)
			(cond ((or (zerop (car pairs)) (zerop (cdr pairs)))
					 (zerop (cdr pairs)))
				(t (< (abs (/ (- (car pairs) (cdr pairs)) (cdr pairs)))
					sin-tolerance))))
				)
			) 

 	(do-test pi-const-exist? (and (boundp 'pi) (numberp pi)))

 	(do-test sin-test
		(and (setq calculated-result  (mapcar #'sin
			(mapcar #'eval sin-test-cases)))
			(setq expected-result (mapcar #'eval expected-value))
			(setq calculated-expected
			(pairlis calculated-result expected-result))
			(setq  test-result (mapcar #'sin-test calculated-expected))
			(notany 'null test-result))
	)
)

 
STOP


