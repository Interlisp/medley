;; Function To Be Tested: float-precision
;;
;; Source:     Common Lisp by Guy Steele
;;         Section 12.6: Type Conversions and Component Extractions
;;					on Numbers  Page: 218
;;
;; Created By: John Park
;;
;; Creation Date: July 18, 86
;;
;; Last Update:   Aug 8, 86
;;
;; Filed as:      {eris}<lispcore>cml>test>12-6-float-precision.test
;;
;; Syntax: float-precision float
;;
;; Function Description:  The function float-precision returns,
;; as a non-negative
;; integer, the number of radix-b digits present in the argument;
;; if the argument is
;; (a floating-point) zero, then the result is (an integer) zero.
;; 
;; 
;; Argument(s):   floating-point number 
;;
;; Returns: non-negative integer or zero if argument is zero (a floating-point).
;;
;; Constraints/limitations: None 


(do-test-group float-precision-test-setup
  :before (progn 
           (setq float-precision-numbers
                 (mapcar #'eval 
                         '(1.0 2.0 -3.10 -0.0
                               most-positive-double-float
                               most-negative-double-float)))
           (defun float-precisionp? (f)
                  (>= f 0))) 
																
				
  (do-test  float-precision-test
            (and (setq precision-test-result
                       (mapcar #'float-precision 
                               float-precision-numbers))
                 (every #'float-precisionp? precision-test-result))))
				


STOP

