;; Function To Be Tested: char>=
;;
;; Source:        CLtL p. 237
;;
;; Chapter 13: Characters		Section 2: Predicates on Characters
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 1 May 86
;;
;; Last Update: 9 December 86
;;
;; Filed As:      {eris}<lispcore>cml>test>13-2-char-ge.test
;;
;; Syntax: char>= char &rest more-characters
;;            
;; Function Description: true if each character >= the next, nil otherwise
;;
;; Argument(s): characters
;;
;; Returns: non-nil or nil			 
;;
(do-test-group char>=group
	;;; The inequality must be true for all items, and the function is nospread.  Hence no every loop.  
	(do-test "char>=: upper-case characters in order are >=" 
		(char>= #\Z #\Y #\X #\W #\V #\U #\T #\S #\R #\Q #\P #\O #\N #\M #\L #\K #\J #\I #\H #\G #\F #\E #\D #\C #\B #\A)
	)
;;
	(do-test "char>=: lower-case characters in order are >="
		(char>= #\z #\y #\x #\w #\v #\u #\t #\s #\r #\q #\p #\o #\n #\m #\l #\k #\j #\i #\h #\g #\f #\e #\d #\c #\b #\a)
	)
;;
	(do-test "char>=: digits in order are >="
		(char>= #\9 #\8 #\7 #\6 #\5 #\4 #\3 #\2 #\1 #\0)
	)
;;						
	(do-test "char>=: #\A >= #\9 or #\0 >= Z"
		(or (char>= #\A #\9 ) (char>= #\0 #\Z))
	)
;;
	(do-test "char>=: #\a >= #\9 or #\0 >= z"
		(or (char>= #\a #\9 ) (char>= #\0 #\z ))
	)
;;
	(do-test "char>= accepts characters that are char="
		(and
			(char>= #\3 #\3 #\3 #\3)
			(char>= #\Q #\Q #\Q #\Q #\P)
		)
	)
;;
	(do-test "char>= accepts non-alphanumeric characters"
		(and
			(char>= #\; #\; #\;)
			(char>= #\space #\space #\space)
		)
	)
;;
	(do-test "char>=: every item must >="
		(not (or
			(char>= #\3 #\3 #\3 #\3 #\4)
			(char>= #\z #\y #\x #\w #\v #\u #\t #\s #\r #\q #\p #\o #\n #\m #\l #\k #\j #\i #\h #\g #\f #\e #\d #\c #\b #\a #\b)
		))
	)
)
STOP
