;; Function To Be Tested: lower-case-p
;;
;; Source:        CLtL p. 234
;;
;; Chapter 13: Characters		Section 2: Predicates on Characters
;;
;; Created By:    Peter Reidy after Greg Nuyens
;;
;; Creation Date: 30 April 86
;;
;; Last Update: 9 December 86 
;;
;; Filed As:      {eris}<lispcore>cml>test>13-2-lower-case-p.test
;;
;; Syntax: lower-case-p char
;;            
;; Function Description: Returns non-nil iff char is a lower case character and NIL for any other character - upper case, digit and semi-standard; does not accept arguments other than characters.
;;
;; Argument(s):	char - any cml character 
;;
;; Returns:  non-nil or NIL            
;;
(do-test-group
	(do-test "lower-case-p for lower-case characters"
	;; Each lower-case character satisfies the predicate and and its upper-case counterpart does not.
		(every
			#'(lambda (char)
				(and (lower-case-p char) (not (lower-case-p (char-upcase char))))
			)
			'(#\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z)
		)
	)  ; do-test "upper-case-p for upper-case characters"
;;
	(do-test "lower-case-p for upper-case characters"
	;; No upper-case character satisfies the predicate, but each one's lower-case counterpart does.
		(every
			#'(lambda (char)
				(and (not (lower-case-p char))(lower-case-p (char-downcase char))))
			'(#\A #\B #\C #\D #\E #\F #\G #\H #\I #\J #\K #\L #\M #\N #\O #\P #\Q #\R #\S #\T #\U #\V #\W #\X #\Y #\Z)
		)	
	)  ; do-test "upper-case-p for lower-case characters"
;;
	(do-test "upper-case-p for non-alpha characters"
		(notany #'lower-case-p '(#\0 #\1 #\2 #\3 #\4 #\5 #\6 #\7 #\8 #\9 #\! #\" #\# #\$ #\% #\& #\' #\( #\) #\* #\+ #\, #\- #\. #\/ #\: #\; #\< #\= #\< #\? #\@ #\[ #\\ #\] #\^ #\_ #\` #\{ #\| #\} #\~ #\space #\  #\newline #\
 #\backspace #\tab #\linefeed #\page #\return #\rubout))
	)  ; do-test "upper-case-p for non-alpha characters"
)
STOP


