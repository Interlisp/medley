;; Function To Be Tested: set-char-bit
;;
;; Source:        Steele's book    Section 13.5: Character Control-Bit Functions     Page: 244
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: April 29 '86
;;
;; Last Update:   May   5  '86
;;
;; Filed As:      {eris}<lispcore>cml>test>13-5-set-char-bit.test
;;
;;
;; Syntax:                SET-CHAR-BIT  char name newvalue
;;
;; Function Description:  set-char-bit takes a character object, the name of a bit,
;;                        and a newvalue. It returns  a character just like the input 
;;                        character except the named bit is set or reset  according to 
;;                        whether newvalue is non-nil or nil.
;;                
;;
;; Argument(s):           char - a character object
;;                        name - the name of a bit of the bits attribute
;;                               (valid values for name are implementation-dependent)
;;                        newvalue - non-nil or nil
;;
;; Returns:               char     -  same as the input char, excep with the named bit set or reset
;;                        an error -  if the input argument, name, is not supported by the
;;                                    implementation    
;;
;; JRB Our implementation does not support char-bits; commenting test out
#|
(do-test try-set-char-bit
         ; char-equal ignores the differences of bits attributes; char= doesn't ignore them
         (and (char-equal #\A (set-char-bit #\A :control t))
              (char=  #\Z (set-char-bit #\Control-Z :control nil))))
|#
(do-test try-set-char-bit t)

STOP

