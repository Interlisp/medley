;; Function To Be Tested: XXXX
;;
;; Source:        CLtL    Section 14.1: Simple Sequence Functions        Page: 248
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: Aug. 29 ,1986
;;
;; Last Update:   Nov.  5 ,1986
;;
;; Filed As:      {eris}<lispcore>cml>test>14-1-copy-seq.test
;;
;;
;; Syntax:                copy-seq SEQUENCE
;;
;; Function Description:  copy-seq returns a copy of SEQUENCE
;;
;; Argument(s):           SEQUENCE
;;
;; Returns:               a sequence    
;;
;; Assumes that CL:EVERY works.

(do-test "test copy-seq"
  (flet ((fun (parent) (let ((child (copy-seq parent)))
                         (and (not (eq child parent)) (equalp parent child))))
        )
    (every #'fun (list
                   '#(a b c d e f g h i j k l m n o p q r s y)
                   "on tuesday, employees will not be able to park on the east side oflbuilding 101"
                   '(it is suggested that employees utilize the west parking log or the overflow etc)
                   (make-sequence '(vector bit) 200 :initial-element 1)
                   (make-array 100 :element-type 'character :initial-element #\< :fill-pointer t)
                   (make-array 120 :element-type 'complex :initial-element #c(1 2) :fill-pointer t)
                   '( (1 (2)) 3 (23 (34)) 5 6 7 (8 9 10) (((11)) 23 45 ) 66 77 88 99 100) 
                 )
    )
  )
)  
STOP
				
							