;; Function To Be Tested: CADDAR
;;
;; Source:        Steele's book    Section 15.1: Conses        Page: 263
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: July 16 ,1986
;;
;; Last Update:   July 16 ,1986
;;
;; Filed As:      {eris}<lispcore>cml>test>15-1-caddar.test
;;
;;
;; Syntax:                CADDAR LIST
;;
;; Function Description:  CADDAR is equivalent to (CAR (CDR (CDR (CAR LIST)))).
;;
;; Argument(s):           LIST - a list
;;
;; Returns:               anything    
;;

(defun mac (list elm)
	 (typecase  elm (number           (=     (caddar list) elm))
		        ((or cons string) (equal (caddar list) elm))
			(t                (eq    (caddar list) elm))
	) 
)

(do-test "test caddar0"
    (prog1
	(and (mac '((1 ((9)) "hi") 2 ) "hi")
		(mac '(((1 . 2) 3 (4 . 4)) a) '(4 . 4))
		(mac '((( 1 2 3 4) 5 6 7) 8 9) 6)
		(mac '(( 1 a (((w)))) (2 b) (3 c)) '(((w))))
		(mac '(( ((a)) (( b)) (ab ba aa .bb)) ((c)) d)  '(ab ba aa .bb))
		(mac '((foo bar  "(foo1 . bar1)" . 999) ((foo2 bar2)) ((foo3) bar3) (foo4 (bar4)) (((foo5 bar5)))) 
			"(foo1 . bar1)")
		(mac '(((((((((( t )))))))) t1 t2)) 't2  )
		(mac '( ("excitint" "vacations" "to" |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient)))
		     "to")
		(mac '((#\F #\o ((foo3)) )"o1" "foo2" (foo4 . foo5)) '((foo3)) ) 
		(mac '((("the weather in January" ("is usually clear and sunny")) "with temperatures usually in the " fifties)
				(in the day time) (and ) (the "20's" at night)) 
               'fifties )
	))
)

(do-test "test caddar1"
    (progn (setq a (list (list* #'null  #'list-length #'(lambda (x) (min (car x) (cadr x))) #'evenp  #'identity)))
		 (equal (mapcar (caddar a) 
					(mapcar #'caddar '( ((a (((b))) (3 -3) )) ((1 nil (3 4))) ((#\a (#\b #\c) (2.0 2.01))) ))) 
			   '(-3 3 2.0 ))
	)
)

(do-test "test caddar2"
    (let ((aa '((1 2 ((3 4 ((5 6 ((7 8 ((9 10 ((11 12 (13 14) )) )) )) )) )) )) ))
		(and (equal (caddar aa) '((3 4 ((5 6 ((7 8 ((9 10 ((11 12 (13 14) )) )) )) )) ))  )
			(equal (caddar (caddar aa)) '((5 6 ((7 8 ((9 10 ((11 12 (13 14) )) )) )) ))  )
			(equal (caddar (caddar (caddar aa))) '((7 8 ((9 10 ((11 12 (13 14) )) )) ))  )
			(equal (caddar (caddar (caddar (caddar aa)))) '((9 10 ((11 12 (13 14) )) ))  )
			(equal (caddar (caddar (caddar (caddar (caddar aa))))) '((11 12 (13 14) )) )
			(equal (caddar (caddar (caddar (caddar (caddar (caddar aa)))))) '(13 14) )
		)
	)
)

(do-test "test caddar3"	
	(progn (setq aa '((a ab b) c d ))
		(and 
			(setf (caddar aa) '(( #\g #\r #\i #\n)) )
			(equal aa `(( a ab (( #\g #\r #\i #\n)) ) c d ))
			(setf (caddar (caddar aa)) '((3 6 8) 9))
			(equal aa `(( a ab (( #\g #\r ((3 6 8) 9)  #\n)) ) c d  ))
			(setf (caddar (caddar (caddar aa))) "magic kingdom")
			(equal aa `(( a ab (( #\g #\r ((3 6 "magic kingdom") 9) #\n)) )  c d  ))
		)
	)
)
;;
;;
STOP
