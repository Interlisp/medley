;; Function To Be Tested: COPY-ALIST
;;
;; Source: Guy L Steele's CLTL
;; Section: 15.2 Lists
;; Page: 268
;;
;; Created By:    Kelly Roach , Karin Sye
;;
;; Creation Date: June 27,1986
;;
;; Last Update:   July 15,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>15-2-COPY-ALIST.TEST
;;
;;
;; Syntax:        (COPY-ALIST ALIST)
;;
;; Function Description:
;; COPY-ALIST is for copying association lists.  The top level of
;; list structure of LIST is copied, just as for COPY-LIST.
;; In addition, each element of LIST that is a cons is replaced
;; in the copy by a new cons with the same CAR and CDR.
;; 
;; Argument(s):   ALIST - an association list
;;
;; Returns:       an association list
;;

(do-test "test copy-alist 0"
    (and  (equal (copy-alist '((g . 5) (b . 7) (e . 5) (f . 2))) '((g . 5) (b . 7) (e . 5) (f . 2)))
		(equal (copy-alist '((D . 5) (Z . 3) (Y . 3) (Z . 6))) '((D . 5) (Z . 3) (Y . 3) (Z . 6)))
		(equal (copy-alist '((E . 4) (F . 2) (G . 3) (C . 10) (C . 4) (G . 9) (F . 3) (D . 8)))
				'((E . 4) (F . 2) (G . 3) (C . 10) (C . 4) (G . 9) (F . 3) (D . 8)))
		(equal (copy-alist '((X X E G C G)
               			      (D A Z C Z A E E)
              				 (Z G X E Y X C Y F)
              				 (G A G Z A G G B Y)
            				 (F D G E B B A Y)
            				 (Z B E B)))
				'((X X E G C G)
               			      (D A Z C Z A E E)
              				 (Z G X E Y X C Y F)
              				 (G A G Z A G G B Y)
            				 (F D G E B B A Y)
            				 (Z B E B)))
		(equal (copy-alist '((C F X G D B G F X)
                			(C Y E A Z C D)
               				(G F D G C A F D D B)
                			(Z D C D D Z F)
                			(Y C C G E B G D Y Z F)
                			(C E F Z)
                			(Z D)
                			(A G C F G B B A F A Z)
                			(E E A B G Z Z X)))
				'((C F X G D B G F X)
                			(C Y E A Z C D)
               				(G F D G C A F D D B)
                			(Z D C D D Z F)
                			(Y C C G E B G D Y Z F)
                			(C E F Z)
                			(Z D)
                			(A G C F G B B A F A Z)
                			(E E A B G Z Z X)))	
		)
)

(do-test "test copy-alist 1"
	(and	(equal (copy-alist '((CATOR . C)
                			(PERTY . E)
                			(ZORK . X)
                			(PERTY . C)
                			(CATOR . Z)
                			(MEEF . Y)
                			(CATOR . Z)
                			(MORY . E)
                			(ZORK . X)))
				'((CATOR . C)
                			(PERTY . E)
                			(ZORK . X)
                			(PERTY . C)
                			(CATOR . Z)
                			(MEEF . Y)
                			(CATOR . Z)
                			(MORY . E)
                			(ZORK . X)))
		(equal (copy-alist '((MEEF G C E C C)
                			(MORY G X F E)
                			(ZORK D F C F D E D G Z)
                			(CATOR F Y Z)
                			(ZORK B F G X E X F B B)
                			(PERTY A D F B D E D E A X)))
				'((MEEF G C E C C)
                			(MORY G X F E)
                			(ZORK D F C F D E D G Z)
                			(CATOR F Y Z)
                			(ZORK B F G X E X F B B)
                			(PERTY A D F B D E D E A X)))
		(equal (copy-alist '((8 A B D Z E D Y D)
                			(8 Z C)
                			(9 E Z A D F D Y X Z G)
                			(6 G)
                			(5 G D D G B F B C A)
                			(4 B Y Z C X A E)
                			(8 X A G F D A C Y)
                			(5 B F E C E F E)))
				'((8 A B D Z E D Y D)
                			(8 Z C)
                			(9 E Z A D F D Y X Z G)
                			(6 G)
                			(5 G D D G B F B C A)
                			(4 B Y Z C X A E)
                			(8 X A G F D A C Y)
                			(5 B F E C E F E)))
		(equal (copy-alist '((F . 10)
                			(D . 8)
                			(F . 7)
                			(G . 3)
                			(D . 5)
                			(Z . 3)
                			(Y . 3)
                			(Z . 6)))
				'((F . 10)
                			(D . 8)
                			(F . 7)
                			(G . 3)
                			(D . 5)
                			(Z . 3)
                			(Y . 3)
                			(Z . 6)))
		)
)
									
(do-test "test copy-alist 2 --each element of list that is a cons is replaced in the copy by a new cons with the same car and cdr -- page 268"

		(progn (setq aa '(("a" . apple) ("b" . baby) ("c" . candy) ("d" . daddy))  aaa aa
				   bb (copy-alist aa)
				   cc (copy-alist aa))
			  (rplacd (assoc "b" bb :test 'equal) 'babe)
			  (rplacd (assoc "d" bb :test 'equal) 'doodad)
			  (rplacd (assoc "a" cc :test 'equal) 'apricot)
			  (rplacd (assoc "c" cc :test 'equal) 'car)
			  (and 	(equal aa aaa)
					(equal bb '(("a" . apple) ("b" . babe) ("c" . candy) ("d" . doodad))  )
					(equal cc '(("a" . apricot) ("b" . baby) ("c" . car) ("d" . daddy))   )
			  )
		)
)

STOP
