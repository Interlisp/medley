;; Function To Be Tested: COPY-TREE
;;
;; Source: Guy L Steele's CLTL
;; Section: 15.2 Lists
;; Page: 269
;;
;; Created By:    Kelly Roach
;;
;; Creation Date: June 27,1986
;;
;; Last Update:   June 27,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>15-2-COPY-TREE.TEST
;;
;;
;; Syntax:        (COPY-TREE OBJECT)
;;
;; Function Description:
;; COPY-TREE is for copying trees of conses.
;; The argument OBJECT may be any Lisp object.
;; If it is not a cons, it is returned; otherwise
;; the result is a new cons of the results of calling COPY-TREE
;; on the CAR and CDR of the argument.  In other words,
;; all conses in the tree are copied recursively, stopping
;; only when non-conses are encountered.
;; Circularities and the sharing of substructure are NOT preserved.
;; 
;; Compatibility note: This function is called COPY in Interlisp.
;; 
;; Argument(s):   OBJECT - a tree
;;
;; Returns:       a tree
;;

(DO-TEST "COPY-TREE TEST 1" (EQUAL (COPY-TREE '(((D . X) . G) . Y))
                                   '(((D . X) . G) . Y))
       (EQUAL (COPY-TREE '(Z ((((Z . Z)
                                C . G)
                               C . E) . A) . Y))
              '(Z ((((Z . Z)
                    C . G)
                   C . E) . A) . Y))
       (EQUAL (COPY-TREE '(Z . A))
              '(Z . A))
       (EQUAL (COPY-TREE '((C F B . X)
                           X Z . Z))
              '((C F B . X)
               X Z . Z))
       (EQUAL (COPY-TREE '(D . Z))
              '(D . Z))
       (EQUAL (COPY-TREE '(B D . B))
              '(B D . B)))

(DO-TEST "COPY-TREE TEST 2" (EQUAL (COPY-TREE '(((Z . X)
                                                 ((F . A)
                                                  F E . G) . F)
                                                (F G . B) . G))
                                   '(((Z . X)
                                     ((F . A)
                                      F E . G) . F)
                                    (F G . B) . G))
       (EQUAL (COPY-TREE '(F . C))
              '(F . C))
       (EQUAL (COPY-TREE '(B . F))
              '(B . F))
       (EQUAL (COPY-TREE '((((G . Y)
                             ((A . D) . F) . X)
                            B Y Y D . C) . A))
              '((((G . Y)
                 ((A . D) . F) . X)
                B Y Y D . C) . A))
       (EQUAL (COPY-TREE '(((((B Z . X) . G) . Z) . Z)
                           (D (Y E . D) . D)
                           G . G))
              '(((((B Z . X) . G) . Z) . Z)
               (D (Y E . D) . D)
               G . G))
       (EQUAL (COPY-TREE '((((B (B . A)
                                B . A)
                             (E D . G) . B) . C)
                           (F . X)
                           (C X . Z) . B))
              '((((B (B . A)
                    B . A)
                 (E D . G) . B) . C)
               (F . X)
               (C X . Z) . B)))

(DO-TEST "COPY-TREE TEST 3" (EQUAL (COPY-TREE '((MORY . BAR) . CATOR))
                                   '((MORY . BAR) . CATOR))
       (EQUAL (COPY-TREE '(ZORK . MORY))
              '(ZORK . MORY))
       (EQUAL (COPY-TREE '(BAZ ((MORY MORY PERTY . BAR)
                                ((PERTY . PERTY) . MORY)
                                (BAZ . MEEF)
                                ZORK . PERTY)
                               (QIX QIX . PERTY)
                               ZORK . CATOR))
              '(BAZ ((MORY MORY PERTY . BAR)
                    ((PERTY . PERTY) . MORY)
                    (BAZ . MEEF)
                    ZORK . PERTY)
                   (QIX QIX . PERTY)
                   ZORK . CATOR))
       (EQUAL (COPY-TREE '(((PERTY . ZORK)
                            PERTY . PERTY)
                           ((((MEEF . FOO)
                              BAZ . MEEF)
                             (CATOR . MORY)
                             FOO . CATOR) . CATOR)
                           QIX BAZ (CATOR . ZORK)
                           BAZ . CATOR))
              '(((PERTY . ZORK)
                PERTY . PERTY)
               ((((MEEF . FOO)
                  BAZ . MEEF)
                 (CATOR . MORY)
                 FOO . CATOR) . CATOR)
               QIX BAZ (CATOR . ZORK)
               BAZ . CATOR))
       (EQUAL (COPY-TREE '(CATOR BAZ QIX . CATOR))
              '(CATOR BAZ QIX . CATOR))
       (EQUAL (COPY-TREE '(((BAZ . BAR)
                            ZORK . MORY) . BAZ))
              '(((BAZ . BAR)
                ZORK . MORY) . BAZ)))

(DO-TEST "COPY-TREE TEST 4" (EQUAL (COPY-TREE '((FOO (BAR . PERTY)
                                                     FOO . ZORK) . CATOR))
                                   '((FOO (BAR . PERTY)
                                         FOO . ZORK) . CATOR))
       (EQUAL (COPY-TREE '((((CATOR . BAR)
                             (MORY QIX . MEEF) . BAR)
                            (BAR (MORY . QIX) . FOO)
                            ((FOO . MEEF) . PERTY) . MORY)
                           (((QIX . BAR)
                             ZORK BAR . BAR) . QIX)
                           (((MORY . MORY)
                             BAZ . BAR) . BAZ) . ZORK))
              '((((CATOR . BAR)
                 (MORY QIX . MEEF) . BAR)
                (BAR (MORY . QIX) . FOO)
                ((FOO . MEEF) . PERTY) . MORY)
               (((QIX . BAR)
                 ZORK BAR . BAR) . QIX)
               (((MORY . MORY)
                 BAZ . BAR) . BAZ) . ZORK))
       (EQUAL (COPY-TREE '(BAR . BAZ))
              '(BAR . BAZ))
       (EQUAL (COPY-TREE '(((BAR . PERTY)
                            ((QIX . ZORK) . MORY)
                            ((CATOR . MORY)
                             MORY . FOO) . CATOR) . MEEF))
              '(((BAR . PERTY)
                ((QIX . ZORK) . MORY)
                ((CATOR . MORY)
                 MORY . FOO) . CATOR) . MEEF))
       (EQUAL (COPY-TREE '(FOO MEEF FOO . FOO))
              '(FOO MEEF FOO . FOO))
       (EQUAL (COPY-TREE '(((QIX PERTY . CATOR) . ZORK)
                           ((BAR ZORK . QIX)
                            (BAR QIX . MORY) . FOO) . PERTY))
              '(((QIX PERTY . CATOR) . ZORK)
               ((BAR ZORK . QIX)
                (BAR QIX . MORY) . FOO) . PERTY)))

(DO-TEST "COPY-TREE TEST 5" (EQUAL (COPY-TREE '(8 (7 8 . 6) . 8))
                                   '(8 (7 8 . 6) . 8))
       (EQUAL (COPY-TREE '(2 (5 (7 . 1) . 2)
                             9 . 10))
              '(2 (5 (7 . 1) . 2)
                 9 . 10))
       (EQUAL (COPY-TREE '(6 ((9 . 5) . 8) . 8))
              '(6 ((9 . 5) . 8) . 8))
       (EQUAL (COPY-TREE '(1 . 3))
              '(1 . 3))
       (EQUAL (COPY-TREE '(4 . 6))
              '(4 . 6))
       (EQUAL (COPY-TREE '((8 . 6) . 1))
              '((8 . 6) . 1)))

(DO-TEST "COPY-TREE TEST 6" (EQUAL (COPY-TREE '(10 . 4))
                                   '(10 . 4))
       (EQUAL (COPY-TREE '(9 . 5))
              '(9 . 5))
       (EQUAL (COPY-TREE '(((8 . 6)
                            9 5 . 1) . 8))
              '(((8 . 6)
                9 5 . 1) . 8))
       (EQUAL (COPY-TREE '((((7 . 4)
                             9 . 4) . 8) . 7))
              '((((7 . 4)
                 9 . 4) . 8) . 7))
       (EQUAL (COPY-TREE '(((2 . 10)
                            (((7 . 9) . 3) . 1) . 8)
                           4 . 3))
              '(((2 . 10)
                (((7 . 9) . 3) . 1) . 8)
               4 . 3))
       (EQUAL (COPY-TREE '(10 9 (((8 . 6)
                                  1 . 3) . 3) . 6))
              '(10 9 (((8 . 6)
                      1 . 3) . 3) . 6)))

STOP
