;; Function To Be Tested: NTHCDR
;;
;; Source: Guy L Steele's CLTL
;; Section: 15.2 Lists
;; Page: 267
;;
;; Created By:    Karin M. Sye, Kelly Roach
;;
;; Creation Date: June 27,1986
;;
;; Last Update:   June 27,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>15-2-NTHCDR.TEST
;;
;;
;; Syntax:        (NTHCDR N LIST)
;;
;; Function Description:
;; (NTHCDR N LIST) performs the CDR operation N times
;; on LIST, and returns the result.
;; For example:
;; 
;;     (NTHCDR 0 '(A B C)) => (A B C)
;;     (NTHCDR 2 '(A B C)) => (C)
;;     (NTHCDR 4 '(A B C)) => NIL
;;     
;; In other words, it returns the Nth CDR of the list.
;; Compatibility note: This is similar to the Interlisp function NTH,
;; except that the Interlisp function is one-based instead of zero-based.
;; 
;; 
;;  (CAR (NTHCDR N X)) = (NTH N X)
;;     
;; 
;; Argument(s):   N - a number
;;                LIST - a list
;;
;; Returns:       a list
;;



(do-test "test nthcdr - test cases copied from page 267 of CLtL"
    (and (equal (nthcdr 0 '(a b c)) '(a b c))
         (equal (nthcdr 2 '(a b c)) '(c))
         (equal (nthcdr 4 '(a b c)) ())))

(do-test "test nthcdr1"
    (progn (defun fun (x y z)
     				(cond ((listp z) (equal (nthcdr y x) z))
                           (t           (eq (nthcdr y x) z))))
           ;
         (and
           (fun '(1 2 3 4 5 6) 2 '(3 4 5 6))
           (fun '(((((a b c d))))) 2 '())
           (fun '() 3 nil)
           (fun (append '(a b c) '(0 1 2 3) '("u" "v" "k")) 4 '(1 2 3 "u" "v" "k"))
           (fun (nth 1 '((a b c) (11 22 33 44 (55 66 77)) "p" "q" "r")) 4 '((55 66 77))))))

(do-test "test nthcdr2"
    (let ((a (append (make-list 10 :initial-element 'east) (make-list 10 :initial-element 'west)
			      (list 11 22 33 44 55) (cons 5 (cons 4 (cons 3 (cons 2 (cons 1 nil))))))))
         (and (eq (car (nthcdr 10 a)) (nth 10 a))
              (equal (nthcdr 28 a) '(2 1))
              (eq  (car (nthcdr 20 a)) 11)
              (eq (nthcdr 30 a)  nil)
              (eq (car (nthcdr 24 a)) 55))))

STOP
