;; Function To Be Tested: TAILP
;;
;; Source: Guy L Steele's CLTL
;; Section: 15.5 Using Lists as Sets
;; Page: 275
;;
;; Created By:    Kelly Roach , Karin Sye
;;
;; Creation Date: June 27,1986
;;
;; Last Update:   July 15,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>15-5-TAILP.TEST
;;
;;
;; Syntax:        (TAILP X Y)
;;
;; Function Description:
;; This predicate is true if SUBLIST is a sublist of LIST (i.e.,
;; one of the conses that makes up LIST); otherwise it is false.
;; Another way to look at this is that TAILP is true if
;; (NTHCDR N LIST) is SUBLIST, for some value of N.
;; See function LDIFF.
;; 
;; Argument(s):   X - a list
;;                Y - a list
;;
;; Returns:       T or NIL
;;
(do-test "test tailp - SUBLIST is not a sublist of LIST "
    (not (or 	(tailp '(1) '(1 2))
			(tailp '(a b) '( d c a b))
			(tailp '() '(1 2 () 3 4))
			(tailp '( 4 . 5) '((2 . 3) (4 . 5)))
			(let* ((a '(1 (2 3)))  (b (copy-list a)))
				(tailp a b))
			(progn (setq a '(1 2 3 4) b (append a nil))
				  (tailp a b))
		)
	)
)

(do-test "test tailp 1 "
	(and (progn 	(setq a '(1 2 3 4 5 6)  b (nthcdr 3 a) c (nthcdr 5 a) d (nthcdr 1 b))
				(and (tailp b a) (tailp c a) (tailp d a))
		)
		(let ()
				(defun fun (list n) (tailp (nthcdr n list) list))
				(and	(fun '(10 9 8 7 6 5 4 3 2 1) 5)
					(fun '(( a b c d) e f g h (i j k) l m n)  1)
					(fun (make-list 200 :initial-element 'quack) 190)
					(fun (make-list 150 :initial-element '(1 . 2)) 100)
					(fun (make-list 125 :initial-element #\w) 75)
					t
				)
		)
	)
)

(do-test "test tailp 2"
	(progn	(setq a '(1 2 3 4 5 (6 7) (8 9 10) 11 12))
			(and (tailp (cdr a) a)
				(tailp (cdr (cddddr a)) a)
				(tailp (cdddr a) a)
				(tailp (cdddr (cdddr a)) a)
				(tailp (last a) a)
				t
			)
	)
)
STOP
