;; Function To Be Tested: nstring-downcase
;;
;; Source:        CLtL p. 303 
;; Chapter 18: Strings		Section 3: String Construction and Manipulation
;;
;; Created By:    Peter Reidy
;;
;; Creation Date:  23 July 86
;;
;; Last Update:    14 December 86
;;
;; Filed As:      {eris}<lispcore>cml>test>18-3-nstring-downcase.test
;;
;;
;; Syntax:    nstring-downcase string &key :start :end            
;;
;; Function Description: converts all upper case characters in string from :start to :end (counting from 0, with :end the character after the last to be converted) to lower case, destructively modifying string.
;;
;; Argument(s):	string - any valid character string
;;			:start, :end - the first and last+1 characters (counting from 0) in string to be converted.         	
;;
;; Returns: a string of the same length with the specified conversions.             
;;
(do-test-group nstring-downcase-group
	:before
	(test-setq
		testcase "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		testcase2 testcase
		stablecase (copy-seq testcase)
		alphalength (length testcase)
		digits "0123456789"
		punc "|\\!@#$%^ &*()_+-={}[]:\"~<>?,./"
	)
;;

	(do-test nstring-downcase-test
		(AND
;; The result is one and the same string
			(eq testcase (nstring-downcase testcase))
;; ... yet with different contents.
			(not (string= testcase stablecase))
			(string-equal testcase stablecase)	
;; A pointer to the changed string points to the new contents.
			(string= testcase2 "abcdefghijklmnopqrstuvwxyz")
;; Numeric characters, punctuation marks and non-string characters have no lower case.
			(string= digits (nstring-downcase digits))
			(string= punc (nstring-downcase punc))
			(string=
				(coerce '(#\linefeed #\page #\tab #\return #\rubout #\backspace #\page) 'string)
				(nstring-downcase
					(coerce '(#\linefeed #\page #\tab #\return #\rubout #\backspace #\page) 'string)
				:start 0 :end 6
				)
			)
;; Results should be the same length regardless of keywords.
			(= alphalength (length (nstring-downcase stablecase :end 20 :start 10)))
		)
	)
)
STOP

