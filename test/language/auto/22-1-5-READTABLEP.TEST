;; Function To Be Tested: readtablep
;;
;; Source:        CLtL p. 361
;;
;; Chapter 22: Input/Output		Section 1.5: The Readtable
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 19 October 86
;;
;; Last Update: 24 March 8y - Reidy - changed the copy-readtable example.
;;
;; Filed As:      {eris}<lispcore>cml>test>22-1-5-readtablep.test
;;
;; Syntax: readtablep object
;;            
;; Function Description: Returns non-nil iff object is a readtable, and NIL otherwise.
;;
;; Argument(s):	object any cml object 
;;
;; Returns:  non-nil or NIL            
;;
(do-test-group readtablep-group
	:before
		(progn
;; See if readtablep is true or not true of object, and whether its value is equivalent to (typep object 'readtable).
;; JRB - AR 6654 is declined; it is sufficient that the Lisp truth value of whatever readtablep returns is correct, not its exact EQ value.
			(test-defun readtabletest (object expected-value)
				(let	((value (readtablep object)))
						(cond	
							(expected-value value)
							(t (null value))
						)
				)  ; let
			)  ; test-defun
			(test-setq oddtable1 (copy-readtable nil))
		)  ; progn
;;
	(do-test readtablep-test
		(every 'readtabletest
			(list
				*readtable*
				(let ((crt (copy-readtable))) crt)
				oddtable1
				(let ((*readtable* oddtable1)) oddtable1)
				'*readtable*
				'(copy-readtable)
				'oddtable1
				"*readtable*"
			)  ; list
			'(t t t t nil nil nil nil)	
		)  ; every
	)  ; do-test readtablep-test
)  ; do-test-group
STOP

