;; Function To Be Tested: terpri
;;
;; Source:        CLtL p. 384
;;
;; Chapter 22: Input/Output		Section 3.1: Output to Character Streams
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 8 December 86
;;
;; Last Update: 
;;
;; Filed As:      {eris}<lispcore>cml>test>22-3-1-terpri.test
;;
;; Syntax: terpri &optional output-stream
;;            
;; Function Description: puts a newline out unconditionally to stream 
;;
;; Argument(s):	stream - a stream (defaults to *standard-output*)
;;
;; Returns: nil			 
;;
(do-test-group
	(do-test "terpri returns nil"
		(every 'null
			(list	
				(terpri)
				(terpri *standard-output*)
				(let ((outstream (make-string-output-stream)))
					(write 4761 :stream outstream)
					(terpri outstream)
				)
			)
		)  ; every
	)  ; do-test "terpri returns nil"
;;
	(do-test "terpri outputs #\newline unconditionally"
		(every
			#'(lambda (writefunc)
				(position #\newline
					(with-output-to-string (charstream)
						(declare (special charstream))
						(funcall writefunc)
					)  ; with-output-to-string	
				)  ; position
			)  ; lambda
			(list
				#'(lambda () (terpri charstream))
				#'(lambda () (progn (write-line "This is a test" charstream) (terpri charstream)))
				#'(lambda () (progn (write-string "This is a test" charstream) (terpri charstream)))
				#'(lambda () (progn (terpri charstream) (write-string "This is a test" charstream)))
				#'(lambda () (progn (write 5 :stream charstream) (terpri charstream) (write-char #\? charstream)))
			)  ; list
		)  ; every
	)  ; do-test "terpri outputs #\newline unconditionally"
)  ; do-test-group
STOP

