;; Function To Be Tested: write-char
;;
;; Source:        CLtL p. 384
;;
;; Chapter 22: Input/Output		Section 3.1: Output to Character Streams
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 8 December 86
;;
;; Last Update: 
;;
;; Filed As:      {eris}<lispcore>cml>test>22-3-1-write-char.test
;;
;; Syntax: write-char  character &optional output-stream
;;            
;; Function Description: writes character to output-stream (default: *standard-output*)
;;
;; Argument(s):	character - a character
;;			output-stream - a stream
;;
;; Returns: character			 
;;
(do-test-group
	(write-char-group
	:before
		(progn
			(test-setq charlist ;; 94 standard characters (CLtL p. 21) plus space and newline (2 notations each)
				'(#\A #\B #\C #\D #\E #\F #\G #\H #\I #\J #\K #\L #\M #\N #\O #\P #\Q #\R #\S #\T #\U #\V #\W #\X #\Y #\Z #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z #\0 #\1 #\2 #\3 #\4 #\5 #\6 #\7 #\8 #\9 #\! #\" #\# #\$ #\% #\& #\' #\( #\) #\* #\+ #\, #\- #\. #\/ #\: #\; #\< #\= #\< #\? #\@ #\[ #\\ #\] #\^ #\_ #\` #\{ #\| #\} #\~ #\space #\  #\newline #\
 ))
			(test-defun readback (character)
			"Write-char a character to a file and read-char it back; return the character read."
				(let	((stream (open 'file :direction :output :if-exists :new-version :if-does-not-exist :create :element-type 'unsigned-byte)))
					(write-char character stream)
					(close stream)
				)
				(let ((stream (open 'file :element-type 'unsigned-byte :direction :input)))
					(prog1 (read-char stream) (close stream) (delete-file 'file))
				)
			)  ; test-defun readback
;;
			(test-defun write-char-test (char)
			"See if a character read back is the same one written out."
				(char= char (readback char))
			)
		)  ; progn
	)  ; write-char-group
	(do-test "write-char to default stream"
		(every #'(lambda (char) (char= (write-char char) char)) charlist)
	)  ; do-test "write-char to default stream"
;;
	(do-test "write-char and read back"
		(every 'write-char-test charlist)
	)  ; do-test "write-char and read back"
)  ; do-test-group
STOP

