(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "INTERLISP")
(FILECREATED "13-May-87 17:24:00" {ERIS}<LISPCORE>CML>TEST>23-FUNCTIONS.\;8 83482  

      |changes| |to:|  (FUNCTIONS XCL-TEST::23BUILD-DIRECTORY-LIST 
                              XCL-TEST::23BUILD-DIRECTORY-LIST-ALL 
                              XCL-TEST::23DRIVE-DIRECTORY-LIST-NAMESTRING 
                              XCL-TEST::23DRIVE-DIRECTORY-LIST-PATHNAME XCL-TEST::23DRIVE-RENAME-TEST 
                              XCL-TEST::23CHECK-RENAME-DIRECTORY XCL-TEST::23CHECK-RENAME-NAME-TYPE 
                              XCL-TEST::23CHECK-RENAME-SIMPLE XCL-TEST::23DRIVE-PROBE-FILE-LIST 
                              XCL-TEST::23TEST-PROBE-FILE-LIST XCL-TEST::23TEST-PROBE-FILE 
                              XCL-TEST::23DRIVE-DATE XCL-TEST::23BUILD-DATE 
                              XCL-TEST::23TEST-DATE-LIST XCL-TEST::23TEST-DATE 
                              XCL-TEST::23DRIVE-POSITION XCL-TEST::23POSITION-STRING-CHAR-COMPLEX 
                              XCL-TEST::23POSITION-UNSIGNED-BYTE XCL-TEST::23POSITION-STRING-CHAR 
                              XCL-TEST::23POSITION-EMPTY XCL-TEST::23DRIVE-LENGTH 
                              XCL-TEST::23LENGTH-UNSIGNED-BYTE XCL-TEST::23LENGTH-STRING-CHAR 
                              XCL-TEST::23LENGTH-EMPTY XCL-TEST::23DRIVE-AUTHOR 
                              XCL-TEST::23BUILD-AUTHOR XCL-TEST::23TEST-AUTHOR-LIST 
                              XCL-TEST::23TEST-AUTHOR XCL-TEST::23DRIVE-DELETE-FILE-LIST 
                              XCL-TEST::23TEST-DELETE-FILE-LIST XCL-TEST::23TEST-DELETE-FILE 
                              XCL-TEST::23DRIVE-WITH-OPEN XCL-TEST::23WITH-OPEN-MORE-TEST 
                              XCL-TEST::23WITH-OPEN-BASIC XCL-TEST::23DRIVE-HOST-LIST-NAMESTRING 
                              XCL-TEST::23DRIVE-HOST-LIST-PATHNAME XCL-TEST::23BUILD-HOST-LIST-ALL 
                              XCL-TEST::23BUILD-HOST-LIST XCL-TEST::23DRIVE-TYPE-LIST 
                              XCL-TEST::23BUILD-TYPE-LIST-ALL XCL-TEST::23BUILD-TYPE-LIST 
                              XCL-TEST::23DRIVE-NAME-LIST XCL-TEST::23BUILD-NAME-LIST 
                              XCL-TEST::23DRIVE-PATHNAMEP-HOST-LIST 
                              XCL-TEST::23BUILD-PATHNAMEP-HOST-LIST XCL-TEST::23DRIVE-VERSION-LIST 
                              XCL-TEST::23BUILD-VERSION-LIST-ALL XCL-TEST::23BUILD-VERSION-LIST 
                              XCL-TEST::23DRIVE-MERGE-LIST-NO-STREAM 
                              XCL-TEST::23DRIVE-MERGE-LIST-STREAM XCL-TEST::23CHECK-MERGE-LISTS 
                              XCL-TEST::23CHECK-MERGE-LIST XCL-TEST::23DRIVE-MAKE-LIST 
                              XCL-TEST::23DRIVE-NAMESTRING-LIST XCL-TEST::23DRIVE-PARSE 
                              XCL-TEST::23PARSE-END XCL-TEST::23PARSE-START XCL-TEST::23PARSE-JUNK 
                              XCL-TEST::23PARSE-VARIABLE-TYPE XCL-TEST::23PARSE-BASIC 
                              XCL-TEST::23DRIVE-DEVICE-LIST XCL-TEST::23BUILD-DEVICE-LIST-ALL 
                              XCL-TEST::23BUILD-DEVICE-LIST XCL-USER::23DRIVE-ENOUGH-LIST 
                              XCL-USER::23DRIVE-FILE-BOTH XCL-USER::23DRIVE-FILE-LIST 
                              XCL-USER::23DRIVE-FILE-LIST-NO-VERSION 
                              XCL-TEST::23DRIVE-FILE-LIST-NO-VERSION XCL-TEST::23DRIVE-FILE-LIST 
                              XCL-TEST::23DRIVE-FILE-BOTH XCL-TEST::23DRIVE-ENOUGH-LIST 
                              XCL-TEST::23CHECK-PARSE-LIST XCL-TEST::23CHECK-PARSE 
                              XCL-TEST::23CHECK-RENAME XCL-TEST::23CHECK-MERGE 
                              XCL-TEST::23MUL-NO-PATHNAME XCL-TEST::23THREE-TYPES 
                              XCL-TEST::23MULTIPLY-STREAM XCL-TEST::23FILE-GENERATOR 
                              XCL-TEST::23TEST-NAMESTRING-VALUE-LIST 
                              XCL-TEST::23TEST-PATHNAME-VALUE-LIST XCL-TEST::23TEST-NAMESTRING-VALUE 
                              XCL-TEST::23TEST-PATHNAME-VALUE 
                              XCL-TEST::23BUILD-LIST-OF-FILENAME-SYMBOL 
                              XCL-TEST::23BUILD-LIST-OF-FILENAME-STRING 
                              XCL-TEST::23BUILD-LIST-OF-STREAM 
                              XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES 
                              XCL-TEST::23DELETE-FILE-LIST XCL-TEST::23BUILD-SYMBOL-FROM-PATHNAME 
                              XCL-TEST::23FILE-CLEANUP XCL-TEST::23LENGTH-SETUP 
                              XCL-TEST::23FILE-SETUP XCL-TEST::23BUILD-FILE 
                              XCL-TEST::23BUILD-PATHNAME)
                       (VARS 23-FUNCTIONSCOMS)

      |previous| |date:| " 8-May-87 13:40:30" {ERIS}<LISPCORE>CML>TEST>23-FUNCTIONS.\;4)


; Copyright (c) 1987 by Xerox Corporation.  All rights reserved.

(PRETTYCOMPRINT 23-FUNCTIONSCOMS)

(RPAQQ 23-FUNCTIONSCOMS 
       ((FUNCTIONS XCL-TEST::23BUILD-AUTHOR XCL-TEST::23BUILD-DATE XCL-TEST::23BUILD-DEVICE-LIST 
               XCL-TEST::23BUILD-DEVICE-LIST-ALL XCL-TEST::23BUILD-DIRECTORY-LIST 
               XCL-TEST::23BUILD-DIRECTORY-LIST-ALL XCL-TEST::23BUILD-FILE 
               XCL-TEST::23BUILD-HOST-LIST XCL-TEST::23BUILD-HOST-LIST-ALL 
               XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::23BUILD-LIST-OF-FILENAME-STRING 
               XCL-TEST::23BUILD-LIST-OF-FILENAME-SYMBOL XCL-TEST::23BUILD-LIST-OF-STREAM 
               XCL-TEST::23BUILD-NAME-LIST XCL-TEST::23BUILD-PATHNAME 
               XCL-TEST::23BUILD-PATHNAMEP-HOST-LIST XCL-TEST::23BUILD-SYMBOL-FROM-PATHNAME 
               XCL-TEST::23BUILD-TYPE-LIST XCL-TEST::23BUILD-TYPE-LIST-ALL 
               XCL-TEST::23BUILD-VERSION-LIST XCL-TEST::23BUILD-VERSION-LIST-ALL 
               XCL-TEST::23CHECK-MERGE XCL-TEST::23CHECK-MERGE-LIST XCL-TEST::23CHECK-MERGE-LISTS 
               XCL-TEST::23CHECK-PARSE XCL-TEST::23CHECK-PARSE-LIST XCL-TEST::23CHECK-RENAME 
               XCL-TEST::23CHECK-RENAME-DIRECTORY XCL-TEST::23CHECK-RENAME-NAME-TYPE 
               XCL-TEST::23CHECK-RENAME-SIMPLE XCL-TEST::23DELETE-FILE-LIST XCL-TEST::23DRIVE-AUTHOR 
               XCL-TEST::23DRIVE-DATE XCL-TEST::23DRIVE-DELETE-FILE-LIST 
               XCL-TEST::23DRIVE-DEVICE-LIST XCL-TEST::23DRIVE-DIRECTORY-LIST-NAMESTRING 
               XCL-TEST::23DRIVE-DIRECTORY-LIST-PATHNAME XCL-TEST::23DRIVE-ENOUGH-LIST 
               XCL-TEST::23DRIVE-FILE-BOTH XCL-TEST::23DRIVE-FILE-LIST 
               XCL-TEST::23DRIVE-FILE-LIST-NO-VERSION XCL-TEST::23DRIVE-HOST-LIST-NAMESTRING 
               XCL-TEST::23DRIVE-HOST-LIST-PATHNAME XCL-TEST::23DRIVE-LENGTH 
               XCL-TEST::23DRIVE-MAKE-LIST XCL-TEST::23DRIVE-MERGE-LIST-NO-STREAM 
               XCL-TEST::23DRIVE-MERGE-LIST-STREAM XCL-TEST::23DRIVE-NAME-LIST 
               XCL-TEST::23DRIVE-NAMESTRING-LIST XCL-TEST::23DRIVE-PARSE 
               XCL-TEST::23DRIVE-PATHNAMEP-HOST-LIST XCL-TEST::23DRIVE-POSITION 
               XCL-TEST::23DRIVE-PROBE-FILE-LIST XCL-TEST::23DRIVE-RENAME-TEST 
               XCL-TEST::23DRIVE-TYPE-LIST XCL-TEST::23DRIVE-VERSION-LIST XCL-TEST::23DRIVE-WITH-OPEN 
               XCL-TEST::23FILE-CLEANUP XCL-TEST::23FILE-GENERATOR XCL-TEST::23FILE-SETUP 
               XCL-TEST::23LENGTH-EMPTY XCL-TEST::23LENGTH-SETUP XCL-TEST::23LENGTH-STRING-CHAR 
               XCL-TEST::23LENGTH-UNSIGNED-BYTE XCL-TEST::23MUL-NO-PATHNAME 
               XCL-TEST::23MULTIPLY-STREAM XCL-TEST::23PARSE-BASIC XCL-TEST::23PARSE-END 
               XCL-TEST::23PARSE-JUNK XCL-TEST::23PARSE-START XCL-TEST::23PARSE-VARIABLE-TYPE 
               XCL-TEST::23POSITION-EMPTY XCL-TEST::23POSITION-STRING-CHAR 
               XCL-TEST::23POSITION-STRING-CHAR-COMPLEX XCL-TEST::23POSITION-UNSIGNED-BYTE 
               XCL-TEST::23TEST-AUTHOR XCL-TEST::23TEST-AUTHOR-LIST XCL-TEST::23TEST-DATE 
               XCL-TEST::23TEST-DATE-LIST XCL-TEST::23TEST-DELETE-FILE 
               XCL-TEST::23TEST-DELETE-FILE-LIST XCL-TEST::23TEST-NAMESTRING-VALUE 
               XCL-TEST::23TEST-NAMESTRING-VALUE-LIST XCL-TEST::23TEST-PATHNAME-VALUE 
               XCL-TEST::23TEST-PATHNAME-VALUE-LIST XCL-TEST::23TEST-PROBE-FILE 
               XCL-TEST::23TEST-PROBE-FILE-LIST XCL-TEST::23THREE-TYPES XCL-TEST::23WITH-OPEN-BASIC 
               XCL-TEST::23WITH-OPEN-MORE-TEST)))

(CL:DEFUN XCL-TEST::23BUILD-AUTHOR (XCL-TEST::HOST) (CL:APPEND (
                                                         XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES
                                                                XCL-TEST::HOST 2)
                                                           (XCL-TEST::23BUILD-LIST-OF-FILENAME-SYMBOL
                                                            XCL-TEST::HOST 2)))


(CL:DEFUN XCL-TEST::23BUILD-DATE (XCL-TEST::HOST) (CL:APPEND (
                                                         XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES
                                                              XCL-TEST::HOST 2)
                                                         (XCL-TEST::23BUILD-LIST-OF-STREAM 
                                                                XCL-TEST::HOST 2)
                                                         (XCL-TEST::23BUILD-LIST-OF-FILENAME-SYMBOL
                                                          XCL-TEST::HOST 2)))


(CL:DEFUN XCL-TEST::23BUILD-DEVICE-LIST (XCL-TEST::HOST XCL-TEST::DEVICE XCL-TEST::RESULT-TYPE) 
                                                                       "build a list for the checker"
   (CL:APPEND (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 XCL-TEST::DEVICE)
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 XCL-TEST::DEVICE 
                 "cmltest")
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 XCL-TEST::DEVICE 
                 "cmltest>sub")
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 XCL-TEST::DEVICE 
                 "cmltest>sub" NIL "temptype")))


(CL:DEFUN XCL-TEST::23BUILD-DEVICE-LIST-ALL (XCL-TEST::HOST XCL-TEST::DEVICE) 
                                                                          "build the big master list"
   (CL:APPEND (XCL-TEST::23BUILD-DEVICE-LIST XCL-TEST::HOST XCL-TEST::DEVICE 'PATHNAME)
          (XCL-TEST::23BUILD-DEVICE-LIST XCL-TEST::HOST XCL-TEST::DEVICE 'STREAM)
          (XCL-TEST::23BUILD-DEVICE-LIST XCL-TEST::HOST XCL-TEST::DEVICE 'STRING)
          (XCL-TEST::23BUILD-DEVICE-LIST XCL-TEST::HOST XCL-TEST::DEVICE 'CL:SYMBOL)))


(CL:DEFUN XCL-TEST::23BUILD-DIRECTORY-LIST (XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 
                                                  XCL-TEST::RESULT-TYPE) 
                                                            "build a list to test pathname-directory"
   (CL:APPEND (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 XCL-TEST::DEVICE 
                     CL:DIRECTORY)
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 XCL-TEST::DEVICE 
                 CL:DIRECTORY NIL "temptype")
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 XCL-TEST::DEVICE 
                 CL:DIRECTORY NIL "temptype12")))


(CL:DEFUN XCL-TEST::23BUILD-DIRECTORY-LIST-ALL (XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY) 
                                                              "build the master list for the checker"
   (CL:APPEND (XCL-TEST::23BUILD-DIRECTORY-LIST XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY
                     'PATHNAME)
          (XCL-TEST::23BUILD-DIRECTORY-LIST XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 'STREAM)
          (XCL-TEST::23BUILD-DIRECTORY-LIST XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 'STRING)
          (XCL-TEST::23BUILD-DIRECTORY-LIST XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 'CL:SYMBOL)))


(CL:DEFUN XCL-TEST::23BUILD-FILE (PATHNAME) "build a file" (LET ((XCL-TEST::STR (OPEN PATHNAME 
                                                                                      :DIRECTION 
                                                                                      :OUTPUT)))
                                                                (CL:CLOSE XCL-TEST::STR)
                                                                XCL-TEST::STR))


(CL:DEFUN XCL-TEST::23BUILD-HOST-LIST (XCL-TEST::HOST XCL-TEST::USEDEVICE XCL-TEST::INONEDIR 
                                             XCL-TEST::RESULT-TYPE) 
                                                      "build a list with which to test pathname-host"
   (CL:APPEND (CL:IF (NOT XCL-TEST::INONEDIR)
                     (CL:APPEND (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2)
                            (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 NIL 
                                   "aisbu.modem12")
                            (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 NIL 
                                   "aisbu.modem32" NIL "temptype")))
          (CL:IF XCL-TEST::USEDEVICE (CL:APPEND (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE 
                                                       XCL-TEST::HOST 2 "tempdevice")
                                            (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE 
                                                   XCL-TEST::HOST 2 "tempdevice" "cmltest")
                                            (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE 
                                                   XCL-TEST::HOST 2 "tempdevice" "cmlfiletest" NIL 
                                                   "temptype")))
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 NIL "cmltest")
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 NIL "cmltest>sub")
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 2 NIL "cmltest>sub" NIL 
                 "temptype")))


(CL:DEFUN XCL-TEST::23BUILD-HOST-LIST-ALL (XCL-TEST::HOST XCL-TEST::USEDEVICE XCL-TEST::INONEDIR) 
                                                                          "build the big master list"
   (CL:APPEND (XCL-TEST::23BUILD-HOST-LIST XCL-TEST::HOST XCL-TEST::USEDEVICE XCL-TEST::INONEDIR
                     'PATHNAME)
          (XCL-TEST::23BUILD-HOST-LIST XCL-TEST::HOST XCL-TEST::USEDEVICE XCL-TEST::INONEDIR
                 'STREAM)
          (XCL-TEST::23BUILD-HOST-LIST XCL-TEST::HOST XCL-TEST::USEDEVICE XCL-TEST::INONEDIR
                 'STRING)
          (XCL-TEST::23BUILD-HOST-LIST XCL-TEST::HOST XCL-TEST::USEDEVICE XCL-TEST::INONEDIR
                 'CL:SYMBOL)))


(CL:DEFUN XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES (XCL-TEST::HOST &OPTIONAL (CL:NUMBER 5)
                                                              XCL-TEST::DEVICE
                                                              (XCL-TEST::DIR "CMLTEST")
                                                              XCL-TEST::NAME TYPE) 
                                    "return list of pathnames for created files on {host}<directory>"
   (LET ((XCL-TEST::RESULTS NIL))
        (CL:DOTIMES (XCL-TEST::I CL:NUMBER XCL-TEST::RESULTS)
               (CL:PUSH (XCL-TEST::23BUILD-PATHNAME XCL-TEST::HOST XCL-TEST::DEVICE XCL-TEST::DIR 
                               XCL-TEST::NAME TYPE)
                      XCL-TEST::RESULTS)
               (XCL-TEST::23BUILD-FILE (CAR XCL-TEST::RESULTS)))))


(CL:DEFUN XCL-TEST::23BUILD-LIST-OF-FILENAME-STRING (XCL-TEST::HOST &OPTIONAL (CL:NUMBER 5)
                                                           XCL-TEST::DEVICE
                                                           (XCL-TEST::DIR "CMLTEST")
                                                           XCL-TEST::NAME TYPE) 
                                      "return list of strings for created files on {host}<directory>"
   (LET ((XCL-TEST::RESULTS NIL)
         (XCL-TEST::TEMP-PATHNAME NIL))
        (CL:DOTIMES (XCL-TEST::I CL:NUMBER XCL-TEST::RESULTS)
               (CL:SETQ XCL-TEST::TEMP-PATHNAME (XCL-TEST::23BUILD-PATHNAME XCL-TEST::HOST 
                                                       XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME 
                                                       TYPE))
               (CL:PUSH (CL:NAMESTRING XCL-TEST::TEMP-PATHNAME)
                      XCL-TEST::RESULTS)
               (XCL-TEST::23BUILD-FILE XCL-TEST::TEMP-PATHNAME))))


(CL:DEFUN XCL-TEST::23BUILD-LIST-OF-FILENAME-SYMBOL (XCL-TEST::HOST &OPTIONAL (CL:NUMBER 5)
                                                           XCL-TEST::DEVICE
                                                           (XCL-TEST::DIR "CMLTEST")
                                                           XCL-TEST::NAME TYPE) 
                                      "return list of symbols for created files on {host}<directory>"
   (LET ((XCL-TEST::RESULTS NIL)
         (XCL-TEST::TEMP-PATHNAME NIL))
        (CL:DOTIMES (XCL-TEST::I CL:NUMBER XCL-TEST::RESULTS)
               (CL:SETQ XCL-TEST::TEMP-PATHNAME (XCL-TEST::23BUILD-PATHNAME XCL-TEST::HOST 
                                                       XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME 
                                                       TYPE))
               (CL:PUSH (XCL-TEST::23BUILD-SYMBOL-FROM-PATHNAME XCL-TEST::TEMP-PATHNAME)
                      XCL-TEST::RESULTS)
               (XCL-TEST::23BUILD-FILE XCL-TEST::TEMP-PATHNAME))))


(CL:DEFUN XCL-TEST::23BUILD-LIST-OF-STREAM (XCL-TEST::HOST &OPTIONAL (CL:NUMBER 5)
                                                  XCL-TEST::DEVICE
                                                  (XCL-TEST::DIR "CMLTEST")
                                                  XCL-TEST::NAME TYPE) 
                                       "return list of stream for created files on {host}<directory>"
   (LET ((XCL-TEST::RESULTS NIL))
        (CL:DOTIMES (XCL-TEST::I CL:NUMBER XCL-TEST::RESULTS)
               (CL:PUSH (XCL-TEST::23BUILD-FILE (XCL-TEST::23BUILD-PATHNAME XCL-TEST::HOST 
                                                       XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME 
                                                       TYPE))
                      XCL-TEST::RESULTS))))


(CL:DEFUN XCL-TEST::23BUILD-NAME-LIST (XCL-TEST::HOST XCL-TEST::NAME XCL-TEST::RESULT-TYPE 
                                             XCL-TEST::USEDEVICE XCL-TEST::INONEDIR) 
                                                                 "create a list of files of one type"
   (CL:APPEND (CL:IF (NOT XCL-TEST::INONEDIR)
                     (CL:APPEND (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 1 
                                       NIL NIL XCL-TEST::NAME)
                            (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 1 NIL 
                                   "TEMPDIR12-23" XCL-TEST::NAME)))
          (CL:IF XCL-TEST::USEDEVICE (CL:APPEND (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE 
                                                       XCL-TEST::HOST 1 "TEMPDEVICE" NIL 
                                                       XCL-TEST::NAME)))
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 1 NIL "cmltest" 
                 XCL-TEST::NAME)
          (XCL-TEST::23FILE-GENERATOR XCL-TEST::RESULT-TYPE XCL-TEST::HOST 1 NIL "cmltest" 
                 XCL-TEST::NAME "temptype12")))


(CL:DEFUN XCL-TEST::23BUILD-PATHNAME (XCL-TEST::HOST &OPTIONAL XCL-TEST::DEVICE (XCL-TEST::DIR 
                                                                                       "CMLTEST")
                                            XCL-TEST::NAME TYPE) 
                               "build a path name with default directory, and if need generated name"
   (CL:MAKE-PATHNAME :HOST XCL-TEST::HOST :DEVICE XCL-TEST::DEVICE :DIRECTORY XCL-TEST::DIR :NAME
          (CL:IF XCL-TEST::NAME XCL-TEST::NAME (STRING (CL:GENSYM)))
          :TYPE TYPE))


(CL:DEFUN XCL-TEST::23BUILD-PATHNAMEP-HOST-LIST (XCL-TEST::HOST XCL-TEST::USEDEVICE 
                                                       XCL-TEST::INONEDIR) 
                                                    "build the master list to drive past the checker"
   (CL:APPEND (CL:IF (NULL XCL-TEST::INONEDIR)
                     (CL:APPEND (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 1)
                            (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 2 NIL 
                                   "aisbu.modem12")
                            (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 3 NIL NIL 
                                   NIL "temptype")
                            (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 2 NIL 
                                   "aisbu.modem" NIL "temptype")))
          (CL:IF XCL-TEST::USEDEVICE (CL:APPEND (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES 
                                                       XCL-TEST::HOST 3 "tempdevice")
                                            (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES 
                                                   XCL-TEST::HOST 2 "tempdevice" "cmltest")
                                            (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES 
                                                   XCL-TEST::HOST 2 "tempdevice" "cmltest" NIL 
                                                   "temptype")))
          (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 2 NIL "cmltest")
          (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 3 NIL "cmltest>sub")
          (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 2 NIL "cmltest>sub" NIL 
                 "temptype")))


(CL:DEFUN XCL-TEST::23BUILD-SYMBOL-FROM-PATHNAME (XCL-TEST::TEMP-PATHNAME) 
                                                          "get the name of a stream into SYMBOL form"
   (CL:MAKE-SYMBOL (CL:NAMESTRING XCL-TEST::TEMP-PATHNAME)))


(CL:DEFUN XCL-TEST::23BUILD-TYPE-LIST (XCL-TEST::HOST TYPE XCL-TEST::RESULT-TYPE) (CL:APPEND
                                                                                   (
                                                                           XCL-TEST::23FILE-GENERATOR
                                                                                    
                                                                                XCL-TEST::RESULT-TYPE 
                                                                                    XCL-TEST::HOST 2 
                                                                                    NIL "cmltest" NIL 
                                                                                    TYPE)
                                                                                   (
                                                                           XCL-TEST::23FILE-GENERATOR
                                                                                    
                                                                                XCL-TEST::RESULT-TYPE 
                                                                                    XCL-TEST::HOST 2 
                                                                                    NIL "cmltest>sub" 
                                                                                    NIL TYPE)))


(CL:DEFUN XCL-TEST::23BUILD-TYPE-LIST-ALL (XCL-TEST::HOST TYPE) (CL:APPEND (
                                                                          XCL-TEST::23BUILD-TYPE-LIST
                                                                            XCL-TEST::HOST TYPE
                                                                            'PATHNAME)
                                                                       (XCL-TEST::23BUILD-TYPE-LIST
                                                                        XCL-TEST::HOST TYPE
                                                                        'STREAM)
                                                                       (XCL-TEST::23BUILD-TYPE-LIST
                                                                        XCL-TEST::HOST TYPE
                                                                        'STRING)
                                                                       (XCL-TEST::23BUILD-TYPE-LIST
                                                                        XCL-TEST::HOST TYPE
                                                                        'CL:SYMBOL)))


(CL:DEFUN XCL-TEST::23BUILD-VERSION-LIST (XCL-TEST::HOST XCL-TEST::RESULT-TYPE) (CL:APPEND
                                                                                 (
                                                                           XCL-TEST::23FILE-GENERATOR
                                                                                  
                                                                                XCL-TEST::RESULT-TYPE 
                                                                                  XCL-TEST::HOST 2 
                                                                                  NIL "cmltest")
                                                                                 (
                                                                           XCL-TEST::23FILE-GENERATOR
                                                                                  
                                                                                XCL-TEST::RESULT-TYPE 
                                                                                  XCL-TEST::HOST 2 
                                                                                  NIL "cmltest>sub")))


(CL:DEFUN XCL-TEST::23BUILD-VERSION-LIST-ALL (XCL-TEST::HOST) (CL:APPEND (
                                                                       XCL-TEST::23BUILD-VERSION-LIST
                                                                          XCL-TEST::HOST
                                                                          'STREAM)))


(CL:DEFUN XCL-TEST::23CHECK-MERGE (XCL-TEST::EXPECT XCL-TEST::TEMP-PATHNAME &OPTIONAL 
                                         XCL-TEST::DEFAULTS XCL-TEST::DEFAULT-VERSION) 
                                                   "check both a pathname, and value is as expected."
   (LET ((XCL-TEST::RESULT (CL:MERGE-PATHNAMES XCL-TEST::TEMP-PATHNAME XCL-TEST::DEFAULTS 
                                  XCL-TEST::DEFAULT-VERSION)))
        (AND (CL:PATHNAMEP XCL-TEST::RESULT)
             (STRING-EQUAL XCL-TEST::EXPECT (CL:NAMESTRING XCL-TEST::RESULT)))))


(CL:DEFUN XCL-TEST::23CHECK-MERGE-LIST (XCL-TEST::EXPECT XCL-TEST::TEMP-PATHNAME 
                                              XCL-TEST::DEFAULT-LIST XCL-TEST::DEFAULT-VERSION) 
                                          "make sure each type can be merge with all the other types"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (EQ T (XCL-TEST::23CHECK-MERGE XCL-TEST::EXPECT XCL-TEST::TEMP-PATHNAME 
                                   XCL-TEST::ITEM XCL-TEST::DEFAULT-VERSION))) XCL-TEST::DEFAULT-LIST
          ))


(CL:DEFUN XCL-TEST::23CHECK-MERGE-LISTS (XCL-TEST::EXPECT XCL-TEST::BIG-LIST XCL-TEST::DEFAULT-LIST 
                                               XCL-TEST::DEFAULT-VERSION) 
                                          "make sure each type can be merge with all the other types"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (EQ T (XCL-TEST::23CHECK-MERGE-LIST XCL-TEST::EXPECT XCL-TEST::ITEM 
                                   XCL-TEST::DEFAULT-LIST XCL-TEST::DEFAULT-VERSION))) 
          XCL-TEST::BIG-LIST))


(CL:DEFUN XCL-TEST::23CHECK-PARSE (XCL-TEST::EXPECT XCL-TEST::TEMP-PATHNAME) "check get what want"
   (LET ((PATHNAME (CL:PARSE-NAMESTRING XCL-TEST::TEMP-PATHNAME)))
        (AND (CL:PATHNAMEP PATHNAME)
             (STRING-EQUAL XCL-TEST::EXPECT (CL:NAMESTRING PATHNAME)))))


(CL:DEFUN XCL-TEST::23CHECK-PARSE-LIST (XCL-TEST::EXPECT XCL-TEST::PATHNAME-LIST) 
                                                           "check a list, make sure get good results"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (XCL-TEST::23CHECK-PARSE XCL-TEST::EXPECT XCL-TEST::ITEM)) 
          XCL-TEST::PATHNAME-LIST))


(CL:DEFUN XCL-TEST::23CHECK-RENAME (XCL-TEST::EXPECT XCL-TEST::OLD-PATHNAME XCL-TEST::NEW-PATHNAME) 
                                                   "check both a pathname, and value is as expected."
   (LET* ((XCL-TEST::RESULT (CL:MULTIPLE-VALUE-LIST (CL:RENAME-FILE XCL-TEST::OLD-PATHNAME 
                                                           XCL-TEST::NEW-PATHNAME)))
          (XCL-TEST::RESULT-1 (CL:FIRST XCL-TEST::RESULT))
          (XCL-TEST::RESULT-2 (CL:SECOND XCL-TEST::RESULT))
          (XCL-TEST::RESULT-3 (CL:THIRD XCL-TEST::RESULT)))
         (AND (CL:PATHNAMEP XCL-TEST::RESULT-1)
              (CL:PATHNAMEP XCL-TEST::RESULT-2)
              (CL:PATHNAMEP XCL-TEST::RESULT-3)
              (STRING-EQUAL XCL-TEST::EXPECT (CL:NAMESTRING (CL:PROBE-FILE XCL-TEST::RESULT-3)))
              (CL:PROBE-FILE XCL-TEST::NEW-PATHNAME)
              (NOT (CL:PROBE-FILE XCL-TEST::RESULT-2)))))


(CL:DEFUN XCL-TEST::23CHECK-RENAME-DIRECTORY (XCL-TEST::HOST) "complete test for changing dirctories"
   (LET* ((XCL-TEST::TEMP-NAME (STRING (CL:GENSYM)))
          (XCL-TEST::SIMPLE-FILE (CAR (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 1 
                                             NIL "cmltest" XCL-TEST::TEMP-NAME)))
          (XCL-TEST::NEW-TEMP-NAME (CL:CONCATENATE 'STRING XCL-TEST::TEMP-NAME "cd"))
          (XCL-TEST::NEW-NAME (CL:CONCATENATE 'STRING "{" XCL-TEST::HOST "}<CMLTEST>sub>" 
                                     XCL-TEST::NEW-TEMP-NAME ".ren;1"))
          (XCL-TEST::NEW-PATHNAME (CL:MAKE-PATHNAME :HOST XCL-TEST::HOST :DIRECTORY "cmltest>sub" 
                                         :NAME XCL-TEST::NEW-TEMP-NAME :TYPE "ren"))
          (XCL-TEST::RESULT (XCL-TEST::23CHECK-RENAME XCL-TEST::NEW-NAME XCL-TEST::SIMPLE-FILE 
                                   XCL-TEST::NEW-PATHNAME)))
         (CL:DELETE-FILE XCL-TEST::NEW-PATHNAME)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23CHECK-RENAME-NAME-TYPE (XCL-TEST::HOST) 
                                                "complete test for renaming the name and adding type"
   (LET* ((XCL-TEST::TEMP-NAME (STRING (CL:GENSYM)))
          (XCL-TEST::SIMPLE-FILE (CAR (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 1 
                                             NIL "cmltest" XCL-TEST::TEMP-NAME)))
          (XCL-TEST::NEW-TEMP-NAME (CL:CONCATENATE 'STRING XCL-TEST::TEMP-NAME "ab"))
          (XCL-TEST::NEW-NAME (CL:CONCATENATE 'STRING "{" XCL-TEST::HOST "}<CMLTEST>" 
                                     XCL-TEST::NEW-TEMP-NAME ".ren;1"))
          (XCL-TEST::NEW-PATHNAME (CL:MAKE-PATHNAME :HOST XCL-TEST::HOST :DIRECTORY "cmltest" :NAME 
                                         XCL-TEST::NEW-TEMP-NAME :TYPE "ren"))
          (XCL-TEST::RESULT (XCL-TEST::23CHECK-RENAME XCL-TEST::NEW-NAME XCL-TEST::SIMPLE-FILE 
                                   XCL-TEST::NEW-PATHNAME)))
         (CL:DELETE-FILE XCL-TEST::NEW-PATHNAME)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23CHECK-RENAME-SIMPLE (XCL-TEST::HOST) "complete test for just adding a type"
   (LET* ((XCL-TEST::TEMP-NAME (STRING (CL:GENSYM)))
          (XCL-TEST::SIMPLE-FILE (CAR (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 1 
                                             NIL "cmltest" XCL-TEST::TEMP-NAME)))
          (XCL-TEST::NEW-NAME (CL:CONCATENATE 'STRING "{" XCL-TEST::HOST "}<CMLTEST>" 
                                     XCL-TEST::TEMP-NAME ".ren;1"))
          (XCL-TEST::NEW-PATHNAME (CL:MAKE-PATHNAME :HOST XCL-TEST::HOST :DIRECTORY "cmltest" :NAME 
                                         XCL-TEST::TEMP-NAME :TYPE "ren"))
          (XCL-TEST::RESULT (XCL-TEST::23CHECK-RENAME XCL-TEST::NEW-NAME XCL-TEST::SIMPLE-FILE 
                                   XCL-TEST::NEW-PATHNAME)))
         (CL:DELETE-FILE XCL-TEST::NEW-PATHNAME)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DELETE-FILE-LIST (XCL-TEST::PATHNAME-LIST) " delete every file in the list"
   (CL:MAPCAR #'CL:DELETE-FILE XCL-TEST::PATHNAME-LIST))


(CL:DEFUN XCL-TEST::23DRIVE-AUTHOR (XCL-TEST::HOST XCL-TEST::EXPECTVALUE) 
                                                        "build a set of files and check author works"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-AUTHOR XCL-TEST::HOST))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-AUTHOR-LIST XCL-TEST::BIG-LIST XCL-TEST::EXPECTVALUE)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-DATE (XCL-TEST::HOST) "build a set of files and check date works"
   (LET* ((XCL-TEST::BEFORE-TIME (CL:GET-UNIVERSAL-TIME))
          (XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-DATE XCL-TEST::HOST))
          (XCL-TEST::TOSS-AWAY (CL:SLEEP 5))
          (XCL-TEST::AFTER-TIME (CL:GET-UNIVERSAL-TIME))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-DATE-LIST XCL-TEST::BIG-LIST XCL-TEST::BEFORE-TIME 
                                   XCL-TEST::AFTER-TIME)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-DELETE-FILE-LIST (XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 
                                                    XCL-TEST::NAME) 
                                                  "build the list and check able to delete the files"
   (LET* ((XCL-TEST::DELETE-LIST (CL:APPEND (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES 
                                                   XCL-TEST::HOST 1 XCL-TEST::DEVICE CL:DIRECTORY 
                                                   XCL-TEST::NAME "typea")
                                        (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST 1 
                                               XCL-TEST::DEVICE CL:DIRECTORY XCL-TEST::NAME "typeB")
                                        (XCL-TEST::23BUILD-LIST-OF-FILENAME-SYMBOL XCL-TEST::HOST 1 
                                               XCL-TEST::DEVICE CL:DIRECTORY XCL-TEST::NAME "typeD"))
                 ))
         (XCL-TEST::23TEST-DELETE-FILE-LIST XCL-TEST::DELETE-LIST)))


(CL:DEFUN XCL-TEST::23DRIVE-DEVICE-LIST (XCL-TEST::HOST XCL-TEST::DEVICE-CREATE 
                                               XCL-TEST::DEVICE-MATCH) 
                                                                 "check each file in the list checks"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-DEVICE-LIST-ALL XCL-TEST::HOST 
                                     XCL-TEST::DEVICE-CREATE))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-PATHNAME-VALUE-LIST XCL-TEST::BIG-LIST '
                                   XCL-TEST::DEVICE XCL-TEST::DEVICE-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-DIRECTORY-LIST-NAMESTRING (XCL-TEST::HOST XCL-TEST::DIRECTORY-CREATE 
                                                             XCL-TEST::DIRECTORY-MATCH &OPTIONAL 
                                                             XCL-TEST::DEVICE) 
                                                               "push the same test across many hosts"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-DIRECTORY-LIST-ALL XCL-TEST::HOST XCL-TEST::DEVICE 
                                     XCL-TEST::DIRECTORY-CREATE))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-NAMESTRING-VALUE-LIST XCL-TEST::BIG-LIST 'CL:DIRECTORY 
                                   XCL-TEST::DIRECTORY-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-DIRECTORY-LIST-PATHNAME (XCL-TEST::HOST XCL-TEST::DIRECTORY-CREATE 
                                                           XCL-TEST::DIRECTORY-MATCH &OPTIONAL 
                                                           XCL-TEST::DEVICE) 
                                                               "push the same test across many hosts"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-DIRECTORY-LIST-ALL XCL-TEST::HOST XCL-TEST::DEVICE 
                                     XCL-TEST::DIRECTORY-CREATE))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-PATHNAME-VALUE-LIST XCL-TEST::BIG-LIST 'CL:DIRECTORY 
                                   XCL-TEST::DIRECTORY-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-ENOUGH-LIST (XCL-TEST::HOST XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME 
                                               TYPE XCL-TEST::EXPECTVALUE) 
                                                             "build the list and check get what want"
   (LET* ((XCL-TEST::DELETE-LIST (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST 1 XCL-TEST::DEVICE 
                                        XCL-TEST::DIR XCL-TEST::NAME TYPE))
          (XCL-TEST::BIG-LIST (XCL-TEST::23MULTIPLY-STREAM XCL-TEST::DELETE-LIST))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-NAMESTRING-VALUE-LIST XCL-TEST::BIG-LIST '
                                   XCL-TEST::NAME XCL-TEST::EXPECTVALUE)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::DELETE-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-FILE-BOTH (XCL-TEST::HOST XCL-TEST::NAME-CREATE TYPE) 
                                             "pathname doesn't give version unless you give it first"
   (LET ((XCL-TEST::NAME-MATCH-1-V (CL:CONCATENATE 'STRING XCL-TEST::NAME-CREATE ".;1"))
         (XCL-TEST::NAME-MATCH-2-V (CL:CONCATENATE 'STRING XCL-TEST::NAME-CREATE ".type;1"))
         (XCL-TEST::NAME-MATCH-1 (CL:CONCATENATE 'STRING XCL-TEST::NAME-CREATE "."))
         (XCL-TEST::NAME-MATCH-2 (CL:CONCATENATE 'STRING XCL-TEST::NAME-CREATE ".type")))
        (AND (XCL-TEST::23DRIVE-FILE-LIST XCL-TEST::HOST XCL-TEST::NAME-CREATE NIL 
                    XCL-TEST::NAME-MATCH-1-V)
             (XCL-TEST::23DRIVE-FILE-LIST XCL-TEST::HOST XCL-TEST::NAME-CREATE "type" 
                    XCL-TEST::NAME-MATCH-2-V)
             (XCL-TEST::23DRIVE-FILE-LIST-NO-VERSION XCL-TEST::HOST XCL-TEST::NAME-CREATE NIL 
                    XCL-TEST::NAME-MATCH-1)
             (XCL-TEST::23DRIVE-FILE-LIST-NO-VERSION XCL-TEST::HOST XCL-TEST::NAME-CREATE "type" 
                    XCL-TEST::NAME-MATCH-2))))


(CL:DEFUN XCL-TEST::23DRIVE-FILE-LIST (XCL-TEST::HOST XCL-TEST::NAME-CREATE TYPE XCL-TEST::NAME-MATCH
                                             ) "build the list and check get what want"
   (LET* ((XCL-TEST::DELETE-LIST (CL:APPEND (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST 1 NIL 
                                                   "cmltest" XCL-TEST::NAME-CREATE TYPE)
                                        (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST 1 NIL 
                                               "cmltest>sub" XCL-TEST::NAME-CREATE TYPE)))
          (XCL-TEST::BIG-LIST (XCL-TEST::23MUL-NO-PATHNAME XCL-TEST::DELETE-LIST))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-NAMESTRING-VALUE-LIST XCL-TEST::BIG-LIST '
                                   XCL-TEST::FILE XCL-TEST::NAME-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::DELETE-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-FILE-LIST-NO-VERSION (XCL-TEST::HOST XCL-TEST::NAME-CREATE TYPE 
                                                        XCL-TEST::NAME-MATCH) 
                                                             "build the list and check get what want"
   (LET* ((XCL-TEST::DELETE-LIST (CL:APPEND (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES 
                                                   XCL-TEST::HOST 1 NIL "cmltest" 
                                                   XCL-TEST::NAME-CREATE TYPE)
                                        (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST 
                                               1 NIL "cmltest>sub" XCL-TEST::NAME-CREATE TYPE)))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-NAMESTRING-VALUE-LIST XCL-TEST::DELETE-LIST
                                   'XCL-TEST::FILE XCL-TEST::NAME-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::DELETE-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-HOST-LIST-NAMESTRING (XCL-TEST::HOST-CREATE XCL-TEST::HOST-MATCH 
                                                        XCL-TEST::USEDEVICE XCL-TEST::INONEDIR) 
                                                               "push the same test across many hosts"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-HOST-LIST-ALL XCL-TEST::HOST-CREATE 
                                     XCL-TEST::USEDEVICE XCL-TEST::INONEDIR))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-NAMESTRING-VALUE-LIST XCL-TEST::BIG-LIST '
                                   XCL-TEST::HOST XCL-TEST::HOST-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-HOST-LIST-PATHNAME (XCL-TEST::HOST-CREATE XCL-TEST::HOST-MATCH 
                                                      XCL-TEST::USEDEVICE XCL-TEST::INONEDIR) 
                                                               "push the same test across many hosts"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-HOST-LIST-ALL XCL-TEST::HOST-CREATE 
                                     XCL-TEST::USEDEVICE XCL-TEST::INONEDIR))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-PATHNAME-VALUE-LIST XCL-TEST::BIG-LIST 'XCL-TEST::HOST 
                                   XCL-TEST::HOST-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-LENGTH (XCL-TEST::HOST) "run a set of tests across several hosts"
   (AND (XCL-TEST::23LENGTH-EMPTY XCL-TEST::HOST)
        (XCL-TEST::23LENGTH-STRING-CHAR XCL-TEST::HOST)
        (XCL-TEST::23LENGTH-UNSIGNED-BYTE XCL-TEST::HOST)))


(CL:DEFUN XCL-TEST::23DRIVE-MAKE-LIST (XCL-TEST::EXPECT XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 
                                             XCL-TEST::NAME TYPE XCL-TEST::VERSION &OPTIONAL 
                                             XCL-TEST::DEFAULTS) 
                                                           "create the path name and check what want"
   (LET ((XCL-TEST::TEMP-PATHNAME (CL:MAKE-PATHNAME :HOST XCL-TEST::HOST :DEVICE XCL-TEST::DEVICE 
                                         :DIRECTORY CL:DIRECTORY :NAME XCL-TEST::NAME :TYPE TYPE 
                                         :VERSION XCL-TEST::VERSION :DEFAULTS XCL-TEST::DEFAULTS)))
        (AND (CL:PATHNAMEP XCL-TEST::TEMP-PATHNAME)
             (STRING-EQUAL XCL-TEST::EXPECT (CL:NAMESTRING XCL-TEST::TEMP-PATHNAME)))))


(CL:DEFUN XCL-TEST::23DRIVE-MERGE-LIST-NO-STREAM (XCL-TEST::EXPECT XCL-TEST::HOST XCL-TEST::DEVICE 
                                                        CL:DIRECTORY XCL-TEST::NAME TYPE 
                                                        XCL-TEST::D-HOST XCL-TEST::D-DEVICE 
                                                        XCL-TEST::D-DIRECTORY XCL-TEST::D-NAME 
                                                        XCL-TEST::D-TYPE XCL-TEST::DEFAULT-VERSION) 
                                                 "check the pathname and defaults can be of any type"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23THREE-TYPES XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 
                                     XCL-TEST::NAME TYPE XCL-TEST::VERSION))
          (XCL-TEST::DEFAULT-LIST (XCL-TEST::23THREE-TYPES XCL-TEST::D-HOST XCL-TEST::D-DEVICE 
                                         XCL-TEST::D-DIRECTORY XCL-TEST::D-NAME XCL-TEST::D-TYPE))
          (XCL-TEST::RESULT (XCL-TEST::23CHECK-MERGE-LISTS XCL-TEST::EXPECT XCL-TEST::BIG-LIST 
                                   XCL-TEST::DEFAULT-LIST XCL-TEST::DEFAULT-VERSION)))
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-MERGE-LIST-STREAM (XCL-TEST::EXPECT XCL-TEST::HOST XCL-TEST::DEVICE 
                                                     CL:DIRECTORY XCL-TEST::NAME TYPE 
                                                     XCL-TEST::D-HOST XCL-TEST::D-DEVICE 
                                                     XCL-TEST::D-DIRECTORY XCL-TEST::D-NAME 
                                                     XCL-TEST::D-TYPE XCL-TEST::DEFAULT-VERSION) 
                                                 "check the pathname and defaults can be of any type"
   (LET* ((XCL-TEST::BIG-LIST-DEL (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST 1 XCL-TEST::DEVICE 
                                         CL:DIRECTORY XCL-TEST::NAME TYPE))
          (XCL-TEST::BIG-LIST (XCL-TEST::23MULTIPLY-STREAM XCL-TEST::BIG-LIST-DEL))
          (XCL-TEST::DEFAULT-LIST-DEL (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::D-HOST 1 
                                             XCL-TEST::D-DEVICE XCL-TEST::D-DIRECTORY 
                                             XCL-TEST::D-NAME XCL-TEST::D-TYPE))
          (XCL-TEST::DEFAULT-LIST (XCL-TEST::23MULTIPLY-STREAM XCL-TEST::DEFAULT-LIST-DEL))
          (XCL-TEST::RESULT (XCL-TEST::23CHECK-MERGE-LISTS XCL-TEST::EXPECT XCL-TEST::BIG-LIST 
                                   XCL-TEST::DEFAULT-LIST XCL-TEST::DEFAULT-VERSION)))
         (XCL-TEST::23DELETE-FILE-LIST (CL:APPEND XCL-TEST::DEFAULT-LIST-DEL XCL-TEST::BIG-LIST-DEL))
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-NAME-LIST (XCL-TEST::HOST XCL-TEST::NAME-CREATE XCL-TEST::NAME-MATCH 
                                             XCL-TEST::USEDEVICE XCL-TEST::INONEDIR) 
                                                 "push the list through the checker, valid function?"
   (LET* ((XCL-TEST::DELETE-LIST (XCL-TEST::23BUILD-NAME-LIST XCL-TEST::HOST XCL-TEST::NAME-CREATE
                                        'STREAM XCL-TEST::USEDEVICE XCL-TEST::INONEDIR))
          (XCL-TEST::BIG-LIST (XCL-TEST::23MULTIPLY-STREAM XCL-TEST::DELETE-LIST))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-PATHNAME-VALUE-LIST XCL-TEST::BIG-LIST 'XCL-TEST::NAME 
                                   XCL-TEST::NAME-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::DELETE-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-NAMESTRING-LIST (XCL-TEST::HOST XCL-TEST::DEVICE XCL-TEST::DIR 
                                                   XCL-TEST::NAME TYPE XCL-TEST::EXPECTVALUE) 
                                                             "build the list and check get what want"
   (LET* ((XCL-TEST::DELETE-LIST (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST 1 XCL-TEST::DEVICE 
                                        XCL-TEST::DIR XCL-TEST::NAME TYPE))
          (XCL-TEST::BIG-LIST (XCL-TEST::23MULTIPLY-STREAM XCL-TEST::DELETE-LIST))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-NAMESTRING-VALUE-LIST XCL-TEST::BIG-LIST '
                                   XCL-TEST::NAME XCL-TEST::EXPECTVALUE)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::DELETE-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-PARSE (XCL-TEST::HOST) "run a set of tests across several hosts"
   (AND (XCL-TEST::23PARSE-BASIC XCL-TEST::HOST)
        (XCL-TEST::23PARSE-VARIABLE-TYPE XCL-TEST::HOST)
        (XCL-TEST::23PARSE-JUNK XCL-TEST::HOST)
        (XCL-TEST::23PARSE-START XCL-TEST::HOST)
        (XCL-TEST::23PARSE-END XCL-TEST::HOST)))


(CL:DEFUN XCL-TEST::23DRIVE-PATHNAMEP-HOST-LIST (XCL-TEST::HOST XCL-TEST::USEDEVICE 
                                                       XCL-TEST::INONEDIR) 
                                                               "push the same test across many hosts"
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-PATHNAMEP-HOST-LIST XCL-TEST::HOST 
                                     XCL-TEST::USEDEVICE XCL-TEST::INONEDIR))
          (XCL-TEST::RESULT (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                                               (EQ T (CL:PATHNAMEP XCL-TEST::ITEM))) 
                                   XCL-TEST::BIG-LIST)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-POSITION (XCL-TEST::HOST) "run a set of tests across several hosts"
   (AND (XCL-TEST::23POSITION-EMPTY XCL-TEST::HOST)
        (XCL-TEST::23POSITION-STRING-CHAR XCL-TEST::HOST)
        (XCL-TEST::23POSITION-UNSIGNED-BYTE XCL-TEST::HOST)
        (XCL-TEST::23POSITION-STRING-CHAR-COMPLEX XCL-TEST::HOST)))


(CL:DEFUN XCL-TEST::23DRIVE-PROBE-FILE-LIST (XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY 
                                                   XCL-TEST::NAME TYPE XCL-TEST::EXPECTVALUE) 
                                                             "build the list and check get what want"
   (LET* ((XCL-TEST::DELETE-LIST (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST 1 XCL-TEST::DEVICE 
                                        CL:DIRECTORY XCL-TEST::NAME TYPE))
          (XCL-TEST::BIG-LIST (XCL-TEST::23MULTIPLY-STREAM XCL-TEST::DELETE-LIST))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-PROBE-FILE-LIST XCL-TEST::BIG-LIST 
                                   XCL-TEST::EXPECTVALUE)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::DELETE-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-RENAME-TEST (XCL-TEST::HOST) "make sure the tests work"
   (AND (XCL-TEST::23CHECK-RENAME-SIMPLE XCL-TEST::HOST)
        (XCL-TEST::23CHECK-RENAME-NAME-TYPE XCL-TEST::HOST)
        (XCL-TEST::23CHECK-RENAME-DIRECTORY XCL-TEST::HOST)))


(CL:DEFUN XCL-TEST::23DRIVE-TYPE-LIST (XCL-TEST::HOST XCL-TEST::TYPE-CREATE XCL-TEST::TYPE-MATCH)
   (LET* ((XCL-TEST::BIG-LIST (XCL-TEST::23BUILD-TYPE-LIST-ALL XCL-TEST::HOST XCL-TEST::TYPE-CREATE))
          (XCL-TEST::RESULT (XCL-TEST::23TEST-PATHNAME-VALUE-LIST XCL-TEST::BIG-LIST 'TYPE 
                                   XCL-TEST::TYPE-MATCH)))
         (XCL-TEST::23DELETE-FILE-LIST XCL-TEST::BIG-LIST)
         XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-VERSION-LIST (XCL-TEST::HOST) (LET* ((XCL-TEST::BIG-LIST (
                                                                   XCL-TEST::23BUILD-VERSION-LIST-ALL
                                                                                      XCL-TEST::HOST)
                                                                        )
                                                                 (XCL-TEST::RESULT
                                                                  (
                                                                 XCL-TEST::23TEST-PATHNAME-VALUE-LIST
                                                                   XCL-TEST::BIG-LIST
                                                                   'XCL-TEST::VERSION 1)))
                                                                (XCL-TEST::23DELETE-FILE-LIST 
                                                                       XCL-TEST::BIG-LIST)
                                                                XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23DRIVE-WITH-OPEN (XCL-TEST::HOST) "run a set of tests across several hosts"
   (AND (XCL-TEST::23WITH-OPEN-BASIC XCL-TEST::HOST)
        (XCL-TEST::23WITH-OPEN-MORE-TEST XCL-TEST::HOST)))


(CL:DEFUN XCL-TEST::23FILE-CLEANUP (XCL-TEST::TEMP-STREAM) "close the stream and delete the file"
   (CL:CLOSE XCL-TEST::TEMP-STREAM)
   (CL:DELETE-FILE XCL-TEST::TEMP-STREAM))


(CL:DEFUN XCL-TEST::23FILE-GENERATOR (XCL-TEST::RESULT-TYPE XCL-TEST::HOST &OPTIONAL CL:NUMBER 
                                            XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME TYPE) 
                                              "allow standard interface, so can just wory about type"
   (CASE XCL-TEST::RESULT-TYPE (STREAM (XCL-TEST::23BUILD-LIST-OF-STREAM XCL-TEST::HOST CL:NUMBER 
                                              XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME TYPE))
         (STRING (XCL-TEST::23BUILD-LIST-OF-FILENAME-STRING XCL-TEST::HOST CL:NUMBER XCL-TEST::DEVICE 
                        XCL-TEST::DIR XCL-TEST::NAME TYPE))
         (CL:SYMBOL (XCL-TEST::23BUILD-LIST-OF-FILENAME-SYMBOL XCL-TEST::HOST CL:NUMBER 
                           XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME TYPE))
         (CL:OTHERWISE (XCL-TEST::23BUILD-LIST-OF-FILENAME-PATHNAMES XCL-TEST::HOST CL:NUMBER 
                              XCL-TEST::DEVICE XCL-TEST::DIR XCL-TEST::NAME TYPE))))


(CL:DEFUN XCL-TEST::23FILE-SETUP (XCL-TEST::HOST &OPTIONAL (TYPE 'CL:STRING-CHAR)) 
                                                            "create a file of a certain element-type"
   (OPEN (XCL-TEST::23BUILD-PATHNAME XCL-TEST::HOST)
         :DIRECTION :OUTPUT :ELEMENT-TYPE TYPE))


(CL:DEFUN XCL-TEST::23LENGTH-EMPTY (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-STREAM (
                                                                               XCL-TEST::23FILE-SETUP
                                                                                   XCL-TEST::HOST))
                                                           (XCL-TEST::RESULT (EQ 0 (CL:FILE-LENGTH
                                                                                    
                                                                                XCL-TEST::TEMP-STREAM
                                                                                    ))))
                                                          (XCL-TEST::23FILE-CLEANUP 
                                                                 XCL-TEST::TEMP-STREAM)
                                                          XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23LENGTH-SETUP (XCL-TEST::HOST &OPTIONAL (TYPE 'CL:STRING-CHAR)) 
                                                            "create a file of a certain element-type"
   (OPEN (XCL-TEST::23BUILD-PATHNAME XCL-TEST::HOST)
         :DIRECTION :IO :ELEMENT-TYPE TYPE))


(CL:DEFUN XCL-TEST::23LENGTH-STRING-CHAR (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-STREAM (
                                                                               XCL-TEST::23FILE-SETUP
                                                                                         
                                                                                       XCL-TEST::HOST
                                                                                         ))
                                                                 (XCL-TEST::TOSS-AWAY
                                                                  (CL:PRIN1 'XCL-TEST::HELLO 
                                                                         XCL-TEST::TEMP-STREAM))
                                                                 (XCL-TEST::RESULT
                                                                  (EQ 5 (CL:FILE-LENGTH 
                                                                               XCL-TEST::TEMP-STREAM)
                                                                      )))
                                                                (XCL-TEST::23FILE-CLEANUP 
                                                                       XCL-TEST::TEMP-STREAM)
                                                                XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23LENGTH-UNSIGNED-BYTE (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-STREAM
                                                                    (XCL-TEST::23FILE-SETUP
                                                                     XCL-TEST::HOST
                                                                     'CL:UNSIGNED-BYTE))
                                                                   (XCL-TEST::TOSS-AWAY (
                                                                                        CL:WRITE-BYTE
                                                                                         8 
                                                                                XCL-TEST::TEMP-STREAM
                                                                                         ))
                                                                   (XCL-TEST::RESULT
                                                                    (EQ 1 (CL:FILE-LENGTH 
                                                                                XCL-TEST::TEMP-STREAM
                                                                                 ))))
                                                                  (XCL-TEST::23FILE-CLEANUP 
                                                                         XCL-TEST::TEMP-STREAM)
                                                                  XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23MUL-NO-PATHNAME (XCL-TEST::STREAM-LIST) 
                                           "take a stream and push it, string and symbol into a list"
   (LET ((XCL-TEST::RESULT NIL))
        (CL:DOLIST (XCL-TEST::ITEM XCL-TEST::STREAM-LIST XCL-TEST::RESULT)
               (CL:PUSH XCL-TEST::ITEM XCL-TEST::RESULT)
               (CL:PUSH (CL:NAMESTRING XCL-TEST::ITEM)
                      XCL-TEST::RESULT)
               (CL:PUSH (CL:MAKE-SYMBOL (CL:NAMESTRING XCL-TEST::ITEM))
                      XCL-TEST::RESULT))))


(CL:DEFUN XCL-TEST::23MULTIPLY-STREAM (XCL-TEST::STREAM-LIST) 
                                      "take a stream and create four types pointing to the same file"
   (LET ((XCL-TEST::RESULT NIL))
        (CL:DOLIST (XCL-TEST::ITEM XCL-TEST::STREAM-LIST XCL-TEST::RESULT)
               (CL:PUSH XCL-TEST::ITEM XCL-TEST::RESULT)
               (CL:PUSH (CL:NAMESTRING XCL-TEST::ITEM)
                      XCL-TEST::RESULT)
               (CL:PUSH (PATHNAME XCL-TEST::ITEM)
                      XCL-TEST::RESULT)
               (CL:PUSH (CL:MAKE-SYMBOL (CL:NAMESTRING XCL-TEST::ITEM))
                      XCL-TEST::RESULT))))


(CL:DEFUN XCL-TEST::23PARSE-BASIC (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-NAME (CL:CONCATENATE
                                                                                'STRING "{" 
                                                                                XCL-TEST::HOST 
                                                                            "}<cmltest>any-name.type"
                                                                                ))
                                                          (XCL-TEST::TEMP-PATHNAME (
                                                                                  CL:PARSE-NAMESTRING
                                                                                    
                                                                                  XCL-TEST::TEMP-NAME
                                                                                    )))
                                                         (AND (CL:PATHNAMEP XCL-TEST::TEMP-PATHNAME)
                                                              (STRING-EQUAL XCL-TEST::TEMP-NAME
                                                                     (CL:NAMESTRING 
                                                                            XCL-TEST::TEMP-PATHNAME))
                                                              )))


(CL:DEFUN XCL-TEST::23PARSE-END (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-NAME (CL:CONCATENATE
                                                                              'STRING "{" 
                                                                              XCL-TEST::HOST 
                                                                         "}<cmltest>any-name.type uh"
                                                                              ))
                                                        (XCL-TEST::STRING-LENGTH (CL:LENGTH 
                                                                                  XCL-TEST::TEMP-NAME
                                                                                        ))
                                                        (XCL-TEST::TEMP-PATHNAME (CL:PARSE-NAMESTRING
                                                                                  XCL-TEST::TEMP-NAME 
                                                                                  :END
                                                                                  (- 
                                                                              XCL-TEST::STRING-LENGTH 
                                                                                     3))))
                                                       (AND (CL:PATHNAMEP XCL-TEST::TEMP-PATHNAME)
                                                            (STRING-EQUAL XCL-TEST::TEMP-NAME
                                                                   (CL:NAMESTRING 
                                                                          XCL-TEST::TEMP-PATHNAME)))))


(CL:DEFUN XCL-TEST::23PARSE-JUNK (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-NAME (CL:CONCATENATE
                                                                               'STRING " uh {" 
                                                                               XCL-TEST::HOST 
                                                                            "}<cmltest>any-name.type"
                                                                               ))
                                                         (XCL-TEST::TEMP-PATHNAME (
                                                                                  CL:PARSE-NAMESTRING
                                                                                   
                                                                                  XCL-TEST::TEMP-NAME 
                                                                                   :JUNK-ALLOWED T)))
                                                        (AND (CL:PATHNAMEP XCL-TEST::TEMP-PATHNAME)
                                                             (STRING-EQUAL XCL-TEST::TEMP-NAME
                                                                    (CL:NAMESTRING 
                                                                           XCL-TEST::TEMP-PATHNAME)))
                                                        ))


(CL:DEFUN XCL-TEST::23PARSE-START (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-NAME (CL:CONCATENATE
                                                                                'STRING " uh {" 
                                                                                XCL-TEST::HOST 
                                                                            "}<cmltest>any-name.type"
                                                                                ))
                                                          (XCL-TEST::TEMP-PATHNAME (
                                                                                  CL:PARSE-NAMESTRING
                                                                                    
                                                                                  XCL-TEST::TEMP-NAME 
                                                                                    :START 5)))
                                                         (AND (CL:PATHNAMEP XCL-TEST::TEMP-PATHNAME)
                                                              (STRING-EQUAL XCL-TEST::TEMP-NAME
                                                                     (CL:NAMESTRING 
                                                                            XCL-TEST::TEMP-PATHNAME))
                                                              )))


(CL:DEFUN XCL-TEST::23PARSE-VARIABLE-TYPE (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-PATHNAME
                                                                   (XCL-TEST::23BUILD-PATHNAME 
                                                                          XCL-TEST::HOST))
                                                                  (XCL-TEST::TEMP-STREAM (OPEN 
                                                                              XCL-TEST::TEMP-PATHNAME 
                                                                                           :DIRECTION 
                                                                                               :IO))
                                                                  (XCL-TEST::TOSS-AWAY (CL:CLOSE
                                                                                        
                                                                                XCL-TEST::TEMP-STREAM
                                                                                        ))
                                                                  (XCL-TEST::EXPECT (CL:NAMESTRING
                                                                                     
                                                                                XCL-TEST::TEMP-STREAM
                                                                                     ))
                                                                  (XCL-TEST::TEMP-LIST
                                                                   (XCL-TEST::23MULTIPLY-STREAM
                                                                    (LIST XCL-TEST::TEMP-STREAM)))
                                                                  (XCL-TEST::RESULT (
                                                                         XCL-TEST::23CHECK-PARSE-LIST
                                                                                     XCL-TEST::EXPECT 
                                                                                  XCL-TEST::TEMP-LIST
                                                                                     )))
                                                                 (CL:DELETE-FILE 
                                                                        XCL-TEST::TEMP-STREAM)
                                                                 XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23POSITION-EMPTY (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-STREAM (
                                                                             XCL-TEST::23LENGTH-SETUP
                                                                                     XCL-TEST::HOST))
                                                             (XCL-TEST::RESULT (EQ 0 (
                                                                                     CL:FILE-POSITION
                                                                                      
                                                                                XCL-TEST::TEMP-STREAM
                                                                                      ))))
                                                            (XCL-TEST::23FILE-CLEANUP 
                                                                   XCL-TEST::TEMP-STREAM)
                                                            XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23POSITION-STRING-CHAR (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-STREAM
                                                                    (XCL-TEST::23LENGTH-SETUP 
                                                                           XCL-TEST::HOST))
                                                                   (XCL-TEST::TOSS-AWAY
                                                                    (CL:PRIN1 'XCL-TEST::HELLO 
                                                                           XCL-TEST::TEMP-STREAM))
                                                                   (XCL-TEST::RESULT
                                                                    (EQ 5 (CL:FILE-POSITION 
                                                                                XCL-TEST::TEMP-STREAM
                                                                                 ))))
                                                                  (XCL-TEST::23FILE-CLEANUP 
                                                                         XCL-TEST::TEMP-STREAM)
                                                                  XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23POSITION-STRING-CHAR-COMPLEX (XCL-TEST::HOST)
   (LET* ((XCL-TEST::TEMP-STREAM (XCL-TEST::23LENGTH-SETUP XCL-TEST::HOST))
          (XCL-TEST::TOSS-AWAY (CL:PRIN1 'XCL-TEST::HELLO XCL-TEST::TEMP-STREAM))
          (XCL-TEST::FIRST-POSITION (CL:FILE-POSITION XCL-TEST::TEMP-STREAM))
          (XCL-TEST::TOSS-AWAY-2 (CL:PRIN1 'XCL-TEST::HELLO XCL-TEST::TEMP-STREAM))
          (XCL-TEST::SECOND-POSITION (CL:FILE-POSITION XCL-TEST::TEMP-STREAM))
          (XCL-TEST::RESULT-SET-POSITION (CL:FILE-POSITION XCL-TEST::TEMP-STREAM 0))
          (XCL-TEST::RESULT-READ-CHAR (CL:READ-CHAR XCL-TEST::TEMP-STREAM)))
         (XCL-TEST::23FILE-CLEANUP XCL-TEST::TEMP-STREAM)
         (AND (EQ XCL-TEST::FIRST-POSITION 5)
              (EQ XCL-TEST::SECOND-POSITION 10)
              (EQ XCL-TEST::RESULT-SET-POSITION T)
              (EQ XCL-TEST::RESULT-READ-CHAR #\H))))


(CL:DEFUN XCL-TEST::23POSITION-UNSIGNED-BYTE (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-STREAM
                                                                      (XCL-TEST::23LENGTH-SETUP
                                                                       XCL-TEST::HOST
                                                                       'CL:UNSIGNED-BYTE))
                                                                     (XCL-TEST::TOSS-AWAY
                                                                      (CL:WRITE-BYTE 8 
                                                                             XCL-TEST::TEMP-STREAM))
                                                                     (XCL-TEST::RESULT
                                                                      (EQ 1 (CL:FILE-POSITION 
                                                                                XCL-TEST::TEMP-STREAM
                                                                                   ))))
                                                                    (XCL-TEST::23FILE-CLEANUP 
                                                                           XCL-TEST::TEMP-STREAM)
                                                                    XCL-TEST::RESULT))


(CL:DEFUN XCL-TEST::23TEST-AUTHOR (XCL-TEST::TEMP-PATHNAME XCL-TEST::EXPECTVALUE) 
                                                                  "check the author is who we expect"
   (STRING-EQUAL XCL-TEST::EXPECTVALUE (CL:FILE-AUTHOR XCL-TEST::TEMP-PATHNAME)))


(CL:DEFUN XCL-TEST::23TEST-AUTHOR-LIST (XCL-TEST::BIG-LIST XCL-TEST::EXPECTVALUE) 
                                                    "check the author is correct for  bunch of files"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (XCL-TEST::23TEST-AUTHOR XCL-TEST::ITEM XCL-TEST::EXPECTVALUE)) 
          XCL-TEST::BIG-LIST))


(CL:DEFUN XCL-TEST::23TEST-DATE (XCL-TEST::TEMP-PATHNAME XCL-TEST::BEFORE-TIME XCL-TEST::AFTER-TIME) 
                                                           "check the date of a file is nicely bound"
   (LET ((XCL-TEST::TIME-CREATE (CL:FILE-WRITE-DATE XCL-TEST::TEMP-PATHNAME)))
        (<= XCL-TEST::BEFORE-TIME XCL-TEST::TIME-CREATE XCL-TEST::AFTER-TIME)))


(CL:DEFUN XCL-TEST::23TEST-DATE-LIST (XCL-TEST::BIG-LIST XCL-TEST::BEFORE-TIME XCL-TEST::AFTER-TIME) 
                                                  "check the date of a set of files are nicely bound"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (XCL-TEST::23TEST-DATE XCL-TEST::ITEM XCL-TEST::BEFORE-TIME 
                             XCL-TEST::AFTER-TIME)) XCL-TEST::BIG-LIST))


(CL:DEFUN XCL-TEST::23TEST-DELETE-FILE (XCL-TEST::TEMP-PATHNAME) 
                                                                "check return T and file really gone"
   (AND (EQ T (CL:DELETE-FILE XCL-TEST::TEMP-PATHNAME))
        (NOT (CL:PROBE-FILE XCL-TEST::TEMP-PATHNAME))))


(CL:DEFUN XCL-TEST::23TEST-DELETE-FILE-LIST (XCL-TEST::DELETE-LIST) 
                               "check that each item in the list exists, and give the right pathname"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (XCL-TEST::23TEST-DELETE-FILE XCL-TEST::ITEM)) XCL-TEST::DELETE-LIST))


(CL:DEFUN XCL-TEST::23TEST-NAMESTRING-VALUE (PATHNAME XCL-TEST::TEST-TYPE XCL-TEST::VALUE) 
                                                    "common pattern of code, test for correct string"
   (LET ((XCL-TEST::RESULT (CASE XCL-TEST::TEST-TYPE (XCL-TEST::NAME (CL:NAMESTRING PATHNAME))
                                 (XCL-TEST::FILE (CL:FILE-NAMESTRING PATHNAME))
                                 (CL:DIRECTORY (CL:DIRECTORY-NAMESTRING PATHNAME))
                                 (XCL-TEST::HOST (CL:HOST-NAMESTRING PATHNAME))
                                 (XCL-TEST::ENOUGH (CL:ENOUGH-NAMESTRING PATHNAME)))))
        (STRING-EQUAL XCL-TEST::RESULT XCL-TEST::VALUE)))


(CL:DEFUN XCL-TEST::23TEST-NAMESTRING-VALUE-LIST (XCL-TEST::PATHNAME-LIST XCL-TEST::TEST-TYPE 
                                                        XCL-TEST::VALUE) 
                                               "common pattern of code, test list for correct string"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (XCL-TEST::23TEST-NAMESTRING-VALUE XCL-TEST::ITEM XCL-TEST::TEST-TYPE 
                             XCL-TEST::VALUE)) XCL-TEST::PATHNAME-LIST))


(CL:DEFUN XCL-TEST::23TEST-PATHNAME-VALUE (PATHNAME XCL-TEST::TEST-TYPE XCL-TEST::VALUE) 
                                          "common pattern of code, test for correct string or symbol"
   (LET ((XCL-TEST::RESULT (CASE XCL-TEST::TEST-TYPE (XCL-TEST::HOST (CL:PATHNAME-HOST PATHNAME))
                                 (XCL-TEST::DEVICE (CL:PATHNAME-DEVICE PATHNAME))
                                 (CL:DIRECTORY (CL:PATHNAME-DIRECTORY PATHNAME))
                                 (XCL-TEST::NAME (CL:PATHNAME-NAME PATHNAME))
                                 (TYPE (CL:PATHNAME-TYPE PATHNAME))
                                 (XCL-TEST::VERSION (CL:PATHNAME-VERSION PATHNAME)))))
        (CL:IF (CL:EQUAL XCL-TEST::TEST-TYPE 'XCL-TEST::VERSION)
               (CL:EQUAL XCL-TEST::RESULT XCL-TEST::VALUE)
               (OR (STRING-EQUAL XCL-TEST::RESULT XCL-TEST::VALUE)
                   (AND (TYPEP XCL-TEST::RESULT 'CL:SYMBOL)
                        (STRING-EQUAL XCL-TEST::VALUE (STRING XCL-TEST::RESULT)))))))


(CL:DEFUN XCL-TEST::23TEST-PATHNAME-VALUE-LIST (XCL-TEST::PATHNAME-LIST XCL-TEST::TEST-TYPE 
                                                      XCL-TEST::VALUE) 
                                     "common pattern of code, test list for correct string or symbol"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (XCL-TEST::23TEST-PATHNAME-VALUE XCL-TEST::ITEM XCL-TEST::TEST-TYPE 
                             XCL-TEST::VALUE)) XCL-TEST::PATHNAME-LIST))


(CL:DEFUN XCL-TEST::23TEST-PROBE-FILE (XCL-TEST::TEMP-PATHNAME XCL-TEST::EXPECTVALUE) 
                                                                       "check one pathname at a time"
   (LET ((XCL-TEST::PROBE-RESULT (CL:PROBE-FILE XCL-TEST::TEMP-PATHNAME)))
        (AND (CL:PATHNAMEP XCL-TEST::PROBE-RESULT)
             (STRING-EQUAL XCL-TEST::EXPECTVALUE (CL:NAMESTRING XCL-TEST::PROBE-RESULT)))))


(CL:DEFUN XCL-TEST::23TEST-PROBE-FILE-LIST (XCL-TEST::BIG-LIST XCL-TEST::EXPECTVALUE) 
                               "check that each item in the list exists, and give the right pathname"
   (CL:EVERY #'(CL:LAMBDA (XCL-TEST::ITEM)
                      (XCL-TEST::23TEST-PROBE-FILE XCL-TEST::ITEM XCL-TEST::EXPECTVALUE)) 
          XCL-TEST::BIG-LIST))


(CL:DEFUN XCL-TEST::23THREE-TYPES (XCL-TEST::HOST XCL-TEST::DEVICE CL:DIRECTORY XCL-TEST::NAME TYPE 
                                         XCL-TEST::VERSION) 
                                                         "want in three types, no file, so no stream"
   (LET ((XCL-TEST::RESULT (CL:MAKE-PATHNAME :HOST XCL-TEST::HOST :DEVICE XCL-TEST::DEVICE :DIRECTORY 
                                  CL:DIRECTORY :NAME XCL-TEST::NAME :TYPE TYPE :VERSION 
                                  XCL-TEST::VERSION)))
        (LIST XCL-TEST::RESULT (CL:NAMESTRING XCL-TEST::RESULT)
              (CL:MAKE-SYMBOL (CL:NAMESTRING XCL-TEST::RESULT)))))


(CL:DEFUN XCL-TEST::23WITH-OPEN-BASIC (XCL-TEST::HOST) (LET* ((XCL-TEST::TEMP-PATHNAME (
                                                                           XCL-TEST::23BUILD-PATHNAME
                                                                                        
                                                                                       XCL-TEST::HOST
                                                                                        ))
                                                              (XCL-TEST::RESULT (CL:WITH-OPEN-FILE
                                                                                 (
                                                                                XCL-TEST::TEMP-STREAM
                                                                                  
                                                                              XCL-TEST::TEMP-PATHNAME 
                                                                                  :DIRECTION :IO)
                                                                                 (CL:PROBE-FILE
                                                                                  
                                                                                XCL-TEST::TEMP-STREAM
                                                                                  ))))
                                                             (CL:DELETE-FILE XCL-TEST::TEMP-PATHNAME)
                                                             (CL:PATHNAMEP XCL-TEST::RESULT)))


(CL:DEFUN XCL-TEST::23WITH-OPEN-MORE-TEST (XCL-TEST::HOST) (LET* ((XCL-TEST::PROBE-RESULT NIL)
                                                                  (XCL-TEST::TEMP-STREAM NIL)
                                                                  (XCL-TEST::LENGTH-RESULT NIL)
                                                                  (XCL-TEST::WITH-OPEN-RESULT NIL)
                                                                  (XCL-TEST::TEMP-NAME (STRING (
                                                                                            CL:GENSYM
                                                                                                )))
                                                                  (XCL-TEST::TEMP-PATHNAME
                                                                   (XCL-TEST::23BUILD-PATHNAME 
                                                                          XCL-TEST::HOST NIL 
                                                                          "CMLTEST" 
                                                                          XCL-TEST::TEMP-NAME))
                                                                  (XCL-TEST::EXPECT
                                                                   (CL:CONCATENATE 'STRING "{" 
                                                                          XCL-TEST::HOST "}<CMLTEST>" 
                                                                          XCL-TEST::TEMP-NAME ".;1"))
                                                                  )
                                                                 (CL:SETQ XCL-TEST::WITH-OPEN-RESULT
                                                                        (CL:WITH-OPEN-FILE
                                                                         (XCL-TEST::TEMP-STREAM
                                                                          XCL-TEST::TEMP-PATHNAME 
                                                                          :DIRECTION :IO)
                                                                         (CL:SETQ 
                                                                               XCL-TEST::PROBE-RESULT
                                                                                (CL:PROBE-FILE 
                                                                                XCL-TEST::TEMP-STREAM
                                                                                       ))
                                                                         (CL:SETQ 
                                                                              XCL-TEST::LENGTH-RESULT
                                                                                (CL:FILE-LENGTH
                                                                                 
                                                                                XCL-TEST::TEMP-STREAM
                                                                                 ))
                                                                         "HI"))
                                                                 (AND (STRING-EQUAL XCL-TEST::EXPECT
                                                                             (CL:NAMESTRING 
                                                                               XCL-TEST::PROBE-RESULT
                                                                                    ))
                                                                      (EQ NIL XCL-TEST::TEMP-STREAM)
                                                                      (EQ 0 XCL-TEST::LENGTH-RESULT)
                                                                      (CL:EQUAL "HI" 
                                                                           XCL-TEST::WITH-OPEN-RESULT
                                                                             )
                                                                      (CL:DELETE-FILE 
                                                                             XCL-TEST::TEMP-PATHNAME)
                                                                      )))

(PUTPROPS 23-FUNCTIONS COPYRIGHT ("Xerox Corporation" 1987))
(DECLARE\: DONTCOPY
  (FILEMAP (NIL)))
STOP
