;; Function To Be Tested: packagep
;; PACKAGEP NOT IMPLEMENTED 26 SEPTEMBER
;;
;; Source:        CLtL p. 76
;;
;; Chapter 6: Predicates		Section 2-2: Specific Data Type Predicates
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 26 September 86
;;
;; Last Update: 15 December 86
;;
;; Filed As:      {eris}<lispcore>cml>test>6-2-2-packagep.test
;;
;; Syntax: packagep object
;;            
;; Function Description: Returns non-nil iff object is a package, and NIL otherwise.
;;
;; Argument(s):	object any cml object 
;;
;; Returns:  non-nil or NIL            
;;
(do-test-group packagep-group
	:before
	(test-defun packageptest (object &optional (expected-value nil))
	"See if (packagep object) <=> (typep object 'package); see if the predicate is true or false, depending on the value of expected-value."
		(let ((val (packagep object)))
			(and
				;; Packagep is equivalent to typep...'package
				(eq (packagep object) (typep object 'package))
				(cond
					(expected-value val) 
					(t (null val))
				)  ; cond
			)  ; and
		)  ; let
	)  ; test-defun
;;
	(do-test packagep-with-list-all-packages-test
		(every #'(lambda (object) (packageptest object t))
			(list-all-packages)
		)
	)  ; do-test packagep-with-list-all-packages-test
;; The current package
	(do-test packagep-with-current-package-test
		(packageptest *package* t)
	)  ; do-test packagep-with-current-package-test
;; An invented package
	(do-test packagep-with-invented-packages-test
		(and
			(packageptest (make-package (gensym) :nicknames (list (gensym) (symbol-name (gensym)))) t)
			(packageptest (make-package (symbol-name (gensym))) t)
		)  ; and
	)  ; do-test packagep-with-invented-packages-test
;;
;; A list of packages is not a package
	(do-test packagep-with-list-of-packages-test
		(packageptest (list-all-packages))
	)  ; do-test packagep-with-list-of-packages-test
)  ; do-test group
STOP

