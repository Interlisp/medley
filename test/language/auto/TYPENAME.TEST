;; Function To Be Tested: TypeName
;;
;; Source:        IRM, p 8.20
;;
;; Chapter 8: Record Package		
;;	Section 9: Built-In and User DataTypes
;;
;; Created By:    Henry Cate III
;;
;; Creation Date: March 18, 1987
;;
;; Last Update:  
;;
;; Filed As:      {eris}<lispcore>test>DataTypes>TypeName.test
;;
;; 


(do-test "test simple cases"
    (and
	  (eq 'il:smallp (il:typename 5))
	  (eq 'il:stringp (il:typename "a string"))
	  (eq 'il:litatom (il:typename 'a-litatom))
	  (eq 'il:floatp (il:typename 4.5))
     ))


(do-test "Test go on own function"
    (flet ((temp-small1 nil 12)
		 (temp-small2 nil 'bv)
		 (temp-small3 nil "hi") )
    (test-defun temp-fun1 nil 34)
    (test-defun temp-fun2 nil 'QW)
    (test-defun temp-fun3 nil "bye")
    (and
	  (eq 'il:smallp (il:typename (temp-small1)))
	  (eq 'il:litatom (il:typename (temp-small2)))
	  (eq 'il:stringp (il:typename (temp-small3)))
	  (eq 'il:smallp (il:typename (temp-fun1)))
	  (eq 'il:litatom (il:typename (temp-fun2)))
	  (eq 'il:stringp (il:typename (temp-fun3)))
    )))


(do-test "Test work against system functions"
    (and
	  (eq 'il:smallp (il:typename (+ 1 2)))
	  (eq 'il:litatom (il:typename (car '(a b d))))
	  (eq 'il:stringp (il:typename (concatenate 'string "a" "b")))
	  (eq 'il:listp (il:typename (append '(a) '(b))))
    ))


(do-test "Test a bunch of data types..."
    (and
	  (eq 'il:twod-array (il:typename (make-array '(2 2))))
       (eq 'il:character (il:typename #\backspace))	
       (eq 'il:character (il:typename #\*))
       (eq 'il:character (il:typename #\.))
       (eq 'il:harrayp (il:typename (make-hash-table)))
       (eq 'package (il:typename (car (list-all-packages))))
       (eq 'pathname (il:typename (pathname nil)))
       (eq 'random-state (il:typename *random-state*))
       (eq 'il:compiled-closure (il:typename #'cons))
       (eq 'readtablep (il:typename (copy-readtable)))	
       (eq 'il:oned-array (il:typename #*1001))
       (eq 'stream (il:typename (make-synonym-stream nil)))
       (eq 'il:oned-array (il:typename '#( 5 4 3 2 1)))
     ))

STOP

