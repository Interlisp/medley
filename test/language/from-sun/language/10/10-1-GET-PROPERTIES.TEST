;; Function To Be Tested: get-properties
;;
;; Source:        CLtL p. 167 
;; Chapter 10: Symbols		Section 1: The Property List
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 24 June 86
;;
;; Last Update:   15 December 86
;;
;; Filed As:      {eris}<lispcore>cml>test>10-1-get-properties.test
;;
;;
;; Syntax: 	   get-properties place indicator-list               
;;
;; Function Description: Search the property list stored in place for any of the indicators in indicator-list until the it finds the first property in the property list whose indicator is one of the elements of indicator-list .
;;
;; Argument(s): place: a property list;
;;			indicator-list: a list of property indicators         	
;;
;; Returns multiple values:
;; If one of the elements of indicator-list is one of the properties in the list stored at place: the first indicator found, its value, and the tail of the property list.
;; If not: nil             
;;
(do-test-group get-properties-group
	:before
	(progn
		(test-setq alpha-list '(a b c d e f g H))
		(setf (get 'alpha-list 'length) 7 (get 'alpha-list 'languages) '(english german spanish etc.))
	) ; progn
;;
	(do-test "get-properties test"
		(AND
;; The simplest cases:
;; First value is a property.
			(EQ 'a (car (multiple-value-list (get-properties alpha-list '(a 3 "Alexis is a bitch.")))))
			(EQ 'a (car (multiple-value-list (get-properties '(a b c d e f g H) '(a "Krystle is dipppy.")))))
;; Second value is the property's value.
			(eq 'b (cadr (multiple-value-list (get-properties alpha-list '(a 3 "Alexis is a bitch.")))))
			(eq 'b (cadr (multiple-value-list (get-properties '(a b c d e f g H) '(a "Alexis is a bitch." 3 )))))
;; Third value is the list's tail, starting at the indicator found. 
			(tailp (caddr (multiple-value-list (get-properties alpha-list '(a e)))) alpha-list)
;;
			(tailp (caddr (multiple-value-list (get-properties alpha-list '(C D)))) alpha-list)
			(equal (nthcdr 2 (multiple-value-list (get-properties '(a b c d e f g H) '(C D)))) (list (nthcdr 2 alpha-list)))
;; Should return NIL if it doesn't find any property from indicator-list.
			(null (get-properties alpha-list '(7)))
			(null (get-properties alpha-list '(weight price)))
			(null (get-properties (list (gensym) (gensym)) '(languages weight)))
;; See if it can work on itself:
			(equal 'etc. (cadr (multiple-value-list (get-properties (cadr (multiple-value-list (get-properties (symbol-plist 'alpha-list) '(languages)))) '(hebrew spanish)))))
		) ; AND
	) ; do-test
) ; do-test-group
STOP


