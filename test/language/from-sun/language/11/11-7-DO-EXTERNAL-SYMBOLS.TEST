;; Function To Be Tested: do-external-symbols
;;
;; Source: Guy L Steele's CLtL
;; Section: 11.7 Package System Functions and Variables
;; Page: 187
;;
;; ReCreated By:   Ron Fischer
;;
;; Creation Date: Mar 23, 1987
;;
;; Last Update:   
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>11-7-do-external-symbols.test
;;
;;
;; Syntax:        (do-external-symbols (var [package [result-form]]) {declaration}*
;;											   {tag| statement}*
;;
;; Function Description: do-external-symbols is just like do-symbols, except that
;; only the external symbols of the specified package are scanned.
;;   
;; 
;; Argument(s):   var (bound to the symbol)
;;			   package
;;			  result-form (a single form)
;;			  
;; Returns: value of the do-external-symbols form     
;;
;; Constraints/Limitations: none


(do-test "do-external-symbols"
(let* ((package (make-package "DO-EXTERNAL-PACKAGE" :use NIL))
	  (external-names '("EXTERNAL-FOO" "EXTERNAL-BAR" "EXTERNAL-BAZ"))
	  (internal-names '("FOO" "BAR" "BAZ"))
	  (external-symbols)
	 )
	(dolist (name (append external-names internal-names))
		(intern name package)
	)
	(dolist (name external-names)
		(let ((symbol (intern name package)))
			(export symbol package)
			(push symbol external-symbols)
		)
	)
	(and
		(let ((checking external-symbols))
			(do-external-symbols (s package (and (null s) (null checking)))
				(if (and (symbolp s) (member s checking :test #'string=))
					(setq checking (remove s checking :test #'string=))
					(return nil)
				)
			)
		)
		(delete-package "DO-EXTERNAL-PACKAGE")
	)
)
)
			

STOP


