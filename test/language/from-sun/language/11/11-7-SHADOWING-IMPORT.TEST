;; Function To Be Tested: shadowing-import
;;
;; Source: Guy L Steele's CLTL
;; Section: 11.7 Package System Functions and Variables
;; Page: 186
;;
;; ReCreated By:   Ron Fischer
;;
;; Creation Date: Oct 29, 1986
;;
;; Last Update: March 24, 1987
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>11-7-shadowing-import.test
;;
;;
;; Syntax:        (shadowing-import symbols &optional package)
;;
;; Function Description: This is like import, but it does not signal an error even
;; if the importation of a symbol would shadow some symbol already accessible in
;; the package.  In additionto being imported, the symbol is placed on the
;; shadowing-symbols list of package.
;; 
;; Argument(s):  Symbol(s)
;;			 Package (optional)
;;			  
;; Returns:     T
;;
;; Constraints/Limitations: none

(do-test-group
	(package-shadowing-symbols-group
	:before (progn
		(make-package 'inherited :use nil)
		(make-package 'direct :use 'inherited)
		(export (intern "CAR" 'inherited) 'inherited)
	)
	:after (progn
		(delete-package 'direct)
		(delete-package 'inherited)
	)
	)
	(do-test "import causes error on conflict"
		(expect-errors import-conflict
			(import '(lisp:car) 'direct)
		)
	)
	(do-test "shadowing-import doesn't cause error on conflict"
		(shadowing-import '(lisp::car) 'direct)
	)
	(do-test "shadowing symbol on package's list"
		(member 'lisp::car (package-shadowing-symbols 'direct))
	)
)



STOP


