;; Function To Be Tested: LCM
;;
;; Source: Guy L Steele's CLTL
;; Section: 12.4 Arithmetic Operations
;; Page: 202
;;
;; Created By:    Kelly Roach
;;
;; Creation Date: July 12,1986
;;
;; Last Update:   July 25,1986 by John Sybalsky
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>12-4-LCM.TEST
;;
;;
;; Syntax:        (LCM INTEGER &REST MORE-INTEGERS)
;;
;; Function Description:
;; This returns the least common multiple of its arguments,
;; which must be integers.
;; The result of LCM is always a non-negative integer.
;; For two arguments that are not both zero,
;; 
;;     (LCM A B) = (/ (ABS (* A B)) (GCD A B))
;;     
;; If one or both arguments are zero,
;; 
;;     (LCM A 0) = (LCM 0 A) = 0
;;     
;; 
;; For one argument, LCM returns the absolute value of that argument.
;; For three or more arguments,
;; 
;;     (LCM A B C ... Z) = (LCM (LCM A B) C ... Z)
;;     
;; 
;; Some examples:
;; 
;;     (LCM 14 35) => 70
;;     (LCM 0 5) => 0
;;     (LCM 1 2 3 4 5 6) => 60
;;     
;; 
;; Mathematically, (LCM) should return infinity.  Because Common Lisp
;; does not have a representation for infinity, LCM, unlike GCD,
;; always requires at least one argument.
;; 
;; Argument(s):   INTEGER - an integer
;;                MORE-INTEGERS - an integer
;;
;; Returns:       an integer
;;



(do-test lcm-test-dup-factor
         (eq (lcm 14 35) 70))

(do-test lcm-test-with-zero
         (eq (lcm 0 5) 0))

(do-test lcm-test-1to7
         (eq (lcm 1 2 3 4 5 6 7) 420))

(do-test lcm-test-with-1-neg
         (eq (lcm -4 5 7) 140))

(do-test lcm-test-with-2-negs
         (eq (lcm -4 5 -7) 140))

(do-test lcm-test-with-1-neg-dup-factor
         (eq (lcm -14 35) 70))

(do-test lcm-test-with-2-negs-dup-factor
         (eq (lcm -14 -35) 70))


STOP
