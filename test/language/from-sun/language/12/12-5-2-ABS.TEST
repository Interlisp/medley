;; Function To Be Tested: ABS
;;
;; Source: Guy L Steele's CLTL
;; Section: 12.5.2 Trigonometric and Related Functions
;; Page: 205
;;
;; Created By:    Kelly Roach
;;
;; Creation Date: July 12,1986
;;
;; Last Update:   July 25,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>12-5-2-ABS.TEST
;;
;;
;; Syntax:        (ABS NUMBER)
;;
;; Function Description:
;; Returns the absolute value of the argument.
;; 
;; For a non-complex number,
;; 
;;     (ABS X) = (IF (MINUSP X) (- X) X)
;;     
;; and the result is always of the same type as the argument.
;; 
;; For a complex number Z, the absolute value may be computed as
;; 
;;     (SQRT (+ (EXPT (REALPART Z) 2) (EXPT (IMAGPART Z) 2)))
;;     
;; Implementation note: The careful implementor will not use this formula directly
;; for all complex numbers
;; but will instead handle very large or very small components specially
;; to avoid intermediate overflow or underflow.
;; For example:
;; 
;;     (ABS #C(3.0 -4.0)) => 5.0
;;     
;; The result of (ABS #C(3 4)) may be either 5 or 5.0,
;; depending on the implementation.
;; 
;; Argument(s):   NUMBER - a number
;;
;; Returns:       a number
;;



(do-test abs-test
         (and (equal (abs -9) 9)
              (equal (abs 0) 0)
              (equal (abs 99) 99)
              (equal (abs -3.9E4) 39000.0)
              (equal (abs #C(3.0 -4.0)) 5.0)))

STOP
