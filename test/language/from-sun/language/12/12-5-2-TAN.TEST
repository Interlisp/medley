;; Function To Be Tested: TAN
;;
;; Source: Guy L Steele's CLTL
;; Section: 12.5.2 Trigonometric and Related Functions
;; Page: 207
;;
;; Created By:    Kelly Roach and John Park
;;
;; Creation Date: July 12,1986
;;
;; Last Update:   July 28,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>12-5-2-TAN.TEST
;;
;;
;; Syntax:        (TAN RADIANS)
;;
;; Function Description:
;; SIN returns the sine of the argument, COS the tanine,
;; and TAN the tangent.  The argument is in radians.
;; The argument may be complex.
;; 
;; Argument(s):   RADIANS - a real
;;
;; Returns:       a number
;;
;; Constraints/limitations: The test case for tan must not be equal to
;; (+ (/ pi 2) (* k pi)) where k is an integer; otherwise, the result approaches
;; infinity. 


(do-test-group tan-setup
  :before (progn
           (setq tan-tolerance 0.00001)
           (setq tan-test-cases
                 (list (-(/ PI 3)) (-(/ PI 4)) (-(/ PI 6)) 0.0
                               (/ PI 6) (/ PI 4) (/ PI 3)))
           (setq expected-value 
                 (list (-(sqrt 3))  -1.0 (-(/ (sqrt 3) 3)) 0.0
                                 (/(sqrt 3) 3) 1.0 (sqrt 3)))

           (defun tan-test (pairs)
                  (cond ((zerop (car pairs))(zerop (cdr pairs)))
                        (t (< (abs (/ (- (car pairs) (cdr pairs))
                                      (cdr pairs)))tan-tolerance)))))
		
  (do-test pi-const-exist? (and (boundp 'pi) (numberp pi)))

  (do-test tan-test
           (and 
            (setq calculated-result  (mapcar #'tan
                                             (mapcar #'eval tan-test-cases)))
            (setq expected-result (mapcar #'eval expected-value))
            (setq calculated-expected
                  (pairlis calculated-result expected-result))
            (setq  test-result (mapcar #'tan-test calculated-expected))
            (notany 'null test-result)))) 

					 
STOP


