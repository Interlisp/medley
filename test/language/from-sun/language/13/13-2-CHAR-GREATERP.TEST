;; Function To Be Tested: char-greaterp
;;
;; Source:        CLtL p. 237
;;
;; Chapter 13: Characters		Section 2: Predicates on Characters
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 9 December 86
;;
;; Last Update:
;;
;; Filed As:      {eris}<lispcore>cml>test>13-2-char-greaterp.test
;;
;; Syntax: char-greaterp char &rest more-characters
;;            
;; Function Description: true if each character is greater than the next (ignoring differences in font, bits or case), nil otherwise
;;
;; Argument(s): characters
;;
;; Returns: non-nil or nil			 
;;
;; NOTE: this file doesn't test font or bit attributes.
(do-test-group char-greaterp-group
;;; The inequality must be true for all items, and the function is nospread.  Hence no every loop.
	(do-test "char-greaterp-upper-case" 
		(char-greaterp #\Z #\Y #\X #\W #\V #\U #\T #\S #\R #\Q #\P #\O #\N #\M #\L #\K #\J #\I #\H #\G #\F #\E #\D #\C #\B #\A)
	)
;;
	(do-test "char-greaterp-lower-case"
		(char-greaterp #\z #\y #\x #\w #\v #\u #\t #\s #\r #\q #\p #\o #\n #\m #\l #\k #\j #\i #\h #\g #\f #\e #\d #\c #\b #\a)
	)
;;
	(do-test "char-greaterp-digits"
		(char-greaterp #\9 #\8 #\7 #\6 #\5 #\4 #\3 #\2 #\1 #\0)
	)
;;					
	(do-test "char-greaterp-digits-outside-upper-case"
		(or (char-greaterp #\A #\9 ) (char-greaterp #\0 #\Z))
	)
;;
	(do-test "char-greaterp-digits-outside-lower-case"
		(or (char-greaterp #\a #\9 ) (char-greaterp #\0 #\z))
	)
;;
	(do-test "char-greaterp ignores case differences" 
		(char-greaterp #\z #\Y #\x #\W #\V #\u #\T #\S #\r #\q #\P #\o #\N #\m #\L #\k #\J #\i #\H #\g #\F #\e #\D #\c #\B #\a)
	)
;;
	(do-test "char-greaterp: characters needn't be contiguous"
		(every 'char-greaterp '(#\Z #\e #\9) '(#\a #\B #\0))
	)  ; do-test "char-greaterp: characters needn't be contiguous"
;;
	(do-test "char<: every character must be strictly less than the next"
		(not (or
			(char-greaterp #\Z #\Y #\X #\W #\V #\U #\T #\S #\R #\Q #\P #\O #\N #\M #\L #\K #\J #\I #\H #\G #\F #\E #\D #\C #\B #\A #\a)
			(char-greaterp #\Z #\z #\y #\x #\w #\v #\u #\t #\s #\r #\q #\p #\o #\n #\m #\l #\k #\j #\i #\h #\g #\f #\e #\d #\c #\b #\a)
			(char-greaterp #\9 #\8 #\7 #\6 #\5 #\4 #\3 #\2 #\1 #\0 #\0)
		))
	)  ; do-test "char<: every character must be strictly less than the next"
)
STOP

