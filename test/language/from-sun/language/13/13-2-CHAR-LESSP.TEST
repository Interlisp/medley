;; Function To Be Tested: char-lessp
;;
;; Source:        CLtL p. 239
;;
;; Chapter 13: Characters		Section 2: Predicates on Characters
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 9 December 86
;;
;; Last Update:
;;
;; Filed As:      {eris}<lispcore>cml>test>13-2-char-lessp.test
;;
;; Syntax: char-lessp char &rest more-characters
;;            
;; Function Description: true if each character is less than the next (ignoring differences of font, bits or case), nil otherwise
;;
;; Argument(s): characters
;;
;; Returns: non-nil or nil			 
;;
;; NOTE: this file doesn't test font or bit attributes.
(do-test-group char-lessp-group
;;; The inequality must be true for all items, and the function is nospread.  Hence no every loop.
	(do-test "upper case letters in order are char-lessp" 
		(char-lessp  #\A #\B #\C #\D #\E #\F #\G #\H #\I #\J #\K #\L #\M #\N #\O #\P #\Q #\R #\S #\T #\U #\V #\W #\X #\Y #\Z)
	)
;;
	(do-test "lower case letters in order are char-lessp"
		(char-lessp #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z)
	)
;;
	(do-test "char-lessp ignores case differences"
		(char-lessp #\a #\B #\c #\D #\e #\F #\g #\H #\i #\J #\k #\L #\m #\N #\o #\P #\q #\R #\s #\T #\u #\V #\w #\X #\y #\Z)
	)
;;
	(do-test "digits in order are char-lessp"
		(char-lessp #\0 #\1 #\2 #\3 #\4 #\5 #\6 #\7 #\8 #\9)
	)
;;					
	(do-test "#\9 char-lessp #\A or #\Z char-lessp 0"
		(or (char-lessp #\9 #\A) (char-lessp #\Z #\0))
	)
;;
	(do-test "#\9 char-lessp #\a or #\z char-lessp 0"
		(or (char-lessp #\9 #\a) (char-lessp #\z #\0))
	)
;;
	(do-test "char-lessp: characters needn't be contiguous"
		(every 'char-lessp '(#\A #\A #\b #\0) '(#\Z #\z #\e #\9))
	)  ; do-test "char-lessp: characters needn't be contiguous"
;;
	(do-test "char-lessp: every character must be strictly less than the next"
		(not (or
			(char-lessp #\A #\B #\C #\D #\E #\F #\G #\H #\I #\J #\K #\L #\M #\N #\O #\P #\Q #\R #\S #\T #\U #\V #\W #\X #\Y #\Z #\Z)
			(char-lessp #\A #\B #\C #\D #\E #\F #\G #\H #\I #\J #\K #\L #\M #\N #\O #\P #\Q #\R #\S #\T #\U #\V #\W #\X #\Y #\Z #\z)
			(char-lessp #\a #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z)
			(char-lessp #\a #\A #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z)
			(char-lessp #\0 #\1 #\2 #\3 #\4 #\5 #\6 #\7 #\8 #\9 #\9)
		))
	)  ; do-test "char-lessp: every character must be strictly less than the next"
)
STOP

