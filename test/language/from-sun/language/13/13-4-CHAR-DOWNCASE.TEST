;; Function To Be Tested: char-downcase
;;
;; Source:        Steel's book    Section 13.4: Character Conversions            Page: 241
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: April 29 '86
;;
;; Last Update:   May 16, 1986 BY MASINTER TO PUT STOP AT END
;;
;; Filed As:      {eris}<lispcore>cml>test>13-4-char-downcase.test
;;
;;
;; Syntax:                CHAR-DOWNCASE  char
;;
;; Function Description:  CHAR-DOWNCASE attempts to convert its argument to an lowercase equivalent.
;;
;; Argument(s):           char - a character object
;;
;; Returns:               char - a character object with the same font and bits attributes
;;                               as the input char, but with possibly a different code attribute
;;
;;                               an error signal -  if the argument is not a character    
;;
(do-test-group (test-char-downcase-group
         :before (progn
                     (setf lower-case-chars '(#\a #\b #\c #\d #\e #\f #\g #\h #\i 
                                              #\j #\k #\l #\m #\n #\o #\p #\q
                                              #\r #\s #\t #\u #\v #\w #\x #\y #\z))
                     (setf upper-case-chars '(#\A #\B #\C #\D #\E #\F #\G #\H #\I 
                                              #\J #\K #\L #\M #\N #\O #\P #\Q
                                              #\R #\S #\T #\U #\V #\W #\X #\Y #\Z))
                     (setf non-alpha-chars  '(#\Space #\Page #\8 #\> #\Newline ))))

  (do-test test-char-downcase
           ; be sure upper case letters are converted to lower case letters correctly
     (and (every #'(lambda (x y) (char= (char-downcase x) y))  upper-case-chars lower-case-chars)
           ; be sure lower case letters stay the same
          (every #'(lambda (x) (char= (char-downcase x) x)) lower-case-chars)
           ; be sure non-alpha characters stay the same
          (every #'(lambda (x) (char= (char-downcase x) x)) non-alpha-chars))))

STOP
