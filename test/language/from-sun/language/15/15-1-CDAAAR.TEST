;; Function To Be Tested: CDAAAR
;;
;; Source:        Steele's book    Section 15.1: Conses        Page: 263
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: July 15 ,1986
;;
;; Last Update:   July 15 ,1986
;;
;; Filed As:      {eris}<lispcore>cml>test>15-1-cdaaar.test
;;
;;
;; Syntax:                CDAAAR LIST
;;
;; Function Description:  (CDAAAR LIST) is equivalent to (CDR (CAR (CAR (CAR LIST))))
;;
;; Argument(s):           LIST - a list
;;
;; Returns:               anything    
;;

(defun mac (list elm)
	 (typecase  elm (number           (=     (cdaaar list) ,elm))
		        ((or cons string) (equal (cdaaar list) ,elm))
			(t                (eq    (cdaaar list) ,elm))
	) 
)
(do-test "test cdaaar0"
    (prog1
	(and (mac '((((1)) 2 )) ())
		(mac '((((1) . 2) 3 . 4) a) ())
		(mac '((((( 1 2) 3) 4) 5) 6 7 8 9) '(3))
		(mac '(( (((1 . 100) a))) (2 b) (3 c)) '(a))
		(mac '((( ((#\a) #\b #\c) (( b))) ((c)) d))  '(#\b #\c))
		(mac '((( ((foo1) foo2))) ((foo3) bar3) (foo4 (bar4)) (((foo5 bar5)))) '(foo2) )
		(mac '(((((((((( t )))))))))) '()  )
		(mac '( ((("excitint" "vacations") "to") |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient)))
		     '("vacations"))
		(mac '((((#\F (bar1 . bar2)) #\o) "o1") "foo2" ((foo3)) (foo4 . foo5)) '((bar1 . bar2)) ) 
		(mac '((((("the weather in January") . non-nil) ("is usually clear and sunny")) "with temperatures usually in the " fifties)
				(in the day time) (and ) (the "20's" at night)) 
               'non-nil   )
	))
)

(do-test "test cdaaar1"
    (progn (setq a (list (list (list (list #'null  #'identity))) (list #'list ) #'(lambda (x) (* 100 x))))
		 (equal (mapcar (car (cdaaar a)) 
				(mapcar #'cdaaar '( ((((8))))  ((((9 99 999)(1 2) 3 ) 4)) ((((#\a #\b . #\c))) ((#\d) #\e #\f)) ) )) 
			   '( nil (99 999) (#\b . #\c)))
	)
)

(do-test "test cdaaar2"
  (prog2 
	(setq aa '((((1 (((2 (((3 ((( 4 5 6 7 . 8))) ))) ))) ))))  )
	(and (equal (cdaaar aa) '(((( 2 ((( 3 ((( 4 5 6 7 . 8))) ))) ))))  )
		(equal (cdaaar (cdaaar aa)) '(((( 3 ((( 4 5 6 7 . 8))) )))) )
		(equal (cdaaar (cdaaar (cdaaar aa))) '(((( 4 5 6 7 . 8)))) )
		(equal (cdaaar (cdaaar (cdaaar (cdaaar aa)))) '(5 6 7 . 8))
	)
  )
)

(do-test "test cdaaar3"
	(progn (setq aa '((((a b))) c))
		  (setf (cdaaar aa) '(((( c d e)))) )
		  (setf (cdaaar (cdaaar aa)) '(((( f g h)))) )
		  (setf (cdaaar (cdaaar (cdaaar aa))) '(((( i j k)))) )
		  (equal aa '(((( a ((( c ((( f ((( i j k))) ))) ))) ))) c)  )
	)
)
STOP

