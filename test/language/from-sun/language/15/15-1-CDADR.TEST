;; Function To Be Tested: CDADR
;;
;; Source:        Steele's book    Section 15.1: Conses        Page: 263
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: July 18 ,1986
;;
;; Last Updadte:  July 18 ,1986
;;
;; Filed As:      {eris}<lispcore>cml>test>15-1-cdadr.test
;;
;;
;; Syntax:                CDADR LIST
;;
;; Function Description:  (CDADR LIST) is equivalent to (CDR (CAR (CDR LIST)))
;;
;; Argument(s):           LIST - a list
;;
;; Returns:               anything    
;;

(defun mac (list elm)
	 (typecase  elm (number           (=     (cdadr list) ,elm))
		        ((or cons string) (equal (cdadr list) ,elm))
			(t                (eq    (cdadr list) ,elm))
	) 
)
(do-test "test cdadr0"
    (prog1
	(and (mac '(30 (1) 2 ) ())
		(mac '(((u)) ((1 . 2) 3 . 4) a) '(3 . 4))
		(mac '(10 (( 1 2 3 4) 5) 6 7 8 9) '(5))
		(mac '((0 z) ( 1 a) (2 b) (3 c)) '(a))
		(mac '("e" ( ((a)) (( b))) ((c)) d)  '((( b))))
		(mac '('foo0 (foo bar) (foo1 . bar1) ((foo2 bar2)) ((foo3) bar3) (foo4 (bar4)) (((foo5 bar5)))) 
			'(bar))
		(mac '(nil ((((((((( t )))))))))) ()  )
		(mac '( "china" ("excitint" "vacations" "to" |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient)))
		     '("vacations" "to" |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient)))
		(mac '(#\% (#\F) #\o "o1" "foo2" ((foo3)) (foo4 . foo5)) () ) 
		(mac '("bomb" (("the weather in January" ("is usually clear and sunny")) "with temperatures usually in the " fifties)
				(in the dady time) (and ) (the "20's" at night)) 
               '("with temperatures usually in the " fifties)   )
	))
)

(do-test "test cdadr1"
    (progn (setq a (list #'stringp (list #'null  #'identity) (list #'list #'max #'min #'evenp) #'(lambda (x) (* 100 x))))
		 (equal (mapcar (car (cdadr a)) (mapcar #'cdadr '( (5 ())  ("hi" (1 2) 3 4) (#\@ (#\a #\b #\c) ((#\d) #\e #\f)) ) )) 
			   '(() (2) (#\b #\c) ))
	)
)

(do-test "test cdadr2"
    (let ((aa '(0 (1 2 (3 4 (5 6 (7 8 (9 10 (11 12 (13 14)))))))   ((((((1 2) 3 4) 5 6) 7 8) 9 10) 11 12) )  ))
		(and (equal (cdadr aa) '(2 (3 4 (5 6 (7 8  (9 10 (11 12 (13 14))))))))
			(equal (cdadr (cdadr aa)) '( 4 (5 6 (7 8 (9 10 (11 12 (13 14))))) ))
			(equal (cdadr (cdadr (cdadr aa))) '(6 (7 8 (9 10 (11 12 (13 14))))))
			(equal (cdadr (cdadr (cdadr (cdadr aa)))) '(8 (9 10 (11 12 (13 14)))))
			(equal (cdadr (cdadr (cdadr (cdadr (cdadr aa))))) '(10 (11 12 (13 14))))
			(equal (cdadr (cdadr (cdadr (cdadr (cdadr (cdadr aa)))))) '(12 (13 14)))
			(equal (cdadr (cdadr (cdadr (cdadr (cdadr (cdadr (cdadr aa))))))) '(14))
		)
	)
)

(do-test "test cdadr3"	
	(progn (setq aa '(Q (a b) c d ))
		(and 
			(setf (cdadr aa) '(8 (88 99 77)) )
			(equal aa `(Q ( a   8 (88 99 77)   ) c d ))
			(setf (cdadr (cdadr aa)) '(9 (3 6) 9))
			(equal aa `(Q ( a   8 (88 9 (3 6) 9)   ) c d  ))
			(setf (cdadr (cdadr (cdadr aa))) "magic kingdom")
			(equal aa `(Q ( a   8 (88 9 (3 . "magic kingdom") 9)   ) c d  ))
		)
	)
)
STOP
