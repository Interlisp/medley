;; Function To Be Tested: CDDAAR
;;
;; Source:        Steele's book    Section 15.1: Conses        Page: 263
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: July 22 ,1986
;;
;; Last Update:   July 22 ,1986
;;
;; Filed As:      {eris}<lispcore>cml>test>15-1-cddaar.test
;;
;;
;; Syntax:                CDDAAR LIST
;;
;; Function Description:  CDDAAR is equivalent to (CDR (CDR (CAR (CAR LIST)))).
;;
;; Argument(s):           LIST - a list
;;
;; Returns:               anything    
;;

(defun mac (list elm)
	 (typecase  elm (number           (=     (cddaar list) ,elm))
		        ((or cons string) (equal (cddaar list) ,elm))
			(t                (eq    (cddaar list) ,elm))
	) 
)
(do-test "test cddaar0"
    (prog1
	(and (mac '(((1 ((9)) "hi") 2 )) '("hi"))
		(mac '((((1 . 2) 3 (4 . 4) 6 7) a)) '((4 . 4) 6 7))
		(mac '(((( 1 2 3 4) 5 6 7)) 8 9) '(6 7))
		(mac '((( 1 a (((w)))) (2 b)) (3 c)) '((((w)))))
		(mac '((( ((a)) (( b)) (ab ba aa .bb) #\a #\b . #\c) ((c))) d)  '((ab ba aa .bb) #\a #\b . #\c))
		(mac '(((foo bar  "(foo1 . bar1)" . 999) ((foo2 bar2))) ((foo3) bar3) (foo4 (bar4)) (((foo5 bar5)))) 
			'("(foo1 . bar1)" . 999))
		(mac '((((((((((( t )))))))) t1 t2))) '(t2)  )
		(mac '( (("excitint" "vacations" "to" |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient))))
		     '("to" |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient)))
		(mac '(((#\F #\o ((foo3)) )"o1" "foo2") (foo4 . foo5)) '(((foo3))) ) 
		(mac '(((("the weather in January" ("is usually clear and sunny")) "with temperatures usually in the " fifties))
				(in the day time) (and ) (the "20's" at night)) 
               '(fifties) )
	))
)

(do-test "test cddaar1"
    (progn (setq a (list (list (list* #'null  #'list-length #'(lambda (x) (min (car x) (cadr x))) #'evenp  #'identity))))
		 (equal (mapcar (first (cddaar a)) 
					(mapcar #'cddaar '( (((a (((b))) 3 -3 ))) (((1 nil 3 4))) (((#\a (#\b #\c) 2.0 2.01))) ))) 
			   '(-3 3 2.0 ))
	)
)

(do-test "test cddaar2"
    (let ((aa '(((1 2 ((3 4 ((5 6 ((7 8 ((9 10 ((11 12 ((13 14)) ) ) )) )) ))) ))) )))
		(and (equal (cddaar aa) '(((3 4 ((5 6 ((7 8 ((9 10 ((11 12 ((13 14)) ) )) )) ))) )))  )
			(equal (cddaar (cddaar aa)) '(((5 6 ((7 8 ((9 10 ((11 12 ((13 14)) ) )) ))) )))  )
			(equal (cddaar (cddaar (cddaar aa))) '(((7 8 ((9 10 ((11 12 ((13 14)) )) )) )))  )
			(equal (cddaar (cddaar (cddaar (cddaar aa)))) '(((9 10 ((11 12 ((13 14)) )) )))  )
			(equal (cddaar (cddaar (cddaar (cddaar (cddaar aa))))) '(((11 12 ((13 14)) ))) )
			(equal (cddaar (cddaar (cddaar (cddaar (cddaar (cddaar aa)))))) '(((13 14))) )
		)
	)
)

(do-test "test cddaar3"	
	(progn (setq aa '(((a ab b) c) d ))
		(and 
			(setf (cddaar aa) '((( #\g #\r #\i #\n))) )
			(equal aa `((( a ab (( #\g #\r #\i #\n)) ) c) d ))
			(setf (cddaar (cddaar aa)) '(((3 6 8)) 9))
			(equal aa `((( a ab (( #\g #\r ((3 6 8)) 9)) ) c) d  ))
			(setf (cddaar (cddaar (cddaar aa))) "magic kingdom")
			(equal aa `((( a ab (( #\g #\r ((3 6 . "magic kingdom")) 9)) )  c) d  ))
		)
	)
)
STOP


