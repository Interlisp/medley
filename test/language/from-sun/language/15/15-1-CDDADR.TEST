;; Function To Be Tested: CDDADR
;;
;; Source:        Steele's book    Section 15.1: Conses        Page: 263
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: July 17 ,1986
;;
;; Last Update:   July 17 ,1986
;;
;; Filed As:      {eris}<lispcore>cml>test>15-1-cddadr.test
;;
;;
;; Syntax:                CDDADR LIST
;;
;; Function Description:  CDDADR is equivalent to (CDR (CDR (CAR (CDR LIST)))).
;;
;; Argument(s):           LIST - a list
;;
;; Returns:               anything    
;;

(defun mac (list elm)
	 (typecase  elm (number           (=     (cddadr list) ,elm))
		        ((or cons string) (equal (cddadr list) ,elm))
			(t                (eq    (cddadr list) ,elm))
	) 
)
(do-test "test cddadr0"
    (prog1
	(and (mac '(dummy (1 ((9)) "hi") 2 ) '("hi"))
		(mac '((99) ((1 . 2) 3 (4 . 4) 6 7) a) '((4 . 4) 6 7))
		(mac '(999 (( 1 2 3 4) 5 6 7) 8 9) '(6 7))
		(mac '((0 z) ( 1 a (((w)))) (2 b) (3 c)) '((((w)))))
		(mac '(1 ( ((a)) (( b)) (ab ba aa .bb) #\a #\b . #\c) ((c)) d)  '((ab ba aa .bb) #\a #\b . #\c))
		(mac '((- f00 1) (foo bar  "(foo1 . bar1)" . 999) ((foo2 bar2)) ((foo3) bar3) (foo4 (bar4)) (((foo5 bar5)))) 
			'("(foo1 . bar1)" . 999))
		(mac '(t0 ((((((((( t )))))))) t1 t2)) '(t2)  )
		(mac '("title:" ("excitint" "vacations" "to" |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient)))
		     '("to" |HAWAII| |Mexico| (the Pacific Northwest) ((and)) (the . Orient)))
		(mac '((mixed) (#\F #\o ((foo3)) )"o1" "foo2" (foo4 . foo5)) '(((foo3))) ) 
		(mac '('sentence (("the weather in January" ("is usually clear and sunny")) "with temperatures usually in the " fifties)
				(in the day time) (and ) (the "20's" at night)) 
               '(fifties) )
	))
)

(do-test "test cddadr1"
    (progn (setq a (list "# 1" (list* #'null  #'list-length #'(lambda (x) (min (car x) (cadr x))) #'evenp  #'identity)))
		 (equal (mapcar (first (cddadr a)) 
					(mapcar #'cddadr '( (z (a (((b))) 3 -3 )) (0 (1 nil 3 4)) (1.999 (#\a (#\b #\c) 2.0 2.01)) ))) 
			   '(-3 3 2.0 ))
	)
)

(do-test "test cddadr2"
    (let ((aa '(0 (1 2 23 (3 4 45 (5 6 67 (7 8 89 (9 10 101 (11 12 123 (13 14) ) ) ) ) ) )) ))
		(and (equal (cddadr aa) '(23 (3 4 45 (5 6 67 (7 8 89 (9 10 101 (11 12 123 (13 14) ) ) ) ) ))  )
			(equal (cddadr (cddadr aa)) '(45 (5 6 67 (7 8 89 (9 10 101 (11 12 123 (13 14) ) ) ) ))  )
			(equal (cddadr (cddadr (cddadr aa))) '(67 (7 8 89 (9 10 101 (11 12 123 (13 14) ) ) ))  )
			(equal (cddadr (cddadr (cddadr (cddadr aa)))) '(89 (9 10 101 (11 12 123 (13 14) ) ))  )
			(equal (cddadr (cddadr (cddadr (cddadr (cddadr aa))))) '(101 (11 12 123 (13 14) )) )
			(equal (cddadr (cddadr (cddadr (cddadr (cddadr (cddadr aa)))))) '(123 (13 14)) )
		)
	)
)

(do-test "test cddadr3"	
	(progn (setq aa '(e (a ab b) c d ))
		(and 
			(setf (cddadr aa) '(#\o ( #\g #\r #\i #\n)) )
			(equal aa `(e ( a ab #\o ( #\g #\r #\i #\n) ) c d ))
			(setf (cddadr (cddadr aa)) '(1 (3 6 8) 9))
			(equal aa `(e ( a ab #\o ( #\g #\r 1 (3 6 8) 9) ) c d  ))
			(setf (cddadr (cddadr (cddadr aa))) "magic kingdom")
			(equal aa `(e ( a ab #\o ( #\g #\r 1 (3 6 . "magic kingdom") 9) )  c d  ))
		)
	)
)
STOP

