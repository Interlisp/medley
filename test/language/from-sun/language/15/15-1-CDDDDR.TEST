;; Function To Be Tested: CDDDDR
;;
;; Source:        Steele's book    Section 15.1: Conses        Page: 263
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: July 14 ,1986
;;
;; Last Update:   July 14 ,1986
;;
;; Filed As:      {eris}<lispcore>cml>test>15-1-cddddr.test
;;
;;
;; Syntax:                CDDDDR LIST
;;
;; Function Description:  CDDDDR performs the cdr operation 4 times on LIST, and returns the result.
;;
;; Argument(s):           LIST - a list
;;
;; Returns:                anything    
;;
(do-test "test cddddr0"
	(and	(eq (cddddr ()) ())
		(eq (cddddr '(1)) ())
		(eq (cddddr '((a b) (c d) e f)) '())
		(eq (cddddr '(a b c z . d)) 'd)
		(equal (cddddr '(1 2 3 4 (5 6))) '((5 6)))
		(equal (cddddr '((1) (2) (3) 100 (4 5 6 . 7))) '((4 5 6 . 7)))
		(equal (cddddr '("sunday" nil nil "monday" nil  "tuesday" nil)) '( nil "tuesday" nil))
		(equal (cddddr (cddddr '(1 2 3 4 5 6 7 8 9 10 11 12))) '(9 10 11 12))
		(equal (cddddr '(|****| |%%%%| |????| |####| |^^^^^|)) '(|^^^^^|))
		(equal (cddddr '(100 23 ((((5 6 4) 8 3) 1) .2) ((a . b) (c d e (f . g))) 'wild)) 
                 '( 'wild))
	)
)

(defun fun (list elm)
	(typecase elm  (number           (= (cddddr list) elm))
			((or cons string) (equal (cddddr list) elm))
			(t                (eq (cddddr list) elm))
	)
)
(do-test "test cddddr1"
	(prog1
		(and (fun '(array (fixnum) "package" simple-vector (((((cute-t))) nil) nil) ) '((((((cute-t))) nil) nil)))
			(fun (funcall #'append '((i)) '(((j))) '((1 . 2)) '(1 (2) ((3)) (((4 . 5)))) '(t nil))
				'((2) ((3)) (((4 . 5))) t nil))
			(fun '((+ 1 2) (1+ 9) (incf 100) (decf 1100) (defun fun () 'nil)) 
                    '( (defun fun () 'nil)))
			(fun  (progn (setq a (list nil nil #'evenp #'oddp #'atom #'+))
					   (mapcar (car (cddddr a)) '(4 5 6 7 (nil) t)))     '(nil t))
			(fun (cddddr (cddddr '(1 2 3 (10) 20 30 (100 200 300) 1000 2000 3000 4000 400 (40) 4))) 
				'((40) 4))
		)
	)
)

(do-test "test cddddr2"
	(progn (setq a '(aa bb cc dd ee ff))
		   (setf (cddddr a) '(1 2 3 4 5 6 7 8))
		   (setf (cddddr (cddddr a)) '(44 33 22 11 55 66 77))
		   (equal a '(aa bb cc dd 1 2 3 4 44 33 22 11 55 66 77))))
;;
;;
STOP
