;; Function To Be Tested: COPY-LIST
;;
;; Source: Guy L Steele's CLTL
;; Section: 15.2 Lists
;; Page: 268
;;
;; Created By:    Kelly Roach
;;
;; Creation Date: June 27,1986
;;
;; Last Update:   June 27,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>15-2-COPY-LIST.TEST
;;
;;
;; Syntax:        (COPY-LIST L)
;;
;; Function Description:
;; This returns a list that is EQUAL to LIST, but not EQ.
;; Only the top level of list structure is copied; that is, COPY-LIST
;; copies in the CDR direction but not in the CAR direction.
;; If the list is ``dotted,'' that is, (CDR (LAST LIST))
;; is a non-NIL atom, this will be true of the returned list also.
;; See also function COPY-SEQ and function COPY-TREE.
;; 
;; Argument(s):   L - a list
;;
;; Returns:       a list
;;

(DO-TEST "COPY-LIST TEST 1" (EQUAL (COPY-LIST '(Z Z F A Z B Z A))
                                   '(Z Z F A Z B Z A))
       (EQUAL (COPY-LIST '(Y Y D X B G B B D . C))
              '(Y Y D X B G B B D . C))
       (EQUAL (COPY-LIST '(D E X C E))
              '(D E X C E))
       (EQUAL (COPY-LIST '(X Z A C G E G . D))
              '(X Z A C G E G . D))
       (EQUAL (COPY-LIST '(F E F Y B))
              '(F E F Y B))
       (EQUAL (COPY-LIST '(Y B E A D D C X G G))
              '(Y B E A D D C X G G)))

(DO-TEST "COPY-LIST TEST 2" (EQUAL (COPY-LIST '(E F F B))
                                   '(E F F B))
       (EQUAL (COPY-LIST '(Z E D F . G))
              '(Z E D F . G))
       (EQUAL (COPY-LIST '(D A F G F B X D))
              '(D A F G F B X D))
       (EQUAL (COPY-LIST '(F Y C . E))
              '(F Y C . E))
       (EQUAL (COPY-LIST '(F D B Y B E . Z))
              '(F D B Y B E . Z))
       (EQUAL (COPY-LIST '(C E G F A D A B))
              '(C E G F A D A B)))

(DO-TEST "COPY-LIST TEST 3"
       (EQUAL (COPY-LIST '(QIX ZORK CATOR MEEF MORY ZORK FOO PERTY . FOO))
              '(QIX ZORK CATOR MEEF MORY ZORK FOO PERTY . FOO))
       (EQUAL (COPY-LIST '(BAZ))
              '(BAZ))
       (EQUAL (COPY-LIST '(CATOR MORY MORY BAZ QIX MEEF FOO . MORY))
              '(CATOR MORY MORY BAZ QIX MEEF FOO . MORY))
       (EQUAL (COPY-LIST '(FOO FOO QIX MEEF PERTY FOO MORY MORY))
              '(FOO FOO QIX MEEF PERTY FOO MORY MORY))
       (EQUAL (COPY-LIST '(PERTY PERTY MORY QIX MEEF))
              '(PERTY PERTY MORY QIX MEEF))
       (EQUAL (COPY-LIST '(BAR BAR ZORK FOO QIX . CATOR))
              '(BAR BAR ZORK FOO QIX . CATOR)))

(DO-TEST "COPY-LIST TEST 4"
       (EQUAL (COPY-LIST '(FOO CATOR CATOR BAR MEEF BAR MORY PERTY ZORK . BAR))
              '(FOO CATOR CATOR BAR MEEF BAR MORY PERTY ZORK . BAR))
       (EQUAL (COPY-LIST '(MEEF BAR BAZ BAZ BAR FOO))
              '(MEEF BAR BAZ BAZ BAR FOO))
       (EQUAL (COPY-LIST '(CATOR MEEF MEEF MEEF MEEF))
              '(CATOR MEEF MEEF MEEF MEEF))
       (EQUAL (COPY-LIST '(QIX ZORK BAZ PERTY MEEF CATOR MORY))
              '(QIX ZORK BAZ PERTY MEEF CATOR MORY))
       (EQUAL (COPY-LIST '(MORY QIX BAZ MORY))
              '(MORY QIX BAZ MORY))
       (EQUAL (COPY-LIST '(QIX QIX ZORK QIX PERTY CATOR . FOO))
              '(QIX QIX ZORK QIX PERTY CATOR . FOO)))

(DO-TEST "COPY-LIST TEST 5" (EQUAL (COPY-LIST '(7 6 8 2 8 7 . 10))
                                   '(7 6 8 2 8 7 . 10))
       (EQUAL (COPY-LIST '(7 10 3 5 6 5 7 9 . 7))
              '(7 10 3 5 6 5 7 9 . 7))
       (EQUAL (COPY-LIST '(8 9 10 8 9))
              '(8 9 10 8 9))
       (EQUAL (COPY-LIST '(4 . 5))
              '(4 . 5))
       (EQUAL (COPY-LIST '(6 9 7 6 2 4 3 . 10))
              '(6 9 7 6 2 4 3 . 10))
       (EQUAL (COPY-LIST '(7 . 6))
              '(7 . 6)))

(DO-TEST "COPY-LIST TEST 6" (EQUAL (COPY-LIST '(9 3 3 7 3 1 . 6))
                                   '(9 3 3 7 3 1 . 6))
       (EQUAL (COPY-LIST '(2 7 1 10 2 9))
              '(2 7 1 10 2 9))
       (EQUAL (COPY-LIST '(4 4 4 10 3 3 1 6 . 3))
              '(4 4 4 10 3 3 1 6 . 3))
       (EQUAL (COPY-LIST '(1 9 4 5 1 9 8 10 1 . 4))
              '(1 9 4 5 1 9 8 10 1 . 4))
       (EQUAL (COPY-LIST '(2 9 2))
              '(2 9 2))
       (EQUAL (COPY-LIST '(9 8 1 1 5 3 1 5 6))
              '(9 8 1 1 5 3 1 5 6)))

STOP
