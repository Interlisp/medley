;; Function To Be Tested: ENDP
;;
;; Source: Guy L Steele's CLTL
;; Section: 15.2 Lists
;; Page: 264
;;
;; Created By:    Karin M. Sye, Kelly Roach
;;
;; Creation Date: June 27,1986
;;
;; Last Update:   June 27,1986
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>15-2-ENDP.TEST
;;
;;
;; Syntax:        (ENDP OBJECT)
;;
;; Function Description:
;; The predicate ENDP is the recommended way to test for the end
;; of a list.  It is false of conses, true of NIL, and an error for
;; all other arguments.
;; Implementation note: Implementations are encouraged to signal an
;; error, especially in the interpreter, for a non-list argument.
;; The ENDP function is defined so as to allow compiled code
;; to perform simply an atom check or a null check if speed is more
;; important than safety.
;; 
;; Argument(s):   OBJECT - anything
;;
;; Returns:       T or NIL
;;



(do-test "test endp - argument is a nil"
    (and (eq (endp nil) t)
         (eq (endp () ) t)
         (eq (endp (cdr '(1))) t)))

(do-test "test endp - argument is a conses"
    (and (notany #'endp '((1 2 3) (a . b) ((a b c (0 9 8 7 (#\a #\b "c")) z s w) 4 5 6 . d) (value 10 volume 300)))
         (notany #'endp (list (list 10 20 30) (cons 1 2) (append '(99) '(88)) (make-list 2)))))

;;(do-test "test endp - (This is an error !! if) argument is an object other than nil or conses  "
;;    (notany #'(lambda (x) (nlsetq (endp x))) '(a 23 0.009 #\m "st" #(1 2 3) 7/3)))

STOP
