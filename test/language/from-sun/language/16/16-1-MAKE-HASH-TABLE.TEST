;; Function To Be Tested: make-hash-table
;;
;; Source:       CommonLisp by Steele    Section: 16.1: Hash Table 
;;	Functions      Page: 283
;;
;; Created By:   John Park
;;
;; Creation Date: May 13, 1986
;;
;; Last Update:   Oct 9, 1986
;;
;; Filed As:      {eris}<lispcore>cml>test>16-1-make-hash-table.test
;;
;;
;; Syntax:       make-hash-table &key test size rehash-size rehash-threshold
;;
;; Function Description: This function creates and returns a new hash table 
;;
;; Argument(s):  test: determines how keys are compared 
;; [#'eq, #'eql, or #'equal] Default; eql
;; 	size: initial size of the hash table
;;	rehash-size: specifies how much to increase the size of the hash 
;;		table when it becomes full. Must be integer greater than 0 or 
;;		floating-point number greater than 1
;;	rehash-threshold: specifies how full the hash table can get before 
;;	it can grow.
;;
;; Returns:             hash table  
;;
;; Constraints/Limitations:  None

(do-test make-hash-table-test
			(and (eq (type-of (make-hash-table)) 'hash-table)
				(eq (type-of (make-hash-table :size 10))
						'hash-table)
				(eq (type-of (make-hash-table :size 8 
					:rehash-size 4)) 'hash-table)
				(eq (type-of (make-hash-table :size 20
					:rehash-size 1.5)) 'hash-table)
				(eq (type-of (make-hash-table :size 10
					:rehash-size 20 :rehash-threshold 12))
					'hash-table)
				(eq (type-of (make-hash-table :size 50
					:rehash-size 1.4 :rehash-threshold 0.5))
					'hash-table) 
				(eq (type-of (make-hash-table :test #'equal :size 30
					:rehash-size 40 :rehash-threshold 0.5))
					'hash-table)))

STOP





