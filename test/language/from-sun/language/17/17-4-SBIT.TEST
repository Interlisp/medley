;; Function To Be Tested: sbit
;;
;; Source:     Common Lisp by Guy Steele
;;            Section 17.4: Functions on Arrays of Bits    Page: 293
;;
;; Created By: John Park
;;
;; Creation Date: June 10, 86
;;
;; Last Update:   July 18, 1986 by masinter, SBIT is not required to fail on 
;; non-simple-bit-arrays
;;
;; Filed as:      {eris}<lispcore>cml>test>17-4-sbit.test
;;
;; Syntax: sbit simple-bit-array  &rest subscripts 
;;
;; Function Description: This function returns an element of a sbit-array 
;; specified by subscripts.  
;; Argument(s):  simple-bit-array 
;; Returns: 0 or 1
;;
;; Constraints/limitations: None 

(do-test-group sbit-tests
		:before  (progn (setq sbit-array1 
						(make-array 5 :element-type 'bit))
					 (setq sbit-array2 
						(make-array '(2 2) :element-type 'bit
						:initial-element 1))
					(setq sbit-array3
						 (make-array '(2 2 2) :element-type 'bit
						:initial-contents '(((1 0) (0 1)) 
										((1 1) (0 0)))))
					(setq sbit-array4 (make-array '(4 3)
						:initial-contents '((1 2 3)
										(4 5 6)
										(7 8 9)
										(10 11 12))))
					(setq sbit-array4.1 (make-array 8 :adjustable t
						:fill-pointer t :displaced-to array6
							:displaced-index-offset 2)))
													
			
	(do-test sbit-test
		(and  (eq (sbit sbit-array1 0) 0)
			(eq (sbit sbit-array1 1) 0)
			(eq (sbit sbit-array1 2) 0) 
			(eq (sbit sbit-array1 3) 0)
			(eq (sbit sbit-array1 4) 0)
			(eq (sbit sbit-array2 0 0) 1)
			(eq (sbit sbit-array2 0 1) 1)
			(eq (sbit sbit-array2 1 0) 1)
			(eq (sbit sbit-array2 1 1) 1)
			(eq (sbit sbit-array3 0 0 0) 1)
			(eq (sbit sbit-array3 0 0 1) 0)
			(eq (sbit sbit-array3 0 1 0) 0)
			(eq (sbit sbit-array3 0 1 1) 1)
			(eq (sbit sbit-array3 1 0 0) 1)
			(eq (sbit sbit-array3 1 0 1) 1)
			(eq (sbit sbit-array3 1 1 0) 0)
			(eq (sbit sbit-array3 1 1 1) 0)
	; 		(eq (sbit sbit-array4.1 0) 3) ;; tests to see if sbit fails  
			;; on non-simple-array ;;
			)))

STOP


		