;; Function To Be Tested: vector-push-extend
;;
;; Source:     Common Lisp by Guy Steele
;;            Section 17.5: Fill Pointer        Page: 296
;;
;; Created By: John Park
;;
;; Creation Date: June 15, 86
;;
;; Last Update: January 7, 87   
;;
;; Filed as:      {eris}<lispcore>cml>test>17-5-vector-push-extend.test
;;
;; Syntax: vector-push-extend new-element vector &optional extension
;;
;; Function Description: Vector-push is just like vector-push except that if the
;; fill pointer gets too large, the vector is extended (using adjust-array) so 
;; that it can contain more elements. The option, extension must be a positive
;; integer, is the minimum number of elements to be added to the vector if it 
;; must be extended. The default (*DEFAULT-PUSH-EXTENSION-SIZE*) is 20.
;; 
;; Argument(s): new-element vector extension (optional)
;;
;; Returns:  vector-push-extend  
;;
;; Constraints/limitations: The variable such as *DEFAULT-PUSH-EXTENSION-SIZE* (xcl)
;; is implementation-dependent.  

(do-test vector-push-extend-test1 
	(let ((vpe1 (make-array 7 :adjustable t :fill-pointer 5)))
		 (and (eq (array-dimension vpe1 0) 7)
			(eq (vector-push-extend 'fifth vpe1) 5)
			(eq (vector-push-extend 'sixth vpe1) 6)
			(eq (vector-push-extend 'seventh vpe1) 7)
			(eq (vector-push-extend 'eighth vpe1) 8)
			(> (array-dimension vpe1 0) 7)
			;; vpe1 should now have been extended to contain more than 7  
			;; elements (this is implementation-dependent)
		)
	)
)

(do-test vector-push-extend-test2 
	(let ((vpe2 (make-array 7 :adjustable t :fill-pointer 6)))

		;; In the following cases, the array size should increase by 5
		;; so that its total dimension is equal to 12

		(and (eq (vector-push-extend 'a vpe2 5) 6)
			(eq (vector-push-extend 'b vpe2 5) 7)
			(eq (vector-push-extend 'c vpe2 5) 8)
			(eq (vector-push-extend 'd vpe2 5) 9)
			(eq (vector-push-extend 'e vpe2 5) 10)
			(eq (vector-push-extend 'f vpe2 5) 11)
			(eq (array-dimension vpe2 0) 12)
		)
	)
)
			
(do-test vector-push-extend-test3
	(if (string-equal (lisp-implementation-type) "xerox")
		(let ((vpe3 (make-array 7 :adjustable t :fill-pointer t)))
			(and (eq (vector-push-extend 'a vpe3) 7)

			;; fill-pointer is already 7.  The total-dimension of the array
			;; should increase to 27 since the *DEFAULT-PUSH-EXTENSION-SIZE* 
			;; is 20

				(eq (vector-push-extend 'b vpe3) 8)
			     (eq (vector-push-extend 'c vpe3) 9)
			     (eq (vector-push-extend 'd vpe3) 10)
			     (eq (vector-push-extend 'e vpe3) 11)
				(setf (fill-pointer vpe3) 24) ; resets fill-pointer to 24
			     (eq (vector-push 'x vpe3) 24)
			     (eq (vector-push 'y vpe3) 25)
			     (eq (vector-push 'z vpe3) 26)
				(not (vector-push 'end vpe3))
			)
		)
	T
	)
)

STOP


