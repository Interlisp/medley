;; Function To Be Tested: string-capitalize
;;
;; Source:        CLtL p. 303 
;; Chapter 18: Strings		Section 3: String Construction and Manipulation
;;
;; Created By:    Peter Reidy
;;
;; Creation Date:  23 July 86
;;
;; Last Update:    14 December 86
;;
;; Filed As:      {eris}<lispcore>cml>test>18-3-string-capitalize.test
;;
;;
;; Syntax: string &key :start :end               
;;
;; Function Description: convert the first letter of each word in string from :start :to :end to upper case.  Counting for :start and :end starts from 0.  A word is a consecutive subsequence of characters having at each end either a non-alphanumeric character or an end of the string.
;;
;; Argument(s):	string - a valid character string
;;			:start, :end - the first and last+1 characters to be modified.         	
;;
;; Returns: the modified string              
;;
(do-test-group string-capitalize-group
	:before (test-setq
		testcase "word word\\word|word!word@word#word$word%word^word^word*word(word)word-word_word=  word+word[word{word]word}word;word:word'word\"word`word~word,word<word.word>word/word?"
		digits '9\ 8\ 7\ 6\ 5\ 4\ 3\ 2\ 1\ 0
		punc "|\\!@#$%^ &*()_+-={}[]:\"~<>?,./")
;;
	(do-test string-capitalize-test
		(AND
			(string-equal testcase (string-capitalize testcase))
			(= (length testcase)(length (string-capitalize testcase)))
			;; Within the :start-:end portion, skip over the non-alphanumeric characters.
			(string= (string-capitalize '|ab cdefg"hijklmnop| :end 9 :start 2) "ab Cdefg\"hijklmnop")
		)
	)
)
STOP

