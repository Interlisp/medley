;; Function To Be Tested: eval
;;
;; Source: Guy L Steele's CLTL
;; Section: 20.1 THE EVALUATOR (Run-Time Evaluation of Forms)
;; Page: 321
;;
;; Created By:   John Park
;;
;; Creation Date: Nov 11, 1986
;;
;; Last Update:   
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>20-1-eval.test
;;
;;
;; Syntax:        (eval form)
;;
;; Function Description: The form is evaluated in the current dynamic environment
;; and a null lexical environment.  Whatever results from the evaluation is
;; returned from the call to eval.  When a call to eval is made, two levels of
;; of evaluation occur on the argument.  First the argument form is evaluated,
;; as for arguments to any function, by the usual argument evaluation mechamism
;; (which involves an implicit use of eval).  Then the argument is passed to 
;; the eval function, where another evaluation occurs.
;;
;; Argument(s): form
;;			  
;; Returns: result of evaluation of form     
;;
;; Constraints/Limitations:



(do-test "eval-test1"
		(and (eq (eval (list 'cdr (car '((quote (a . b)) c))))
				'b)
			(equal (eval '(append '(a b) '(c d)))
				  (append '(a b) '(c d)))
			(= (eval '(* (cos 1.0) (sin 1.0)))
			   (* (cos 1.0) (sin 1.0)))
	     )
)

(do-test "eval-test2"
		(and (setq foo '(1- 10))
			(= (eval foo) 9)
			(equal (eval 'foo) 
				  '(1- 10))
			(eq (eval (quote (quote foo)))
				(quote foo))
			(setq x 10 y 20 z 'last-element)
			(equal (mapcar #'eval (list 'x 'y 'z))
				  (list x y z))
		)
)

(do-test "eval-top-level-variables"
		(and (boundp '+)
			(boundp '++)
			(boundp '+++)
			(boundp '*)
			(boundp '**)
			(boundp '***)
			(boundp '/)
			(boundp '//)
			(boundp '///)
		)
)

STOP


