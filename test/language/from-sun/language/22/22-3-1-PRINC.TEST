;; Function To Be Tested: princ
;;
;; Source:        CLtL p. 383
;;
;; Chapter 22: Input/Output		Section 3.1: Output to Character Streams
;;
;; Created By:    Peter Reidy
;;
;; Creation Date: 2 December 86
;;
;; Last Update: 
;;
;; Filed As:      {eris}<lispcore>cml>test>22-3-1-princ.test
;;
;; Syntax: princ object &optional output-stream 
;;            
;; Function Description: PRINC is like PRIN1 in that it prints its object without a leading newline or trailing blank; it prints only the characters of its print name, omitting escape characters from atoms and flanking double quotes from strings.
;;
;; Argument(s):	object - a CML object
;; output-stream - a stream (default: *standard-output*)
;;
;; Returns: object			 
;;
(do-test-group (princ-group
	:before (progn
			(test-defun find-escape (object writefunc)
			"Look for a double quotation mark in a string's representation, #\| or #\\ in a symbol's.  Return a position or NIL." 
				(let ((obstring (with-output-to-string (obstream) (funcall writefunc object obstream))))
					(cond
						((stringp object)
							(position #\" obstring)
						)  ; stringp object
						(t
						 (or
							(position #\| obstring)
							(position #\\ obstring)
						 )  ; or
						)  ; t
					)  ; cond
				)  ; let 
			)  ; test-defun find-escape
			(test-defun princtest (object)
			"Verify that an object's PRIN1 representation contains escape characters, but its PRINC representation doesn't."
				(and
					(find-escape object 'prin1)
					(not (find-escape object 'princ))	
				)  ; and
			)  ; test-defun
		)  ; progn
	)  ; princ-group
;;
	(do-test princ-on-strings-test
		(every 'princtest (list "string" "string
with
newlines" (make-array (random 50) :element-type 'string-char :initial-element #\space)))
	)  ; do-test princ-on-strings-test
;;
	(do-test princ-on-symbols-test
		(every 'princtest (list '|||||| 'abcd\e '|1 2 3| (make-symbol "This is a string.") (make-symbol (print "This is a string.")))
		)  ; every
	)  ; do-test princ-on-symbols-test
)  ; do-test-group
STOP

