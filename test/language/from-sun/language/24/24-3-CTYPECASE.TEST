;; Function To Be Tested: ctypecase
;;
;; Source: Guy L Steele's CLTL
;; Section: 24.3 ERRORS (Special Forms for Exhaustive Case Analysis)
;; Page: 436
;;
;; Created By:   John Park
;;
;; Creation Date: Nov 7, 1986
;;
;; Last Update:  Jan 15, 1987 
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>24-3-ctypecase.test
;;
;;
;; Syntax:        (ctypecase keyplace {(type {form}*)}*)
;;
;; Function Description:  This macro resembles typecase.  Its control construct
;; is similar to typecase, but no explicit otherwise or T clause is permitted.
;; The keyplace must be a generalized variable reference acceptable to setf.
;; If no clause is satisfied, etypecae signals an error with a message constructed
;; from the clauses. Continuing from this error causes ctypecase to accept a new
;; value from the user, store it into keyplace, and start over, making the type
;; tests again.  Subforms of keyplace may be evaluated multiple times.  The name
;; of this function stands from "continuable exhaustive type case."
;;
;; Argument(s): Keyplace: Key (variable)
;;			(type {form}): type case for error checking
;;			  
;; Returns:      
;;
;; Constraints/Limitations: Due to the nature of ctypecase function, which enters
;; the debugger (break), this test should be conducted manually to see if correct 
;; error messages are returned.  Tests requiring user interface are commented out.



(do-test "ctypecase-test0?"
		(macro-function 'ctypecase) ; Does ctypecase have a macro definition?
)

(do-test "ctypecase-test1"
		(and (setq x 1/3)
			(= (ctypecase x
				 (integer x)
				 (rational x)
				 (symbol (symbol-value x)))
			 	1/3)
		)
) ; This should not break since the clause (rational x) is satisfied.


;; The following should break with the appropriate error message, promt for
;; a new value, and return when the new value satisfies any of the type cases
;; "Error: The value of X, 1/3, is neither an integer nor a symbol"
;;
;;	(progn (setq x "HELLO")
;;		  (ctypecase x
;;				 (integer x)
;;				 (complex x)
;;				 (list x)
;;				  (symbol (symbol-value x)))
;;		 )

STOP



