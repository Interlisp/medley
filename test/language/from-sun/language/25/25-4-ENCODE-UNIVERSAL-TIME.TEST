;; Function To Be Tested: encode-universal-time
;;
;; Source: Guy L Steele's CLTL Chapter 24: Miscellaneous Features
;; Section: 25.4.1  Time Functions
;; Page: 443
;;
;; Created By:   John Park
;;
;; Creation Date: Aug 20,1986
;;
;; Last Update: Oct 6, 1986  
;;
;; Filed As:      {ERIS}<LISPCORE>CML>TEST>25-4-encode-universal-time.test
;;
;;
;; Syntax:        (encode-universal-time second minute hour date month year
;;					&optional time-zone)
;;
;; Function Description: This function  returns the encoded time (in Universal Time
;; format), which was  specified by the given  components of decoded time.
;;
;; Argument(s):  Second (integer between 0 and 59, inclusive)
;;			  Minute (integer between 0 and 59, inclusive)
;;			  Hour (integer between 0 and 23, inclusive)
;;			  Date (integer between 1 and 31, inclusive)
;;			  Month (integer between 1 and 12)
;;			  Year (integer indicating the year A.D.  eg: 1986)
;;			  Time-zone (optional) (integer specified as the number of hours
;;				west of GMT (Greenwich Mean Time). eg: California- 8
;;			  
;; Returns: Encoded time (integer)  
;;
;; Constraints/Limitations: none

(do-test-group ("encode-universal-time-setup"
	:before (progn
		
		(setq decoded-time-yr2000 '(23 30 7 28 8 2000))
		(setq decoded-time-LA '(10 20 12 20 8 1986 8))
		(setq decoded-time-LA-nosaving '(10 20 12 20 8 1986))
		(setq decoded-time-Denver '(10 20 12 20 8 1986 7))
		(setq decoded-time-Chicago '(10 20 12 20 8 1986 6))
		(setq decoded-time-NewYork '(10 20 12 20 8 1986 5))
		(setq decoded-time-GreenWich '(10 20 12 20 8 1986 0))
		(setq decoded-time-Greenland '(10 20 12 20 8 1986 -2))
		(setq decoded-time-HongKong '(10 20 12 20 8 1986 -8))
		(setq decoded-time-yr1940 '(59 0 23 30 3 1940))
		(setq decoded-time-list (list decoded-time-yr2000 decoded-time-LA 
				decoded-time-Denver	decoded-time-Chicago decoded-time-NewYork
				decoded-time-GreenWich decoded-time-Greenland 
				decoded-time-HongKong  decoded-time-yr1940))))
		
		
(do-test "encode-universal-time-test"
		(and (setq encoded-time-list
				(mapcar #'eval
					(mapcar #'(lambda (x)  (append '(encode-universal-time) x))
					decoded-time-list)))
			(every #'integerp encoded-time-list)
			(apply #'> encoded-time-list)
			(setq LA-time-saving-yes (eval (append '(encode-universal-time)
									decoded-time-LA)))
			(setq LA-time-saving-no (eval (append '(encode-universal-time)
									decoded-time-LA-nosaving)))
			(= (abs(- LA-time-saving-yes LA-time-saving-no)) 3600))))
		 	
						

STOP


