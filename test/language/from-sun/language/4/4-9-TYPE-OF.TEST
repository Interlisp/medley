;; Function To Be Tested: type-of
;;
;; Source:        CLtL p. 52
;;
;; Chapter 4: Type Specifiers		Section 9: Determining the Type of an Object
;;
;; Created By:    Peter Reidy
;;
;; Creation Date:  16 September 86
;;
;; Last Update:   1 January 87
;;
;; Filed As:      {eris}<lispcore>cml>test>4-9-type-of.test
;;
;; Syntax: type-of object
;;            
;; Function Description: find a standard type of which object is a member (object's canonical type).
;;
;; Argument(s):	object - any commonlisp object 
;;
;; Returns:  a type name            
;;
(do-test type-of-test
	(let	((bound 0))
;; Steele's requirement is simply that the function return some defined type.
		(every 'type-of
			(list
				(1+ most-positive-fixnum)  ; bignum; common
				0				; bit; t
				27/60				; rational; ratio
				5.00				; float; double-float; single-float; long-float; short-float
				3.1415926535897932384d0
				#c( 6/7 3.00)		; complex
				#\*				; standard-char; character
				#\backspace		; semi-standard
				bound				; bound symbol
				(gentemp)			; unbound symbol
				'( a b c . d)		; cons; sequence
				(list)			; list
				(vector 5 4 3 2 1)		; vector
				" string "			; string; simple-string; simple-array
				#*1001			; bit-vector; simple-bit-vector
				#'+				; compiled-function
				#'(lambda nil nil)	; function
				(random 1000)		; integer; atom; fixnum
				(make-hash-table)	; hash-table
				:key				; keyword
				(copy-readtable)	; readtable
				nil				; null
				(car(list-all-packages)) ; package
				(pathname)			; pathname
				(make-synonym-stream) ; stream
				*random-state*		; random-state
			)  ; list
		)  ; every	
	)  ; let
)  ; do-test
STOP

