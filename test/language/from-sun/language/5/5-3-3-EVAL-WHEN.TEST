;;
;; Function To Be Tested: eval-when
;;
;; Source:        CLtL p. 69 
;; Chapter 5: Program Structure       Section 3.3: Control of Time of Evaluation
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date:  Nov. 9, 86
;;
;; Last Update:   Nov. 9, 86 
;;
;; Filed As:      {eris}<lispcore>cml>test> 5-3-3-eval-when.test
;;
;;
;; Syntax: eval-when ({situation}*) {form}*               
;;
;; Function Description: The body of an eval-when form is processed as as implicit progn, but only in the situations listed.
;;					Each situation must be a sumbol, either compile, load, or eval.  Eval specifies that the
;;					interpreter should process the body.  Compile specifies that the compiler should evaluate the body 
;;					at compile time in the compilation context.  Load specifies that the compiler should arange to
;;					 evaluate the forms in the body when the compiled file containing the eval-when form is loaded.
;;
;; Argument(s):  situation - compile, load, or eval        	
;;
;; Returns: anything             
;;

;;This test is incredibly bogus. -- Pavel
(do-test "test eval-when 0"


		(and
;			(equal (multiple-value-list (eval-when (eval) (values 2 3 4))) '(2 3 4))
;			(equal (eval-when (eval) (list 'a 'b 'c 'd 'e)) '(a b c d e))
		T)
) 
STOP
