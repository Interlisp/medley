;; Function To Be Tested: boundp
;;
;; Source:        Steele's book    Section 7.1.1: Reference        Page: 90
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: June 3, 1986
;;
;; Last Update:   June 3, 1986
;;
;; Filed As:      {eris}<lispcore>cml>test>boundp.test
;;
;;
;; Syntax:                BOUNDP symbol
;;
;; Function Description:  BOUNDP returns true if the special variable named by symbol has a value ; otherwise,
;;                        it returns nil.
;;
;; Argument(s):           symbol - a lisp symbol object
;;
;; Returns:               true or nil    
;;
(do-test test-boundp0
    (and 
	  ;;(every #'boundp '(nil t :start :end :initial-contents :key :from-end :circle multiple-values-limit
       ;;                   call-arguments-limit pi))
         (setq a "ham" b 90 c '(9 8 7) d (1- 9))
         (every #'boundp '(a b c d))))


(do-test test-boundp1
    ;;
    ;; test for dynamically bound variables
    ;;
    (progn (defun fun1 () (let ((*a* 1) (*c* 2)) (declare (special *a* *c*)) (fun2)))
           (defun fun2 () (and (boundp '*a*) (boundp '*c*)))
           (fun1)))

(do-test test-boundp2
    ;;
    ;; test for lexically bound variables 
    ;;
    (progn (makunbound 'a)
           (makunbound 'b)
           ; make suere a & b are unbound
           (not (or (boundp 'a) (boundp 'b)))
           (defun fun1 () (let ((a 1) (b 3)) (fun2)))
           (defun fun2 () (or (boundp 'a) (boundp 'b)))
           (eq nil (fun1))))

;;
;;
STOP


    