;; Function To Be Tested: fboundp
;;
;; Source:        STEELE's book    Section 7.1.1: Reference        Page: 90
;;
;; Created By:    Karin M. Sye
;;
;; Creation Date: June 2, 1986
;;
;; Last Update:   June 2, 1986
;;
;; Filed As:      {eris}<lispcore>cml>test>7-1-1-fboundp.test
;;
;;
;; Syntax:                FBOUNDP symbol
;;
;; Function Description:  FBOUNDP returns true if the symbol names a global function, a special form or a macro.
;;                        It returns nil otherwise.
;;
;; Argument(s):           symbol - a lisp symbol object
;;
;; Returns:               true or nil   
;;
;;
(do-test test-fboundp0
    ;;
    ;;  tests for system provided functions, special forms, and macros
    ;;
    (and (every #'fboundp '(block catch compiler-let declare eval-when flet function go if labels let let* macrolet 
                            multiple-value-call multiple-value-prog1 progn progv quote return-from setq 
                            tagbody the throw unwind-protect))

         (every #'fboundp '(car cdr caaadr cddddr cdadr endp list-length nthcdr last rest nth copy-list append
                            make-array aref svref adjust-array  make-hash-table clrhash hash-table-count
                            every notany some notevery))

         (every #'fboundp '(pop push pushnew defmacro multiple-value-list multiple-value-bind multiple-value-setq))))

(do-test test-fboundp1
    ;;
    ;;  tests for user defined global functions and macros
    ;;
    (and (defun fun1 () 'fun1)
         (defun fun2 () 'fun2)
         (defmacro mac1 () ''mac1)
         (defmacro mac2 () '(car '(hi there !)))
         (every #'fboundp '(fun1 fun2 mac1 mac2))))

(do-test test-fboundp2
    ;;
    ;;  tests for symbols not associated with function definitions
    ;;
    (and (setq a 0 b #\q c "1" d '(4) e 'e)
         (notany #'fboundp '(a b c d e no-such-fun1 no-such-fun2))))

(do-test test-fboundp-local-functions
    ;;
    ;;  tests for user defined local functions
    ;;
    (and (flet ((locfun1 () 'locfun1) (locfun2 () 'foo2)) (notany #'fboundp '(locfun1 locfun2)))
         (notany #'fboundp '(locfun1 locfun2))))

(do-test test-fboundp-local-macros
    ;;
    ;;  tests for user defined local macros
    ;;
    (and (macrolet ((locmac1 () ''locmac1) (locmac2 () ''bar2)) (notany #'fboundp '(locmac1 locmac2)))
         (notany #'fboundp '(locmac1 locmac2))))

;;
;;
STOP
         