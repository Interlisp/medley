;; ByteCompiler regression tests

(do-test "AR 7120: Bytecompiler should rebind *print-level*, *print-length*"
   (progn
      (with-open-file (s "{Core}AR7120." :direction :output :if-exists :new-version)
         (format s "(DEFINE-FILE-INFO ~CREADTABLE \"OLD-INTERLISP-FILE\" ~:*~CPACKAGE \"INTERLISP\")
                    (FILECREATED 1 2 3)
                    (DECLARE: EVAL@COMPILE DONTCOPY
                       (COND ((AND (NULL *PRINT-LEVEL*)
                                   (NULL *PRINT-LENGTH*))
                              (SETQ *FOO* (PLUS *FOO* 1)))))
                    STOP
                    " (int-char #o247)))
      (let ((*print-level* 3)
            (*print-length* 3)
            (il:*foo* 0))
         (declare (special il:*foo*))
         
         (and (progn (il:lispxunread '(il:f))
                     (il:tcompl "{Core}AR7120."))
              (progn (il:lispxunread '(il:f))
                     (il:bcompl "{Core}AR7120."))
              (progn (il:lispxunread '(il:f))
                     (il:recompile "{Core}AR7120."))
              (progn (il:lispxunread '(il:f))
                     (il:brecompile "{Core}AR7120."))
              (il:fake-compile-file "{Core}AR7120.")
              (eq il:*foo* 5)))))


(do-test "AR 7261: ByteCompiler should not remove terminal NIL arguments"
   (progn
      (setf (symbol-function 'one)
            '(lambda () (two 1 2 3 nil nil)))
      (setf (symbol-function 'two)				; First trick compiler into
            '(il:lambda (x) x))				; believing TWO is ARGTYPE 0.
      (progn (il:lispxunread '(il:st il:n))
             (il:compile 'one))
      (setf (symbol-function 'two)				; Now here's the real
            '(lambda (&rest args) args))			; definition of TWO.
      (equal (one) '(1 2 3 nil nil))))
