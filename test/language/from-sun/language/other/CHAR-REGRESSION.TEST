;;; Regression test for Character Printing (AR 7403) and IL:U-CASE/L-CASE (AR 7600)

(do-test char-print-escaped
   ;; When *print-escape* is true, print chars as #\x.
   ;; This works ok already in Lyric Jan 21.
   (let ((*readtable* (il:find-readtable "LISP")))
        (and (string= (prin1-to-string #\A) "#\\A")
             (string= (prin1-to-string #\a) "#\\a")
             (string-equal (prin1-to-string #\Space) "#\\Space")))
)

(do-test char-print-unescaped
   ;; When *print-escape* is false, print chars as themselves.
   ;; This fails in Lyric Jan 21.
   (let ((*readtable* (il:find-readtable "LISP")))
        (and (string= (princ-to-string #\A) "A")
             (string= (princ-to-string #\a) "a")
             (string= (princ-to-string #\Space) " ")
             (eql (char (princ-to-string #\GREEK-A) 0)
                  #\GREEK-A)))
)

(do-test char-print-mkstring
   ;; Interlisp integration: passing character as string arg should act
   ;; like string of single character.
   ;; This fails in Lyric Jan 21.
   (let ((*readtable* (il:find-readtable "LISP")))
        (and (string= (il:mkstring #\A) "A")
             (string= (il:mkstring #\a) "a")
             (string= (il:mkstring #\Space) " ")
             (= (il:nchars #\Space) 1)
             (string= (il:concat "Cat" #\s) "Cats")))
)

(do-test ucase-in-il
   ;; Assure that Interlisp fns really do intern in IL
   (and (eq (il:u-case :foo) 'il:foo)
        (eq (il:u-case :|foo|) 'il:foo)
        (eq (il:l-case :|foo|) 'il:|foo|)
        (eq (il:l-case :foo) 'il:|foo|)
        (eq (il:u-case 'car) 'car))
)


