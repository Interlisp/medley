(do-test-group ("LONGFNCALL tests" :before
	(progn (test-defun rest-args (&rest x) x)
		  (test-defun and-eq-frob (frob result)
				(and (eq frob 'frob) result))
	))

(do-test "Check APPLY OF FUNCTION with lots and lots of arguments"
    (and-eq-frob 'frob 
	(LET ((LONG (CL:DO* ((I 0 (CL:1+ I))
					 (L NIL (CONS I L)))
				    ((> I 510) L))))
		  (CL:EQUAL LONG (CL:APPLY (CL:FUNCTION REST-ARGS) LONG)))))

(do-test "Check APPLY OF SYMBOL with lots and lots of arguments"
    (and-eq-frob 'frob 
	(LET ((LONG (CL:DO* ((I 0 (CL:1+ I))
					 (L NIL (CONS I L)))
				    ((> I 510) L))))
		  (CL:EQUAL LONG (CL:APPLY 'REST-ARGS LONG)))))

(do-test "Check function call with lots of arguments"
    (and-eq-frob 'frob 
     (macrolet ((cra () (cons 'rest-args (do* ((i 0 (1+ i)) (l nil (cons i l))) ((> i 62) l)))))
       (equal (cra) (do* ((i 0 (1+ i)) (l nil (cons i l))) ((> i 62) l))))))
)
STOP
