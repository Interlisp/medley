;;MAKE-HOMOGENEOUS-N-BY-4
;; By Peter Reidy
;; Filed as {ERIS}<LISPCORE>TEST>DISPLAY>MATMULT>MAKE-HOMOGENEOUS-N-BY-4.TEST
;; Syntax: (MAKE-HOMOGENEOUS-N-BY-4 N &key INITIAL-ELEMENT)
;; Function description: returns an N-by-4 matrix of element-type single-float.  If INITIAL-ELEMENT is provieded, all items in the first 3 columns are initialized to its value.  The elements in the third column are always initialized to 1.0.
;; Arguments:
;;	N: an integer
;;	INITIAL-ELEMENT a single-float value
;;
(do-test-group make-homogeneous-n-by-4-group
	:before
	(il:load? '{eris}<lispcore>test>display>matmult>matmult-test.source)
;;
	(do-test n-by-4-simple-case
		(let*	((n (random 50))
			 (matrix (il:make-homogeneous-n-by-4 n))
			)
			(2dtest matrix n 4 #'(lambda nil (deftestn4 matrix)))
		)
	)
;;
	(do-test n-by-4-with-key
		(let*	((val (- (random most-positive-single-float)))
			 (n (random 50))
			 (matrix (il:make-homogeneous-n-by-4 n :initial-element val))
			) 
			(2dtest matrix n 4 #'(lambda nil (deftestn4 matrix val)))
		)  ; let*
	)
)
END


