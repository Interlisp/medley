(FILECREATED "21-Aug-85 16:52:08" {DSK}<LISPFILES>TESTER>SOURCES>TESTER.;35 96837  

      changes to:  (FNS TEST.EXECUTE-TESTS TEST.RELEASE-LOCK-COMMAND 
			TEST.RELEASE-LOCK-ON-SELECTED-TESTS-COMMAND 
			TEST.OBTAIN-LOCK-ON-SELECTED-TESTS-COMMAND TEST.OBTAIN-LOCK-COMMAND 
			TEST.CLEANUP-AFTER-TEST TEST.DOCOMMAND TEST.EVAL-BEFORE-TEST 
			TEST.EVALUATE-OUTCOME TEST.EVALUATE-TESTED-EXPR TEST.PERFORM-TEST 
			TEST.PRINT-ON-TRACE-FILE TEST.PRINT-TRACE-INFO 
			TEST.EXECUTE-SELECTED-TESTS-COMMAND TEST.DETACH-TESTS-MENU TEST.GET-TEST 
			TEST.GET-EXECUTION-SPECS TEST.GET-STRONG-LINK-CLOSURE 
			TEST.UPDATE-EXECUTION-SPEC TEST.SET-TESTS-BUFFER-SIZE 
			TEST.COMPUTE-AVERAGE-TEST-SIZE TEST.OPENFILE-OR-WAIT TEST.TEST-FAULT 
			TEST.TOPOLOGICAL-ORDER)
		   (VARS TESTERCOMS)

      previous date: "20-Aug-85 13:50:30" {DSK}<LISPFILES>TESTER>SOURCES>TESTER.;31)


(* Copyright (c) 1985 by Xerox Corporation. All rights reserved.)

(PRETTYCOMPRINT TESTERCOMS)

(RPAQQ TESTERCOMS ((FNS SHOULDNT TEST.ADD-CONCEPT-AND-SUBCONCEPTS-TO-CONCEPT-LIST 
			TEST.ADD-CONCEPT-COMMAND TEST.ADD-CONCEPT-SPACE-TO-CONCEPT-SPACES 
			TEST.ADD-ITEM-TO-BACKGROUND-MENU TEST.ADD-LINK-COMMAND 
			TEST.ADD-NEW-FIELD-TO-TEST-RECORD TEST.ADD-TEST TEST.ADD-TEST-COMMAND 
			TEST.ALL-COMBINATIONS TEST.ATTACH-TESTS-MENU 
			TEST.BROWSE-CONCEPT-SPACE-COMMAND TEST.BROWSE-SUBTREE-COMMAND 
			TEST.CANONICAL-CONCEPT-SPACE-FILE-NAME TEST.CHANGE-DEPTH-COMMAND 
			TEST.CLEANUP-AFTER-TEST TEST.COLLECT-ALL-TESTS 
			TEST.COLLECT-SUBCONCEPTS-CLOSURE TEST.COMPUTE-AVERAGE-TEST-SIZE 
			TEST.COPY-SUBTREE-COMMAND TEST.COPYBUTTONEVENTFN 
			TEST.CREATE-CONCEPT-SPACE-GRAPH TEST.CREATE-CONCEPT-WINDOW-MENU 
			TEST.CREATE-GRAPH-NODES TEST.CREATE-ICON-WINDOW TEST.CREATE-INTERRUPT-MENU 
			TEST.CREATE-NEW-CONCEPT-SPACE TEST.CREATE-NEW-TEST TEST.DELETE-CONCEPT 
			TEST.DELETE-CONCEPT-COMMAND TEST.DELETE-LINK-COMMAND TEST.DELETE-TEST-COMMAND 
			TEST.DETACH-TESTS-MENU TEST.DISPLAY-CONCEPT-GRAPH 
			TEST.DISPLAY-CONCEPT-SPACE-BROWSER TEST.DOCOMMAND TEST.EDIT-TEST 
			TEST.EDIT-TEST-COMMAND TEST.ERRORP TEST.EVAL-BEFORE-TEST 
			TEST.EVALUATE-OUTCOME TEST.EVALUATE-TESTED-EXPR 
			TEST.EXECUTE-SELECTED-TESTS-COMMAND TEST.EXECUTE-TESTS TEST.FIND-MENU-ITEM 
			TEST.GENERATE-COMPARE-FUNCTION TEST.GENERATE-INPUT 
			TEST.GET-AND-INCREASE-NEXT-TESTID TEST.GET-CONCEPT TEST.GET-CONCEPT-SPACE 
			TEST.GET-DEFAULT-FILED-VALUE TEST.GET-EXECUTION-SPECS TEST.GET-FIELD-VALUE 
			TEST.GET-LOCKING-USERS TEST.GET-NEXT-AVAILABLE-TESTID 
			TEST.GET-STRONG-LINK-CLOSURE TEST.GET-TEST TEST.GET-TEST-SELECTION 
			TEST.HARDCOPY-ALL-TESTS-COMMAND TEST.HARDCOPY-ONE-TEST 
			TEST.HARDCOPY-SELECTED-TESTS-COMMAND TEST.HARDCOPY-TESTS 
			TEST.HARDCOPY-TRACE-FILE TEST.INIT TEST.INSPECTW.ICONFN 
			TEST.INSPECTW.VALUECOMMANDFN TEST.KILL-PROCESS TEST.LEFT-BUTTON-SELECTION 
			TEST.LOAD-CONCEPT-SPACE TEST.LOAD-CONCEPT-SPACE-COMMAND TEST.LOCAL-EVAL-FORM 
			TEST.MAKE-BOUND TEST.MARK-AS-CHANGED TEST.OBTAIN-DATABASE-WRITE-LOCK 
			TEST.OBTAIN-LOCK-COMMAND TEST.OBTAIN-LOCK-ON-SELECTED-TESTS-COMMAND 
			TEST.OPENFILE-OR-WAIT TEST.PERFORM-TEST TEST.PERFORM-TIMED-EVALUATION 
			TEST.POP-UP-CONCEPT-SPACES-MENU TEST.POP-UP-TESTS-MENU 
			TEST.PRINT-ON-TRACE-FILE TEST.PRINT-TEST-OUTCOME TEST.PRINT-TRACE-INFO 
			TEST.PROMPT-WINDOW TEST.RELEASE-DATABASE-WRITE-LOCK TEST.RELEASE-LOCK-COMMAND 
			TEST.RELEASE-LOCK-ON-SELECTED-TESTS-COMMAND TEST.REMOVE-SUBCONCEPT-LINK 
			TEST.REMOVE-SUPERCONCEPT-LINK TEST.REPLACE-INSEPCTW-VALUECOMMANDFN 
			TEST.SEND-RELEASE-REQUESTS TEST.SET-DEFAULT-FIELD-VALUE 
			TEST.SET-TESTS-BUFFER-SIZE TEST.SETIFY TEST.SHADE-TEST 
			TEST.STORE-CHANGED-TESTS TEST.STORE-CONCEPT-SPACE 
			TEST.STORE-CONCEPT-SPACE-COMMAND TEST.STORE-TEST 
			TEST.SWITCH-DISPLAY-MODE-COMMAND TEST.TEST-FAULT 
			TEST.TEST-NUMBER-TO-FILE-NAME TEST.TEST-SELECTED-ON-TEST-MENU-FN 
			TEST.TEST-SINGLE-TIME TEST.TOPOLOGICAL-ORDER TEST.UNION-LIST 
			TEST.UNMARK-AS-CHANGED TEST.UPDATE-COMMAND TEST.UPDATE-EXECUTION-SPEC 
			TEST.WAIT-FOR-SELECTION)
	(VARS (TEST.EXECUTION-SPECS-EVENT (CREATE.EVENT "EXECUTION-SELECTION-ENDED-EVENT"))
	      (TEST.GLOBAL-CONCEPT-NODE-SELECTED-EVENT (CREATE.EVENT "CONCEPT-NODE-SELECTED-EVENT")))
	(BITMAPS TEST.CONCEPT-WINDOW-ICON TEST.CONCEPT-WINDOW-ICON-MASK TEST.INSPECTW.ICON 
		 TEST.INSPECTW.MASK)))
(DEFINEQ

(SHOULDNT
  [LAMBDA (MESS)                                             (* sm "10-Jul-85 13:59")
    (ERRORX (LIST 1000 MESS])

(TEST.ADD-CONCEPT-AND-SUBCONCEPTS-TO-CONCEPT-LIST
  [LAMBDA (NEW-CONCEPT-NAME SOURCE-CONCEPT-LIST TARGET-CONCEPT-LIST)
                                                             (* sm "19-Aug-85 14:49")
    (PROG (LAST-CDR NEW-CONCEPT)
          (if (NOT (FASSOC NEW-CONCEPT-NAME TARGET-CONCEPT-LIST))
	      then (SETQ NEW-CONCEPT (COPY (FASSOC NEW-CONCEPT-NAME SOURCE-CONCEPT-LIST)))
		   (SETQ LAST-CDR (LAST TARGET-CONCEPT-LIST))
		   (RPLACD LAST-CDR (LIST NEW-CONCEPT))
		   (RETURN (CONS NEW-CONCEPT-NAME (for C in (fetch SUBCONCEPTS of NEW-CONCEPT)
						     join (
TEST.ADD-CONCEPT-AND-SUBCONCEPTS-TO-CONCEPT-LIST C SOURCE-CONCEPT-LIST TARGET-CONCEPT-LIST])

(TEST.ADD-CONCEPT-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 09:46")
    (PROG (PARENT-NODE NEW-CONCEPT LAST-CDR)
          (SETQ PARENT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select parent node"))
          [SETQ NEW-CONCEPT (MKATOM (PROMPTFORWORD "Type name for new concept:" NIL NIL (
						     TEST.PROMPT-WINDOW WINDOW)
						   NIL
						   (QUOTE TTY]
          [SETQ LAST-CDR (LAST (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS]
          [RPLACD LAST-CDR (LIST (create CONCEPT
					 CONCEPTNAME _ NEW-CONCEPT
					 SUPERCONCEPTS _(LIST (fetch NODEID of PARENT-NODE]
          (pushnew [fetch SUBCONCEPTS of (TEST.GET-CONCEPT PARENT-NODE (WINDOWPROP WINDOW
										   (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
		   NEW-CONCEPT)
          (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
				      WINDOW])

(TEST.ADD-CONCEPT-SPACE-TO-CONCEPT-SPACES
  [LAMBDA (CONCEPTSPACE)                                     (* sm "16-Aug-85 17:13")
    (if (NOT (BOUNDP (QUOTE TEST.CONCEPT-SPACES)))
	then (SETQ TEST.CONCEPT-SPACES NIL))
    (SETQ TEST.CONCEPT-SPACES (REMOVE (TEST.GET-CONCEPT-SPACE (fetch CONCEPTSPACENAME of CONCEPTSPACE)
							      )
				      TEST.CONCEPT-SPACES))
    (SETQ TEST.CONCEPT-SPACES (CONS CONCEPTSPACE TEST.CONCEPT-SPACES))
    (fetch CONCEPTSPACENAME of CONCEPTSPACE])

(TEST.ADD-ITEM-TO-BACKGROUND-MENU
  [LAMBDA (LABEL COMMAND MESSAGE SUBITEMLIST)                (* edited: " 3-Jun-85 15:59")
    (SETQ BackgroundMenuCommands (REMOVE (SASSOC LABEL BackgroundMenuCommands)
					 BackgroundMenuCommands))
    (NCONC1 BackgroundMenuCommands (LIST LABEL COMMAND MESSAGE SUBITEMLIST))
    (SETQ BackgroundMenu NIL])

(TEST.ADD-LINK-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 09:46")
    (PROG (SUPERCONCEPT-NODE SUBCONCEPT-NODE CONCEPT-LIST)
          (SETQ CONCEPT-LIST (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
          (SETQ SUPERCONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select super concept"))
          (SETQ SUBCONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select sub concept"))
          (pushnew (fetch SUBCONCEPTS of (TEST.GET-CONCEPT SUPERCONCEPT-NODE CONCEPT-LIST))
		   (fetch NODEID of SUBCONCEPT-NODE))
          (pushnew (fetch SUPERCONCEPTS of (TEST.GET-CONCEPT SUBCONCEPT-NODE CONCEPT-LIST))
		   (fetch NODEID of SUPERCONCEPT-NODE))
          (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
				      WINDOW])

(TEST.ADD-NEW-FIELD-TO-TEST-RECORD
  [LAMBDA (NEW-FIELD DEFAULT-VALUE)                          (* sm "23-Jul-85 16:28")
    (PROG (OLD-DEC)
          (if (NOT (TEST.OBTAIN-DATABASE-WRITE-LOCK (QUOTE DATABASE)))
	      then (RINGBELLS)
		   (PROMPTPRINT "Can not obtain lock on the data base.")
		   (if (MENU (create MENU
				     ITEMS _(QUOTE (("Send release  requests" T)
						     ("Don't send requests" NIL)))
				     MENUFONT _ BIGFONT))
		       then (TEST.SEND-RELEASE-REQUESTS (QUOTE DATABASE)))
	    else [SETQ OLD-DEC (COPY (RECLOOK (QUOTE TEST]
		 (if (FMEMB NEW-FIELD (CADDR OLD-DEC))
		     then (PRINTOUT T T NEW-FIELD " IS ALREADY A FIELD IN TEST RECORD. ")
			  (RETURN NIL))
		 (NCONC1 (CADDR OLD-DEC)
			 NEW-FIELD)
		 (if (AND TEST.LIST-OF-MODIFIED-TESTS (MENU (create MENU
								    ITEMS _(QUOTE ((
"Store current changes first" T)
										    (
"Ignore current changes." NIL)))
								    MENUFONT _ BIGFONT)))
		     then (TEST.STORE-CHANGED-TESTS))
		 (EVAL OLD-DEC)
		 (SETQ TEST.LIST-OF-TESTS NIL)
		 (for TEST from 1 to (SUB1 (TEST.GET-NEXT-AVAILABLE-TESTID))
		    do (SETQ CURRENT-TEST (TEST.GET-TEST TEST))
		       (NCONC1 TEST DEFAULT-VALUE)
		       (TEST.STORE-TEST TEST)
		       (PRINTOUT T "..." TEST))
		 (SET (PACK* (QUOTE TEST.DEFAULT.)
			     NEW-FIELD)
		      DEFAULT-VALUE])

(TEST.ADD-TEST
  [LAMBDA (TEST-RECORD)                                      (* sm "22-Jul-85 14:52")
    (replace TESTID of TEST-RECORD with (TEST.GET-AND-INCREASE-NEXT-TESTID))
    (push TEST.LIST-OF-TESTS TEST-RECORD)
    (fetch TESTID of TEST-RECORD])

(TEST.ADD-TEST-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 15:38")
    (PROG (CONCEPT-NODE CONCEPT-LIST TEST-NUMBER TESTS)
          (SETQ CONCEPT-LIST (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
					  "Select the concept to which the test  should be added"))
          (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
		    T)
          [SETQ TESTS (MKLIST (CAR (TTYINEDIT NIL (TEST.PROMPT-WINDOW WINDOW)
					      NIL "Enter a test id or a list of test ids: "]
          (for TEST in TESTS when (FIXP TEST) do (pushnew (fetch TESTS of (TEST.GET-CONCEPT 
										     CONCEPT-NODE 
										     CONCEPT-LIST))
							  TEST))
          (if (WINDOWPROP WINDOW (QUOTE TEST.DISPLAY-TEST-MODE))
	      then (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH CONCEPT-LIST T)
					       WINDOW])

(TEST.ALL-COMBINATIONS
  [LAMBDA (SET-OF-SETS)                                      (* sm " 9-Jul-85 17:00")
    (if (NULL SET-OF-SETS)
	then (LIST NIL)
      else (for ELEMENT in (CAR SET-OF-SETS) join (for COMBINATION in (TEST.ALL-COMBINATIONS
									(CDR SET-OF-SETS))
						     collect (CONS ELEMENT COMBINATION])

(TEST.ATTACH-TESTS-MENU
  [LAMBDA (WINDOW TEST-LIST)                                 (* sm "24-Jul-85 13:40")
    (PROG (MENU-WINDOW)
          (SETQ MENU-WINDOW (ATTACHMENU (create MENU
						ITEMS _ TEST-LIST
						WHENSELECTEDFN _(QUOTE 
							       TEST.TEST-SELECTED-ON-TEST-MENU-FN)
						MENUROWS _[ADD1
						  (IQUOTIENT (FLENGTH TEST-LIST)
							     (MAX 1 (IQUOTIENT (CAR (WINDOWSIZE
										      WINDOW))
									       30]
						MENUFONT _ BIGFONT
						CENTERFLG _ T)
					WINDOW
					(if (GREATERP (IPLUS (fetch BOTTOM of (WINDOWREGION WINDOW))
							     (IQUOTIENT (CDR (WINDOWSIZE WINDOW))
									2))
						      (IQUOTIENT SCREENHEIGHT 2))
					    then (QUOTE BOTTOM)
					  else (QUOTE TOP))
					(QUOTE JUSTIFY)))
          (WINDOWPROP WINDOW (QUOTE TEST.TESTS-MENU-WINDOW)
		      MENU-WINDOW)
          (WINDOWPROP MENU-WINDOW (QUOTE TEST.DETACH)
		      T)
          (RETURN MENU-WINDOW])

(TEST.BROWSE-CONCEPT-SPACE-COMMAND
  [LAMBDA NIL                                                (* sm "19-Aug-85 10:00")
    (PROG (CONCEPT-SPACE-NAME CONCEPT-SPACE)
          (if (NULL TEST.CONCEPT-SPACES)
	      then (RETURN NIL))
          (if (GREATERP (LENGTH TEST.CONCEPT-SPACES)
			1)
	      then (SETQ CONCEPT-SPACE-NAME (TEST.POP-UP-CONCEPT-SPACES-MENU))
		   (if CONCEPT-SPACE-NAME
		       then (SETQ CONCEPT-SPACE (TEST.GET-CONCEPT-SPACE CONCEPT-SPACE-NAME)))
	    else (SETQ CONCEPT-SPACE (CAR TEST.CONCEPT-SPACES)))
          (TEST.DISPLAY-CONCEPT-SPACE-BROWSER CONCEPT-SPACE])

(TEST.BROWSE-SUBTREE-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "20-Aug-85 13:35")
    (PROG (SUBSPACE ROOT-NAME CONCEPT-NODE)
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select concept to browse"))
          (SETQ ROOT-NAME (fetch NODEID of CONCEPT-NODE))
          [SETQ SUBSPACE (create CONCEPTSPACE
				 CONCEPTSPACENAME _ ROOT-NAME
				 ROOTCONCEPT _ ROOT-NAME
				 CONCEPTLIST _(TEST.SETIFY (TEST.COLLECT-SUBCONCEPTS-CLOSURE
							     ROOT-NAME
							     (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
          (TEST.DISPLAY-CONCEPT-SPACE-BROWSER SUBSPACE])

(TEST.CANONICAL-CONCEPT-SPACE-FILE-NAME
  [LAMBDA (CONCEPT-SPACE-NAME)                               (* sm "19-Aug-85 12:11")
    (PACK* CONCEPT-SPACE-NAME (QUOTE .CONCEPTSPACE])

(TEST.CHANGE-DEPTH-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "20-Aug-85 13:08")
    (PROG (NEW-DEPTH)
          (SETQ NEW-DEPTH
	    (MENU (create MENU
			  ITEMS _(QUOTE ((Quit NIL)
					  Inf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))
			  MENUROWS _ 5
			  MENUFONT _ BIGFONT
			  CENTERFLG _ T)))
          (if (NULL NEW-DEPTH)
	      then (RETURN NIL)
	    else (WINDOWPROP WINDOW (QUOTE TEST.DEPTH)
			     (if (FIXP NEW-DEPTH)
				 then NEW-DEPTH
			       else NIL))
		 (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
					     WINDOW])

(TEST.CLEANUP-AFTER-TEST
  [LAMBDA (TEST RESULT ACTUAL-ARGUMENTS LOCATION)            (* sm "21-Aug-85 14:00")
    (PROG (FORMTOEVAL)
          (SETQ FORMTOEVAL (TEST.GET-FIELD-VALUE (QUOTE EVALAFTER)
						 TEST))
          (if FORMTOEVAL
	      then [if (EQ (CAR FORMTOEVAL)
			   (QUOTE LAMBDA))
		       then (SETQ FORMTOEVAL (LIST (QUOTE APPLY)
						   (KWOTE FORMTOEVAL)
						   (KWOTE (LIST RESULT ACTUAL-ARGUMENTS]
		   (if (EQ LOCATION (QUOTE Remote))
		       then (TEST.REMOTE-EVAL-FORM FORMTOEVAL)
		     else (TEST.LOCAL-EVAL-FORM FORMTOEVAL])

(TEST.COLLECT-ALL-TESTS
  [LAMBDA (CONCEPT-NAME CONCEPT-LIST)                        (* sm " 2-Jul-85 16:50")
    (PROG (CONCEPT)
          (RETURN (UNION (fetch TESTS of (SETQ CONCEPT (FASSOC CONCEPT-NAME CONCEPT-LIST)))
			 (TEST.UNION-LIST (for SUBCONCEPT in (fetch SUBCONCEPTS of CONCEPT)
					     collect (TEST.COLLECT-ALL-TESTS SUBCONCEPT CONCEPT-LIST])

(TEST.COLLECT-SUBCONCEPTS-CLOSURE
  [LAMBDA (CONCEPT-NAME CONCEPT-LIST)                        (* sm "20-Aug-85 11:12")
    (PROG (CONCEPT)
          (SETQ CONCEPT (FASSOC CONCEPT-NAME CONCEPT-LIST))
          (SETQ SUBTREE (for SUBCONCEPT in (fetch SUBCONCEPTS of CONCEPT) join (
TEST.COLLECT-SUBCONCEPTS-CLOSURE SUBCONCEPT CONCEPT-LIST)))
          (if (FASSOC CONCEPT-NAME SUBTREE)
	      then (RETURN SUBTREE)
	    else (RETURN (CONS CONCEPT SUBTREE])

(TEST.COMPUTE-AVERAGE-TEST-SIZE
  [LAMBDA NIL                                                (* sm "20-Aug-85 16:02")
    (PROG (LENGTH-SUM NUMBER-OF-FILES)
          (SETQ LENGTH-SUM (DIRECTORY (PACK* TEST.TEST-DATA-BASE-DIRECTORY (QUOTE TEST)
					     (QUOTE *.;))
				      (QUOTE COUNTSIZE)))
          [SETQ NUMBER-OF-FILES (FLENGTH (DIRECTORY (PACK* TEST.TEST-DATA-BASE-DIRECTORY
							   (QUOTE TEST)
							   (QUOTE *.;]
          (SETQ TEST.AVERAGE-TEST-SIZE (FQUOTIENT LENGTH-SUM NUMBER-OF-FILES))
          (RETURN TEST.AVERAGE-TEST-SIZE])

(TEST.COPY-SUBTREE-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 15:18")
    (PROG (PARENT-NODE NEW-CONCEPT-NAME NEW-CONCEPTS TARGET-CONCEPT-LIST SOURCE-CONCEPT-LIST 
		       SOURCE-ROOT-NODE)
          (SETQ PARENT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select target parent node "))
          (SETQ SOURCE-ROOT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select root of source subtreee." T))
          (SETQ SOURCE-WINDOW TEST.WINDOW-OF-LAST-SELECTION)
          (SETQ SOURCE-CONCEPT-LIST (WINDOWPROP SOURCE-WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
          (SETQ TARGET-CONCEPT-LIST (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
          (SETQ NEW-CONCEPT-NAME (fetch NODEID of SOURCE-ROOT-NODE))
          (pushnew (fetch SUBCONCEPTS of (TEST.GET-CONCEPT PARENT-NODE TARGET-CONCEPT-LIST))
		   NEW-CONCEPT-NAME)
          (SETQ NEW-CONCEPTS (TEST.ADD-CONCEPT-AND-SUBCONCEPTS-TO-CONCEPT-LIST NEW-CONCEPT-NAME 
									      SOURCE-CONCEPT-LIST 
									      TARGET-CONCEPT-LIST))
          (pushnew (fetch SUPERCONCEPTS of (FASSOC NEW-CONCEPT-NAME TARGET-CONCEPT-LIST))
		   (fetch NODEID of PARENT-NODE))
          (for C in NEW-CONCEPTS bind SUPERCONCEPTS
	     do (SETQ SUPERCONCEPTS (fetch SUPERCONCEPTS of (FASSOC C TARGET-CONCEPT-LIST)))
		(for S in SUPERCONCEPTS when (NOT (FASSOC S TARGET-CONCEPT-LIST))
		   do (DREMOVE S SUPERCONCEPTS)))
          (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
				      WINDOW])

(TEST.COPYBUTTONEVENTFN
  [LAMBDA (WINDOW)                                           (* sm "19-Jul-85 16:54")
    (PROG (CURSOR-POS SELECTED-NODE NODE-REGION RELEASED)
          (SETQ CURSOR-POS (CURSORPOSITION NIL WINDOW))
          [SETQ RELEASED (MOUSESTATE (AND (NOT LEFT)
					  (NOT MIDDLE)
					  (NOT RIGHT]
          (if (SETQ SELECTED-NODE (for NODE in (fetch GRAPHNODES of (WINDOWPROP WINDOW (QUOTE GRAPH)))
				     thereis (INSIDEP (SETQ NODE-REGION (NODEREGION NODE))
						      CURSOR-POS)))
	      then (FLIPNODE SELECTED-NODE WINDOW)
	    else (GRAPHERCOPYBUTTONEVENTFN WINDOW))
          (if (AND RELEASED SELECTED-NODE)
	      then (BKSYSBUF (TEST.COLLECT-ALL-TESTS (fetch NODEID of SELECTED-NODE)
						     (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS])

(TEST.CREATE-CONCEPT-SPACE-GRAPH
  [LAMBDA (CONCEPT-LIST INCLUDE-TESTS ROOT-CONCEPT DEPTH)    (* sm "20-Aug-85 12:21")
    (PROG (GRAPH NODE-LIST TESTS-SET TEST.COLLECTED-GRAPH-NODES)
          [if (WINDOWP CONCEPT-LIST)
	      then (SETQ INCLUDE-TESTS (WINDOWPROP CONCEPT-LIST (QUOTE TEST.DISPLAY-TEST-MODE)))
		   (SETQ CONCEPT-LIST (WINDOWPROP CONCEPT-LIST (QUOTE TEST.LIST-OF-CONCEPTS)))
		   (SETQ ROOT-CONCEPT (WINDOWPROP WINDOW (QUOTE TEST.ROOT-CONCEPT)))
		   (SETQ DEPTH (WINDOWPROP WINDOW (QUOTE TEST.DEPTH]
          [if INCLUDE-TESTS
	      then [SETQ TESTS-SET (for CONCEPT in CONCEPT-LIST join (COPY (fetch TESTS of CONCEPT]
		   (SETQ TESTS-SET (TEST.SETIFY TESTS-SET))
		   (SETQ NODE-LIST (for TEST in TESTS-SET
				      collect (create GRAPHNODE
						      NODELABEL _ TEST
						      NODEID _ TEST]
          [SETQ NODE-LIST (APPEND NODE-LIST (if DEPTH
						then (TEST.CREATE-GRAPH-NODES ROOT-CONCEPT 
									      CONCEPT-LIST 
									      INCLUDE-TESTS DEPTH)
						     TEST.COLLECTED-GRAPH-NODES
					      else (for CONCEPT in CONCEPT-LIST
						      collect (create GRAPHNODE
								      NODELABEL _(fetch CONCEPTNAME
										    of CONCEPT)
								      NODEID _(fetch CONCEPTNAME
										 of CONCEPT)
								      TONODES _(APPEND
									(fetch SUBCONCEPTS
									   of CONCEPT)
									(if INCLUDE-TESTS
									    then (fetch TESTS
										    of CONCEPT]
          (SETQ GRAPH (LAYOUTGRAPH NODE-LIST (LIST ROOT-CONCEPT)
				   (QUOTE LATTICE)))
          (RETURN GRAPH])

(TEST.CREATE-CONCEPT-WINDOW-MENU
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 14:14")
    (create MENU
	    ITEMS _ TEST.CONCEPT-WINDOW-MENU-ITEMS
	    WHENSELECTEDFN _(QUOTE TEST.DOCOMMAND])

(TEST.CREATE-GRAPH-NODES
  [LAMBDA (ROOT-NAME CONCEPT-LIST INCLUDE-TESTS DEPTH)       (* sm "20-Aug-85 13:48")
    (PROG (ROOT-CONCEPT NEW-NODE)
          (if (NOT (FASSOC ROOT-NAME TEST.COLLECTED-GRAPH-NODES))
	      then (SETQ ROOT-CONCEPT (FASSOC ROOT-NAME CONCEPT-LIST))
		   (if (EQP DEPTH 1)
		       then (SETQ NEW-NODE (create GRAPHNODE
						   NODELABEL _ ROOT-NAME
						   NODEID _ ROOT-NAME
						   TONODES _(if INCLUDE-TESTS
								then (TEST.COLLECT-ALL-TESTS 
											ROOT-NAME 
										     CONCEPT-LIST))
						   NODEBORDER _(if (fetch SUBCONCEPTS of ROOT-CONCEPT)
								   then 1)))
			    (SETQ TEST.COLLECTED-GRAPH-NODES (CONS NEW-NODE 
								   TEST.COLLECTED-GRAPH-NODES))
		     else [SETQ NEW-NODE (create GRAPHNODE
						 NODELABEL _ ROOT-NAME
						 NODEID _ ROOT-NAME
						 TONODES _(APPEND (fetch SUBCONCEPTS of ROOT-CONCEPT)
								  (if INCLUDE-TESTS
								      then (fetch TESTS of 
										     ROOT-CONCEPT]
			  (SETQ TEST.COLLECTED-GRAPH-NODES (CONS NEW-NODE TEST.COLLECTED-GRAPH-NODES))
			  (for S in (fetch SUBCONCEPTS of ROOT-CONCEPT) do (TEST.CREATE-GRAPH-NODES
									     S CONCEPT-LIST 
									     INCLUDE-TESTS
									     (SUB1 DEPTH])

(TEST.CREATE-ICON-WINDOW
  [LAMBDA (WINDOW ICON)                                      (* sm "19-Aug-85 10:13")
    [COND
      ((NULL ICON)
	(SETQ ICON (TITLEDICONW (create TITLEDICON
					ICON _ TEST.CONCEPT-WINDOW-ICON
					MASK _ TEST.CONCEPT-WINDOW-ICON-MASK
					TITLEREG _(CREATEREGION 4 6 65 14))
				(fetch (CONCEPTSPACE CONCEPTSPACENAME) of (WINDOWPROP WINDOW
										      (QUOTE 
									       TEST.CONCEPT-SPACE)))
				(FONTCREATE (QUOTE GACHA)
					    8]
    ICON])

(TEST.CREATE-INTERRUPT-MENU
  [LAMBDA (WINDOW)                                           (* sm "28-Jun-85 16:24")
    (create MENU
	    ITEMS _[SUBST WINDOW (QUOTE WINDOW)
			  (QUOTE ((" I  n  t  e  r  r  u  p  t" (TEST.KILL-PROCESS WINDOW)
								"Will kill the current  process. "]
	    CENTERFLG _ T])

(TEST.CREATE-NEW-CONCEPT-SPACE
  [LAMBDA (CONCEPT-SPACE-NAME ROOT-CONCEPT-NAME)             (* sm "19-Aug-85 13:10")
    (create CONCEPTSPACE
	    CONCEPTSPACENAME _ CONCEPT-SPACE-NAME
	    ROOTCONCEPT _ ROOT-CONCEPT-NAME
	    CONCEPTLIST _(LIST (create CONCEPT
				       CONCEPTNAME _ ROOT-CONCEPT-NAME])

(TEST.CREATE-NEW-TEST
  [LAMBDA NIL                                                (* sm " 3-Jul-85 11:59")
    (PROG (NEW-TEST-RECORD)
          (SETQ NEW-TEST-RECORD (create TEST))
          [for F in (RECORDFIELDNAMES (QUOTE TEST)) do (RECORDACCESS F NEW-TEST-RECORD NIL
								     (QUOTE REPLACE)
								     (COPY (
TEST.GET-DEFAULT-FILED-VALUE F]
          (TEST.ADD-TEST NEW-TEST-RECORD)
          (TEST.EDIT-TEST NEW-TEST-RECORD])

(TEST.DELETE-CONCEPT
  [LAMBDA (CONCEPT-NAME LIST-OF-CONCEPTS)                    (* sm " 2-Jul-85 11:04")
    (PROG (CONCEPT)
          (SETQ CONCEPT (FASSOC CONCEPT-NAME LIST-OF-CONCEPTS))
          (if CONCEPT
	      then (for SUBCONCEPT-NAME in (fetch SUBCONCEPTS of CONCEPT) bind SUBCONCEPT
		      do (SETQ SUBCONCEPT (FASSOC SUBCONCEPT-NAME LIST-OF-CONCEPTS))
			 (if SUBCONCEPT
			     then (TEST.REMOVE-SUPERCONCEPT-LINK SUBCONCEPT CONCEPT-NAME 
								 LIST-OF-CONCEPTS)))
		   (for SUPERCONCEPT-NAME in (fetch SUPERCONCEPTS of CONCEPT) bind SUPERCONCEPT
		      do (SETQ SUPERCONCEPT (FASSOC SUPERCONCEPT-NAME LIST-OF-CONCEPTS))
			 (if SUPERCONCEPT
			     then (TEST.REMOVE-SUBCONCEPT-LINK SUPERCONCEPT CONCEPT-NAME)))
		   (DREMOVE CONCEPT LIST-OF-CONCEPTS])

(TEST.DELETE-CONCEPT-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 09:46")
    (PROG (DELETED-CONCEPT-NODE DELETED-CONCEPT)
          (SETQ DELETED-CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select concept to be deleted .")
	    )
          (TEST.DELETE-CONCEPT (fetch NODEID of DELETED-CONCEPT-NODE)
			       (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
          (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
				      WINDOW])

(TEST.DELETE-LINK-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 09:46")
    (PROG (SUPERCONCEPT-NODE SUBCONCEPT-NODE CONCEPT-LIST SUPERCONCEPT SUPERCONCEPT)
          (SETQ CONCEPT-LIST (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
          (SETQ SUPERCONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select super concept"))
          (SETQ SUBCONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW "Select sub concept"))
          (SETQ SUPERCONCEPT (TEST.GET-CONCEPT SUPERCONCEPT-NODE CONCEPT-LIST))
          (SETQ SUBCONCEPT (TEST.GET-CONCEPT SUBCONCEPT-NODE CONCEPT-LIST))
          (TEST.REMOVE-SUBCONCEPT-LINK SUPERCONCEPT (fetch CONCEPTNAME of SUBCONCEPT))
          (TEST.REMOVE-SUPERCONCEPT-LINK SUBCONCEPT (fetch CONCEPTNAME of SUPERCONCEPT)
					 CONCEPT-LIST)
          (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
				      WINDOW])

(TEST.DELETE-TEST-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 16:05")
    (PROG (CONCEPT-NODE CONCEPT-LIST CURRENT-TESTS TEST-LIST TEST-SELECTED)
          (SETQ CONCEPT-LIST (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
				      "Select the concept from which the test  should be deleted"))
          (SETQ TEST-LIST (TEST.GET-TEST-SELECTION WINDOW CONCEPT-NODE T))
          (SETQ CURRENT-TESTS (fetch TESTS of (TEST.GET-CONCEPT CONCEPT-NODE CONCEPT-LIST)))
          (SETQ CURRENT-TESTS (LDIFFERENCE CURRENT-TESTS TEST-LIST))
          (replace TESTS of (TEST.GET-CONCEPT CONCEPT-NODE CONCEPT-LIST) with CURRENT-TESTS)
          (if (WINDOWPROP WINDOW (QUOTE TEST.DISPLAY-TEST-MODE))
	      then (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH CONCEPT-LIST T)
					       WINDOW])

(TEST.DETACH-TESTS-MENU
  [LAMBDA (WINDOW)                                           (* sm "21-Aug-85 13:09")
    (if (WINDOWPROP WINDOW (QUOTE TEST.TESTS-MENU-WINDOW))
	then (DETACHWINDOW (WINDOWPROP WINDOW (QUOTE TEST.TESTS-MENU-WINDOW)))
	     (CLOSEW (WINDOWPROP WINDOW (QUOTE TEST.TESTS-MENU-WINDOW)))
	     (WINDOWPROP WINDOW (QUOTE TEST.TESTS-MENU-WINDOW)
			 NIL])

(TEST.DISPLAY-CONCEPT-GRAPH
  [LAMBDA (GRAPH WINDOW)                                     (* sm "19-Jul-85 16:58")
    (SHOWGRAPH GRAPH WINDOW (QUOTE TEST.LEFT-BUTTON-SELECTION))
    (WINDOWPROP WINDOW (QUOTE COPYBUTTONEVENTFN)
		(QUOTE TEST.COPYBUTTONEVENTFN])

(TEST.DISPLAY-CONCEPT-SPACE-BROWSER
  [LAMBDA (CONCEPT-SPACE REGION/POSITION DEPTH INCLUDE-TESTS)
                                                             (* sm "20-Aug-85 13:39")
    (PROG (GRAPH WINDOW GRAPH-REGION CONCEPT-LIST ROOT-CONCEPT GRAPH-WINDOW-WIDTH GRAPH-WINDOW-HEIGHT)
          (if (NULL CONCEPT-SPACE)
	      then (SETQ CONCEPT-SPACE (TEST.GET-CONCEPT-SPACE TEST.DEFAULT-CONCEPT-SPACE-NAME)))
          (SETQ GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH (fetch CONCEPTLIST of CONCEPT-SPACE)
						       INCLUDE-TESTS
						       (fetch ROOTCONCEPT of CONCEPT-SPACE)
						       (OR DEPTH TEST.DEFAULT-DEPTH)))
          [SETQ GRAPH-WINDOW-WIDTH (MAX 250 (MIN (IDIFFERENCE SCREENWIDTH 200)
						 (fetch WIDTH of (SETQ GRAPH-REGION (GRAPHREGION
								     GRAPH]
          [SETQ GRAPH-WINDOW-HEIGHT (MAX 120 (MIN (IDIFFERENCE SCREENHEIGHT 200)
						  (IPLUS 15 (fetch HEIGHT of GRAPH-REGION]
          [SETQ REGION (if (REGIONP REGION/POSITION)
			   then REGION/POSITION
			 elseif (POSITIONP REGION/POSITION)
			   then (CREATEREGION (fetch XCOORD of REGION/POSITION)
					      (fetch YCOORD of REGION/POSITION)
					      GRAPH-WINDOW-WIDTH GRAPH-WINDOW-HEIGHT)
			 else (GETBOXREGION GRAPH-WINDOW-WIDTH GRAPH-WINDOW-HEIGHT NIL NIL NIL
					    (CONCAT "Specify position for " (fetch CONCEPTSPACENAME
									       of CONCEPT-SPACE)
						    " browser."]
          (SETQ WINDOW (CREATEW REGION (CONCAT (fetch CONCEPTSPACENAME of CONCEPT-SPACE)
					       " Concept Space")))
          (WINDOWPROP WINDOW (QUOTE TEST.ROOT-CONCEPT)
		      (fetch ROOTCONCEPT of CONCEPT-SPACE))
          (WINDOWPROP WINDOW (QUOTE TEST.CONCEPT-SPACE)
		      CONCEPT-SPACE)
          (TEST.DISPLAY-CONCEPT-GRAPH GRAPH WINDOW)
          (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)
		      (fetch CONCEPTLIST of CONCEPT-SPACE))
          (WINDOWPROP WINDOW (QUOTE TEST.PROCESS)
		      NIL)
          (WINDOWPROP WINDOW (QUOTE TEST.TEST-SELECTION-ENDED-EVENT)
		      (CREATE.EVENT))
          (WINDOWPROP WINDOW (QUOTE TEST.NODE-SELECTED-EVENT)
		      (CREATE.EVENT "TEST:NODE-SELECTED-EVENT"))
          (WINDOWPROP WINDOW (QUOTE ICONFN)
		      (QUOTE TEST.CREATE-ICON-WINDOW))
          (GETPROMPTWINDOW WINDOW 3)
          (ATTACHMENU (TEST.CREATE-CONCEPT-WINDOW-MENU WINDOW)
		      WINDOW
		      (QUOTE RIGHT)
		      (QUOTE JUSTIFY))
          (ATTACHMENU (TEST.CREATE-INTERRUPT-MENU WINDOW)
		      WINDOW
		      (QUOTE BOTTOM)
		      (QUOTE JUSTIFY))
          (RETURN WINDOW])

(TEST.DOCOMMAND
  [LAMBDA (ITEM MENU KEY)                                    (* sm "21-Aug-85 13:10")
    (PROG (WINDOW)
          (SETQ WINDOW (MAINWINDOW (WFROMMENU MENU)))
          (SETQ PARENT-ITEM (TEST.FIND-MENU-ITEM ITEM (fetch ITEMS of MENU)))
          (WINDOWPROP WINDOW (QUOTE TEST.PROCESS)
		      (ADD.PROCESS [SUBPAIR (QUOTE (WINDOW MENU ITEM PARENT-ITEM))
					    (LIST WINDOW MENU ITEM PARENT-ITEM)
					    (QUOTE (PROGN (TTYDISPLAYSTREAM (TEST.PROMPT-WINDOW
									      WINDOW))
							  (SHADEITEM (QUOTE PARENT-ITEM)
								     MENU GRAYSHADE)
							  (WINDOWPROP WINDOW (QUOTE 
									   TEST.UNSHADE-IF-SHADED)
								      (QUOTE (SHADEITEM (QUOTE 
										      PARENT-ITEM)
											MENU 
										       WHITESHADE)))
							  (CLEARW (TEST.PROMPT-WINDOW WINDOW))
							  (APPLY* (CADR (QUOTE ITEM))
								  WINDOW)
							  (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
								    T
								    (CAR (QUOTE PARENT-ITEM))
								    " Completed. ")
							  (WINDOWPROP WINDOW (QUOTE 
									   TEST.UNSHADE-IF-SHADED)
								      NIL)
							  (TEST.DETACH-TESTS-MENU WINDOW)
							  (SHADEITEM (QUOTE PARENT-ITEM)
								     MENU WHITESHADE)
							  (WINDOWPROP WINDOW (QUOTE TEST.PROCESS)
								      NIL]
				   (QUOTE WINDOW)
				   (TEST.PROMPT-WINDOW WINDOW)
				   (QUOTE NAME)
				   (CAR ITEM])

(TEST.EDIT-TEST
  [LAMBDA (TEST LOCK/NOLOCK)                                 (* sm "26-Jul-85 15:00")
    (PROG (INSPECTW)
          (if (FIXP TEST)
	      then (SETQ TEST (TEST.GET-TEST TEST)))
          (TEST.MARK-AS-CHANGED (fetch TESTID of TEST))
          (if (AND TEST.OBTAIN-LOCK-WHEN-EDIT (NEQ LOCK/NOLOCK (QUOTE NOLOCK)))
	      then (if [NOT (TEST.OBTAIN-DATABASE-WRITE-LOCK (LIST (fetch TESTID of TEST]
		       then (PRINTOUT T "Can not obtain lock on test number " (fetch TESTID
										 of TEST))
			    (RETURN NIL)))
          [SETQ INSPECTW (INSPECT TEST (QUOTE TEST)
				  (GETBOXREGION 700 (ITIMES 15 (LENGTH (RECORDFIELDNAMES
									 (QUOTE TEST]
          (WINDOWPROP INSPECTW (QUOTE TITLE)
		      (CONCAT "TEST " (fetch TESTID of TEST)))
          (WINDOWPROP INSPECTW (QUOTE ICONFN)
		      (QUOTE TEST.INSPECTW.ICONFN))
          [WINDOWPROP INSPECTW (QUOTE STOREFN)
		      (LIST (QUOTE LAMBDA)
			    (QUOTE (I F N))
			    (LIST (QUOTE TEST.MARK-AS-CHANGED)
				  (fetch TESTID of TEST))
			    (LIST (QUOTE APPLY)
				  (KWOTE (WINDOWPROP INSPECTW (QUOTE STOREFN)))
				  (QUOTE (LIST I F N]
          (TEST.REPLACE-INSEPCTW-VALUECOMMANDFN INSPECTW)
          (RETURN (fetch TESTID of TEST])

(TEST.EDIT-TEST-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 15:00")
    (PROG (TEST-SELECTED TEST-NUMBER CONCEPT-NODE)
          (if (WINDOWPROP WINDOW (QUOTE TEST.DISPLAY-TEST-MODE))
	      then (SETQ TEST-SELECTED (TEST.WAIT-FOR-SELECTION WINDOW 
							       "Select the test you want to edit"))
		   (SETQ TEST-NUMBER (fetch NODEID of TEST-SELECTED))
	    else (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
				     "Select a concept which contains the test you want to edit."))
		 (SETQ TEST-NUMBER (TEST.POP-UP-TESTS-MENU WINDOW CONCEPT-NODE 
							 "Select the test that you want to edit.")))
          (if (FIXP TEST-NUMBER)
	      then (TEST.EDIT-TEST (TEST.GET-TEST TEST-NUMBER])

(TEST.ERRORP
  [LAMBDA (EXPR)                                             (* sm "27-Jun-85 10:25")
    (AND EXPR (LISTP EXPR)
	 (EQ (CAR EXPR)
	     (QUOTE ERROR!])

(TEST.EVAL-BEFORE-TEST
  [LAMBDA (TEST LOCATION)                                    (* sm "21-Aug-85 13:50")
    (if (EQ LOCATION (QUOTE Remote))
	then (TEST.REMOTE-EVAL-FORM (TEST.GET-FIELD-VALUE (QUOTE EVALBEFORE)
							  TEST))
      else (TEST.LOCAL-EVAL-FORM (TEST.GET-FIELD-VALUE (QUOTE EVALBEFORE)
						       TEST])

(TEST.EVALUATE-OUTCOME
  [LAMBDA (TEST RESULT ACTUAL-ARGUMENTS LOCATION)            (* sm "21-Aug-85 13:55")
    (PROG (FORMTOEVAL)
          [SETQ FORMTOEVAL (LIST (QUOTE APPLY)
				 (KWOTE (TEST.GET-FIELD-VALUE (QUOTE SUCCESSPREDICATE)
							      TEST))
				 (KWOTE (LIST RESULT ACTUAL-ARGUMENTS]
          (RETURN (if (EQ LOCATION (QUOTE Remote))
		      then (TEST.REMOTE-EVAL-FORM FORMTOEVAL)
		    else (TEST.LOCAL-EVAL-FORM FORMTOEVAL])

(TEST.EVALUATE-TESTED-EXPR
  [LAMBDA (TEST ACTUAL-ARGUMENTS LOCATION)                   (* sm "21-Aug-85 13:53")
    (PROG (RESULT EXPRESSION-TO-EVALUATE TIMEOUT.ms)
          (SETQ EXPRESSION-TO-EVALUATE (TEST.GET-FIELD-VALUE (QUOTE EVALEXPR)
							     TEST))
          [if [OR (GETD EXPRESSION-TO-EVALUATE)
		  (AND (LISTP EXPRESSION-TO-EVALUATE)
		       (EQ (CAR EXPRESSION-TO-EVALUATE)
			   (QUOTE LAMBDA]
	      then (SETQ EXPRESSION-TO-EVALUATE (LIST (QUOTE APPLY)
						      (KWOTE EXPRESSION-TO-EVALUATE)
						      (KWOTE (COPY ACTUAL-ARGUMENTS]
          (SETQ TIMEOUT.ms (TEST.GET-FIELD-VALUE (QUOTE TIMEOUT)
						 TEST))
          (if (AND TIMEOUT.ms (EQ (CAR TIMEOUT.ms)
				  (QUOTE LAMBDA)))
	      then (SETQ TIMEOUT.ms (APPLY TIMEOUT.ms ACTUAL-ARGUMENTS)))
          (RETURN (if (EQ LOCATION (QUOTE Remote))
		      then (TEST.REMOTE-EVAL-FORM EXPRESSION-TO-EVALUATE TIMEOUT.ms)
		    else (TEST.PERFORM-TIMED-EVALUATION EXPRESSION-TO-EVALUATE TIMEOUT.ms])

(TEST.EXECUTE-SELECTED-TESTS-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "21-Aug-85 14:11")
    (TEST.EXECUTE-TESTS WINDOW T])

(TEST.EXECUTE-TESTS
  [LAMBDA (WINDOW SELLECTED-TESTS?)                          (* sm "21-Aug-85 14:45")
    (PROG (CONCEPT-NODE TEST-LIST TRACE-FILE HARDCOPY-FILE SPECS HARDCOPY-MODE PRETEST-MODE 
			TRACE-MODE LOCATION)
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
						 "Select concept whoes tests should be executed."))
          (if (NOT SELLECTED-TESTS?)
	      then [SETQ TEST-LIST (TEST.COLLECT-ALL-TESTS (fetch NODEID of CONCEPT-NODE)
							   (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
		   (TEST.ATTACH-TESTS-MENU WINDOW TEST-LIST)
		   (for TEST in TEST-LIST do (TEST.SHADE-TEST TEST WINDOW BLACKSHADE))
	    else (SETQ TEST-LIST (TEST.GET-TEST-SELECTION WINDOW CONCEPT-NODE)))
          (SETQ SPECS (TEST.GET-EXECUTION-SPECS))
          (SETQ HARDCOPY-MODE (CAR SPECS))
          (SETQ PRETEST-MODE (CADR SPECS))
          (SETQ TRACE-MODE (CADDR SPECS))
          (SETQ LOCATION (CADDDR SPECS))
          (SETQ TRACE-FILE (OPENFILE TEST.TRACE-FILE-NAME (QUOTE OUTPUT)
				     (QUOTE NEW)))
          (CLOSEF TRACE-FILE)
          (if (EQ PRETEST-MODE (QUOTE Strong-Links))
	      then (SETQ TEST-LIST (TEST.GET-STRONG-LINK-CLOSURE TEST-LIST))
		   (TEST.DETACH-TESTS-MENU WINDOW)
		   (TEST.ATTACH-TESTS-MENU WINDOW TEST-LIST)
		   (for TEST in TEST-LIST do (TEST.SHADE-TEST TEST WINDOW BLACKSHADE)))
          (if (NEQ PRETEST-MODE (QUOTE No-Pretests))
	      then (SETQ TEST-LIST (TEST.TOPOLOGICAL-ORDER TEST-LIST)))
          (for TEST in TEST-LIST
	     do (TEST.SHADE-TEST TEST WINDOW GRAYSHADE)
		(PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
			  T "Performing test number : " TEST T)
		(TEST.PERFORM-TEST (TEST.GET-TEST TEST)
				   NIL LOCATION TRACE-FILE TRACE-MODE))
          (CLOSEF? TRACE-FILE)
          (if (NEQ HARDCOPY-MODE (QUOTE No-Hardcopy))
	      then (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
			     T " Hardcopying outcome of tests.")
		   [SETQ HARDCOPY-FILE (TEST.HARDCOPY-TRACE-FILE TRACE-FILE NIL (EQ HARDCOPY-MODE
										    (QUOTE 
										    Failures-Only]
		   (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
			     T "Outcomes hardcopy on " HARDCOPY-FILE))
          (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
		    T "Test trace on file " TRACE-FILE])

(TEST.FIND-MENU-ITEM
  [LAMBDA (ITEM ITEM-LIST)                                   (* sm "19-Jul-85 15:37")
    (COND
      ((NULL ITEM-LIST)
	NIL)
      ((ATOM ITEM-LIST)
	NIL)
      ((FMEMB ITEM ITEM-LIST)
	ITEM)
      ([AND (CDDDR (CAR ITEM-LIST))
	    (EQ (CAR (CADDDR (CAR ITEM-LIST)))
		(QUOTE SUBITEMS))
	    (TEST.FIND-MENU-ITEM ITEM (CDR (CADDDR (CAR ITEM-LIST]
	(CAR ITEM-LIST))
      (T (TEST.FIND-MENU-ITEM ITEM (CDR ITEM-LIST])

(TEST.GENERATE-COMPARE-FUNCTION
  [LAMBDA (VAL)                                              (* sm "15-Jun-85 23:33")
    (LIST (QUOTE LAMBDA)
	  (QUOTE (RES ARGS))
	  (LIST (QUOTE EQUAL)
		(QUOTE RES)
		VAL])

(TEST.GENERATE-INPUT
  [LAMBDA (TEST)                                             (* sm "25-Jul-85 17:53")
    (PROG (CURRENT-INPUT)
          (SETQ CURRENT-INPUT (TEST.GET-FIELD-VALUE (QUOTE INPUT)
						    TEST))
          (if (EQ (CAR CURRENT-INPUT)
		  (QUOTE SYSTEMATIC))
	      then [RETURN (TEST.ALL-COMBINATIONS (for ARG-SPEC in (CDR CURRENT-INPUT)
						     collect (TEST.LOCAL-EVAL-FORM ARG-SPEC]
	    else (RETURN (LIST (TEST.LOCAL-EVAL-FORM CURRENT-INPUT])

(TEST.GET-AND-INCREASE-NEXT-TESTID
  [LAMBDA NIL                                                (* sm "17-Jul-85 15:12")
    (PROG (FNAME NEXTID)
          (SETQ FNAME (TEST.OPENFILE-OR-WAIT TEST.NAME-OF-FILE-HOLDING-NEXT-TESTID (QUOTE BOTH)))
          (SETQ NEXTID (READ FNAME))
          (if (NOT (FIXP NEXTID))
	      then (CLOSEF FNAME)
		   (RETURN NIL))
          (SETFILEPTR FNAME 0)
          (PRIN1 (ADD1 NEXTID)
		 FNAME)
          (CLOSEF FNAME)
          (RETURN NEXTID])

(TEST.GET-CONCEPT
  [LAMBDA (GRAPHNODE CONCEPT-LIST)                           (* sm "28-Jun-85 18:12")
    (FASSOC (fetch NODEID of GRAPHNODE)
	    CONCEPT-LIST])

(TEST.GET-CONCEPT-SPACE
  [LAMBDA (NAME)                                             (* sm "16-Aug-85 16:54")
    (if (NULL NAME)
	then (SETQ NAME TEST.DEFAULT-CONCEPT-SPACE-NAME))
    (if (NOT (BOUNDP (QUOTE TEST.CONCEPT-SPACES)))
	then NIL
      else (FASSOC NAME TEST.CONCEPT-SPACES])

(TEST.GET-DEFAULT-FILED-VALUE
  [LAMBDA (FIELD-NAME)                                       (* sm " 3-Jul-85 09:59")
    (GETTOPVAL (PACK* (QUOTE TEST.DEFAULT.)
		      FIELD-NAME])

(TEST.GET-EXECUTION-SPECS
  [LAMBDA NIL                                                (* sm "21-Aug-85 12:48")
    (PROG (WINDOW WINDOW1)
          (SETQ TEST.GLOBAL-EXECUTION-SPECS (LIST TEST.DEFAULT-HARDCOPY-MODE 
						  TEST.DEFAULT-PRETEST-MODE TEST.DEFAULT-TRACE-MODE 
						  TEST.DEFAULT-LOCATION))
          (SETQ WINDOW (ADDMENU (create MENU
					ITEMS _(QUOTE (No-Hardcopy Failures-Only Hardcopy-All))
					WHENSELECTEDFN _(QUOTE TEST.UPDATE-EXECUTION-SPEC)
					TITLE _ "Hardcopy Mode"
					MENUFONT _ BOLDFONT)
				NIL
				(create POSITION
					XCOORD _ 300
					YCOORD _ 300)))
          (WINDOWPROP WINDOW (QUOTE TEST.SELECTION)
		      TEST.DEFAULT-HARDCOPY-MODE)
          (SHADEITEM TEST.DEFAULT-HARDCOPY-MODE (CAR (WINDOWPROP WINDOW (QUOTE MENU)))
		     BLACKSHADE WINDOW)
          (SETQ WINDOW1 (ATTACHMENU (create MENU
					    ITEMS _(QUOTE (No-Pretests Weak-Links Strong-Links))
					    WHENSELECTEDFN _(QUOTE TEST.UPDATE-EXECUTION-SPEC)
					    TITLE _ "Pretests Mode"
					    MENUFONT _ BOLDFONT)
				    WINDOW
				    (QUOTE RIGHT)
				    (QUOTE JUSTIFY)))
          (WINDOWPROP WINDOW1 (QUOTE TEST.SELECTION)
		      TEST.DEFAULT-PRETEST-MODE)
          (SHADEITEM TEST.DEFAULT-PRETEST-MODE (CAR (WINDOWPROP WINDOW1 (QUOTE MENU)))
		     BLACKSHADE WINDOW1)
          (SETQ WINDOW1 (ATTACHMENU (create MENU
					    ITEMS _(QUOTE (On Off))
					    WHENSELECTEDFN _(QUOTE TEST.UPDATE-EXECUTION-SPEC)
					    TITLE _ "Trace mode"
					    MENUFONT _ BOLDFONT)
				    WINDOW
				    (QUOTE RIGHT)
				    (QUOTE JUSTIFY)))
          (WINDOWPROP WINDOW1 (QUOTE TEST.SELECTION)
		      TEST.DEFAULT-TRACE-MODE)
          (SHADEITEM TEST.DEFAULT-TRACE-MODE (CAR (WINDOWPROP WINDOW1 (QUOTE MENU)))
		     BLACKSHADE WINDOW1)
          (SETQ WINDOW1 (ATTACHMENU (create MENU
					    ITEMS _(QUOTE (Local Remote))
					    WHENSELECTEDFN _(QUOTE TEST.UPDATE-EXECUTION-SPEC)
					    TITLE _ "Location"
					    MENUFONT _ BOLDFONT)
				    WINDOW
				    (QUOTE RIGHT)
				    (QUOTE JUSTIFY)))
          (WINDOWPROP WINDOW1 (QUOTE TEST.SELECTION)
		      TEST.DEFAULT-LOCATION)
          (SHADEITEM TEST.DEFAULT-LOCATION (CAR (WINDOWPROP WINDOW1 (QUOTE MENU)))
		     BLACKSHADE WINDOW1)
          (ATTACHMENU [create MENU
			      ITEMS _(QUOTE ((" O    K")))
			      CENTERFLG _ T
			      WHENSELECTEDFN _(QUOTE (LAMBDA
						       (ITEM MENU KEY)
						       (SETQ TEST.GLOBAL-EXECUTION-SPECS
							 (for W
							    in [CONS (MAINWINDOW (WFROMMENU MENU))
								     (ATTACHEDWINDOWS
								       (MAINWINDOW (WFROMMENU MENU]
							    bind DEFAULT
							    when (SETQ DEFAULT (WINDOWPROP
								     W
								     (QUOTE TEST.SELECTION)))
							    collect DEFAULT))
						       (CLOSEW (MAINWINDOW (WFROMMENU MENU)))
						       (NOTIFY.EVENT TEST.EXECUTION-SPECS-EVENT T]
		      WINDOW
		      (QUOTE BOTTOM)
		      (QUOTE JUSTIFY))
          (AWAIT.EVENT TEST.EXECUTION-SPECS-EVENT 600000)
          (RETURN TEST.GLOBAL-EXECUTION-SPECS])

(TEST.GET-FIELD-VALUE
  [LAMBDA (FIELD DATUM DEC)                                  (* sm " 3-Jul-85 09:40")
    (PROG (F-VALUE)
          (SETQ F-VALUE (RECORDACCESS FIELD DATUM DEC))
          (if (AND F-VALUE (LISTP F-VALUE)
		   (EQ (CAR F-VALUE)
		       (QUOTE &))
		   (FIXP (CADR F-VALUE)))
	      then (RETURN (TEST.GET-FIELD-VALUE FIELD (TEST.GET-TEST (CADR F-VALUE))
						 DEC))
	    else (RETURN F-VALUE])

(TEST.GET-LOCKING-USERS
  [LAMBDA (TEST-LIST)                                        (* sm "23-Jul-85 13:41")
    (PROG (LOCK-FILE LOCK-INFO USER-LIST INTERSECT-INFO)
          (SETQ LOCK-FILE (TEST.OPENFILE-OR-WAIT TEST.NAME-OF-LOCK-FILE (QUOTE INPUT)))
          (if (NOT (EOFP LOCK-FILE))
	      then (SETQ LOCK-INFO (READ LOCK-FILE)))
          (if (EQ TEST-LIST (QUOTE DATABASE))
	      then (SETQ USER-LIST (for K in LOCK-INFO collect (CAR K)))
	    else (SETQ USER-LIST (for USER-INFO in LOCK-INFO
				    when [CDR (SETQ INTERSECT-INFO (CONS (CAR USER-INFO)
									 (if (EQ (CADR USER-INFO)
										 (QUOTE DATABASE))
									     then TEST-LIST
									   else (INTERSECTION
										  TEST-LIST
										  (CDR USER-INFO]
				    collect INTERSECT-INFO)))
          (CLOSEF LOCK-FILE)
          (RETURN USER-LIST])

(TEST.GET-NEXT-AVAILABLE-TESTID
  [LAMBDA NIL                                                (* sm "17-Jul-85 14:51")
    (PROG (FNAME NEXTID)
          (SETQ FNAME (TEST.OPENFILE-OR-WAIT TEST.NAME-OF-FILE-HOLDING-NEXT-TESTID (QUOTE INPUT)
					     (QUOTE OLD)))
          (SETQ NEXTID (READ FNAME))
          (CLOSEF FNAME)
          (if (FIXP NEXTID)
	      then (RETURN NEXTID)
	    else (RETURN NIL])

(TEST.GET-STRONG-LINK-CLOSURE
  [LAMBDA (TEST-SET)                                         (* sm "21-Aug-85 10:07")
    (PROG (OLD NEW LAST)
          (SETQ OLD TEST-SET)
          (SETQ LAST TEST-SET)
      LOOP(SETQ NEW NIL)
          [for TEST in LAST do (for STRONG-PRETEST in [CDR (FASSOC (QUOTE STRONG)
								   (TEST.GET-FIELD-VALUE
								     (QUOTE PRETESTS)
								     (TEST.GET-TEST TEST]
				  when (AND (NOT (FMEMB STRONG-PRETEST NEW))
					    (NOT (FMEMB STRONG-PRETEST OLD)))
				  do (SETQ NEW (CONS STRONG-PRETEST NEW]
          (if NEW
	      then (SETQ OLD (APPEND OLD NEW))
		   (SETQ LAST NEW)
		   (GO LOOP)
	    else (RETURN OLD])

(TEST.GET-TEST
  [LAMBDA (TEST-NUMBER)                                      (* sm "21-Aug-85 09:45")
    (if (AND TEST-NUMBER (FIXP TEST-NUMBER)
	     (GREATERP TEST-NUMBER 0))
	then (PROG (TEST TEMP-LIST-OF-TESTS TEST-POINTER)
	           (TEST.MAKE-BOUND (QUOTE TEST.LIST-OF-TESTS))
	           (SETQ TEMP-LIST-OF-TESTS TEST.LIST-OF-TESTS)
	           (while (AND TEMP-LIST-OF-TESTS (NOT TEST-POINTER))
		      do (if (EQ (CAAR TEMP-LIST-OF-TESTS)
				 TEST-NUMBER)
			     then (SETQ TEST-POINTER TEMP-LIST-OF-TESTS)
			   else (pop TEMP-LIST-OF-TESTS)))
	           (if (NULL TEST-POINTER)
		       then (RETURN (TEST.TEST-FAULT TEST-NUMBER))
		     else (SETQ TEST (CAR TEST-POINTER))
			  (RPLACA TEST-POINTER (CAR TEST.LIST-OF-TESTS))
			  (RPLACA TEST.LIST-OF-TESTS TEST)
			  (RETURN TEST])

(TEST.GET-TEST-SELECTION
  [LAMBDA (WINDOW CONCEPT-NODE NODE-ONLY-FLAG)               (* sm "19-Aug-85 15:54")
    (PROG (MENU TEST-LIST MENU-WINDOW)
          (SETQ TEST-LIST (SORT [if NODE-ONLY-FLAG
				    then [fetch TESTS of (FASSOC (fetch NODEID of CONCEPT-NODE)
								 (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
				  else (TEST.COLLECT-ALL-TESTS (fetch NODEID of CONCEPT-NODE)
							       (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
				(QUOTE ILESSP)))
          (WINDOWPROP WINDOW (QUOTE TEST.SELECTED-TESTS)
		      NIL)
          (SETQ MENU-WINDOW (TEST.ATTACH-TESTS-MENU WINDOW (CONS (QUOTE OK)
								 TEST-LIST)))
          (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
		    T "Select tests from menu. when done select <ok> . ")
          (AWAIT.EVENT (WINDOWPROP WINDOW (QUOTE TEST.TEST-SELECTION-ENDED-EVENT)))
          (RETURN (WINDOWPROP WINDOW (QUOTE TEST.SELECTED-TESTS)
			      NIL])

(TEST.HARDCOPY-ALL-TESTS-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "25-Jul-85 16:30")
    (PROG (CONCEPT-NODE)
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
					       "Select concept of which tests will be hardcopied"))
          (TEST.HARDCOPY-TESTS TEST.DEFAULT-HARDCOPY-DEVICE (TEST.COLLECT-ALL-TESTS
				 (fetch NODEID of CONCEPT-NODE)
				 (WINDOWPROP WINDOW (QUOTE TEST.LIST-OF-CONCEPTS)))
			       NIL TEST.NEWPAGE-BEFORE-HARDCOPY-TEST])

(TEST.HARDCOPY-ONE-TEST
  [LAMBDA (TEST FILE NEW-PAGE)                               (* sm "18-Jul-85 12:16")
    (if NEW-PAGE
	then (PRINTOUT FILE .PAGE))
    (PRINTOUT FILE T "============================================================================" T 
	      .FONT BIGFONT "Test number " (fetch TESTID of TEST)
	      T)
    (for F in (RECORDFIELDNAMES (QUOTE TEST)) do (PRINTOUT FILE .FONT BOLDFONT F "  :" .FONT 
							   SYSTEMFONT .PPF (RECORDACCESS F TEST)
							   T])

(TEST.HARDCOPY-SELECTED-TESTS-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "25-Jul-85 16:31")
    (PROG (CONCEPT-NODE TEST-LIST)
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
					       "Select concept of which tests will be hardcopied"))
          (SETQ TEST-LIST (TEST.GET-TEST-SELECTION WINDOW CONCEPT-NODE))
          (if TEST-LIST
	      then (TEST.HARDCOPY-TESTS TEST.DEFAULT-HARDCOPY-DEVICE TEST-LIST NIL 
					TEST.NEWPAGE-BEFORE-HARDCOPY-TEST])

(TEST.HARDCOPY-TESTS
  [LAMBDA (FILE-NAME TESTS-LIST-OR-LOW-LIMIT HIGH-LIMIT NEW-PAGE)
                                                             (* sm "24-Jul-85 14:46")
    (PROG (F LOW HIGH THERMOMETER)
          (SETQ F (OPENFILE FILE-NAME (QUOTE OUTPUT)
			    (QUOTE NEW)))
          (if (AND TESTS-LIST-OR-LOW-LIMIT (LISTP TESTS-LIST-OR-LOW-LIMIT))
	      then [if (AND TEST.DISPLAY-THERMOMETERS (CDR TESTS-LIST-OR-LOW-LIMIT))
		       then (SETQ THERMOMETER (CREATE-THERMOMETER (FLENGTH TESTS-LIST-OR-LOW-LIMIT)
								  NIL
								  (CREATEREGION 900 0 100 750]
		   (for TEST-NUMBER in (SORT TESTS-LIST-OR-LOW-LIMIT) as COUNTER from 1
		      do (UPDATE-THERMOMETER COUNTER THERMOMETER)
			 (TEST.HARDCOPY-ONE-TEST (TEST.GET-TEST TEST-NUMBER)
						 F NEW-PAGE))
	    else (if (NULL TESTS-LIST-OR-LOW-LIMIT)
		     then (SETQ LOW 1)
			  (SETQ HIGH (SUB1 (TEST.GET-NEXT-AVAILABLE-TESTID)))
		   else (SETQ LOW TESTS-LIST-OR-LOW-LIMIT)
			(SETQ HIGH HIGH-LIMIT))
		 [if (AND TEST.DISPLAY-THERMOMETERS (GREATERP HIGH LOW))
		     then (SETQ THERMOMETER (CREATE-THERMOMETER HIGH LOW (CREATEREGION 900 0 100 750]
		 (for I from LOW to HIGH as COUNTER from 1
		    do (UPDATE-THERMOMETER COUNTER THERMOMETER)
		       (TEST.HARDCOPY-ONE-TEST (TEST.GET-TEST TEST-NUMBER I)
					       F NEW-PAGE)))
          (if THERMOMETER
	      then (CLOSEW THERMOMETER))
          (CLOSEF F])

(TEST.HARDCOPY-TRACE-FILE
  [LAMBDA (TRACE-FILE OUTPUT-FILE FAILURES-ONLY)             (* sm "24-Jul-85 16:53")
    (PROG (OUT-FILE IN-FILE TEST-INFO TRACE-THERMOMETER)
          (SETQ OUT-FILE (OPENFILE (OR OUTPUT-FILE TEST.DEFAULT-HARDCOPY-DEVICE)
				   (QUOTE OUTPUT)
				   (QUOTE NEW)))
          (SETQ IN-FILE (OPENFILE (OR TRACE-FILE TEST.TRACE-FILE-NAME)
				  (QUOTE INPUT)
				  (QUOTE OLD)))
          (if TEST.DISPLAY-THERMOMETERS
	      then (SETQ TRACE-THERMOMETER (CREATE-THERMOMETER (GETEOFPTR IN-FILE)
							       0
							       (CREATEREGION 900 0 100 750)
							       "Trace hardcopy")))
          [while (NOT (EOFP IN-FILE))
	     do (SETQ TEST-INFO (READ IN-FILE))
		(UPDATE-THERMOMETER (GETFILEPTR IN-FILE)
				    TRACE-THERMOMETER)
		(if (OR (NOT FAILURES-ONLY)
			(EQ (CAR (CDDDDR TEST-INFO))
			    (QUOTE FAILURE)))
		    then (PRINTOUT OUT-FILE T 
		 "------------------------------------------------------------------------------"
				   T .FONT BIGFONT "OUTCOME OF EXPERIMENT NUMBER : " (CAR TEST-INFO)
				   T .FONT BOLDFONT "Time executed : " .FONT SYSTEMFONT
				   (GDATE (CAR TEST-INFO))
				   T .FONT BOLDFONT "Test ID :" .FONT SYSTEMFONT (CADR TEST-INFO)
				   T .FONT BOLDFONT "Actual arguments: " .FONT SYSTEMFONT)
			 (for ARG in (CADDR TEST-INFO) do (PRINTOUT OUT-FILE T "                   " 
								    .PPF ARG))
			 (PRINTOUT OUT-FILE .FONT BOLDFONT T "Result : " .FONT SYSTEMFONT .PPF
				   (CADDDR TEST-INFO)
				   T .FONT BIGFONT "Test was " (CAR (CDDDDR TEST-INFO]
          (if TRACE-THERMOMETER
	      then (CLOSEW TRACE-THERMOMETER))
          (CLOSEF OUT-FILE)
          (CLOSEF IN-FILE)
          (RETURN OUT-FILE])

(TEST.INIT
  [LAMBDA NIL                                                (* sm "19-Aug-85 17:28")
    (TEST.ADD-ITEM-TO-BACKGROUND-MENU "Tester" NIL 
				      "Move cursor to the right to select one of the subitems"
				      TEST.BACKGROUND-MENU-SUBITEMS)
    (TEST.LOAD-CONCEPT-SPACE (TEST.CANONICAL-CONCEPT-SPACE-FILE-NAME TEST.DEFAULT-CONCEPT-SPACE-NAME])

(TEST.INSPECTW.ICONFN
  [LAMBDA (WINDOW ICON)                                      (* sm "25-Jul-85 14:57")
    [COND
      ((NULL ICON)
	(SETQ ICON (TITLEDICONW (create TITLEDICON
					ICON _ TEST.INSPECTW.ICON
					MASK _ TEST.INSPECTW.MASK
					TITLEREG _(CREATEREGION 4 6 65 30))
				(CONCAT (WINDOWPROP WINDOW (QUOTE TITLE))
					"
INSPECTOR")
				(FONTCREATE (QUOTE GACHA)
					    8]
    ICON])

(TEST.INSPECTW.VALUECOMMANDFN
  [LAMBDA (VALUE PROPERTY DATUM WINDOW)                      (* sm "26-Jul-85 15:09")
    (if (AND (LISTP VALUE)
	     (EQ (CAR VALUE)
		 (QUOTE &))
	     (FIXP (CADR VALUE)))
	then [MENU (create MENU
			   ITEMS _(LIST (LIST (CONCAT "Edit test " (CADR VALUE))
					      (LIST (QUOTE TEST.EDIT-TEST)
						    (CADR VALUE]
      else (TEST.MARK-AS-CHANGED (fetch TESTID of DATUM))
	   (APPLY* (QUOTE DEFAULT.INSPECTW.VALUECOMMANDFN)
		   VALUE PROPERTY DATUM WINDOW])

(TEST.KILL-PROCESS
  [LAMBDA (WINDOW)                                           (* sm "24-Jul-85 14:25")
    (COND
      ((WINDOWPROP WINDOW (QUOTE TEST.PROCESS))
	(DEL.PROCESS (WINDOWPROP WINDOW (QUOTE TEST.PROCESS)))
	(FLASHWINDOW WINDOW 3)
	(CLEARW (TEST.PROMPT-WINDOW WINDOW))
	(printout (TEST.PROMPT-WINDOW WINDOW)
		  "User interupt. TEST process aborted.")
	(for W in (ATTACHEDWINDOWS WINDOW) when (WINDOWPROP W (QUOTE TEST.DETACH))
	   do (DETACHWINDOW W)
	      (CLOSEW W))
	(WINDOWPROP WINDOW (QUOTE TEST.PROCESS)
		    NIL)
	(WINDOWPROP WINDOW (QUOTE TEST.TESTS-MENU-WINDOW)
		    NIL)
	(EVAL (WINDOWPROP WINDOW (QUOTE TEST.UNSHADE-IF-SHADED])

(TEST.LEFT-BUTTON-SELECTION
  [LAMBDA (SELECTED-OBJ WINDOW)                              (* sm "19-Aug-85 14:09")
    (WINDOWPROP WINDOW (QUOTE TEST.CONCEPT-SELECTED)
		SELECTED-OBJ)
    (SETQ TEST.WINDOW-OF-LAST-SELECTION WINDOW)
    (NOTIFY.EVENT TEST.GLOBAL-CONCEPT-NODE-SELECTED-EVENT])

(TEST.LOAD-CONCEPT-SPACE
  [LAMBDA (CONCEPT-SPACE-FILE-NAME)                          (* sm "16-Aug-85 17:15")
    (PROG (FULL-NAME CONCEPTSPACE)
          (SETQ FULL-NAME (OPENFILE CONCEPT-SPACE-FILE-NAME (QUOTE INPUT)
				    (QUOTE OLD)))
          (SETQ CONCEPTSPACE (READ FULL-NAME))
          (CLOSEF FULL-NAME)
          (TEST.ADD-CONCEPT-SPACE-TO-CONCEPT-SPACES CONCEPTSPACE)
          [PUTPROP (fetch CONCEPTSPACENAME of CONCEPTSPACE)
		   (QUOTE CONCEPTFILE)
		   (PACKFILENAME (QUOTE HOST)
				 (FILENAMEFIELD FULL-NAME (QUOTE HOST))
				 (QUOTE DIRECTORY)
				 (FILENAMEFIELD FULL-NAME (QUOTE DIRECTORY))
				 (QUOTE NAME)
				 (FILENAMEFIELD FULL-NAME (QUOTE NAME))
				 (QUOTE EXTENSION)
				 (FILENAMEFIELD FULL-NAME (QUOTE EXTENSION]
          (RETURN FULL-NAME])

(TEST.LOAD-CONCEPT-SPACE-COMMAND
  [LAMBDA NIL                                                (* sm "16-Aug-85 17:52")
    (PROG (FNAME)
          [SETQ FNAME (MKATOM (PROMPTFORWORD "Enter concept space file name :
" NIL NIL PROMPTWINDOW NIL (QUOTE TTY]
          (TEST.LOAD-CONCEPT-SPACE FNAME])

(TEST.LOCAL-EVAL-FORM
  [LAMBDA (FORM)                                             (* sm "10-Jul-85 13:44")
    (PROG (OLD-HELPFLAG RESULT ERR)
          (SETQ OLD-HELPFLAG (GETTOPVAL (QUOTE HELPFLAG)))
          (SETTOPVAL (QUOTE HELPFLAG)
		     NIL)
          (SETQ RESULT (ERRORSET FORM (QUOTE NOBREAK)))
          (SETTOPVAL (QUOTE HELPFLAG)
		     OLD-HELPFLAG)
          [if (NULL RESULT)
	      then (SETQ ERR (ERRORN))
		   (SETQ RESULT (LIST (LIST (QUOTE ERROR!)
					    (CAR ERR)
					    (ERRORSTRING (CAR ERR))
					    (CADR ERR]
          (RETURN (CAR RESULT])

(TEST.MAKE-BOUND
  [LAMBDA (VARNAME INIT-VALUE)                               (* sm "18-Jul-85 10:15")
    (if (NOT (BOUNDP VARNAME))
	then (SET VARNAME INIT-VALUE])

(TEST.MARK-AS-CHANGED
  [LAMBDA (TEST-NUMBER)                                      (* sm "19-Jul-85 16:24")
    (TEST.MAKE-BOUND (QUOTE TEST.LIST-OF-MODIFIED-TESTS))
    (pushnew TEST.LIST-OF-MODIFIED-TESTS TEST-NUMBER])

(TEST.OBTAIN-DATABASE-WRITE-LOCK
  [LAMBDA (TEST-LIST)                                        (* sm "23-Jul-85 12:44")
    (PROG (LOCK-FILE USER-NAME LOCK-INFO RETURN-INFO CURRENT-USER-INFO)
          (SETQ USER-NAME (MKATOM (FULLUSERNAME)))
          (SETQ LOCK-FILE (TEST.OPENFILE-OR-WAIT TEST.NAME-OF-LOCK-FILE (QUOTE BOTH)))
          (if (NULL TEST-LIST)
	      then (RETURN NIL))
          (if (NOT (EOFP LOCK-FILE))
	      then (SETQ LOCK-INFO (READ LOCK-FILE)))
          [if (EQ TEST-LIST (QUOTE DATABASE))
	      then                                           (* This case is for the option of locking the entire 
							     database. The only locking user that is allowed is the 
							     current user)
		   (if (OR (NULL LOCK-INFO)
			   (AND (EQP (LENGTH LOCK-INFO)
				     1)
				(EQ (CAAR LOCK-INFO)
				    USER-NAME)))
		       then 

          (* The current user is the only one who lock tests. We can replace the list of tests that he locked with the single 
	  word DATABASE)


			    [SETQ LOCK-INFO (LIST (LIST USER-NAME (QUOTE DATABASE]
			    (SETQ RETURN-INFO (QUOTE DATABASE))
		     else (SETQ RETURN-INFO NIL))
	    elseif (AND (EQP (LENGTH LOCK-INFO)
			     1)
			(EQ (CADAR LOCK-INFO)
			    (QUOTE DATABASE)))
	      then 

          (* In this case the user wants to lock some tests, but somebody locked the whole data-base; If this is the user, we 
	  can consider all tests as locked; If this is another user we must consider all tests as unlocked;)


		   (if (EQ (CAAR LOCK-INFO)
			   USER-NAME)
		       then (SETQ RETURN-INFO TEST-LIST)
		     else (SETQ RETURN-INFO NIL))
	    else (SETQ TEST-LIST (TEST.SETIFY TEST-LIST))
		 [SETQ RETURN-INFO (LDIFFERENCE TEST-LIST (for USER-INFO in LOCK-INFO
							     when (NEQ (CAR USER-INFO)
								       USER-NAME)
							     join (COPY (CDR USER-INFO]
                                                             (* The return-info will contain all the tests of the 
							     test list which can be considered as locked after the 
							     return of this function.)
		 (if (SETQ CURRENT-USER-INFO (FASSOC USER-NAME LOCK-INFO))
		     then [RPLACD CURRENT-USER-INFO (TEST.SETIFY (APPEND RETURN-INFO (CDR 
										CURRENT-USER-INFO]
		   else (SETQ LOCK-INFO (CONS (CONS USER-NAME RETURN-INFO)
					      LOCK-INFO]     (* At the end of this if clause, the LOCK-INFO variable
							     will contain the current lock information which should 
							     be written on the lockfile)
          (SETFILEPTR LOCK-FILE 0)
          (PRIN2 LOCK-INFO LOCK-FILE)
          (CLOSEF LOCK-FILE)                                 (* There can be garbage left at the end, but this 
							     dosn't disturb us since it will not be read anyway.)
          (RETURN RETURN-INFO])

(TEST.OBTAIN-LOCK-COMMAND
  [LAMBDA (WINDOW SELECTED)                                  (* sm "21-Aug-85 16:05")
    (PROG (CONCEPT-NODE TEST-LIST)
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
						   "Select concept whoes tests should be locked."))
          (if (NOT SELECTED)
	      then [SETQ TEST-LIST (TEST.COLLECT-ALL-TESTS (fetch NODEID of CONCEPT-NODE)
							   (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
	    else (SETQ TEST-LIST (TEST.GET-TEST-SELECTION WINDOW CONCEPT-NODE)))
          (SETQ LOCKED-TESTS (TEST.OBTAIN-DATABASE-WRITE-LOCK TEST-LIST))
          (if (ILESSP (FLENGTH LOCKED-TESTS)
		      (FLENGTH TEST-LIST))
	      then (FLASHWINDOW (TEST.PROMPT-WINDOW WINDOW)
				2)
		   (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
			     T "Tests " LOCKED-TESTS 
			     " are now locked by you. The other tests are locked as followed: "
			     T
			     (TEST.GET-LOCKING-USERS (LDIFFERENCE TEST-LIST LOCKED-TESTS)))
		   (if (MENU (create MENU
				     ITEMS _(QUOTE (("Send Automatic release requests" T)
						     ("Ignore " NIL)))
				     MENUFONT _ BIGFONT))
		       then (TEST.SEND-RELEASE-REQUESTS (LDIFFERENCE TEST-LIST LOCKED-TESTS)))
	    else (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
			   T "All requested tests are locked."])

(TEST.OBTAIN-LOCK-ON-SELECTED-TESTS-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "21-Aug-85 15:48")
    (TEST.OBTAIN-LOCK-COMMAND WINDOW T])

(TEST.OPENFILE-OR-WAIT
  [LAMBDA (FILE ACCESS RECOG PARAMETERS OPTIONAL MAX-WAITING-TIME.ms)
                                                             (* sm "20-Aug-85 16:54")
    (PROG (F)
          (if (NULL MAX-WAITING-TIME.ms)
	      then (SETQ MAX-WAITING-TIME.ms 5000))
          (for II from 0 to MAX-WAITING-TIME.ms by 1000 while [TEST.ERRORP
								(SETQ F (TEST.LOCAL-EVAL-FORM
								    (LIST (QUOTE OPENFILE)
									  (KWOTE FILE)
									  (KWOTE ACCESS)
									  (KWOTE RECOG)
									  (KWOTE PARAMETERS)
									  (KWOTE OPTIONAL]
	     do (DISMISS 1000))
          (if (NOT (TEST.ERRORP F))
	      then (RETURN F])

(TEST.PERFORM-TEST
  [LAMBDA (TEST TIMES LOCATION TRACE-FILE TRACE-MODE)        (* sm "21-Aug-85 14:01")
    (PROG (TIMES-THERMOMETER)
          (if (NULL TIMES)
	      then (SETQ TIMES (TEST.GET-FIELD-VALUE (QUOTE TIMES)
						     TEST)))
          (if (NULL TIMES)
	      then (SETQ TIMES 1))
          (if (NULL LOCATION)
	      then (SETQ LOCATION TEST.DEFAULT-LOCATION))
          (if (NULL TRACE-FILE)
	      then (SETQ TRACE-FILE (OPENFILE TEST.TRACE-FILE-NAME (QUOTE OUTPUT)
					      (QUOTE NEW)))
		   (CLOSEF TRACE-FILE))
          (if (NULL TRACE-MODE)
	      then (SETQ TRACE-MODE TEST.DEFAULT-TRACE-MODE))
          (if (AND (GREATERP TIMES 1)
		   TEST.DISPLAY-THERMOMETERS)
	      then (SETQ TIMES-THERMOMETER (CREATE-THERMOMETER TIMES 0 (CREATEREGION 900 0 100 750)
							       "Iterations")))
          [for I1 from 1 to TIMES
	     do (if (AND (GREATERP TIMES 1)
			 TEST.DISPLAY-THERMOMETERS)
		    then (UPDATE-THERMOMETER I1 TIMES-THERMOMETER))
		(PROG (LIST-OF-ACTUAL-ARGUMENTS ARGUMENTS-THERMOMETER)
		      (TEST.EVAL-BEFORE-TEST TEST LOCATION)
		      (SETQ LIST-OF-ACTUAL-ARGUMENTS (TEST.GENERATE-INPUT TEST))
		      (if (AND TEST.DISPLAY-THERMOMETERS (CDR LIST-OF-ACTUAL-ARGUMENTS))
			  then (SETQ ARGUMENTS-THERMOMETER (CREATE-THERMOMETER (FLENGTH 
									 LIST-OF-ACTUAL-ARGUMENTS)
									       0
									       (CREATEREGION 800 0 
											     100 750)
									       "input")))
		      [for ACTUAL-ARGUMENTS in LIST-OF-ACTUAL-ARGUMENTS as INPUT-NUM from 0
			 do (if (AND TEST.DISPLAY-THERMOMETERS (CDR LIST-OF-ACTUAL-ARGUMENTS))
				then (UPDATE-THERMOMETER INPUT-NUM ARGUMENTS-THERMOMETER))
			    (PROG (RESULT OUTCOME EXPRESSION-TO-EVALUATE)
			          (if (EQ TRACE-MODE (QUOTE On))
				      then (TEST.PRINT-TRACE-INFO TRACE-FILE
								  (LIST (IDATE)
									(fetch TESTID of TEST)
									ACTUAL-ARGUMENTS)))
			          (TEST.PRINT-ON-TRACE-FILE (SETQ RESULT (TEST.EVALUATE-TESTED-EXPR
								TEST ACTUAL-ARGUMENTS LOCATION))
							    TRACE-FILE T TRACE-MODE)
			          (TEST.PRINT-ON-TRACE-FILE (SETQ OUTCOME (TEST.EVALUATE-OUTCOME
								TEST RESULT ACTUAL-ARGUMENTS LOCATION)
							      )
							    TRACE-FILE T TRACE-MODE)
			          (TEST.CLEANUP-AFTER-TEST TEST RESULT ACTUAL-ARGUMENTS LOCATION)
			          (if (EQ TRACE-MODE (QUOTE Off))
				      then (if (EQ OUTCOME (QUOTE FAILURE))
					       then (TEST.PRINT-TRACE-INFO TRACE-FILE
									   (LIST (IDATE)
										 (fetch TESTID
										    of TEST)
										 ACTUAL-ARGUMENTS 
										 RESULT OUTCOME]
		      (if ARGUMENTS-THERMOMETER
			  then (CLOSEW ARGUMENTS-THERMOMETER]
          (if TIMES-THERMOMETER
	      then (CLOSEW TIMES-THERMOMETER))
          (RETURN TRACE-FILE])

(TEST.PERFORM-TIMED-EVALUATION
  [LAMBDA (FORM TIMEOUT.ms)                                  (* sm "22-Jul-85 19:24")
    (if TIMEOUT.ms
	then (PROG (PROCESS EVENT TIMER)
	           (SETQ EVENT (CREATE.EVENT))
	           (SETQ TEST.GLOBAL-RESULT-OF-TIMED-EVALUATION NIL)
	           (SETQ TIMER (SETUPTIMER (IPLUS TIMEOUT.ms 1000)))
	           [SETQ PROCESS (ADD.PROCESS (SUBPAIR (QUOTE (FORM EVENT))
						       (LIST FORM EVENT)
						       (QUOTE (PROGN (SETQ 
							   TEST.GLOBAL-RESULT-OF-TIMED-EVALUATION
								       (TEST.LOCAL-EVAL-FORM
									 (QUOTE FORM)))
								     (NOTIFY.EVENT EVENT]
	           (if (EQUAL (AWAIT.EVENT EVENT TIMER T)
			      "{time interval expired}")
		       then (DEL.PROCESS PROCESS)
			    (RETURN (QUOTE (ERROR! TIMEEXPIRED)))
		     else (RETURN TEST.GLOBAL-RESULT-OF-TIMED-EVALUATION)))
      else (TEST.LOCAL-EVAL-FORM FORM])

(TEST.POP-UP-CONCEPT-SPACES-MENU
  [LAMBDA NIL                                                (* sm "19-Aug-85 09:36")
    (MENU (create MENU
		  ITEMS _(CONS (QUOTE ("Quit" NIL))
			       (for C in TEST.CONCEPT-SPACES collect (fetch (CONCEPTSPACE 
										 CONCEPTSPACENAME)
									of C)))
		  MENUFONT _ BIGFONT])

(TEST.POP-UP-TESTS-MENU
  [LAMBDA (WINDOW CONCEPT-NODE MESSAGE LOCAL-TESTS-ONLY)     (* sm "19-Aug-85 10:17")
    (PROG (TEST-LIST MENU)
          [SETQ TEST-LIST (if LOCAL-TESTS-ONLY
			      then [fetch TESTS of (FASSOC (fetch NODEID of CONCEPT-NODE)
							   (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
			    else (TEST.COLLECT-ALL-TESTS (fetch NODEID of CONCEPT-NODE)
							 (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
          (if TEST-LIST
	      then (if MESSAGE
		       then (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
				      T MESSAGE))
		   [SETQ MENU (create MENU
				      ITEMS _(SORT TEST-LIST)
				      MENUFONT _ BIGFONT
				      CENTERFLG _ T
				      MENUROWS _(FIX (SQRT (FLENGTH TEST-LIST]
		   (RETURN (MENU MENU])

(TEST.PRINT-ON-TRACE-FILE
  [LAMBDA (SEXPR FULLFILENAME RETREAT? TRACE-MODE)           (* sm "21-Aug-85 13:43")
    (if (EQ TRACE-MODE (QUOTE On))
	then (OPENFILE FULLFILENAME (QUOTE BOTH))
	     (SETFILEPTR FULLFILENAME (if RETREAT?
					  then (SUB1 (GETEOFPTR FULLFILENAME))
					else (GETEOFPTR FULLFILENAME)))
	     (PRIN2 SEXPR FULLFILENAME)
	     (PRIN1 " )" FULLFILENAME)
	     (CLOSEF FULLFILENAME])

(TEST.PRINT-TEST-OUTCOME
  [LAMBDA (TEST-INFO FILE)                                   (* sm " 3-Jul-85 12:35")
    (PRINTOUT FILE T "------------------------------------------------------------------------------" 
	      T .FONT BIGFONT "OUTCOME OF TEST NUMBER : " (CAR TEST-INFO)
	      T .FONT BOLDFONT "Actual arguments: " .FONT SYSTEMFONT)
    (for ARG in (CADR TEST-INFO) do (PRINTOUT FILE T "                   " .PPF ARG))
    (PRINTOUT FILE .FONT BOLDFONT T "Result : " .FONT SYSTEMFONT .PPF (CADDR TEST-INFO)
	      T .FONT BIGFONT "Test was " (CADDDR TEST-INFO])

(TEST.PRINT-TRACE-INFO
  [LAMBDA (TRACE-FILE INFO)                                  (* sm "21-Aug-85 13:30")
    (OPENFILE TRACE-FILE (QUOTE APPEND)
	      (QUOTE OLD))
    (PRINTOUT TRACE-FILE T INFO)
    (CLOSEF TRACE-FILE])

(TEST.PROMPT-WINDOW
  [LAMBDA (WINDOW)                                           (* edited: "29-Mar-85 16:07")
    (CAR (WINDOWPROP WINDOW (QUOTE PROMPTWINDOW])

(TEST.RELEASE-DATABASE-WRITE-LOCK
  [LAMBDA (TEST-LIST)                                        (* sm "23-Jul-85 14:08")
    (PROG (LOCK-FILE USER-NAME LOCK-INFO RETURN-INFO CURRENT-USER-INFO NEW-USER-INFO)
          (SETQ USER-NAME (MKATOM (FULLUSERNAME)))
          (SETQ LOCK-FILE (TEST.OPENFILE-OR-WAIT TEST.NAME-OF-LOCK-FILE (QUOTE BOTH)))
          (if (NULL TEST-LIST)
	      then (RETURN NIL))
          (if (NOT (EOFP LOCK-FILE))
	      then (SETQ LOCK-INFO (READ LOCK-FILE)))
          (if (EQ TEST-LIST (QUOTE DATABASE))
	      then                                           (* This case is for the option of locking the entire 
							     database. The only locking user that is allowed is the 
							     current user)
		   (if (OR (NEQ (LENGTH LOCK-INFO)
				1)
			   (NEQ (CAAR LOCK-INFO)
				USER-NAME)
			   (NEQ (CADAR LOCK-INFO)
				(QUOTE DATABASE)))
		       then                                  (* The Data-base Is Not Locked By The Current User -
							     So It Can Not Be Released)
			    (SETQ RETURN-INFO NIL)
		     else (SETQ RETURN-INFO (QUOTE DATABASE))
			  (SETQ LOCK-INFO NIL))
	    elseif (AND (EQP (LENGTH LOCK-INFO)
			     1)
			(EQ (CADAR LOCK-INFO)
			    (QUOTE DATABASE)))
	      then                                           (* The User Wants To Release A Set Of Tests, But The 
							     Whole Database Is Locked, Either By The User Or By 
							     Another User;)
		   (SETQ RETURN-INFO NIL)
	    else 

          (* The Default Case: Return-info Will Contain The List Of Tests That Actually Were Held By The User And Are Now 
	  Released %. Lock-info Will Be Updated And Written To The File)


		 (SETQ TEST-LIST (TEST.SETIFY TEST-LIST))
		 (SETQ CURRENT-USER-INFO (FASSOC USER-NAME LOCK-INFO))
		 (if (NULL CURRENT-USER-INFO)
		     then (SETQ RETURN-INFO NIL)
		   else (for TEST in (CDR CURRENT-USER-INFO) do (if (FMEMB TEST TEST-LIST)
								    then (push RETURN-INFO TEST)
								  else (push NEW-USER-INFO TEST)))
			(RPLACD CURRENT-USER-INFO NEW-USER-INFO)))
                                                             (* At the end of this if clause, the LOCK-INFO variable
							     will contain the current lock information which should 
							     be written on the lockfile)
          (SETFILEPTR LOCK-FILE 0)
          (PRIN2 LOCK-INFO LOCK-FILE)
          (PRIN1 " " LOCK-FILE)
          (CLOSEF LOCK-FILE)                                 (* There can be garbage left at the end, but this 
							     dosn't disturb us since it will not be read anyway.)
          (RETURN RETURN-INFO])

(TEST.RELEASE-LOCK-COMMAND
  [LAMBDA (WINDOW SELECTED)                                  (* sm "21-Aug-85 16:15")
    (PROG (CONCEPT-NODE TEST-LIST)
          (SETQ CONCEPT-NODE (TEST.WAIT-FOR-SELECTION WINDOW 
						 "Select concept whoes tests should be released."))
          (if (NOT SELECTED)
	      then [SETQ TEST-LIST (TEST.COLLECT-ALL-TESTS (fetch NODEID of CONCEPT-NODE)
							   (WINDOWPROP WINDOW (QUOTE 
									    TEST.LIST-OF-CONCEPTS]
	    else (SETQ TEST-LIST (TEST.GET-TEST-SELECTION WINDOW CONCEPT-NODE)))
          (TEST.RELEASE-DATABASE-WRITE-LOCK TEST-LIST)
          (PRINTOUT (TEST.PROMPT-WINDOW WINDOW)
		    T "All requested tests are released."])

(TEST.RELEASE-LOCK-ON-SELECTED-TESTS-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "21-Aug-85 16:10")
    (TEST.RELEASE-LOCK-COMMAND WINDOW T])

(TEST.REMOVE-SUBCONCEPT-LINK
  [LAMBDA (CONCEPT SUBCONCEPT-NAME)                          (* sm " 2-Jul-85 09:55")
    (replace SUBCONCEPTS of CONCEPT with (REMOVE SUBCONCEPT-NAME (fetch SUBCONCEPTS of CONCEPT])

(TEST.REMOVE-SUPERCONCEPT-LINK
  [LAMBDA (CONCEPT SUPERCONCEPT-NAME LIST-OF-CONCEPTS)       (* sm " 2-Jul-85 10:00")
    (replace SUPERCONCEPTS of CONCEPT with (REMOVE SUPERCONCEPT-NAME (fetch SUPERCONCEPTS
									of CONCEPT)))
    (if (NULL (fetch SUPERCONCEPTS of CONCEPT))
	then (TEST.DELETE-CONCEPT (fetch CONCEPTNAME of CONCEPT)
				  LIST-OF-CONCEPTS])

(TEST.REPLACE-INSEPCTW-VALUECOMMANDFN
  [LAMBDA (W)
    (for ITEM in (WINDOWPROP W (QUOTE SELECTABLEITEMS)) when (NEQ (CADDDR ITEM)
								  (QUOTE PROPERTY))
       do (RPLACA (CDR ITEM)
		  (QUOTE TEST.INSPECTW.VALUECOMMANDFN])

(TEST.SEND-RELEASE-REQUESTS
  [LAMBDA (TEST-LIST)                                        (* sm "23-Jul-85 15:59")
    (PROG (USER-LIST)
          (SETQ USER-LIST (TEST.GET-LOCKING-USERS TEST-LIST))
          (for USER-INFO in USER-LIST
	     do (LAFITE.SENDMESSAGE (CONCAT "Subject: Locks on test files are needed
To: " (if (LISTP USER-INFO)
	  then (CAR USER-INFO)
	else USER-INFO)
					    "
cc: "
					    (FULLUSERNAME)
					    "

You have the locks for tests "
					    (if (LISTP USER-INFO)
						then (CDR USER-INFO)
					      else " ")
					    
      " . Please  release them
as soon as possible and let me know when you are done.
  Thanks ."))
		(PRINTOUT T T (CONCAT "Message was sent to " (CAR USER-INFO))
			  T])

(TEST.SET-DEFAULT-FIELD-VALUE
  [LAMBDA (FIELD-NAME NEW-DEFAULT-VALUE)                     (* sm " 3-Jul-85 09:59")
    (SETTOPVAL (PACK* (QUOTE TEST.DEFAULT.)
		      FIELD-NAME)
	       NEW-DEFAULT-VALUE])

(TEST.SET-TESTS-BUFFER-SIZE
  [LAMBDA NIL                                                (* sm "20-Aug-85 16:05")
    (PROG (STORGE-LEFT)
          (SETQ STORAGE-LEFT (IDIFFERENCE \LASTVMEMFILEPAGE (VMEMSIZE)))
          (RETURN (SETQ TEST.TESTS-BUFFER-SIZE (MAX TEST.MIN-TESTS-BUFFER-SIZE
						    (MIN TEST.MAX-TESTS-BUFFER-SIZE
							 (FIX (FQUOTIENT STORAGE-LEFT 
									 TEST.AVERAGE-TEST-SIZE])

(TEST.SETIFY
  [LAMBDA (L)
    (PROG (NEW-SET)
          (for ONE-ELEMENT in L when (NOT (MEMBER ONE-ELEMENT NEW-SET)) do (SETQ NEW-SET
									     (CONS ONE-ELEMENT 
										   NEW-SET)))
          (RETURN NEW-SET])

(TEST.SHADE-TEST
  [LAMBDA (TEST-NUMBER WINDOW SHADE)                         (* sm "24-Jul-85 16:36")
    (PROG (MENU-WINDOW)
          (SETQ SHADE (OR SHADE BLACKSHADE))
          (if (SETQ MENU-WINDOW (WINDOWPROP WINDOW (QUOTE TEST.TESTS-MENU-WINDOW)))
	      then (SHADEITEM TEST-NUMBER (CAR (WINDOWPROP MENU-WINDOW (QUOTE MENU)))
			      SHADE MENU-WINDOW])

(TEST.STORE-CHANGED-TESTS
  [LAMBDA NIL                                                (* sm "19-Jul-85 16:33")
    (for TEST in TEST.LIST-OF-MODIFIED-TESTS do (PRINT (TEST.STORE-TEST TEST])

(TEST.STORE-CONCEPT-SPACE
  [LAMBDA (CONCEPTSPACENAME)                                 (* sm "19-Aug-85 12:13")
    (PROG (FULL-NAME FILENAME CONCEPTSPACE CANDIDATE-FILE)
          (SETQ CONCEPTSPACE (TEST.GET-CONCEPT-SPACE CONCEPTSPACENAME))
          (SETQ CONCEPTSPACENAME (fetch CONCEPTSPACENAME of CONCEPTSPACE))
          (SETQ CANDIDATE-FILE (OR (GETPROP CONCEPTSPACENAME (QUOTE CONCEPTFILE))
				   (TEST.CANONICAL-CONCEPT-SPACE-FILE-NAME CONCEPTSPACENAME)))
          (CLRPROMPT)
          [SETQ FILENAME (MKATOM (PROMPTFORWORD (CONCAT "Name of file for storing " CONCEPTSPACENAME 
							": 
")
						(FULLNAME (MKSTRING CANDIDATE-FILE)
							  (QUOTE NEW))
						NIL PROMPTWINDOW NIL (QUOTE TTY]
          (SETQ FULL-NAME (OPENFILE FILENAME (QUOTE OUTPUT)
				    (QUOTE NEW)))
          (PRIN2 CONCEPTSPACE FULL-NAME)
          (CLOSEF FULL-NAME)
          (RETURN FULL-NAME])

(TEST.STORE-CONCEPT-SPACE-COMMAND
  [LAMBDA NIL                                                (* sm "16-Aug-85 17:55")
    (PROG (CNAME)
          (SETQ CNAME (TEST.POP-UP-CONCEPT-SPACES-MENU))
          (TEST.STORE-CONCEPT-SPACE CNAME])

(TEST.STORE-TEST
  [LAMBDA (TEST-NUMBER)                                      (* sm "18-Jul-85 09:33")
    (PROG (FULL-FILE-NAME TEST)
          (SETQ TEST (TEST.GET-TEST TEST-NUMBER))
          (if TEST
	      then (SETQ FULL-FILE-NAME (OPENFILE (TEST.TEST-NUMBER-TO-FILE-NAME TEST-NUMBER)
						  (QUOTE OUTPUT)
						  (QUOTE NEW)))
		   (PRIN2 TEST FULL-FILE-NAME)
		   (CLOSEF FULL-FILE-NAME)
		   (TEST.UNMARK-AS-CHANGED TEST-NUMBER)
		   (RETURN FULL-FILE-NAME])

(TEST.SWITCH-DISPLAY-MODE-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "19-Aug-85 09:46")
    [WINDOWPROP WINDOW (QUOTE TEST.DISPLAY-TEST-MODE)
		(NOT (WINDOWPROP WINDOW (QUOTE TEST.DISPLAY-TEST-MODE]
    (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
				WINDOW])

(TEST.TEST-FAULT
  [LAMBDA (TEST-NUMBER)                                      (* sm "20-Aug-85 16:57")
    (PROG (FILE-NAME FULL-FILE-NAME TEST CURRENT-LENGTH)
          (SETQ FILE-NAME (TEST.TEST-NUMBER-TO-FILE-NAME TEST-NUMBER))
          (SETQ FULL-FILE-NAME (TEST.OPENFILE-OR-WAIT FILE-NAME (QUOTE INPUT)
						      (QUOTE OLD)))
          (if FULL-FILE-NAME
	      then (SETQ TEST (READ FULL-FILE-NAME))
		   (CLOSEF FULL-FILE-NAME)
		   (TEST.SET-TESTS-BUFFER-SIZE)
		   (push TEST.LIST-OF-TESTS TEST)
		   (if (GREATERP (SETQ CURRENT-LENGTH (FLENGTH TEST.LIST-OF-TESTS))
				 TEST.TESTS-BUFFER-SIZE)
		       then (RPLACD (NLEFT TEST.LIST-OF-TESTS (ADD1 (IDIFFERENCE 
									   TEST.TESTS-BUFFER-SIZE 
										 CURRENT-LENGTH)))
				    NIL))
		   (RETURN TEST)
	    else (PROMPTPRINT (CONCAT "TESTER: File " FILE-NAME " not found. "])

(TEST.TEST-NUMBER-TO-FILE-NAME
  [LAMBDA (TEST-NUMBER)                                      (* sm "22-Jul-85 14:24")
    (PACK (APPEND (LIST TEST.TEST-DATA-BASE-DIRECTORY (QUOTE TEST))
		  (from 1 to (IDIFFERENCE 5 (NCHARS TEST-NUMBER)) collect 0)
		  (LIST TEST-NUMBER])

(TEST.TEST-SELECTED-ON-TEST-MENU-FN
  [LAMBDA (ITEM MENU KEY)                                    (* sm "19-Jul-85 14:59")
    (PROG (WINDOW MAIN-WINDOW)
          (SETQ WINDOW (WFROMMENU MENU))
          (SETQ MAIN-WINDOW (MAINWINDOW WINDOW))
          (COND
	    [(EQ ITEM (QUOTE OK))
	      (NOTIFY.EVENT (WINDOWPROP MAIN-WINDOW (QUOTE TEST.TEST-SELECTION-ENDED-EVENT]
	    (ITEM (COND
		    ((FMEMB ITEM (WINDOWPROP MAIN-WINDOW (QUOTE TEST.SELECTED-TESTS)))
		      (WINDOWDELPROP MAIN-WINDOW (QUOTE TEST.SELECTED-TESTS)
				     ITEM)
		      (SHADEITEM ITEM MENU WHITESHADE WINDOW))
		    (T (WINDOWADDPROP MAIN-WINDOW (QUOTE TEST.SELECTED-TESTS)
				      ITEM)
		       (SHADEITEM ITEM MENU BLACKSHADE WINDOW])

(TEST.TEST-SINGLE-TIME
  [LAMBDA (TEST-NUMBER)                                      (* sm "24-Jul-85 15:50")
    (PROG (TEST-COPY TEST-INPUT LIST-OF-SETS SHORT-INPUT TRACE-FILE TEST-OUTCOME)
          (SETQ TEST-COPY (COPY (TEST.GET-TEST TEST-NUMBER)))
          (SETQ TEST-INPUT (TEST.GET-FIELD-VALUE (QUOTE INPUT)
						 TEST-COPY))
          [if (EQ (CAR TEST-INPUT)
		  (QUOTE SYSTEMATIC))
	      then (EVAL (TEST.GET-FIELD-VALUE (QUOTE EVALBEFORE)
					       TEST-COPY))
		   (SETQ LIST-OF-SETS (for ONE-SET in (CDR TEST-INPUT) collect (EVAL ONE-SET)))
		   (if (for ONE-SET in LIST-OF-SETS thereis (NOT (LISTP ONE-SET)))
		       then (RETURN (QUOTE (FAILURE "SYSTEMATIC TEST WITH NON-LIST ARGUMENT")))
		     else (SETQ SHORT-INPUT (for ONE-SET in LIST-OF-SETS collect (CAR ONE-SET)))
			  (replace INPUT of TEST-COPY with (KWOTE SHORT-INPUT]
          (replace TIMES of TEST-COPY with 1)
          (SETQ TRACE-FILE (OPENFILE TEST.TRACE-FILE-NAME (QUOTE OUTPUT)
				     (QUOTE NEW)))
          (CLOSEF TRACE-FILE)
          (SETQ TRACE-FILE (TEST.PERFORM-TEST TEST-COPY 1 T TRACE-FILE))
          (OPENFILE TRACE-FILE (QUOTE INPUT)
		    (QUOTE OLD))
          (SETQ TEST-OUTCOME (READ TRACE-FILE))
          (CLOSEF TRACE-FILE)
          (if (LESSP (LENGTH TEST-OUTCOME)
		     5)
	      then [RETURN (LIST (QUOTE FAILURE)
				 (CONCAT "TEST WAS NOT FINISHED. ONLY " (MKSTRING (LENGTH 
										     TEST-OUTCOME))
					 "ITEMS WERE WRITTEN. TRACE FILE FULL NAME IS : "
					 (MKSTRING TRACE-FILE]
	    else (if [NOT (FMEMB (CAR (CDDDDR TEST-OUTCOME))
				 (QUOTE (SUCCESS FAILUE]
		     then (RETURN (LIST (QUOTE FAILURE)
					(CONCAT "OUTCOME WAS " (CAR (CDDDDR TEST-OUTCOME))
						"INSTEAD OF SUCCESS OR FAILURE. ")))
		   else (RETURN (QUOTE (SUCCESS])

(TEST.TOPOLOGICAL-ORDER
  [LAMBDA (SET-OF-TESTS)                                     (* sm "20-Aug-85 17:58")
    (PROG (TEST-LINKS ORDERED-LIST)
          [SETQ TEST-LINKS (for TEST in SET-OF-TESTS bind PRETESTS
			      collect (CONS TEST (PROGN (SETQ PRETESTS (TEST.GET-FIELD-VALUE
							    (QUOTE PRETESTS)
							    (TEST.GET-TEST TEST)))
							(TEST.SETIFY
							  (for PRETEST
							     in (APPEND (FASSOC (QUOTE WEAK)
										PRETESTS)
									(FASSOC (QUOTE STRONG)
										PRETESTS))
							     when (FMEMB PRETEST SET-OF-TESTS)
							     collect PRETEST]
          (while TEST-LINKS bind TEMP-LIST
	     do (for T1 in TEST-LINKS when (for PRE in (CDR T1) always (FMEMB PRE ORDERED-LIST))
		   do (SETQ TEMP-LIST (CONS T1 TEMP-LIST))
		      (SETQ ORDERED-LIST (CONS (CAR T1)
					       ORDERED-LIST)))
		(SETQ TEST-LINKS (LDIFFERENCE TEST-LINKS TEMP-LIST)))
          (RETURN (REVERSE ORDERED-LIST])

(TEST.UNION-LIST
  [LAMBDA (L)                                                (* sm " 2-Jul-85 12:36")
    (COND
      ((NULL L)
	NIL)
      (T (UNION (CAR L)
		(TEST.UNION-LIST (CDR L])

(TEST.UNMARK-AS-CHANGED
  [LAMBDA (TEST-NUMBER)                                      (* sm "18-Jul-85 10:13")
    (TEST.MAKE-BOUND (QUOTE TEST.LIST-OF-MODIFIED-TESTS))
    (SETQ TEST.LIST-OF-MODIFIED-TESTS (REMOVE TEST-NUMBER TEST.LIST-OF-MODIFIED-TESTS])

(TEST.UPDATE-COMMAND
  [LAMBDA (WINDOW)                                           (* sm "20-Aug-85 11:25")
    (TEST.DISPLAY-CONCEPT-GRAPH (TEST.CREATE-CONCEPT-SPACE-GRAPH WINDOW)
				WINDOW])

(TEST.UPDATE-EXECUTION-SPEC
  [LAMBDA (ITEM MENU KEY)                                    (* sm "21-Aug-85 12:03")
    (SHADEITEM (WINDOWPROP (WFROMMENU MENU)
			   (QUOTE TEST.SELECTION))
	       MENU WHITESHADE)
    (WINDOWPROP (WFROMMENU MENU)
		(QUOTE TEST.SELECTION)
		ITEM)
    (SHADEITEM ITEM MENU BLACKSHADE])

(TEST.WAIT-FOR-SELECTION
  [LAMBDA (WINDOW MESSAGE ALLOW-GLOBAL-SELECTION)            (* sm "19-Aug-85 14:42")
    (PROG (WAITS)
          (WINDOWPROP WINDOW (QUOTE TEST.CONCEPT-SELECTED)
		      NIL)
          (SETQ WAITS 0)
          (SETQ TEST.WINDOW-OF-LAST-SELECTION NIL)
          (printout (TEST.PROMPT-WINDOW WINDOW)
		    T MESSAGE)
      WAIT-AGAIN
          (SETQ WAITS (ADD1 WAITS))
          (AWAIT.EVENT TEST.GLOBAL-CONCEPT-NODE-SELECTED-EVENT 1000)
          (COND
	    ([OR (NULL TEST.WINDOW-OF-LAST-SELECTION)
		 (AND (NOT ALLOW-GLOBAL-SELECTION)
		      (NEQ TEST.WINDOW-OF-LAST-SELECTION WINDOW))
		 (NULL (WINDOWPROP TEST.WINDOW-OF-LAST-SELECTION (QUOTE TEST.CONCEPT-SELECTED]
	      [COND
		((GREATERP WAITS 50)
		  (RETURN NIL))
		((ZEROP (IMOD WAITS 10))
		  (FLASHWINDOW (TEST.PROMPT-WINDOW WINDOW))
		  (PLAYTUNE (LIST (CONS (ITIMES 100 (IQUOTIENT WAITS 10))
					10000)
				  (CONS (ITIMES 100 (ADD1 (IQUOTIENT WAITS 10)))
					10000)
				  (CONS (ITIMES 100 (IQUOTIENT WAITS 10))
					10000]
	      (GO WAIT-AGAIN)))
          (RETURN (WINDOWPROP TEST.WINDOW-OF-LAST-SELECTION (QUOTE TEST.CONCEPT-SELECTED])
)

(RPAQ TEST.EXECUTION-SPECS-EVENT (CREATE.EVENT "EXECUTION-SELECTION-ENDED-EVENT"))

(RPAQ TEST.GLOBAL-CONCEPT-NODE-SELECTED-EVENT (CREATE.EVENT "CONCEPT-NODE-SELECTED-EVENT"))

(RPAQ TEST.CONCEPT-WINDOW-ICON (READBITMAP))
(75 49
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"N@@@@@@@@@@@@@@@@@N@"
"NOOOOOOOOOOOOOOOONN@"
"NH@@@@@@@@@@@@A@@BN@"
"NH@@@@@@@@@@@@AOONN@"
"NH@@@@@@@@@@@@A@@BN@"
"NH@@@@@@@@@@@@AOONN@"
"NOOOOOOOOOOOOOOOONN@"
"NH@@@@@@@@@@@@A@@BN@"
"NH@@@@GOOOH@@@AOONN@"
"NH@@@@D@@@@GN@AOONN@"
"NH@AOOL@@@@D@@A@@BN@"
"NH@A@@D@@@@D@@AOONN@"
"NH@A@@GOOO@GOHAOONN@"
"NH@O@@@@@A@D@@A@@BN@"
"NH@H@@@@@A@D@@AOONN@"
"NH@HOOO@@AOOOHAOONN@"
"NH@IH@@@@@@@@DA@@BN@"
"NOOO@@@@@@@@@BAOONN@"
"NH@IH@GOOOOOOOAOONN@"
"NH@HOOL@@@@@@@A@@BN@"
"NH@H@@GL@AOOH@AOONN@"
"NH@N@@@GOO@@@@AOONN@"
"NH@B@@@@@AOO@@A@@BN@"
"NH@B@@@L@@@@@@AOONN@"
"NH@B@@CH@@@@@@AOONN@"
"NH@COON@@@@@@@A@@BN@"
"NH@@@@CL@@COL@AOONN@"
"NH@@@@@GOON@@@AOONN@"
"NH@@@@@@@@COL@A@@BN@"
"NH@@@@@@@@@@@@A@@BN@"
"NOOOOOOOOOOOOOOOONN@"
"NOOOOOOOOOOOOOOOONN@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@")

(RPAQ TEST.CONCEPT-WINDOW-ICON-MASK (READBITMAP))
(75 49
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@")

(RPAQ TEST.INSPECTW.ICON (READBITMAP))
(75 75
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"NGOOOOOOOOOOOOOOOLN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@B@@@@DN@"
"ND@@@@@@@@@@B@@@@DN@"
"ND@@@@@@@@@@G@@@@DN@"
"ND@@@@@@@@@@OL@@@DN@"
"ND@@@@@@@@@CO@@@@DN@"
"ND@@@@@@@@CMN@@@@DN@"
"ND@@@@@@@@FLL@@@@DN@"
"ND@@@@@@@@LFD@@@@DN@"
"ND@@@@@@@AHCH@@@@DN@"
"ND@@@@@@@CLA@@@@@DN@"
"ND@@@@@@@GFC@@@@@DN@"
"ND@@@@@@@NCF@@@@@DN@"
"ND@@@@@@ALAO@@@@@DN@"
"ND@@@@@@CHCGH@@@@DN@"
"ND@@@@@@O@GCL@@@@DN@"
"ND@@@@@AN@NAN@@@@DN@"
"ND@@@@@COAL@N@@@@DN@"
"ND@@@@@GAKH@G@@@@DN@"
"ND@@@@@N@O@@G@@@@DN@"
"ND@@@@@L@N@@N@@@@DN@"
"ND@@@@@N@N@AL@@@@DN@"
"ND@@@@@GAL@CH@@@@DN@"
"ND@@@@@CKH@G@@@@@DN@"
"ND@@@@LAO@@N@@@@@DN@"
"ND@@@@F@N@AL@@@@@DN@"
"ND@@@@C@@@CH@@@@@DN@"
"ND@@@@AH@@G@@@@@@DN@"
"ND@@@@@L@AN@@@@@@DN@"
"ND@@@@@GOOOO@@@@@DN@"
"ND@@@@@COOOOH@@@@DN@"
"ND@@@@@AOOOOL@@@@DN@"
"ND@@@@@CH@@@N@@@@DN@"
"ND@@@@@GOOOOO@@@@DN@"
"ND@@@@@OOOOOOH@@@DN@"
"ND@@@@@OOOOOOL@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"ND@@@@@@@@@@@@@@@DN@"
"NGOOOOOOOOOOOOOOOLN@"
"N@@@@@@@@@@@@@@@@@N@"
"N@@@@@@@@@@@@@@@@@N@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@")

(RPAQ TEST.INSPECTW.MASK (READBITMAP))
(75 75
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@"
"OOOOOOOOOOOOOOOOOON@")
(PUTPROPS TESTER COPYRIGHT ("Xerox Corporation" 1985))
(DECLARE: DONTCOPY
  (FILEMAP (NIL (4299 90662 (SHOULDNT 4309 . 4450) (TEST.ADD-CONCEPT-AND-SUBCONCEPTS-TO-CONCEPT-LIST 
4452 . 5209) (TEST.ADD-CONCEPT-COMMAND 5211 . 6209) (TEST.ADD-CONCEPT-SPACE-TO-CONCEPT-SPACES 6211 . 
6762) (TEST.ADD-ITEM-TO-BACKGROUND-MENU 6764 . 7138) (TEST.ADD-LINK-COMMAND 7140 . 8025) (
TEST.ADD-NEW-FIELD-TO-TEST-RECORD 8027 . 9559) (TEST.ADD-TEST 9561 . 9851) (TEST.ADD-TEST-COMMAND 9853
 . 10876) (TEST.ALL-COMBINATIONS 10878 . 11266) (TEST.ATTACH-TESTS-MENU 11268 . 12328) (
TEST.BROWSE-CONCEPT-SPACE-COMMAND 12330 . 13005) (TEST.BROWSE-SUBTREE-COMMAND 13007 . 13701) (
TEST.CANONICAL-CONCEPT-SPACE-FILE-NAME 13703 . 13897) (TEST.CHANGE-DEPTH-COMMAND 13899 . 14587) (
TEST.CLEANUP-AFTER-TEST 14589 . 15247) (TEST.COLLECT-ALL-TESTS 15249 . 15673) (
TEST.COLLECT-SUBCONCEPTS-CLOSURE 15675 . 16206) (TEST.COMPUTE-AVERAGE-TEST-SIZE 16208 . 16833) (
TEST.COPY-SUBTREE-COMMAND 16835 . 18509) (TEST.COPYBUTTONEVENTFN 18511 . 19429) (
TEST.CREATE-CONCEPT-SPACE-GRAPH 19431 . 21198) (TEST.CREATE-CONCEPT-WINDOW-MENU 21200 . 21440) (
TEST.CREATE-GRAPH-NODES 21442 . 22817) (TEST.CREATE-ICON-WINDOW 22819 . 23358) (
TEST.CREATE-INTERRUPT-MENU 23360 . 23694) (TEST.CREATE-NEW-CONCEPT-SPACE 23696 . 24022) (
TEST.CREATE-NEW-TEST 24024 . 24529) (TEST.DELETE-CONCEPT 24531 . 25424) (TEST.DELETE-CONCEPT-COMMAND 
25426 . 25976) (TEST.DELETE-LINK-COMMAND 25978 . 26969) (TEST.DELETE-TEST-COMMAND 26971 . 27981) (
TEST.DETACH-TESTS-MENU 27983 . 28411) (TEST.DISPLAY-CONCEPT-GRAPH 28413 . 28701) (
TEST.DISPLAY-CONCEPT-SPACE-BROWSER 28703 . 31541) (TEST.DOCOMMAND 31543 . 33080) (TEST.EDIT-TEST 33082
 . 34554) (TEST.EDIT-TEST-COMMAND 34556 . 35383) (TEST.ERRORP 35385 . 35577) (TEST.EVAL-BEFORE-TEST 
35579 . 35952) (TEST.EVALUATE-OUTCOME 35954 . 36471) (TEST.EVALUATE-TESTED-EXPR 36473 . 37609) (
TEST.EXECUTE-SELECTED-TESTS-COMMAND 37611 . 37780) (TEST.EXECUTE-TESTS 37782 . 40300) (
TEST.FIND-MENU-ITEM 40302 . 40825) (TEST.GENERATE-COMPARE-FUNCTION 40827 . 41072) (TEST.GENERATE-INPUT
 41074 . 41632) (TEST.GET-AND-INCREASE-NEXT-TESTID 41634 . 42194) (TEST.GET-CONCEPT 42196 . 42379) (
TEST.GET-CONCEPT-SPACE 42381 . 42720) (TEST.GET-DEFAULT-FILED-VALUE 42722 . 42922) (
TEST.GET-EXECUTION-SPECS 42924 . 46251) (TEST.GET-FIELD-VALUE 46253 . 46750) (TEST.GET-LOCKING-USERS 
46752 . 47748) (TEST.GET-NEXT-AVAILABLE-TESTID 47750 . 48219) (TEST.GET-STRONG-LINK-CLOSURE 48221 . 
49021) (TEST.GET-TEST 49023 . 49958) (TEST.GET-TEST-SELECTION 49960 . 51048) (
TEST.HARDCOPY-ALL-TESTS-COMMAND 51050 . 51590) (TEST.HARDCOPY-ONE-TEST 51592 . 52123) (
TEST.HARDCOPY-SELECTED-TESTS-COMMAND 52125 . 52665) (TEST.HARDCOPY-TESTS 52667 . 54291) (
TEST.HARDCOPY-TRACE-FILE 54293 . 56182) (TEST.INIT 56184 . 56563) (TEST.INSPECTW.ICONFN 56565 . 57018)
 (TEST.INSPECTW.VALUECOMMANDFN 57020 . 57622) (TEST.KILL-PROCESS 57624 . 58390) (
TEST.LEFT-BUTTON-SELECTION 58392 . 58706) (TEST.LOAD-CONCEPT-SPACE 58708 . 59603) (
TEST.LOAD-CONCEPT-SPACE-COMMAND 59605 . 59933) (TEST.LOCAL-EVAL-FORM 59935 . 60623) (TEST.MAKE-BOUND 
60625 . 60818) (TEST.MARK-AS-CHANGED 60820 . 61060) (TEST.OBTAIN-DATABASE-WRITE-LOCK 61062 . 64222) (
TEST.OBTAIN-LOCK-COMMAND 64224 . 65663) (TEST.OBTAIN-LOCK-ON-SELECTED-TESTS-COMMAND 65665 . 65847) (
TEST.OPENFILE-OR-WAIT 65849 . 66609) (TEST.PERFORM-TEST 66611 . 69758) (TEST.PERFORM-TIMED-EVALUATION 
69760 . 70778) (TEST.POP-UP-CONCEPT-SPACES-MENU 70780 . 71144) (TEST.POP-UP-TESTS-MENU 71146 . 72052) 
(TEST.PRINT-ON-TRACE-FILE 72054 . 72534) (TEST.PRINT-TEST-OUTCOME 72536 . 73144) (
TEST.PRINT-TRACE-INFO 73146 . 73396) (TEST.PROMPT-WINDOW 73398 . 73578) (
TEST.RELEASE-DATABASE-WRITE-LOCK 73580 . 76494) (TEST.RELEASE-LOCK-COMMAND 76496 . 77247) (
TEST.RELEASE-LOCK-ON-SELECTED-TESTS-COMMAND 77249 . 77433) (TEST.REMOVE-SUBCONCEPT-LINK 77435 . 77678)
 (TEST.REMOVE-SUPERCONCEPT-LINK 77680 . 78104) (TEST.REPLACE-INSEPCTW-VALUECOMMANDFN 78106 . 78388) (
TEST.SEND-RELEASE-REQUESTS 78390 . 79210) (TEST.SET-DEFAULT-FIELD-VALUE 79212 . 79439) (
TEST.SET-TESTS-BUFFER-SIZE 79441 . 79893) (TEST.SETIFY 79895 . 80159) (TEST.SHADE-TEST 80161 . 80580) 
(TEST.STORE-CHANGED-TESTS 80582 . 80800) (TEST.STORE-CONCEPT-SPACE 80802 . 81807) (
TEST.STORE-CONCEPT-SPACE-COMMAND 81809 . 82071) (TEST.STORE-TEST 82073 . 82606) (
TEST.SWITCH-DISPLAY-MODE-COMMAND 82608 . 82960) (TEST.TEST-FAULT 82962 . 83925) (
TEST.TEST-NUMBER-TO-FILE-NAME 83927 . 84246) (TEST.TEST-SELECTED-ON-TEST-MENU-FN 84248 . 85057) (
TEST.TEST-SINGLE-TIME 85059 . 87171) (TEST.TOPOLOGICAL-ORDER 87173 . 88283) (TEST.UNION-LIST 88285 . 
88503) (TEST.UNMARK-AS-CHANGED 88505 . 88784) (TEST.UPDATE-COMMAND 88786 . 88994) (
TEST.UPDATE-EXECUTION-SPEC 88996 . 89352) (TEST.WAIT-FOR-SELECTION 89354 . 90660)))))
STOP
